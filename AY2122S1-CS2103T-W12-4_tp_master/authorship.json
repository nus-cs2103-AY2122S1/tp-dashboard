[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngjiayuan"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W12-4/tp/actions)","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ngjiayuan"},"content":"# ModuLink","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngjiayuan"},"content":"### The **best** module partner finder for CS students.","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngjiayuan"},"content":"#### Overview","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngjiayuan"},"content":"- [X] Text based CLI commands - for the fast coders","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngjiayuan"},"content":"- [X] Simple - learn in seconds","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngjiayuan"},"content":"- [X] Fastest - 0 ping","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngjiayuan"},"content":"\u003e Better than Tinder! - SoC CS students","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ngjiayuan"},"content":"#### Features","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ngjiayuan"},"content":"1. Create and edit your own profile","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"ngjiayuan"},"content":"2. Add and remove as favourite","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngjiayuan"},"content":"3. Find by name","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ngjiayuan"},"content":"4. Filter by module","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"ngjiayuan"},"content":"5. Filter by grouping status","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngjiayuan"},"content":"6. And many more!","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngjiayuan"},"content":"For a more detailed documentation of this project, please visit our [Product Website](https://ay2122s1-cs2103t-w12-4.github.io/tp/UserGuide)!","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngjiayuan"},"content":"#### Ui Mockup for ModuLink","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"zacharylwy"},"content":"![Ui Mockup](docs/images/screenshots/Ui.png)","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"ngjiayuan":23,"-":2,"zacharylwy":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"mainClassName \u003d \u0027seedu.modulink.Main\u0027","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"ngjiayuan"},"content":"    archiveName \u003d \u0027ModuLink.jar\u0027","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"ngjiayuan"},"content":"run {","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"ngjiayuan"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"ngjiayuan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"aakanshanarain":1,"ngjiayuan":5,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"### Aakansha Narain","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"\u003cimg src\u003d\"images/developerPhotos/aakanshanarain.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"[[github](https://github.com/aakanshanarain)]","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"zacharylwy"},"content":"* Role: Developer","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"* Responsibilities: Delivarables","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"### Charlton Tan","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"\u003cimg src\u003d\"images/developerPhotos/charltonator.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"[[github](http://github.com/charltonator)]","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"* Role: Developer","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"zacharylwy"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"zacharylwy"},"content":"### Ethan Wong","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"zacharylwy"},"content":"\u003cimg src\u003d\"images/developerPhotos/ethanwong6362.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"zacharylwy"},"content":"[[github](http://github.com/ethanwong6362)]","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"zacharylwy"},"content":"* Responsibilities: Logic flow","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"zacharylwy"},"content":"### Ng Jia Yuan","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"zacharylwy"},"content":"\u003cimg src\u003d\"images/developerPhotos/ngjiayuan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"zacharylwy"},"content":"[[github](http://github.com/ngjiayuan)]","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"zacharylwy"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"zacharylwy"},"content":"* Responsibilities: Code quality and team operations","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"zacharylwy"},"content":"### Zachary Lau","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"zacharylwy"},"content":"\u003cimg src\u003d\"images/developerPhotos/zacharylwy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"zacharylwy"},"content":"[[github](http://github.com/zacharylwy)]","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":30,"zacharylwy":22}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EthanWong6362"},"content":"# Modulink: Developer Guide","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"EthanWong6362"},"content":"**Table of Contents**","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"EthanWong6362"},"content":"1. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"EthanWong6362"},"content":"2. [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"EthanWong6362"},"content":"3. [Design](#design)","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"EthanWong6362"},"content":"4. [Implementation](#implementation)","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"EthanWong6362"},"content":"5. [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"6. [Appendix](#appendix-requirements)","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"EthanWong6362"},"content":"   1. [Requirements](#appendix-requirements)","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"EthanWong6362"},"content":"   2. [Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ngjiayuan"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-W12-4/tp/blob/master/src/main/java/seedu/modulink/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103T-W12-4/tp/blob/master/src/main/java/seedu/modulink/MainApp.java). It is responsible for,","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"ngjiayuan"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `addFav A0123456A`.","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"ngjiayuan"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-W12-4/tp/tree/master/src/main/java/seedu/modulink/ui/Ui.java)","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"ngjiayuan"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-W12-4/tp/tree/master/src/main/java/seedu/modulink/logic/Logic.java)","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"aakanshanarain"},"content":"1. When `Logic` is called upon to execute a command, it uses the `ModuLinkParser` class to parse the user command.","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"ngjiayuan"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `CreateCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"ngjiayuan"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"addFav\")` API call.","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"ngjiayuan"},"content":"![Interactions Inside the Logic Component for the `addFav` Command](images/AddFavSequenceDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"ngjiayuan"},"content":"* When called upon to parse a user command, the `ModuLinkParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `CreateCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `CreateCommand`) which the `ModuLinkParser` returns back as a `Command` object.","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"ngjiayuan"},"content":"* All `XYZCommandParser` classes (e.g., `CreateCommandParser`, `EditCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"ngjiayuan"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-W12-4/tp/tree/master/src/main/java/seedu/modulink/model/Model.java)","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"aakanshanarain"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `ModuLink`, which `Person` references. This allows `ModuLink` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"ngjiayuan"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-W12-4/tp/tree/master/src/main/java/seedu/modulink/storage/Storage.java)","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"aakanshanarain"},"content":"* inherits from both `ModuLinkStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"charltonator"},"content":"Classes used by multiple components are in the `seedu.modulink.commons` package.","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"charltonator"},"content":"### Create A Profile","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"charltonator"},"content":"#### Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"charltonator"},"content":"The `create` mechanism will allow the user to create a personal profile.","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"charltonator"},"content":"The implementation required the creation of a parser for `CreateCommand` as the command does takes in parameters (personal information, module information etc..).","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"charltonator"},"content":"`CreateCommand` class updates the `Model` class and then returns a new instance of the `CommandResult` class.","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"charltonator"},"content":"The GUI will then update to include the created profile and the current user\u0027s profile will be highlighted in the GUI.","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"charltonator"},"content":"After creating a profile, the user can now use other commands in ModuLink.","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"charltonator"},"content":"#### Usage","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"ngjiayuan"},"content":"To use this function and create a profile, simply enter the command and the required parameters in the command line in the following format.","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"charltonator"},"content":"`create n/NAME id/STUDENT_ID p/PHONE e/EMAIL [mod/TAG]...` \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"charltonator"},"content":"Example: `create n/John Doe id/A1234567Z p/98765432 e/johnd@example.com mod/CS2100 mod/CS2101`","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"ngjiayuan"},"content":"The following sequence diagram shows how the `create` mechanism works:","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"ngjiayuan"},"content":"![CreateSequenceDiagram](images/CreateSequenceDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"charltonator"},"content":"### Add A Module Tag","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"charltonator"},"content":"#### Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"charltonator"},"content":"The `addMod` mechanism will allow the user to add a module tag to their profile.","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"charltonator"},"content":"The implementation required the creation of a parser for `addModCommand` as the command does takes in parameters.","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"charltonator"},"content":"`addModCommand` class updates the `Model` class and then returns a new instance of the `CommandResult` class.","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"charltonator"},"content":"The GUI will then update to include the tags for the user profile.","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"charltonator"},"content":"#### Usage","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"ngjiayuan"},"content":"To use this function and create a profile, simply enter the command and the required parameters in the command line in the following format.","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"charltonator"},"content":"`addMod [mod/MOD]...` \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"charltonator"},"content":"Example: `addMod mod/CS2103T`","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"ngjiayuan"},"content":"The following sequence diagram shows how the `addMod` mechanism works:","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"ngjiayuan"},"content":"![AddModSequenceDiagram](images/AddModSequenceDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"charltonator"},"content":"### Add A Profile As Favourite","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"charltonator"},"content":"#### Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"charltonator"},"content":"The `addFav` mechanism will allow the user to add a module tag to their profile.","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"charltonator"},"content":"The implementation required the creation of a parser for `addFavCommand` as the command does takes in parameters.","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"charltonator"},"content":"`addFavCommand` class updates the `Model` class and then returns a new instance of the `CommandResult` class.","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"charltonator"},"content":"The GUI will then update to show the specified profile as a favourite.","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"charltonator"},"content":"#### Usage","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"ngjiayuan"},"content":"To use this function and create a profile, simply enter the command and the required parameters in the command line in the following format.","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"charltonator"},"content":"`addFav Student_ID` \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"charltonator"},"content":"Example: `addFav A1234567X`","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"ngjiayuan"},"content":"The following sequence diagram shows how the `addFav` mechanism works:","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"ngjiayuan"},"content":"![AddFavSequenceDiagram](images/AddFavSequenceDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"charltonator"},"content":"### List All Favourited Profiles","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"zacharylwy"},"content":"#### Implementation","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"charltonator"},"content":"The `listFav` mechanism will allow the user to view all the students that he/she has favourited.","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"zacharylwy"},"content":"The implementation did not require the creation of a parser for `ListFavCommand` as the command does not take in any parameters.","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"zacharylwy"},"content":"`ListFavCommand` class updates the `Model` class and then returns a new instance of the `CommandResult` class.","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"zacharylwy"},"content":"The GUI will then change the content to display all favourited profiles. ","lastModifiedDate":"2021-10-18"},{"lineNumber":220,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"zacharylwy"},"content":"#### Usage","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"charltonator"},"content":"To use this function to see all favourited profiles, simply enter `listFav` in the command line. ","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":224,"author":{"gitId":"charltonator"},"content":"The following sequence diagram shows how the `listFav` mechanism works:","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"ngjiayuan"},"content":"![ListFavSequenceDiagram](images/ListFavSequenceDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"aakanshanarain"},"content":"### Filter Profiles By Module and Optionally Group Status","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"charltonator"},"content":"#### Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"aakanshanarain"},"content":"The `filter` mechanism will allow the user to filter profiles by module and optionally group status.","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"aakanshanarain"},"content":"The implementation required the creation of a parser for `filterCommand` as the command does takes in parameters.","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"aakanshanarain"},"content":"`filterCommand` class updates the `Model` class and then returns a new instance of the `CommandResult` class.","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"aakanshanarain"},"content":"The GUI will then update to show the profiles that contain the specified modules and/or group status.","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"charltonator"},"content":"#### Usage","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"ngjiayuan"},"content":"To use this function and create a profile, simply enter the command and the required parameters in the command line in the following format.","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"aakanshanarain"},"content":"`filter mod/MODULE [group/GROUP_STATUS]` \u003cbr/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"aakanshanarain"},"content":"Example: `filter mod/CS2103T group/SM`","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"aakanshanarain"},"content":"The following sequence diagram shows how the `filter` mechanism works:","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"ngjiayuan"},"content":"![FilterSequenceDiagram](images/FilterSequenceDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"aakanshanarain"},"content":"### Edit Group Status of Modules","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"aakanshanarain"},"content":"#### Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"aakanshanarain"},"content":"The `editGroupStatus` mechanism will allow the user to edit the group status of the modules on their profile.","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"aakanshanarain"},"content":"The implementation required the creation of a parser for `editGroupStatusCommand` as the command does takes in parameters.","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"aakanshanarain"},"content":"`editGroupStatusCommand` class updates the `Model` class and then returns a new instance of the `CommandResult` class.","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"aakanshanarain"},"content":"The GUI will then update to show the updated group status for the specified module.","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"aakanshanarain"},"content":"#### Usage","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"aakanshanarain"},"content":"To use this function and create a profile, simply enter the command and the required parameters in the command line in the following format.","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"aakanshanarain"},"content":"`editGroupStatus mod/MODULE group/GROUP_STATUS` \u003cbr/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"aakanshanarain"},"content":"Example: `editGroupStatus mod/CS2103T group/Need member`","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"aakanshanarain"},"content":"The following sequence diagram shows how the `editGroupStatus` mechanism works:","lastModifiedDate":"2021-10-21"},{"lineNumber":258,"author":{"gitId":"aakanshanarain"},"content":"![FilterSequenceDiagram](images/EditGroupStatusCommandSequenceDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"charltonator"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedModuLink`. It extends `ModuLink` with an undo/redo history, stored internally as an `moduLinkStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"aakanshanarain"},"content":"* `VersionedModuLink#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2021-10-01"},{"lineNumber":267,"author":{"gitId":"aakanshanarain"},"content":"* `VersionedModuLink#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2021-10-01"},{"lineNumber":268,"author":{"gitId":"aakanshanarain"},"content":"* `VersionedModuLink#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2021-10-01"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"aakanshanarain"},"content":"These operations are exposed in the `Model` interface as `Model#commitModuLink()`, `Model#undoModuLink()` and `Model#redoModuLink()` respectively.","lastModifiedDate":"2021-10-01"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"aakanshanarain"},"content":"Step 1. The user launches the application for the first time. The `VersionedModuLink` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2021-10-01"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":278,"author":{"gitId":"charltonator"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitModuLink()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `moduLinkStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"charltonator"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitModuLink()`, causing another modified address book state to be saved into the `moduLinkStateList`.","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":284,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"charltonator"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitModuLink()`, so the address book state will not be saved into the `moduLinkStateList`.","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"aakanshanarain"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoModuLink()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-10-01"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":292,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"aakanshanarain"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial ModuLink state, then there are no previous ModuLink states to restore. The `undo` command uses `Model#canUndoModuLink()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2021-10-01"},{"lineNumber":295,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":301,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"aakanshanarain"},"content":"The `redo` command does the opposite — it calls `Model#redoModuLink()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2021-10-01"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"charltonator"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `moduLinkStateList.size() - 1`, pointing to the latest address book state, then there are no undone ModuLink states to restore. The `redo` command uses `Model#canRedoModuLink()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"charltonator"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitModuLink()`, `Model#undoModuLink()` or `Model#redoModuLink()`. Thus, the `moduLinkStateList` remains unchanged.","lastModifiedDate":"2021-10-19"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":315,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"charltonator"},"content":"Step 6. The user executes `clear`, which calls `Model#commitModuLink()`. Since the `currentStatePointer` is not pointing at the end of the `moduLinkStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2021-10-19"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":319,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":344,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":345,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":347,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":361,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"charltonator"},"content":"* wants to find people to form groups with for his CS modules","lastModifiedDate":"2021-09-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"charltonator"},"content":"**Value proposition**: search for and contact students in the same modules to quickly form groups.","lastModifiedDate":"2021-09-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"charltonator"},"content":"| `* * *`  | user                                       | add a contact as a favourite   | easily keep track of my favourites\u0027 activity                           |","lastModifiedDate":"2021-09-29"},{"lineNumber":374,"author":{"gitId":"charltonator"},"content":"| `* * *`  | user                                       | remove a contact as a favourite| remove users I no longer am interested in                              |","lastModifiedDate":"2021-09-29"},{"lineNumber":375,"author":{"gitId":"charltonator"},"content":"| `* * *`  | new user                                   | create a profile               | start using the app                                                    |","lastModifiedDate":"2021-09-29"},{"lineNumber":376,"author":{"gitId":"charltonator"},"content":"| `* *  `  | potential user exploring the app           | view those taking similar mods | easily find potential groupmates                                       |","lastModifiedDate":"2021-09-29"},{"lineNumber":377,"author":{"gitId":"charltonator"},"content":"| `* * *`  | user                                       | list the modules I am taking   | allow other users to view me as a potential groupmate                  |","lastModifiedDate":"2021-09-29"},{"lineNumber":378,"author":{"gitId":"charltonator"},"content":"| `* *`    | user who formed a group                    | update group status for my modules | let other users know I have a group for a module                   |","lastModifiedDate":"2021-09-29"},{"lineNumber":379,"author":{"gitId":"EthanWong6362"},"content":"| `* *`    | proficient user                            | filter profiles by mods        | save time browsing profiles                                            |","lastModifiedDate":"2021-10-07"},{"lineNumber":380,"author":{"gitId":"charltonator"},"content":"| `* *`    | proficient user                            | filter profiles by module      | save time browsing profiles                                            |","lastModifiedDate":"2021-09-29"},{"lineNumber":381,"author":{"gitId":"charltonator"},"content":"| `* *`    | long time user                             | update the modules I am taking | find new favourites and groupmates for new modules that I am taking    |","lastModifiedDate":"2021-09-29"},{"lineNumber":382,"author":{"gitId":"charltonator"},"content":"| `*`    | user searching for groupmates              | view potential groupmates\u0027 github| browse their work to decide if we would work well together           |","lastModifiedDate":"2021-09-29"},{"lineNumber":383,"author":{"gitId":"charltonator"},"content":"| `*`    | user searching for groupmates              | view other profiles in more detail | find out more about the other user and potential groupmates          |","lastModifiedDate":"2021-09-29"},{"lineNumber":384,"author":{"gitId":"aakanshanarain"},"content":"| `*`    | user looking for a specific profile         | find a profile by student ID      | quickly view their profile                                             |","lastModifiedDate":"2021-10-01"},{"lineNumber":385,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":386,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"aakanshanarain"},"content":"(For all use cases below, the **System** is the `ModuLink` and the **Actor** is the `user`, unless specified otherwise.\u003cbr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":392,"author":{"gitId":"aakanshanarain"},"content":"**Preconditions:** User is logged in.)","lastModifiedDate":"2021-10-01"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":395,"author":{"gitId":"aakanshanarain"},"content":"**Use case: UC1 - Create user profile**","lastModifiedDate":"2021-10-01"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"aakanshanarain"},"content":"1.  User boots up ModuLink for the first time.","lastModifiedDate":"2021-10-01"},{"lineNumber":400,"author":{"gitId":"EthanWong6362"},"content":"2.  User enters their details.","lastModifiedDate":"2021-10-01"},{"lineNumber":401,"author":{"gitId":"ngjiayuan"},"content":"3.  ModuLink creates a new profile.","lastModifiedDate":"2021-10-19"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"aakanshanarain"},"content":"* 2a. The given details are invalid.","lastModifiedDate":"2021-10-01"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":409,"author":{"gitId":"aakanshanarain"},"content":"    * 2a1. ModuLink shows an error message.","lastModifiedDate":"2021-10-01"},{"lineNumber":410,"author":{"gitId":"aakanshanarain"},"content":"    * 2a2. ModuLink requests for the correct details.","lastModifiedDate":"2021-10-01"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":412,"author":{"gitId":"aakanshanarain"},"content":"    Steps 2a1 - 2a2 are repeated until the correct details are entered.","lastModifiedDate":"2021-10-01"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-01"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":417,"author":{"gitId":"aakanshanarain"},"content":"**Use case: UC2 - Add a profile to Favourites list**","lastModifiedDate":"2021-10-01"},{"lineNumber":418,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":419,"author":{"gitId":"EthanWong6362"},"content":"**MSS**","lastModifiedDate":"2021-10-01"},{"lineNumber":420,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":421,"author":{"gitId":"aakanshanarain"},"content":"1.  User requests to add a specific profile to their favourites list.","lastModifiedDate":"2021-10-01"},{"lineNumber":422,"author":{"gitId":"aakanshanarain"},"content":"2.  ModuLink adds the profile.","lastModifiedDate":"2021-10-01"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"EthanWong6362"},"content":"**Extensions**","lastModifiedDate":"2021-10-01"},{"lineNumber":427,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":428,"author":{"gitId":"aakanshanarain"},"content":"* 1a. The requested profile ID is invalid.","lastModifiedDate":"2021-10-01"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"aakanshanarain"},"content":"    * 1a1. ModuLink shows an error message.","lastModifiedDate":"2021-10-01"},{"lineNumber":431,"author":{"gitId":"aakanshanarain"},"content":"    * 1a2. ModuLink requests for the correct ID.","lastModifiedDate":"2021-10-01"},{"lineNumber":432,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":433,"author":{"gitId":"aakanshanarain"},"content":"    Steps 1a1 - 1a2 are repeated until the correct details are entered.","lastModifiedDate":"2021-10-01"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"EthanWong6362"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-10-01"},{"lineNumber":436,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":437,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":438,"author":{"gitId":"aakanshanarain"},"content":"**Use case: UC3 - Remove a profile from Favourites list**","lastModifiedDate":"2021-10-01"},{"lineNumber":439,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":440,"author":{"gitId":"EthanWong6362"},"content":"**MSS**","lastModifiedDate":"2021-10-01"},{"lineNumber":441,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":442,"author":{"gitId":"aakanshanarain"},"content":"1.  User requests to delete a specific profile from their favourites list.","lastModifiedDate":"2021-10-01"},{"lineNumber":443,"author":{"gitId":"aakanshanarain"},"content":"2.  ModuLink deletes the profile.","lastModifiedDate":"2021-10-01"},{"lineNumber":444,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":445,"author":{"gitId":"EthanWong6362"},"content":"    Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":446,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":447,"author":{"gitId":"EthanWong6362"},"content":"**Extensions**","lastModifiedDate":"2021-10-01"},{"lineNumber":448,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":449,"author":{"gitId":"aakanshanarain"},"content":"* 2a. The requested profile ID is invalid.","lastModifiedDate":"2021-10-01"},{"lineNumber":450,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":451,"author":{"gitId":"aakanshanarain"},"content":"    * 2a1. ModuLink shows an error message.","lastModifiedDate":"2021-10-01"},{"lineNumber":452,"author":{"gitId":"aakanshanarain"},"content":"    * 2a2. ModuLink requests for the correct ID.","lastModifiedDate":"2021-10-01"},{"lineNumber":453,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":454,"author":{"gitId":"aakanshanarain"},"content":"    Steps 2a1 - 2a2 are repeated until the correct details are entered.","lastModifiedDate":"2021-10-01"},{"lineNumber":455,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":456,"author":{"gitId":"EthanWong6362"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-10-01"},{"lineNumber":457,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":458,"author":{"gitId":"aakanshanarain"},"content":"**Use case: UC4 - View Favourites list**","lastModifiedDate":"2021-10-01"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":460,"author":{"gitId":"EthanWong6362"},"content":"**MSS**","lastModifiedDate":"2021-10-01"},{"lineNumber":461,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":462,"author":{"gitId":"aakanshanarain"},"content":"1.  User requests to display all profiles in their favourites list.","lastModifiedDate":"2021-10-01"},{"lineNumber":463,"author":{"gitId":"aakanshanarain"},"content":"2.  ModuLink shows a list of all profiles that the user has added to their favourites list.","lastModifiedDate":"2021-10-01"},{"lineNumber":464,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":465,"author":{"gitId":"aakanshanarain"},"content":"    Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":466,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":467,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":468,"author":{"gitId":"aakanshanarain"},"content":"**Use case: UC5 - Remove a module from the user\u0027s profile**","lastModifiedDate":"2021-10-01"},{"lineNumber":469,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":470,"author":{"gitId":"aakanshanarain"},"content":"**MSS**","lastModifiedDate":"2021-10-01"},{"lineNumber":471,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":472,"author":{"gitId":"aakanshanarain"},"content":"1.  User requests to remove a module from their profile.","lastModifiedDate":"2021-10-01"},{"lineNumber":473,"author":{"gitId":"aakanshanarain"},"content":"2.  ModuLink deletes the module from the profile.","lastModifiedDate":"2021-10-01"},{"lineNumber":474,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":475,"author":{"gitId":"aakanshanarain"},"content":"    Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":476,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":477,"author":{"gitId":"aakanshanarain"},"content":"**Use case: UC6 - Add a module to the user\u0027s profile**","lastModifiedDate":"2021-10-01"},{"lineNumber":478,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":479,"author":{"gitId":"aakanshanarain"},"content":"**MSS**","lastModifiedDate":"2021-10-01"},{"lineNumber":480,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":481,"author":{"gitId":"aakanshanarain"},"content":"1.  User requests to add a module from their profile.","lastModifiedDate":"2021-10-01"},{"lineNumber":482,"author":{"gitId":"aakanshanarain"},"content":"2.  ModuLink adds the module from the profile.","lastModifiedDate":"2021-10-01"},{"lineNumber":483,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":484,"author":{"gitId":"aakanshanarain"},"content":"    Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":485,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":486,"author":{"gitId":"aakanshanarain"},"content":"**Use case: UC7 - Update group status for modules**","lastModifiedDate":"2021-10-01"},{"lineNumber":487,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":488,"author":{"gitId":"aakanshanarain"},"content":"**MSS**","lastModifiedDate":"2021-10-01"},{"lineNumber":489,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":490,"author":{"gitId":"aakanshanarain"},"content":"1.  User requests to change a tag for a specific module with their updated group status.","lastModifiedDate":"2021-10-01"},{"lineNumber":491,"author":{"gitId":"aakanshanarain"},"content":"2.  ModuLink deletes the existing tag for the module in the user\u0027s profile.","lastModifiedDate":"2021-10-01"},{"lineNumber":492,"author":{"gitId":"aakanshanarain"},"content":"3.  ModuLink adds the new tag for the module in the user\u0027s profile.","lastModifiedDate":"2021-10-01"},{"lineNumber":493,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":494,"author":{"gitId":"aakanshanarain"},"content":"    Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":495,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":496,"author":{"gitId":"aakanshanarain"},"content":"**Extensions**","lastModifiedDate":"2021-10-01"},{"lineNumber":497,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":498,"author":{"gitId":"aakanshanarain"},"content":"* 1a. The requested module does not exist in the user\u0027s profile.","lastModifiedDate":"2021-10-01"},{"lineNumber":499,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":500,"author":{"gitId":"aakanshanarain"},"content":"    * 1a1. ModuLink shows an error message.","lastModifiedDate":"2021-10-01"},{"lineNumber":501,"author":{"gitId":"aakanshanarain"},"content":"    * 1a2. ModuLink asks the user if they would like to \u003cu\u003e add the module to their profile (UC6) \u003c/u\u003e.","lastModifiedDate":"2021-10-01"},{"lineNumber":502,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":503,"author":{"gitId":"aakanshanarain"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-10-01"},{"lineNumber":504,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":505,"author":{"gitId":"EthanWong6362"},"content":"**Use case: UC8 - Filter profiles by mods**","lastModifiedDate":"2021-10-07"},{"lineNumber":506,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":507,"author":{"gitId":"aakanshanarain"},"content":"**MSS**","lastModifiedDate":"2021-10-01"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":509,"author":{"gitId":"aakanshanarain"},"content":"1.  User requests to find all profiles with a particular tag.","lastModifiedDate":"2021-10-01"},{"lineNumber":510,"author":{"gitId":"aakanshanarain"},"content":"2.  ModuLink shows the list of profiles with the requested tag.","lastModifiedDate":"2021-10-01"},{"lineNumber":511,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":512,"author":{"gitId":"aakanshanarain"},"content":"    Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":513,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":514,"author":{"gitId":"aakanshanarain"},"content":"**Extensions**","lastModifiedDate":"2021-10-01"},{"lineNumber":515,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":516,"author":{"gitId":"aakanshanarain"},"content":"* 1a. The requested tag does not exist.","lastModifiedDate":"2021-10-01"},{"lineNumber":517,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":518,"author":{"gitId":"aakanshanarain"},"content":"    * 1a1. ModuLink shows an error message.","lastModifiedDate":"2021-10-01"},{"lineNumber":519,"author":{"gitId":"aakanshanarain"},"content":"    * 1a2. ModuLink requests for the correct tag.","lastModifiedDate":"2021-10-01"},{"lineNumber":520,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":521,"author":{"gitId":"aakanshanarain"},"content":"  Steps 1a1 - 1a2 are repeated until the correct tag is entered.","lastModifiedDate":"2021-10-01"},{"lineNumber":522,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":523,"author":{"gitId":"aakanshanarain"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-10-01"},{"lineNumber":524,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":525,"author":{"gitId":"aakanshanarain"},"content":"**Use case: UC9 - Filter profiles by module**","lastModifiedDate":"2021-10-01"},{"lineNumber":526,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":527,"author":{"gitId":"aakanshanarain"},"content":"**MSS**","lastModifiedDate":"2021-10-01"},{"lineNumber":528,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":529,"author":{"gitId":"aakanshanarain"},"content":"1.  User requests to find all profiles which have a particular module(s).","lastModifiedDate":"2021-10-01"},{"lineNumber":530,"author":{"gitId":"aakanshanarain"},"content":"2.  ModuLink shows the list of profiles with the requested module(s).","lastModifiedDate":"2021-10-01"},{"lineNumber":531,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":532,"author":{"gitId":"aakanshanarain"},"content":"    Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":533,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":534,"author":{"gitId":"aakanshanarain"},"content":"**Use case: UC10 - Find a profile by student ID**","lastModifiedDate":"2021-10-01"},{"lineNumber":535,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":536,"author":{"gitId":"aakanshanarain"},"content":"**MSS**","lastModifiedDate":"2021-10-01"},{"lineNumber":537,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":538,"author":{"gitId":"aakanshanarain"},"content":"1.  User requests to find a profile with the specified student ID.","lastModifiedDate":"2021-10-01"},{"lineNumber":539,"author":{"gitId":"aakanshanarain"},"content":"2.  ModuLink shows the profile with the requested student ID.","lastModifiedDate":"2021-10-01"},{"lineNumber":540,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":541,"author":{"gitId":"aakanshanarain"},"content":"    Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":542,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":543,"author":{"gitId":"aakanshanarain"},"content":"**Extensions**","lastModifiedDate":"2021-10-01"},{"lineNumber":544,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":545,"author":{"gitId":"aakanshanarain"},"content":"* 1a. The requested student ID does not exist as a profile.","lastModifiedDate":"2021-10-01"},{"lineNumber":546,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":547,"author":{"gitId":"aakanshanarain"},"content":"    * 1a1. ModuLink shows an error message.","lastModifiedDate":"2021-10-01"},{"lineNumber":548,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":549,"author":{"gitId":"EthanWong6362"},"content":"      Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"ngjiayuan"},"content":"1.  **Interoperability**: Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2021-09-30"},{"lineNumber":555,"author":{"gitId":"ngjiayuan"},"content":"2.  **Capacity/Efficiency**: Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-30"},{"lineNumber":556,"author":{"gitId":"ngjiayuan"},"content":"3.  **Quality**: A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-30"},{"lineNumber":557,"author":{"gitId":"ngjiayuan"},"content":"4.  **Performance**: Should be able to respond to a command within a response time of 2 seconds.","lastModifiedDate":"2021-09-30"},{"lineNumber":558,"author":{"gitId":"ngjiayuan"},"content":"5.  **Quality**: A new user should be able to understand and use ModuLink easily with the help of the [UserGuide](https://ay2122s1-cs2103t-w12-4.github.io/tp/UserGuide.html).","lastModifiedDate":"2021-09-30"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"ngjiayuan"},"content":"* **Module**: A NUS CS module listed on [NUSmods](https://nusmods.com/modules?sem[0]\u003d1\u0026sem[1]\u003d2\u0026sem[2]\u003d3\u0026sem[3]\u003d4)","lastModifiedDate":"2021-09-30"},{"lineNumber":564,"author":{"gitId":"ngjiayuan"},"content":"* **Student**: A NUS CS student","lastModifiedDate":"2021-09-30"},{"lineNumber":565,"author":{"gitId":"aakanshanarain"},"content":"  **Profile**: A student registered in ModuLink.","lastModifiedDate":"2021-10-01"},{"lineNumber":566,"author":{"gitId":"ngjiayuan"},"content":"* **Group status**: The group status of a student for a group project in a module","lastModifiedDate":"2021-09-30"},{"lineNumber":567,"author":{"gitId":"ngjiayuan"},"content":"* **Command**: A command for the program. A full list of command can be seen in the [UserGuide](https://ay2122s1-cs2103t-w12-4.github.io/tp/UserGuide.html).","lastModifiedDate":"2021-09-30"},{"lineNumber":568,"author":{"gitId":"ngjiayuan"},"content":"* **Contact detail**: Contact details consist of the user names, email, telegram handle.","lastModifiedDate":"2021-09-30"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":623,"author":{"gitId":"EthanWong6362"},"content":"[Back to top](#modulink-developer-guide)","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"aakanshanarain":147,"ngjiayuan":34,"charltonator":76,"-":318,"zacharylwy":9,"EthanWong6362":39}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"   1. Run the `seedu.modulink.Main` and try a few commands.","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"charltonator":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"   e.g. `seedu.modulink.commons.StringUtilTest`","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"   e.g. `seedu.modulink.storage.StorageManagerTest`","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"charltonator"},"content":"   e.g. `seedu.modulink.logic.LogicManagerTest`","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"charltonator":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aakanshanarain"},"content":"# ModuLink: User Guide","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"## Welcome to ModuLink!","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"ModuLink is a **desktop-based** application for **Computer Science (CS) students** at NUS to facilitate finding teammates for group-based modules. With a powerful integrated contact management platform, connecting with peers to form project groups has never been easier. ModuLink allows you to find students taking the modules you are interested in, search by their group status (to find students available to form or join groups), and much more.","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"The app is configured to use the **Command Line Interface (CLI)**, which means most of the commands you will interact with will be typed in a command box, rather than using a Graphical User Interface (GUI) with graphical tools and icons. If you are unaccustomed to the CLI, do not worry, as ModuLink still provides a lot of the benefits of a GUI to make working with text-based inputs easy to understand.","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"This User Guide will show you everything you need to know to optimize your experience with ModuLink, whether you are a new or proficient user. We recommend reading through **[Section 1: Using this User Guide](#section-1-using-this-user-guide)** if you are a first-time user. If you would like to skip to the features ModuLink provides, you can head to **[Section 3: Features - Understanding what ModuLink can do for you](#section-3-features---understanding-what-modulink-can-do-for-you)**.","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"## Section 1: Using this User Guide","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"This guide has been designed to make sure you can quickly access any information you may need. At a glance, here is how it is structured:","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"1. [Quick Start - Getting started with ModuLink (Recommended for first-time users)](#section-2-quick-start---getting-started-with-modulink)","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"2. [Features - Understanding what ModuLink can do for you](#section-3-features---understanding-what-modulink-can-do-for-you)","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"3. [Managing Data](#data-storage-in-modulink)","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"4. [Summaries](#parameter--command-summary)","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"5. [Frequently Asked Questions](#faq)","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"6. [Glossary](#glossary)","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ngjiayuan"},"content":"We further recommend taking a glance at **[Section 1.1 Syntax and symbols](#section-11-syntax-and-symbols)** to familiarize yourself with the formats, icons and other terms this guide uses.","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"### Section 1.1: Syntax and Symbols","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"ngjiayuan"},"content":"Here are the commonly used syntax and symbols throughout the UG:","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"ngjiayuan"},"content":"`inline code`\u003cbr/\u003edenotes a command for the application","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"ngjiayuan"},"content":"\u003cdiv class\u003d\"alert alert-warning\"\u003e:exclamation: Important\u003c/div\u003edenotes an important information for the functioning of the app","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"ngjiayuan"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"ngjiayuan"},"content":"\u003cdiv class\u003d\"alert alert-warning\"\u003e:warning: Caution\u003c/div\u003edenotes a possible fault that could occur","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"ngjiayuan"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"ngjiayuan"},"content":"\u003cdiv class\u003d\"alert alert-info\"\u003e:information_source: Notes\u003c/div\u003edenotes extra information to aid user in understanding the app","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"ngjiayuan"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"## Section 2: Quick Start - Getting Started with ModuLink","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"### Section 2.1 One-time Set-Up","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"If you are using ModuLink for the first time, we will first walk you through a one-time set-up to get started.","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"aakanshanarain"},"content":"1. Ensure you have Java 11 or above installed on your computer. You can easily do this via the **Terminal** app for Mac users, or the **Command Prompt** app for Windows users, and simply type and enter `java -version`. ","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"ngjiayuan"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"aakanshanarain"},"content":"Alternatively, if you prefer, you could also check the version via the GUI for both Mac and Windows systems, as mentioned in this [guide](https://phoenixnap.com/kb/check-java-version-on-mac-windows). ","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"ngjiayuan"},"content":"   \u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"ngjiayuan"},"content":"   \u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"ngjiayuan"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: Important:","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"ngjiayuan"},"content":"   ModuLink will not run on older versions of Java! If you do not have Java 11 installed, please install it by following the instructions in the official [guide](https://www.oracle.com/java/technologies/javase/jdk11-archive-downloads.html).","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"ngjiayuan"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"ngjiayuan"},"content":"   \u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"ngjiayuan"},"content":"2. Download the latest **modulink.jar** from our website [here](https://github.com/AY2122S1-CS2103T-W12-4/tp/releases).","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"aakanshanarain"},"content":"3. Move the file to the folder you want to use as the home folder for ModuLink on your computer.","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"aakanshanarain"},"content":"### Section 2.2 Working with ModuLink","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"aakanshanarain"},"content":"To run the app, simply double click the file. You should see a GUI similar to the one shown below in a few seconds. The app will already contain data. Here’s a quick look at the different elements in the app.","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"zacharylwy"},"content":"![Ui](images/screenshots/Ui2.png)","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"aakanshanarain"},"content":"As mentioned earlier, ModuLink works as a CLI, which means you will need to type and enter commands in the command box. To get accustomed to the interface, try the following commands (in the given the order).","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"ngjiayuan"},"content":"* **`create n/John Doe id/A0123456A p/24680135 e/johndoe@example.com`** : Creates your ModuLink user profile with the name John Doe and the relevant student ID, phone number and email.","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"ngjiayuan"},"content":"* **`addMod mod/CS2103T need group mod/CS2101 need member`**: Adds CS2103T and CS2101 module tags to your profile and indicates that you need to form or join a group for CS2103T and that you need member(s) for your CS2101 group.","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"aakanshanarain"},"content":"* **`list`**: Lists all the profiles on ModuLink.","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"aakanshanarain"},"content":"* **`filter mod/CS2101`**: Filters all profiles who have CS2101 as one of their module tags.","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"aakanshanarain"},"content":"* **`filter mod/CS2101 need group`**: Filters all profiles who have CS2101 as one of their module tags AND need to form or join a group for it.","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"aakanshanarain"},"content":"* **`addFav A1234567X`**: Adds the profile with the student ID A1234567X to your favorites list.","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"aakanshanarain"},"content":"* **`listFav`**: Lists all your favorite profiles.","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"aakanshanarain"},"content":"## Section 3: Features - Understanding what ModuLink can do for you","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"ngjiayuan"},"content":"To know what you can do with ModuLink, and what ModuLink can do for you, refer to the table of contents below to quickly navigate between sections.\u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"ngjiayuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: Important:","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"ngjiayuan"},"content":"If you are a first-time user, we recommend starting with [Create your own profile](#11-create-your-own-profile--create). This is because you can only use other commands in ModuLink after creating your own profile.**","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"ngjiayuan"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"aakanshanarain"},"content":"1. [Profiles](#1-profiles) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"aakanshanarain"},"content":"   1.1. [Create your own profile](#11-create-your-own-profile--create) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"aakanshanarain"},"content":"   1.2. [Edit your profile](#12-edit-your-profile--edit) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"aakanshanarain"},"content":"2. [Manage module tags](#2-manage-module-tags) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"aakanshanarain"},"content":"   2.1. [Add modules to your profile](#21-add-modules-to-your-profile--addmod) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"aakanshanarain"},"content":"   2.2. [Edit the group status of existing modules on your profile](#22-edit-the-group-status-of-existing-modules-on-your-profile--editgroupstatus) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"aakanshanarain"},"content":"   2.3. [Remove modules from your profile](#23-remove-modules-from-your-profile--remmod) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"aakanshanarain"},"content":"3. [Manage favourites](#3-manage-favorites) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"aakanshanarain"},"content":"   3.1. [Add a profile as a favourite](#31-add-a-profile-as-a-favorite--addfav) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"aakanshanarain"},"content":"   3.2. [Remove a profile from favourites list](#32-remove-a-profile-from-favourites-list--remfav) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"aakanshanarain"},"content":"4. [Viewing options](#4-viewing-options) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"aakanshanarain"},"content":"   4.1. [List all profiles](#41-list-all-profiles--list) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"aakanshanarain"},"content":"   4.2. [List all profiles marked as favorite](#42-list-all-profiles-marked-as-favorite--listfav) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"aakanshanarain"},"content":"   4.3. [Find profiles by name](#43-find-profiles-by-name--find) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"aakanshanarain"},"content":"   4.4. [Find profiles by Student ID](#44-find-profiles-by-student-id--findid) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"aakanshanarain"},"content":"   4.5. [Filter profiles by module and group status](#45-filter-profiles-by-module-and-group-status--filter) \u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"aakanshanarain"},"content":"5. [Utility commands](#5-utility-commands)\u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"aakanshanarain"},"content":"   5.1 [Viewing help](#51-viewing-help--help)\u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"aakanshanarain"},"content":"   5.2 [Exiting ModuLink](#52-exiting-modulink--exit)\u003cbr/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"aakanshanarain"},"content":"  e.g `n/NAME [mod/MODULE]` can be used as `n/John Doe mod/CS2103T` or as `n/John Doe`.","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"aakanshanarain"},"content":"  e.g. `[mod/MODULE]…​` can be used as ` ` (i.e. 0 times), `mod/CS2100`, `mod/CS2100 mod/CS2103T` etc.","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":124,"author":{"gitId":"EthanWong6362"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, and `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"aakanshanarain"},"content":"### 1. Profiles","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"aakanshanarain"},"content":"#### 1.1 Create your own profile : `create`","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"ngjiayuan"},"content":"Creates your user profile. You can also choose to add modules and indicate your group status for each module.","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"ngjiayuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: Important:","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"ngjiayuan"},"content":"in order to start using ModuLink, you are **required** to create a new profile should you not have one.","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"ngjiayuan"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"aakanshanarain"},"content":"Format: `create n/NAME id/STUDENT_ID p/PHONE_NUMBER e/EMAIL [github/GITHUB_USERNAME] [tele/TELEGRAM_HANDLE] [mod/MODULE [GROUP_STATUS]]...`","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"ngjiayuan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"zacharylwy"},"content":"**:information_source: Notes:**","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"aakanshanarain"},"content":"* STUDENT_ID must be unique","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"aakanshanarain"},"content":"* You can choose to input your telegram handle as either starting with \u0027@\u0027 eg: (@teleHandle), or just the handle itself (eg: teleHandle)","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"aakanshanarain"},"content":"* The group statuses available are: Need member, Need group, Don\u0027t need group/Not looking for group.","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"aakanshanarain"},"content":"* The default status when a module is added without a description is \u0027Don\u0027t need group/Not looking for group\u0027. The respective module will be displayed as a blue tag.","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"EthanWong6362"},"content":"* To indicate you need members for your group, you can include the description \u0027need member\u0027. The respective module will be displayed as a yellow tag.","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"EthanWong6362"},"content":"* To indicate you are looking for a group, you can include the description \u0027need group\u0027. The respective module will be displayed as a red tag.","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"ngjiayuan"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"EthanWong6362"},"content":"   ","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"aakanshanarain"},"content":"Examples:","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"aakanshanarain"},"content":"* `create n/John Doe id/A0222594A p/12345678 e/john.doe@example.com github/johndoe mod/CS2103T`","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"aakanshanarain"},"content":"* `create n/Jane Doe id/A0222594A p/87654321 e/jane_doe@example.com tele/@janedoe mod/CS2101 need group`","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"zacharylwy"},"content":"* `create n/Alexa Tan id/A0012367N p/998877662 e/alexa.tan@example.com mod/CS2030S need member mod/CS2100`","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"aakanshanarain"},"content":"    \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"aakanshanarain"},"content":"    \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"aakanshanarain"},"content":"![result for \u0027create n/Alexa Tan id/A0012367N p/998877662 e/alexa.tan@example.com mod/CS2030S need member mod/CS2100\u0027](images/screenshots/createProfile.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"aakanshanarain"},"content":"#### 1.2 Edit your profile : `edit`","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"charltonator"},"content":"Edits your own profile. You can choose to edit any attributes in your own profile except module tags which use separate commands. You can edit multiple attributes at once.","lastModifiedDate":"2021-11-02"},{"lineNumber":161,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"aakanshanarain"},"content":"Format: `edit EDITED_ATTRIBUTE [MORE ATTRIBUTES]`","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"ngjiayuan"},"content":"Prefixes:","lastModifiedDate":"2021-11-02"},{"lineNumber":165,"author":{"gitId":"ngjiayuan"},"content":"* NAME: `n/`","lastModifiedDate":"2021-11-02"},{"lineNumber":166,"author":{"gitId":"ngjiayuan"},"content":"* STUDENT ID: `id/`","lastModifiedDate":"2021-11-02"},{"lineNumber":167,"author":{"gitId":"ngjiayuan"},"content":"* PHONE: `p/`","lastModifiedDate":"2021-11-02"},{"lineNumber":168,"author":{"gitId":"ngjiayuan"},"content":"* EMAIL: `e/`","lastModifiedDate":"2021-11-02"},{"lineNumber":169,"author":{"gitId":"ngjiayuan"},"content":"* GITHUB: `github/`","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"ngjiayuan"},"content":"* TELE: `tele/`","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"aakanshanarain"},"content":"Examples:","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"aakanshanarain"},"content":"* `edit p/123321432 e/changedemail@example.com`","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"zacharylwy"},"content":"* `edit github/alex_tan`  ","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"aakanshanarain"},"content":"    \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"aakanshanarain"},"content":"![result for \u0027edit p/99881234\u0027](images/screenshots/editProfile.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"aakanshanarain"},"content":"### 2. Manage module tags","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"aakanshanarain"},"content":"#### 2.1 Add modules to your profile : `addMod`","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"aakanshanarain"},"content":"Adds the user-specified module(s) to your own profile.","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":185,"author":{"gitId":"aakanshanarain"},"content":"Format: `addMod mod/MODULE [GROUP_STATUS] [mod/MODULE [GROUP_STATUS]]...`","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"aakanshanarain"},"content":"Examples:","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"charltonator"},"content":"* `addMod mod/CS2103T Need member mod/CS1231S`","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"aakanshanarain"},"content":"* `addMod mod/CS2220 mod/CS1231S`","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"aakanshanarain"},"content":"  ![result for \u0027addMod mod/CS2220 mod/CS1231S\u0027](images/screenshots/addMod.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"aakanshanarain"},"content":"  ","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"aakanshanarain"},"content":"#### 2.2 Edit the group status of existing modules on your profile : `editGroupStatus`","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"zacharylwy"},"content":"Edits the group status of user-specified module.","lastModifiedDate":"2021-10-31"},{"lineNumber":198,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"aakanshanarain"},"content":"Format: `editGroupStatus mod/MODULE [NEW_STATUS_DESCRIPTION]`","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"ngjiayuan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":202,"author":{"gitId":"zacharylwy"},"content":"**:information_source: Notes:**","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"aakanshanarain"},"content":"* If no updated status description is given, the group status is set to the default \u0027Don\u0027t need group/Not looking for group\u0027.","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":205,"author":{"gitId":"aakanshanarain"},"content":"   ","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"zacharylwy"},"content":"Examples:","lastModifiedDate":"2021-10-31"},{"lineNumber":207,"author":{"gitId":"zacharylwy"},"content":"* `editGroupStatus mod/CS2220`","lastModifiedDate":"2021-10-31"},{"lineNumber":208,"author":{"gitId":"zacharylwy"},"content":"* `editGroupStatus mod/CS2030S need member`","lastModifiedDate":"2021-10-31"},{"lineNumber":209,"author":{"gitId":"zacharylwy"},"content":"* `editGroupStatus mod/CS2100 need group`","lastModifiedDate":"2021-10-31"},{"lineNumber":210,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"aakanshanarain"},"content":"  Original profile:","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"aakanshanarain"},"content":"  ![result for \u0027original\u0027](images/screenshots/originalForegsc.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"aakanshanarain"},"content":"  Updated profile:","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"aakanshanarain"},"content":"  ![result for \u0027original\u0027](images/screenshots/egsc.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"aakanshanarain"},"content":"#### 2.3 Remove modules from your profile : `remMod`","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"aakanshanarain"},"content":"Removes the user-specified module(s) from your own profile.","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"aakanshanarain"},"content":"Format: `remMod mod/MODULE [mod/MODULE]...`","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"aakanshanarain"},"content":"* `remMod mod/CS2103T`","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"aakanshanarain"},"content":"* `remMod mod/CS2220`","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"zacharylwy"},"content":"* `remMod mod/CS1231S mod/CS2220`","lastModifiedDate":"2021-10-31"},{"lineNumber":229,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"aakanshanarain"},"content":"  ![result for \u0027remMod mod/CS2220\u0027](images/screenshots/remMod.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"aakanshanarain"},"content":" ","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"aakanshanarain"},"content":"  ","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"aakanshanarain"},"content":"### 3. Manage favorites","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"zacharylwy"},"content":"#### 3.1 Add a profile as a favorite : `addFav`","lastModifiedDate":"2021-10-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"charltonator"},"content":"Adds a profile to your favourites list. Favourited profiles will have a star beside their name.","lastModifiedDate":"2021-10-26"},{"lineNumber":240,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":241,"author":{"gitId":"ngjiayuan"},"content":"Format: `addFav STUDENT_ID`","lastModifiedDate":"2021-10-22"},{"lineNumber":242,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":243,"author":{"gitId":"ngjiayuan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":244,"author":{"gitId":"charltonator"},"content":"**:information_source: Notes:**","lastModifiedDate":"2021-11-02"},{"lineNumber":245,"author":{"gitId":"charltonator"},"content":"* You cannot add your own profile as a favourite.","lastModifiedDate":"2021-11-02"},{"lineNumber":246,"author":{"gitId":"ngjiayuan"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":248,"author":{"gitId":"zacharylwy"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":249,"author":{"gitId":"ngjiayuan"},"content":"* `addFav A0222594A`","lastModifiedDate":"2021-10-22"},{"lineNumber":250,"author":{"gitId":"zacharylwy"},"content":"* `addFav A1234567R`","lastModifiedDate":"2021-10-31"},{"lineNumber":251,"author":{"gitId":"zacharylwy"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":252,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"aakanshanarain"},"content":"  ![result for \u0027addfav A1234967R\u0027](images/screenshots/addFav.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":255,"author":{"gitId":"zacharylwy"},"content":"### 3.2 Remove a profile from favourites list : `remFav`","lastModifiedDate":"2021-10-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":257,"author":{"gitId":"aakanshanarain"},"content":"Removes a user-specified profile from the favourites list.","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":259,"author":{"gitId":"ngjiayuan"},"content":"Format: `remFav STUDENT_ID`","lastModifiedDate":"2021-10-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-23"},{"lineNumber":262,"author":{"gitId":"ngjiayuan"},"content":"* `remFav A0212345X`","lastModifiedDate":"2021-10-22"},{"lineNumber":263,"author":{"gitId":"zacharylwy"},"content":"* `remFav A1234567R`","lastModifiedDate":"2021-10-31"},{"lineNumber":264,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"aakanshanarain"},"content":"  ![result for \u0027remfav A1234567R\u0027](images/screenshots/remFav.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":267,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"aakanshanarain"},"content":"### 4. Viewing options","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":270,"author":{"gitId":"aakanshanarain"},"content":"#### 4.1 List all profiles : `list`","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":272,"author":{"gitId":"aakanshanarain"},"content":"Shows a list of all profiles in ModuLink.","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":274,"author":{"gitId":"zacharylwy"},"content":"Format: `list`","lastModifiedDate":"2021-09-29"},{"lineNumber":275,"author":{"gitId":"zacharylwy"},"content":"    \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":276,"author":{"gitId":"zacharylwy"},"content":"    \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":277,"author":{"gitId":"aakanshanarain"},"content":"![result for \u0027list\u0027](images/screenshots/list.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":278,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":279,"author":{"gitId":"zacharylwy"},"content":"#### 4.2 List all profiles marked as favorite : `listFav`","lastModifiedDate":"2021-10-22"},{"lineNumber":280,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":281,"author":{"gitId":"aakanshanarain"},"content":"Shows a list of all profiles that the user has added to their favourites list.","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":283,"author":{"gitId":"ngjiayuan"},"content":"Format: `listFav`","lastModifiedDate":"2021-10-22"},{"lineNumber":284,"author":{"gitId":"aakanshanarain"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"aakanshanarain"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"aakanshanarain"},"content":"![result for \u0027listFav\u0027](images/screenshots/listFav.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":288,"author":{"gitId":"aakanshanarain"},"content":"#### 4.3 Find profiles by name : `find`","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":290,"author":{"gitId":"aakanshanarain"},"content":"Finds profiles whose names contain any of the entered keywords.","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-09-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":294,"author":{"gitId":"zacharylwy"},"content":"* The search is not case-sensitive. e.g hans will match Hans","lastModifiedDate":"2021-10-16"},{"lineNumber":295,"author":{"gitId":"aakanshanarain"},"content":"* The order of the keywords does not matter. e.g. Hans Bo will match Bo Hans","lastModifiedDate":"2021-09-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2021-09-23"},{"lineNumber":297,"author":{"gitId":"charltonator"},"content":"* Only alphanumeric characters can be entered.","lastModifiedDate":"2021-11-02"},{"lineNumber":298,"author":{"gitId":"aakanshanarain"},"content":"* Only full words will be matched e.g. Han will not match Hans","lastModifiedDate":"2021-09-23"},{"lineNumber":299,"author":{"gitId":"aakanshanarain"},"content":"* Profiles matching at least one keyword will be returned (i.e. OR search).","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-23"},{"lineNumber":302,"author":{"gitId":"zacharylwy"},"content":"* `find John` returns `John` and `John Doe`","lastModifiedDate":"2021-10-16"},{"lineNumber":303,"author":{"gitId":"aakanshanarain"},"content":"* `find bernice` returns `Bernice Yu`","lastModifiedDate":"2021-10-19"},{"lineNumber":304,"author":{"gitId":"zacharylwy"},"content":"* `find alex david` returns `Alex Berenson` and `David Li`","lastModifiedDate":"2021-10-16"},{"lineNumber":305,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"aakanshanarain"},"content":"  ![result for \u0027find bernice\u0027](images/screenshots/find.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":309,"author":{"gitId":"aakanshanarain"},"content":"#### 4.4 Find profiles by student ID : `findId`","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":311,"author":{"gitId":"aakanshanarain"},"content":"Finds profiles whose student ID number matches any of the entered keywords.","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":313,"author":{"gitId":"zacharylwy"},"content":"Format: `findId KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-16"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":315,"author":{"gitId":"zacharylwy"},"content":"* The search is not case-sensitive. e.g a0123456a will match A023456A","lastModifiedDate":"2021-10-16"},{"lineNumber":316,"author":{"gitId":"aakanshanarain"},"content":"* The order of the keywords does not matter. e.g. `findId A0123456A A0654321A` will show the profiles whose student Id number matches either A0123456A or A0654321A.","lastModifiedDate":"2021-10-19"},{"lineNumber":317,"author":{"gitId":"aakanshanarain"},"content":"* Only the student ID numbers are searched.","lastModifiedDate":"2021-10-19"},{"lineNumber":318,"author":{"gitId":"aakanshanarain"},"content":"* Profiles matching any keywords will be returned.","lastModifiedDate":"2021-10-19"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":320,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-16"},{"lineNumber":321,"author":{"gitId":"aakanshanarain"},"content":"* `findId A1204567S` returns the person whose student ID number matches A1204567S","lastModifiedDate":"2021-10-19"},{"lineNumber":322,"author":{"gitId":"zacharylwy"},"content":"* `findId A1234567R A1234567H` returns the profiles whose student ID number matches either A1234567R or A1234567H.","lastModifiedDate":"2021-10-31"},{"lineNumber":323,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":324,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":325,"author":{"gitId":"zacharylwy"},"content":"  ![result for \u0027findId A1234567R A1234567H\u0027](images/screenshots/findId.png)","lastModifiedDate":"2021-10-31"},{"lineNumber":326,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":327,"author":{"gitId":"aakanshanarain"},"content":"#### 4.5 Filter profiles by module and group status : `filter`","lastModifiedDate":"2021-10-19"},{"lineNumber":328,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":329,"author":{"gitId":"aakanshanarain"},"content":"Show profiles filtered by module code and _optionally_ by group status.","lastModifiedDate":"2021-10-19"},{"lineNumber":330,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":331,"author":{"gitId":"aakanshanarain"},"content":"Format: `filter mod/MODULE_CODE [GROUP_STATUS]`","lastModifiedDate":"2021-10-26"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"aakanshanarain"},"content":"* You can filter by profiles who need to join or form a group (\u0027need group\u0027) or profiles who need members for their group (\u0027need member\u0027).","lastModifiedDate":"2021-10-26"},{"lineNumber":334,"author":{"gitId":"aakanshanarain"},"content":"* `MODULE_CODE` is required for filtering by group status. The filter will return the profiles with the specified group status of the specified module.","lastModifiedDate":"2021-10-19"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"charltonator"},"content":"Examples","lastModifiedDate":"2021-11-02"},{"lineNumber":337,"author":{"gitId":"zacharylwy"},"content":"* `filter mod/CS2100`","lastModifiedDate":"2021-10-31"},{"lineNumber":338,"author":{"gitId":"zacharylwy"},"content":"* `filter mod/CS2100 need member`","lastModifiedDate":"2021-10-31"},{"lineNumber":339,"author":{"gitId":"zacharylwy"},"content":"* `filter mod/CS2100 need group`","lastModifiedDate":"2021-10-31"},{"lineNumber":340,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":341,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":342,"author":{"gitId":"zacharylwy"},"content":"  ![result for \u0027filter mod/CS2100\u0027](images/screenshots/filtermod.png)","lastModifiedDate":"2021-10-31"},{"lineNumber":343,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":344,"author":{"gitId":"aakanshanarain"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":345,"author":{"gitId":"zacharylwy"},"content":"  ![result for \u0027filter mod/CS210\u0027 need memmber](images/screenshots/filtermodgroup.png)","lastModifiedDate":"2021-10-31"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":348,"author":{"gitId":"aakanshanarain"},"content":"### 5. Utility commands","lastModifiedDate":"2021-10-19"},{"lineNumber":349,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":350,"author":{"gitId":"aakanshanarain"},"content":"#### 5.1 Viewing help : `help`","lastModifiedDate":"2021-10-19"},{"lineNumber":351,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":352,"author":{"gitId":"charltonator"},"content":"Shows a message explaning how to access the help page. Upon entering the command, a pop-up window will appear. Follow the link on the window to access the User Guide.","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"aakanshanarain"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":356,"author":{"gitId":"aakanshanarain"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":357,"author":{"gitId":"aakanshanarain"},"content":"![help message](images/screenshots/helpMessage.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"aakanshanarain"},"content":"#### 5.2 Exiting ModuLink : `exit`","lastModifiedDate":"2021-10-19"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"aakanshanarain"},"content":"## Data Storage in ModuLink","lastModifiedDate":"2021-10-19"},{"lineNumber":366,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":367,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"zacharylwy"},"content":"ModuLink\u0027s data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":373,"author":{"gitId":"zacharylwy"},"content":"ModuLink\u0027s data are saved as a JSON file `[JAR file location]/data/modulink.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":375,"author":{"gitId":"ngjiayuan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:warning: Caution:","lastModifiedDate":"2021-11-02"},{"lineNumber":376,"author":{"gitId":"zacharylwy"},"content":"If your changes to the data file makes its format invalid, ModuLink will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":379,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"zacharylwy"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ModuLink home folder.","lastModifiedDate":"2021-09-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"aakanshanarain"},"content":"## Parameter \u0026 Command summary","lastModifiedDate":"2021-10-19"},{"lineNumber":389,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":390,"author":{"gitId":"aakanshanarain"},"content":"### Parameter summary","lastModifiedDate":"2021-10-19"},{"lineNumber":391,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":392,"author":{"gitId":"zacharylwy"},"content":"Prefix | Parameter","lastModifiedDate":"2021-10-22"},{"lineNumber":393,"author":{"gitId":"zacharylwy"},"content":"-------|-----------","lastModifiedDate":"2021-10-22"},{"lineNumber":394,"author":{"gitId":"zacharylwy"},"content":"**`n/`** | NAME","lastModifiedDate":"2021-10-22"},{"lineNumber":395,"author":{"gitId":"zacharylwy"},"content":"**`id/`** | STUDENT ID","lastModifiedDate":"2021-10-22"},{"lineNumber":396,"author":{"gitId":"zacharylwy"},"content":"**`p/`** | PHONE NUMBER","lastModifiedDate":"2021-10-22"},{"lineNumber":397,"author":{"gitId":"zacharylwy"},"content":"**`e/`** | EMAIL","lastModifiedDate":"2021-10-22"},{"lineNumber":398,"author":{"gitId":"aakanshanarain"},"content":"**`github/`** | GITHUB USERNAME","lastModifiedDate":"2021-10-24"},{"lineNumber":399,"author":{"gitId":"aakanshanarain"},"content":"**`tele/`** | TELEGRAM HANDLE","lastModifiedDate":"2021-10-24"},{"lineNumber":400,"author":{"gitId":"zacharylwy"},"content":"**`mod/`** | MODULE","lastModifiedDate":"2021-10-22"},{"lineNumber":401,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":402,"author":{"gitId":"aakanshanarain"},"content":"### Command summary","lastModifiedDate":"2021-10-19"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"aakanshanarain"},"content":"-------|-----------------","lastModifiedDate":"2021-10-19"},{"lineNumber":406,"author":{"gitId":"EthanWong6362"},"content":"**Create** | `create n/NAME id/STUDENT_ID p/PHONE_NUMBER e/EMAIL [github/GITHUB_USERNAME] [tele/TELEGRAM_HANDLE] [mod/MODULE [GROUP STATUS]]...` \u003cbr\u003e \u003cbr\u003e e.g., `create n/John Doe id/A0222594A p/12345678 e/john.doe@example.com mod/CS2100`","lastModifiedDate":"2021-11-01"},{"lineNumber":407,"author":{"gitId":"EthanWong6362"},"content":"**Edit** | `edit EDITED_ATTRIBUTE [MORE ATTRIBUTES]` \u003cbr\u003e \u003cbr\u003e e.g., `edit p/123321432 e/changedemail@example.com`","lastModifiedDate":"2021-11-01"},{"lineNumber":408,"author":{"gitId":"EthanWong6362"},"content":"**Add module** | `addMod mod/MODULE [GROUP_STATUS] [mod/MODULE [GROUP_STATUS]]...` \u003cbr\u003e \u003cbr\u003e e.g., `addMod mod/CS2103T need member mod/CS1231S`","lastModifiedDate":"2021-11-01"},{"lineNumber":409,"author":{"gitId":"ngjiayuan"},"content":"**Edit module group status** | `editGroupStatus mod/MODULE [NEW_STATUS_DESCRIPTION] [mod/MODULE [NEW_STATUS_DESCRIPTION]]...` \u003cbr\u003e \u003cbr\u003e e.g., `editGroupStatus mod/CS2103T need group`","lastModifiedDate":"2021-11-02"},{"lineNumber":410,"author":{"gitId":"EthanWong6362"},"content":"**Remove module** | `remMod mod/MODULE [mod/MODULE]...` \u003cbr\u003e \u003cbr\u003e e.g., `remMod mod/CS2100 mod/CS2103T`","lastModifiedDate":"2021-11-01"},{"lineNumber":411,"author":{"gitId":"EthanWong6362"},"content":"**Add Favourite** | `addFav STUDENT_ID`  \u003cbr\u003e \u003cbr\u003e e.g., `addFav A0222594A`","lastModifiedDate":"2021-11-01"},{"lineNumber":412,"author":{"gitId":"EthanWong6362"},"content":"**Remove Favourite** | `remFav STUDENT_ID`  \u003cbr\u003e \u003cbr\u003e e.g., `remFav A0222594A`","lastModifiedDate":"2021-11-01"},{"lineNumber":413,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2021-09-29"},{"lineNumber":414,"author":{"gitId":"zacharylwy"},"content":"**List favorites** | `listFav`","lastModifiedDate":"2021-10-22"},{"lineNumber":415,"author":{"gitId":"aakanshanarain"},"content":"**Find by name** | `find KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `find alex david` returns `Alex Yeoh, David Li`","lastModifiedDate":"2021-10-19"},{"lineNumber":416,"author":{"gitId":"zacharylwy"},"content":"**Find by student ID** | `findId KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `findId A0222594A` returns person with student Id matching A0222594A.","lastModifiedDate":"2021-10-22"},{"lineNumber":417,"author":{"gitId":"EthanWong6362"},"content":"**Filter** | `filter mod/MODULE_CODE [group/GROUP_STATUS]`\u003cbr\u003e e.g. no group filter: `filter mod/CS2030` \u003cbr\u003e with group filter: `filter mod/CS2030 need group`","lastModifiedDate":"2021-11-01"},{"lineNumber":418,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"zacharylwy"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"aakanshanarain":184,"ngjiayuan":50,"charltonator":9,"-":112,"zacharylwy":53,"EthanWong6362":11}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ngjiayuan"},"content":"    content: \"ModuLink\";","lastModifiedDate":"2021-10-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"ngjiayuan":1,"-":294}},{"path":"docs/diagrams/AddFavSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zacharylwy"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"participant \":ModuLinkParser\" as ModuLinkParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"participant \":AddFavCommandParser\" as AddFavCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"participant \"a:AddFavCommand\" as AddFavCommand LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"ngjiayuan"},"content":"[-\u003e LogicManager : execute(\"addFav A0123456A\")","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"ngjiayuan"},"content":"LogicManager -\u003e ModuLinkParser : parseCommand(\"addFav A0123456A\")","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"activate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"create AddFavCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser -\u003e AddFavCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"activate AddFavCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"zacharylwy"},"content":"AddFavCommandParser --\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"zacharylwy"},"content":"deactivate AddFavCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"ngjiayuan"},"content":"ModuLinkParser -\u003e AddFavCommandParser : parse(\"A0123456A\")","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"zacharylwy"},"content":"activate AddFavCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"zacharylwy"},"content":"create AddFavCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"zacharylwy"},"content":"AddFavCommandParser -\u003e AddFavCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"zacharylwy"},"content":"activate AddFavCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"zacharylwy"},"content":"AddFavCommand --\u003e AddFavCommandParser : a","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"zacharylwy"},"content":"deactivate AddFavCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"zacharylwy"},"content":"AddFavCommandParser --\u003e ModuLinkParser : a","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"zacharylwy"},"content":"deactivate AddFavCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"zacharylwy"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"zacharylwy"},"content":"AddFavCommandParser -[hidden]-\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"zacharylwy"},"content":"destroy AddFavCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser --\u003e LogicManager : a","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"zacharylwy"},"content":"deactivate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"zacharylwy"},"content":"LogicManager -\u003e AddFavCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"zacharylwy"},"content":"activate AddFavCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"zacharylwy"},"content":"AddFavCommand -\u003e Model : getPersonList()","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"zacharylwy"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"zacharylwy"},"content":"Model --\u003e AddFavCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"zacharylwy"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"zacharylwy"},"content":"AddFavCommand -\u003e Model : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"zacharylwy"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"zacharylwy"},"content":"Model --\u003e AddFavCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"zacharylwy"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"zacharylwy"},"content":"create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"zacharylwy"},"content":"AddFavCommand -\u003e CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"zacharylwy"},"content":"activate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"zacharylwy"},"content":"CommandResult --\u003e AddFavCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"zacharylwy"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"zacharylwy"},"content":"AddFavCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"zacharylwy"},"content":"deactivate AddFavCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"zacharylwy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"zacharylwy"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"zacharylwy"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"ngjiayuan":3,"zacharylwy":72}},{"path":"docs/diagrams/AddModSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zacharylwy"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"participant \":ModuLinkParser\" as ModuLinkParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"participant \":AddModCommandParser\" as AddModCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"participant \"a:AddModCommand\" as AddModCommand LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"ngjiayuan"},"content":"[-\u003e LogicManager : execute(\"addMod mod/CS2101\")","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"ngjiayuan"},"content":"LogicManager -\u003e ModuLinkParser : parseCommand(\"addMod mod/CS2101\")","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"activate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"create AddModCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser -\u003e AddModCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"activate AddModCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"zacharylwy"},"content":"AddModCommandParser --\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"zacharylwy"},"content":"deactivate AddModCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser -\u003e AddModCommandParser : parse(\"mod/CS2101\")","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"zacharylwy"},"content":"activate AddModCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"zacharylwy"},"content":"create AddModCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"zacharylwy"},"content":"AddModCommandParser -\u003e AddModCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"zacharylwy"},"content":"activate AddModCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"zacharylwy"},"content":"AddModCommand --\u003e AddModCommandParser : a","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"zacharylwy"},"content":"deactivate AddModCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"zacharylwy"},"content":"AddModCommandParser --\u003e ModuLinkParser : a","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"zacharylwy"},"content":"deactivate AddModCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"zacharylwy"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"zacharylwy"},"content":"AddModCommandParser -[hidden]-\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"zacharylwy"},"content":"destroy AddModCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser --\u003e LogicManager : a","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"zacharylwy"},"content":"deactivate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"zacharylwy"},"content":"LogicManager -\u003e AddModCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"zacharylwy"},"content":"activate AddModCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"ngjiayuan"},"content":"AddModCommand -\u003e Model : setPerson(myProfile, editedProfile)","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"zacharylwy"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"zacharylwy"},"content":"Model --\u003e AddModCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"zacharylwy"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"zacharylwy"},"content":"AddModCommand -\u003e Model : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"zacharylwy"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"zacharylwy"},"content":"Model --\u003e AddModCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"zacharylwy"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"zacharylwy"},"content":"create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"zacharylwy"},"content":"AddModCommand -\u003e CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"zacharylwy"},"content":"activate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"zacharylwy"},"content":"CommandResult --\u003e AddModCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"zacharylwy"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"zacharylwy"},"content":"AddModCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"zacharylwy"},"content":"deactivate AddModCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"zacharylwy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"zacharylwy"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"zacharylwy"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"ngjiayuan":3,"zacharylwy":72}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"user -[USER_COLOR]\u003e ui : \"addfav A0123456A\"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"addfav A0123456A\")","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"zacharylwy"},"content":"logic -[LOGIC_COLOR]\u003e model : addfav(A0123456A)","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveModuLink(moduLink)","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":34,"zacharylwy":4}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"ModuLink *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"ModuLink *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":18,"zacharylwy":3}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"if () then ([command commits ModuLink])","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"    :Save ModuLink to","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"    moduLinkStateList;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":12,"zacharylwy":3}},{"path":"docs/diagrams/CreateSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zacharylwy"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"participant \":ModuLinkParser\" as ModuLinkParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"participant \":CreateCommandParser\" as CreateCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"participant \"p:CreateCommand\" as CreateCommand LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"zacharylwy"},"content":"[-\u003e LogicManager : execute(\"create n/... id/... p/... e/...\")","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"LogicManager -\u003e ModuLinkParser : parseCommand(\"create n/... id/... p/... e/...\")","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"activate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"create CreateCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser -\u003e CreateCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"activate CreateCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"zacharylwy"},"content":"CreateCommandParser --\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"zacharylwy"},"content":"deactivate CreateCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser -\u003e CreateCommandParser : parse(\"n/... id/... p/... e/...\")","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"zacharylwy"},"content":"activate CreateCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"zacharylwy"},"content":"create CreateCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"zacharylwy"},"content":"CreateCommandParser -\u003e CreateCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"zacharylwy"},"content":"activate CreateCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"zacharylwy"},"content":"CreateCommand --\u003e CreateCommandParser : p","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"zacharylwy"},"content":"deactivate CreateCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"zacharylwy"},"content":"CreateCommandParser --\u003e ModuLinkParser : p","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"zacharylwy"},"content":"deactivate CreateCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"zacharylwy"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"zacharylwy"},"content":"CreateCommandParser -[hidden]-\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"zacharylwy"},"content":"destroy CreateCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser --\u003e LogicManager : p","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"zacharylwy"},"content":"deactivate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"zacharylwy"},"content":"LogicManager -\u003e CreateCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"zacharylwy"},"content":"activate CreateCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"ngjiayuan"},"content":"CreateCommand -\u003e Model : createProfile(myProfile)","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"zacharylwy"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"zacharylwy"},"content":"Model --\u003e CreateCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"zacharylwy"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"zacharylwy"},"content":"create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"zacharylwy"},"content":"CreateCommand -\u003e CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"zacharylwy"},"content":"activate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"zacharylwy"},"content":"CommandResult --\u003e CreateCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"zacharylwy"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"zacharylwy"},"content":"CreateCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"zacharylwy"},"content":"deactivate CreateCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"zacharylwy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"zacharylwy"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"zacharylwy"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"ngjiayuan":1,"zacharylwy":68}},{"path":"docs/diagrams/EditGroupStatusCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aakanshanarain"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"participant \":ModuLinkParser\" as ModuLinkParser LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"participant \":EditGroupStatusCommandParser\" as EditGroupStatusCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"participant \"p:EditGroupStatusCommand\" as EditGroupStatusCommand LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"[-\u003e LogicManager : execute(\"editGroupStatus mod/CS2101 group/Need member\")","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"activate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"LogicManager -\u003e ModuLinkParser : parseCommand(\"editGroupStatus mod/CS2101 group/Need member\")","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"activate ModuLinkParser","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"create EditGroupStatusCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"ModuLinkParser -\u003e EditGroupStatusCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"activate EditGroupStatusCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"EditGroupStatusCommandParser --\u003e ModuLinkParser","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"deactivate EditGroupStatusCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"ModuLinkParser -\u003e EditGroupStatusCommandParser : parse(\"mod/CS2101 group/Need Member\")","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"activate EditGroupStatusCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"create EditGroupStatusCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"EditCommandParser -\u003e EditGroupStatusCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"activate EditGroupStatusCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"EditGroupStatusCommand --\u003e EditGroupStatusCommandParser : e","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"aakanshanarain"},"content":"deactivate EditGroupStatusCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"EditGroupStatusCommandParser --\u003e ModuLinkParser : e","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"deactivate EditGroupStatusCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"EditGroupStatusCommandParser -[hidden]-\u003e ModuLinkParser","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"destroy EditGroupStatusCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"ModuLinkParser --\u003e LogicManager : e","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"deactivate ModuLinkParser","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"aakanshanarain"},"content":"LogicManager -\u003e EditGroupStatusCommand : execute()","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"aakanshanarain"},"content":"activate EditGroupStatusCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"aakanshanarain"},"content":"EditCommand -\u003e Model : setPerson(myProfile, editedProfile)","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"aakanshanarain"},"content":"activate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"aakanshanarain"},"content":"Model --\u003e EditGroupStatusCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"aakanshanarain"},"content":"deactivate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"aakanshanarain"},"content":"EditCommand -\u003e Model : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"aakanshanarain"},"content":"activate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"aakanshanarain"},"content":"Model --\u003e EditGroupStatusCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"aakanshanarain"},"content":"deactivate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"aakanshanarain"},"content":"create CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"aakanshanarain"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"aakanshanarain"},"content":"activate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"aakanshanarain"},"content":"CommandResult --\u003e EditGroupStatusCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"aakanshanarain"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"aakanshanarain"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"aakanshanarain"},"content":"deactivate EditGroupStatusCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"aakanshanarain"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"aakanshanarain"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"aakanshanarain"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"aakanshanarain":75}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zacharylwy"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"participant \":ModuLinkParser\" as ModuLinkParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"participant \"p:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"zacharylwy"},"content":"[-\u003e LogicManager : execute(\"edit n/...\")","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"LogicManager -\u003e ModuLinkParser : parseCommand(\"edit n/...\")","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"activate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"create EditCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser -\u003e EditCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"activate EditCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"zacharylwy"},"content":"EditCommandParser --\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"zacharylwy"},"content":"deactivate EditCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser -\u003e EditCommandParser : parse(\"n/...\")","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"zacharylwy"},"content":"activate EditCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"zacharylwy"},"content":"create EditCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"zacharylwy"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"zacharylwy"},"content":"activate EditCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"zacharylwy"},"content":"EditCommand --\u003e EditCommandParser : p","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"zacharylwy"},"content":"deactivate EditCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"zacharylwy"},"content":"EditCommandParser --\u003e ModuLinkParser : p","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"zacharylwy"},"content":"deactivate EditCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"zacharylwy"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"zacharylwy"},"content":"EditCommandParser -[hidden]-\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"zacharylwy"},"content":"destroy EditCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser --\u003e LogicManager : p","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"zacharylwy"},"content":"deactivate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"zacharylwy"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"zacharylwy"},"content":"activate EditCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"ngjiayuan"},"content":"EditCommand -\u003e Model : setPerson(myProfile, editedProfile)","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"zacharylwy"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"zacharylwy"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"zacharylwy"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"zacharylwy"},"content":"EditCommand -\u003e Model : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"zacharylwy"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"zacharylwy"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"zacharylwy"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"zacharylwy"},"content":"create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"zacharylwy"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"zacharylwy"},"content":"activate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"zacharylwy"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"zacharylwy"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"zacharylwy"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"zacharylwy"},"content":"deactivate EditCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"zacharylwy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"zacharylwy"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"zacharylwy"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"ngjiayuan":1,"zacharylwy":74}},{"path":"docs/diagrams/FilterSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zacharylwy"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"participant \":ModuLinkParser\" as ModuLinkParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"participant \":FilterCommandParser\" as FilterCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"participant \"f:FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"participant \"pred:ModuleContainsKeywordsPredicate\" as NameContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"[-\u003e LogicManager : execute(\"filter mod/CS2101\")","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"LogicManager -\u003e ModuLinkParser : parseCommand(\"filter mod/CS2101\")\")","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"zacharylwy"},"content":"activate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"zacharylwy"},"content":"create FilterCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser -\u003e FilterCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"zacharylwy"},"content":"activate FilterCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"zacharylwy"},"content":"FilterCommandParser --\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"zacharylwy"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser -\u003e FilterCommandParser : parse(\"mod/CS2101\")","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"zacharylwy"},"content":"activate FilterCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"zacharylwy"},"content":"create FilterCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"zacharylwy"},"content":"FilterCommandParser -\u003e FilterCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"zacharylwy"},"content":"activate FilterCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"zacharylwy"},"content":"create NameContainsKeywordsPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"zacharylwy"},"content":"FilterCommand -\u003e NameContainsKeywordsPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"zacharylwy"},"content":"activate NameContainsKeywordsPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"zacharylwy"},"content":"NameContainsKeywordsPredicate --\u003e FilterCommand : pred","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"zacharylwy"},"content":"deactivate NameContainsKeywordsPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"zacharylwy"},"content":"FilterCommand --\u003e FilterCommandParser : f","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"zacharylwy"},"content":"deactivate FilterCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"zacharylwy"},"content":"FilterCommandParser --\u003e ModuLinkParser : f","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"zacharylwy"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"zacharylwy"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"zacharylwy"},"content":"FilterCommandParser -[hidden]-\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"zacharylwy"},"content":"destroy FilterCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser --\u003e LogicManager : f","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"zacharylwy"},"content":"deactivate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"zacharylwy"},"content":"LogicManager -\u003e FilterCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"zacharylwy"},"content":"activate FilterCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"zacharylwy"},"content":"FilterCommand -\u003e Model : updateFilteredPersonList(pred)","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"zacharylwy"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"zacharylwy"},"content":"Model --\u003e FilterCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"zacharylwy"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"zacharylwy"},"content":"create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"zacharylwy"},"content":"FilterCommand -\u003e CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"zacharylwy"},"content":"activate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"zacharylwy"},"content":"CommandResult --\u003e FilterCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"zacharylwy"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"zacharylwy"},"content":"FilterCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"zacharylwy"},"content":"deactivate FilterCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"zacharylwy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"zacharylwy"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"zacharylwy"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"zacharylwy":79}},{"path":"docs/diagrams/FindIdSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zacharylwy"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"participant \":ModuLinkParser\" as ModuLinkParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"participant \":FindIdCommandParser\" as FindIdCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"participant \"f:FindIdCommand\" as FindIdCommand LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"participant \"pred:StudentIdContainsKeywordsPredicate\" as StudentIdContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"[-\u003e LogicManager : execute(\"findId A0123456A\")","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"LogicManager -\u003e ModuLinkParser : parseCommand(\"findId A0123456A\")","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"zacharylwy"},"content":"activate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"zacharylwy"},"content":"create FindIdCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser -\u003e FindIdCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"zacharylwy"},"content":"activate FindIdCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"zacharylwy"},"content":"FindIdCommandParser --\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"zacharylwy"},"content":"deactivate FindIdCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser -\u003e FindIdCommandParser : parse(\"A0123456A\")","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"zacharylwy"},"content":"activate FindIdCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"zacharylwy"},"content":"create FindIdCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"zacharylwy"},"content":"FindIdCommandParser -\u003e FindIdCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"zacharylwy"},"content":"activate FindIdCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"zacharylwy"},"content":"create StudentIdContainsKeywordsPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"zacharylwy"},"content":"FindIdCommand -\u003e StudentIdContainsKeywordsPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"zacharylwy"},"content":"activate StudentIdContainsKeywordsPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"zacharylwy"},"content":"StudentIdContainsKeywordsPredicate --\u003e FindIdCommand : pred","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"zacharylwy"},"content":"deactivate StudentIdContainsKeywordsPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"zacharylwy"},"content":"FindIdCommand --\u003e FindIdCommandParser : f","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"zacharylwy"},"content":"deactivate FindIdCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"zacharylwy"},"content":"FindIdCommandParser --\u003e ModuLinkParser : f","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"zacharylwy"},"content":"deactivate FindIdCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"zacharylwy"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"zacharylwy"},"content":"FindIdCommandParser -[hidden]-\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"zacharylwy"},"content":"destroy FindIdCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser --\u003e LogicManager : f","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"zacharylwy"},"content":"deactivate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"zacharylwy"},"content":"LogicManager -\u003e FindIdCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"zacharylwy"},"content":"activate FindIdCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"zacharylwy"},"content":"FindIdCommand -\u003e Model : updateFilteredPersonList(pred)","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"zacharylwy"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"zacharylwy"},"content":"Model --\u003e FindIdCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"zacharylwy"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"zacharylwy"},"content":"create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"zacharylwy"},"content":"FindIdCommand -\u003e CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"zacharylwy"},"content":"activate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"zacharylwy"},"content":"CommandResult --\u003e FindIdCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"zacharylwy"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"zacharylwy"},"content":"FindIdCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"zacharylwy"},"content":"deactivate FindIdCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"zacharylwy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"zacharylwy"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"zacharylwy"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"zacharylwy":79}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zacharylwy"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"participant \":ModuLinkParser\" as ModuLinkParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"participant \"f:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"participant \"pred:NameContainsKeywordsPredicate\" as NameContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"[-\u003e LogicManager : execute(\"find Roy\")","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"LogicManager -\u003e ModuLinkParser : parseCommand(\"find Roy\")","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"zacharylwy"},"content":"activate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"zacharylwy"},"content":"create FindCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser -\u003e FindCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"zacharylwy"},"content":"activate FindCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"zacharylwy"},"content":"FindCommandParser --\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"zacharylwy"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser -\u003e FindCommandParser : parse(\"Roy\")","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"zacharylwy"},"content":"activate FindCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"zacharylwy"},"content":"create FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"zacharylwy"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"zacharylwy"},"content":"activate FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"zacharylwy"},"content":"create NameContainsKeywordsPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"zacharylwy"},"content":"FindCommand -\u003e NameContainsKeywordsPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"zacharylwy"},"content":"activate NameContainsKeywordsPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"zacharylwy"},"content":"NameContainsKeywordsPredicate --\u003e FindCommand : pred","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"zacharylwy"},"content":"deactivate NameContainsKeywordsPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"zacharylwy"},"content":"FindCommand --\u003e FindCommandParser : f","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"zacharylwy"},"content":"deactivate FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"zacharylwy"},"content":"FindCommandParser --\u003e ModuLinkParser : f","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"zacharylwy"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"zacharylwy"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"zacharylwy"},"content":"FindCommandParser -[hidden]-\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"zacharylwy"},"content":"destroy FindCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser --\u003e LogicManager : f","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"zacharylwy"},"content":"deactivate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"zacharylwy"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"zacharylwy"},"content":"activate FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"zacharylwy"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(pred)","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"zacharylwy"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"zacharylwy"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"zacharylwy"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"zacharylwy"},"content":"create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"zacharylwy"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"zacharylwy"},"content":"activate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"zacharylwy"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"zacharylwy"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"zacharylwy"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"zacharylwy"},"content":"deactivate FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"zacharylwy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"zacharylwy"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"zacharylwy"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"zacharylwy":79}},{"path":"docs/diagrams/ListFavSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zacharylwy"},"content":"@startuml","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"!include style.puml","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"participant \":ModuLinkParser\" as ModuLinkParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"participant \":ListFavCommand\" as ListFavCommand LOGIC_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"participant \"pred:IsFavouritePredicate\" as IsFavouritePredicate LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"end box","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"ngjiayuan"},"content":"[-\u003e LogicManager : execute(\"listFav\")","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"activate LogicManager","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"ngjiayuan"},"content":"LogicManager -\u003e ModuLinkParser : parseCommand(\"listFav\")","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"zacharylwy"},"content":"activate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"zacharylwy"},"content":"create ListFavCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser -\u003e ListFavCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"zacharylwy"},"content":"activate ListFavCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"zacharylwy"},"content":"ListFavCommand --\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"zacharylwy"},"content":"deactivate ListFavCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser --\u003e LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"zacharylwy"},"content":"deactivate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"zacharylwy"},"content":"LogicManager -\u003e ListFavCommand : execute()","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"zacharylwy"},"content":"activate ListFavCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"zacharylwy"},"content":"create IsFavouritePredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"zacharylwy"},"content":"ListFavCommand -\u003e IsFavouritePredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"zacharylwy"},"content":"activate IsFavouritePredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"zacharylwy"},"content":"IsFavouritePredicate --\u003e ListFavCommand :pred","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"zacharylwy"},"content":"deactivate IsFavouritePredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"zacharylwy"},"content":"ListFavCommand -\u003e Model : updateFilteredPersonList(pred)","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"zacharylwy"},"content":"activate Model","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"zacharylwy"},"content":"Model --\u003e ListFavCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"zacharylwy"},"content":"deactivate Model","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"zacharylwy"},"content":"create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"zacharylwy"},"content":"ListFavCommand -\u003e CommandResult","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"zacharylwy"},"content":"activate CommandResult","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"zacharylwy"},"content":"CommandResult --\u003e ListFavCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"zacharylwy"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"zacharylwy"},"content":"ListFavCommand --\u003e LogicManager","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"zacharylwy"},"content":"deactivate ListFavCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"zacharylwy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"zacharylwy"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"zacharylwy"},"content":"@enduml","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"ngjiayuan":2,"zacharylwy":59}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"Class ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"zacharylwy"},"content":"LogicManager -right-\u003e\"1\" ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"zacharylwy":3}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"Interface ReadOnlyModuLink \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"Class ModuLink","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"Class ReadOnlyModuLink","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"zacharylwy"},"content":"ModuLink .up.|\u003e ReadOnlyModuLink","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"zacharylwy"},"content":"Model .left.\u003e ReadOnlyModuLink","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"zacharylwy"},"content":"ModelManager -left-\u003e \"1\" ModuLink","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"zacharylwy"},"content":"ModuLink *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":47,"zacharylwy":7}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"Class ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"HiddenOutside ..\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":34,"zacharylwy":4}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"package \"ModuLink Storage\" #F4F6F6{","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"Interface ModuLinkStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"Class JsonModuLinkStorage","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"Class JsonSerializableModuLink","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"zacharylwy"},"content":"StorageManager -up-\u003e \"1\" ModuLinkStorage","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"zacharylwy"},"content":"Storage -right-|\u003e ModuLinkStorage","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"zacharylwy"},"content":"JsonModuLinkStorage .up.|\u003e ModuLinkStorage","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"zacharylwy"},"content":"JsonModuLinkStorage ..\u003e JsonSerializableModuLink","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"zacharylwy"},"content":"JsonSerializableModuLink --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":34,"zacharylwy":9}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"    class State1 as \"__ab0:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"    class State2 as \"__ab1:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"    class State3 as \"__ab2:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"zacharylwy":4}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"    class State1 as \"__ab0:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"    class State2 as \"__ab1:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"    class State3 as \"__ab2:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":18,"zacharylwy":4}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"    class State1 as \"__ab0:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"    class State2 as \"__ab1:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"    class State3 as \"__ab2:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"zacharylwy":4}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"    class State1 as \"__ab0:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"    class State2 as \"__ab1:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"    class State3 as \"__ab2:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"zacharylwy":4}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"    class State1 as \"__ab0:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"    class State2 as \"__ab1:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"    class State3 as \"__ab2:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"zacharylwy":4}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"    class State1 as \"__ab0:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"    class State2 as \"__ab1:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"    class State3 as \"__ab3:ModuLink__\"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"zacharylwy":4}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"participant \":ModuLinkParser\" as ModuLinkParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"participant \":VersionedModuLink\" as VersionedModuLink MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"LogicManager -\u003e ModuLinkParser : parseCommand(undo)","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"activate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser -\u003e UndoCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"UndoCommand --\u003e ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"zacharylwy"},"content":"ModuLinkParser --\u003e LogicManager : u","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"zacharylwy"},"content":"deactivate ModuLinkParser","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"zacharylwy"},"content":"UndoCommand -\u003e Model : undoModuLink()","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"zacharylwy"},"content":"Model -\u003e VersionedModuLink : undo()","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"zacharylwy"},"content":"activate VersionedModuLink","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"zacharylwy"},"content":"VersionedModuLink -\u003e VersionedModuLink :resetData(ReadOnlyModuLink)","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"zacharylwy"},"content":"VersionedModuLink --\u003e Model :","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"zacharylwy"},"content":"deactivate VersionedModuLink","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":39,"zacharylwy":14}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ngjiayuan"},"content":"title: ModuLink","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"ngjiayuan"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W12-4/tp/branch/master/graph/badge.svg?token\u003dRS2T7CZCPN)](https://codecov.io/gh/AY2122S1-CS2103T-W12-4/tp)","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"![Ui](images/screenshots/Ui.png)","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ngjiayuan"},"content":"** ModuLink is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ngjiayuan":3,"-":16,"zacharylwy":1}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"charltonator"},"content":"Create a `RemarkCommandParser` class in the `seedu.modulink.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"charltonator"},"content":"Create a new `Remark` in `seedu.modulink.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-10-19"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"charltonator"},"content":"Simply add the following to [`seedu.modulink.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"charltonator":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"The `address` field in `Person` is actually an instance of the `seedu.modulink.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"charltonator":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"charltonator"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.modulink.logic.Logic`.","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"charltonator"},"content":"A quick look at the `seedu.modulink.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"charltonator":2,"-":299}},{"path":"src/main/java/seedu/modulink/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.util.FileUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"charltonator":3,"-":61}},{"path":"src/main/java/seedu/modulink/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"     * Main method.","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"     * @param args parameter for main method.","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"charltonator":5,"-":24}},{"path":"src/main/java/seedu/modulink/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.Config;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.Version;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.util.ConfigUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.util.StringUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.Logic;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.LogicManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.storage.AddressBookStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.storage.Storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.storage.StorageManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.ui.UiManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":25,"-":159}},{"path":"src/main/java/seedu/modulink/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.core;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":1,"-":62}},{"path":"src/main/java/seedu/modulink/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.core;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":1,"-":78}},{"path":"src/main/java/seedu/modulink/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.core;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":1,"-":111}},{"path":"src/main/java/seedu/modulink/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.core;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"EthanWong6362"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d person(s) listed!\";","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"ngjiayuan"},"content":"    public static final String MESSAGE_FAVOURITE_ADDED \u003d \"%s is added as a favourite!\";","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"    public static final String MESSAGE_NO_SUCH_ID_FOUND \u003d \"No such Student ID found!\";","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"    public static final String MESSAGE_PERSON_ALREADY_FAVOURITE \u003d \"The Student is already a favourite!\";","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"ngjiayuan"},"content":"    public static final String MESSAGE_FAVOURITE_REMOVED \u003d \"%s is removed from favourites.\";","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"ngjiayuan"},"content":"    public static final String MESSAGE_PERSON_IS_NOT_FAVOURITE \u003d \"The Student is not a favourite.\";","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charltonator":3,"ngjiayuan":3,"-":11,"EthanWong6362":1}},{"path":"src/main/java/seedu/modulink/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.core;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":1,"-":115}},{"path":"src/main/java/seedu/modulink/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.core.index;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"charltonator":1,"-":53}},{"path":"src/main/java/seedu/modulink/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.exceptions;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":1,"-":10}},{"path":"src/main/java/seedu/modulink/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.exceptions;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charltonator":1,"-":20}},{"path":"src/main/java/seedu/modulink/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.util;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.MainApp;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"charltonator":2,"-":40}},{"path":"src/main/java/seedu/modulink/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.util;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charltonator":1,"-":34}},{"path":"src/main/java/seedu/modulink/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.util;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.Config;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"charltonator":3,"-":20}},{"path":"src/main/java/seedu/modulink/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.util;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":1,"-":82}},{"path":"src/main/java/seedu/modulink/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.util;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":3,"-":140}},{"path":"src/main/java/seedu/modulink/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.util;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"EthanWong6362"},"content":"     * Returns the number of occurrences of {@param c} in {@param s}.","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"EthanWong6362"},"content":"    public static int countMatch(String s, char c) {","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"EthanWong6362"},"content":"        int n \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"EthanWong6362"},"content":"        for (int i \u003d 0; i \u003c s.length(); i++) {","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"EthanWong6362"},"content":"            if (c \u003d\u003d s.charAt(i)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"EthanWong6362"},"content":"                n++;","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"EthanWong6362"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"EthanWong6362"},"content":"        return n;","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":2,"-":66,"EthanWong6362":13}},{"path":"src/main/java/seedu/modulink/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.GuiSettings;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"     * @see seedu.modulink.model.Model#getAddressBook()","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"ngjiayuan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"ngjiayuan"},"content":"     * Returns true if a profile has been created.","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"ngjiayuan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"ngjiayuan"},"content":"    boolean hasCreatedProfile();","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"charltonator":8,"ngjiayuan":5,"-":42}},{"path":"src/main/java/seedu/modulink/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.GuiSettings;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.CreateCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.AddressBookParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.storage.Storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"ngjiayuan"},"content":"    public static final String PROFILE_NOT_CREATED_ERROR_MESSAGE \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"ngjiayuan"},"content":"            \"Please create your profile using the create command first!\";","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"ngjiayuan"},"content":"    public static final String PROFILE_CREATED_ERROR_MESSAGE \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"ngjiayuan"},"content":"            \"Profile already created! Use the edit command to edit it!\";","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"aakanshanarain"},"content":"        if (!hasCreatedProfile() \u0026\u0026 !commandText.toLowerCase().startsWith(\"create\") \u0026\u0026 !commandText.equals(\"list\")) {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"ngjiayuan"},"content":"            throw new CommandException(PROFILE_NOT_CREATED_ERROR_MESSAGE + \"\\n\" + CreateCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"ngjiayuan"},"content":"        } else if (hasCreatedProfile() \u0026\u0026 commandText.toLowerCase().startsWith(\"create\")) {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"ngjiayuan"},"content":"            throw new CommandException(PROFILE_CREATED_ERROR_MESSAGE + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"ngjiayuan"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":59,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"ngjiayuan"},"content":"    public boolean hasCreatedProfile() {","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"ngjiayuan"},"content":"        return !model.hasPerson(Person.getPlaceholder());","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"aakanshanarain":1,"charltonator":14,"ngjiayuan":14,"-":70}},{"path":"src/main/java/seedu/modulink/logic/commands/AddFavCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":" * Adds person whose student ID matches the user input to favourites..","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":" * ID matching is case insensitive.","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"public class AddFavCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"EthanWong6362"},"content":"    public static final String COMMAND_WORD \u003d \"addFav\";","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person as a favourite.\\n \"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"            + \"Parameters: Student_ID\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"            + \"Example: \" + COMMAND_WORD + \" A1234567X\";","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"EthanWong6362"},"content":"    public static final String FAVOURITING_PROFILE_ERROR \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"EthanWong6362"},"content":"            \"You cannot add your own profile to your Favourites list.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"EthanWong6362"},"content":"    public static final String MULTIPLE_ID_ERROR \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"EthanWong6362"},"content":"            \"You can only add one person to your Favourites list at a time.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"    private final String studentId;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"    public AddFavCommand(String studentId) {","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"charltonator"},"content":"        boolean noPersonFound \u003d true;","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"charltonator"},"content":"        ObservableList\u003cPerson\u003e personList \u003d model.getPersonList();","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"charltonator"},"content":"        // Look for the Person with the student ID, and if he is","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"charltonator"},"content":"        // not a favourite, make him a favourite. If he already is,","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"charltonator"},"content":"        // return a message saying he already is.","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"charltonator"},"content":"        for (Person person : personList) {","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"charltonator"},"content":"            if (person.getStudentId().toString().equalsIgnoreCase(studentId)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"charltonator"},"content":"                if (person.getIsFavourite()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"charltonator"},"content":"                    return new CommandResult(String.format(Messages.MESSAGE_PERSON_ALREADY_FAVOURITE));","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"EthanWong6362"},"content":"                } else if (person.getIsMyProfile()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"EthanWong6362"},"content":"                    return new CommandResult(FAVOURITING_PROFILE_ERROR);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"charltonator"},"content":"                } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"ngjiayuan"},"content":"                    person.setFavouriteTrue();","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"charltonator"},"content":"                    noPersonFound \u003d false;","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"charltonator"},"content":"                }","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"charltonator"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"EthanWong6362"},"content":"        // included this so the list will be properly updated","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"EthanWong6362"},"content":"        model.refreshFilteredPersonList();","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"charltonator"},"content":"        if (noPersonFound) {","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"charltonator"},"content":"            return new CommandResult(","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"charltonator"},"content":"                    String.format(Messages.MESSAGE_NO_SUCH_ID_FOUND));","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"charltonator"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"charltonator"},"content":"            return new CommandResult(","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"charltonator"},"content":"                    String.format(Messages.MESSAGE_FAVOURITE_ADDED, studentId));","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"charltonator"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"charltonator"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"charltonator"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"charltonator"},"content":"                || (other instanceof AddFavCommand // instanceof handles nulls","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"charltonator"},"content":"                \u0026\u0026 this.studentId.equals(((AddFavCommand) other).studentId));","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"charltonator":63,"ngjiayuan":1,"EthanWong6362":11}},{"path":"src/main/java/seedu/modulink/logic/commands/AddModCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"EthanWong6362"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"EthanWong6362"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"EthanWong6362"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.GitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.StudentId;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.TelegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"EthanWong6362"},"content":"public class AddModCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"EthanWong6362"},"content":"    public static final String COMMAND_WORD \u003d \"addMod\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"EthanWong6362"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"EthanWong6362"},"content":"            + \": Adds a module to your module list. \"","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"EthanWong6362"},"content":"            + \"You may optionally add your grouping status.\"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"EthanWong6362"},"content":"            + \"Existing modules will not be overwritten.\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"EthanWong6362"},"content":"            + \"Duplicate modules cannot be added.\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"EthanWong6362"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"EthanWong6362"},"content":"            + \"[\" + PREFIX_MOD + \"MOD]\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"EthanWong6362"},"content":"            + \"Example: \\n- \" + COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"EthanWong6362"},"content":"            + \" \" + PREFIX_MOD + \"CS2103T\\n- \"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"EthanWong6362"},"content":"            + COMMAND_WORD + \" \" + PREFIX_MOD + \"CS2100 need group\";","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"    public static final String MESSAGE_ADD_MODULE_SUCCESS \u003d \"Added module: %1$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"EthanWong6362"},"content":"    public static final String MESSAGE_NO_CHANGE \u003d","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"EthanWong6362"},"content":"            \"Please provide a module to add with the \\\"mod/\\\" prefix.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"EthanWong6362"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"You have already added this module to your list.\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"EthanWong6362"},"content":"            + \"Please use the \\\"editGroupStatus\\\" command to change your grouping status.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"EthanWong6362"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"EthanWong6362"},"content":"     * Constructor.","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"EthanWong6362"},"content":"    public AddModCommand(EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"EthanWong6362"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"EthanWong6362"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"EthanWong6362"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"EthanWong6362"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"EthanWong6362"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"ngjiayuan"},"content":"        Person myProfile \u003d model.getProfile();","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"ngjiayuan"},"content":"        Person editedProfile \u003d createEditedPerson(myProfile, editPersonDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"ngjiayuan"},"content":"        if (myProfile.equals(editedProfile)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"EthanWong6362"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"ngjiayuan"},"content":"        model.setPerson(myProfile, editedProfile);","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"EthanWong6362"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"EthanWong6362"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_MODULE_SUCCESS, editPersonDescriptor.getTags().get()));","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"ngjiayuan"},"content":"     * Creates and returns a {@code Person} with the details of {@code myProfile}","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"EthanWong6362"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"EthanWong6362"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"EthanWong6362"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"EthanWong6362"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"EthanWong6362"},"content":"        StudentId updatedId \u003d editPersonDescriptor.getStudentId().orElse(personToEdit.getStudentId());","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"EthanWong6362"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"EthanWong6362"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"aakanshanarain"},"content":"        GitHubUsername updatedGitHubUsername \u003d editPersonDescriptor.getGitHubUsername()","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"aakanshanarain"},"content":"                .orElse(personToEdit.getGithubUsername());","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"aakanshanarain"},"content":"        TelegramHandle updatedTelegramHandle \u003d editPersonDescriptor.getTelegramHandle()","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"aakanshanarain"},"content":"                .orElse(personToEdit.getTelegramHandle());","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"EthanWong6362"},"content":"        Set\u003cMod\u003e updatedMods \u003d new HashSet\u003c\u003e(Collections.emptySet());","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"EthanWong6362"},"content":"        updatedMods.addAll(personToEdit.getMods());","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"EthanWong6362"},"content":"        updatedMods.addAll(editPersonDescriptor.getTags().get());","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"aakanshanarain"},"content":"        return new Person(updatedName, updatedId, updatedPhone, updatedEmail,","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"aakanshanarain"},"content":"                updatedGitHubUsername, updatedTelegramHandle, false, updatedMods, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"EthanWong6362"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"EthanWong6362"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"EthanWong6362"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"EthanWong6362"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"EthanWong6362"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"EthanWong6362"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"EthanWong6362"},"content":"        if (!(other instanceof AddModCommand)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"EthanWong6362"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"EthanWong6362"},"content":"        // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"EthanWong6362"},"content":"        AddModCommand amc \u003d (AddModCommand) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"EthanWong6362"},"content":"        return editPersonDescriptor.equals(amc.editPersonDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"EthanWong6362"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"aakanshanarain":8,"charltonator":12,"ngjiayuan":5,"EthanWong6362":86}},{"path":"src/main/java/seedu/modulink/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charltonator":3,"-":17}},{"path":"src/main/java/seedu/modulink/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charltonator":1,"-":70}},{"path":"src/main/java/seedu/modulink/logic/commands/CreateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"ngjiayuan"},"content":"public class CreateCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"ngjiayuan"},"content":"    public static final String COMMAND_WORD \u003d \"create\";","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates the user\u0027s profile in ModuLink. \"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"            + PREFIX_ID + \"STUDENT ID \"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"            + \"[\" + PREFIX_GITHUB_USERNAME + \"GITHUB USERNAME] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"            + \"[\" + PREFIX_TELEGRAM_HANDLE + \"TELEGRAM HANDLE] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"EthanWong6362"},"content":"            + \"[\" + PREFIX_MOD + \"TAG]...\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"            + PREFIX_ID + \"A1234567Z \"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"aakanshanarain"},"content":"            + PREFIX_GITHUB_USERNAME + \"johnd \"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"            + PREFIX_TELEGRAM_HANDLE + \"@johndoe \"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"ngjiayuan"},"content":"            + PREFIX_MOD + \"CS2100 \"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"ngjiayuan"},"content":"            + PREFIX_MOD + \"CS2101\";","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Profile created: %1$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"aakanshanarain"},"content":"    private static final String MESSAGE_DUPLICATE_STUDENT_ID \u003d \"There is already a person with this Student ID.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"ngjiayuan"},"content":"    private final Person myProfile;","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"ngjiayuan"},"content":"    public CreateCommand(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"ngjiayuan"},"content":"        myProfile \u003d person;","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"ngjiayuan"},"content":"        if (model.hasPerson(myProfile)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"aakanshanarain"},"content":"        // Problem with this if statement:","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"aakanshanarain"},"content":"        // Since the model person already in the system has this student ID,","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"EthanWong6362"},"content":"        // creating another model person makes the \"execute_personAcceptedByModel_addSuccessful\" test fail","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"aakanshanarain"},"content":"        // Don\u0027t know what to do about this rn","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"EthanWong6362"},"content":"        // FIXED!!","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"EthanWong6362"},"content":"        if (model.hasStudentIdNotProfile(myProfile)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"aakanshanarain"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT_ID);","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"ngjiayuan"},"content":"        // deletes the placeholder and adds the user profile","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"ngjiayuan"},"content":"        if (!model.getFilteredPersonList().isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"ngjiayuan"},"content":"            Person placeholder \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"ngjiayuan"},"content":"            model.deletePerson(placeholder);","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"ngjiayuan"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"ngjiayuan"},"content":"        model.addProfile(myProfile);","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"ngjiayuan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, myProfile));","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"ngjiayuan"},"content":"                || (other instanceof CreateCommand // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"ngjiayuan"},"content":"                \u0026\u0026 myProfile.equals(((CreateCommand) other).myProfile));","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aakanshanarain":17,"charltonator":9,"ngjiayuan":17,"-":41,"EthanWong6362":4}},{"path":"src/main/java/seedu/modulink/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charltonator":6,"-":47}},{"path":"src/main/java/seedu/modulink/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"EthanWong6362"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"EthanWong6362"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.GitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.StudentId;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.TelegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"charltonator"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of your profile.\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"charltonator"},"content":"            + \"(Module tags cannot be edited using this function)\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"EthanWong6362"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"            + \"[\" + PREFIX_ID + \"STUDENT ID] \"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"EthanWong6362"},"content":"            + \"[\" + PREFIX_GITHUB_USERNAME + \"GITHUB] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"EthanWong6362"},"content":"            + \"[\" + PREFIX_TELEGRAM_HANDLE + \"TELEGRAM]\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"EthanWong6362"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"EthanWong6362"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"EthanWong6362"},"content":"            + \"Note: To edit your module list, \"","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"EthanWong6362"},"content":"            + \"please use the \\\"addMod\\\", \\\"remMod\\\", or \\\"editGroupStatus\\\" commands.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"aakanshanarain"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited: %1$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"EthanWong6362"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT_ID \u003d \"There is already a profile with this Student ID.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"EthanWong6362"},"content":"    public EditCommand(EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"EthanWong6362"},"content":"        Person personToEdit \u003d model.getProfile();","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"EthanWong6362"},"content":"        if (model.hasStudentIdNotProfile(editedPerson)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"EthanWong6362"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT_ID);","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":92,"author":{"gitId":"aakanshanarain"},"content":"        StudentId updatedId \u003d editPersonDescriptor.getStudentId().orElse(personToEdit.getStudentId());","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":95,"author":{"gitId":"aakanshanarain"},"content":"        GitHubUsername updatedGitHubUsername \u003d editPersonDescriptor.getGitHubUsername()","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"aakanshanarain"},"content":"                .orElse(personToEdit.getGithubUsername());","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"aakanshanarain"},"content":"        TelegramHandle updatedTelegramHandle \u003d editPersonDescriptor.getTelegramHandle()","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"aakanshanarain"},"content":"                .orElse(personToEdit.getTelegramHandle());","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"EthanWong6362"},"content":"        Set\u003cMod\u003e updatedMods \u003d personToEdit.getMods();","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"aakanshanarain"},"content":"        return new Person(updatedName, updatedId, updatedPhone, updatedEmail,","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"aakanshanarain"},"content":"                updatedGitHubUsername, updatedTelegramHandle, false, updatedMods, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"EthanWong6362"},"content":"        return editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"aakanshanarain"},"content":"        private StudentId id;","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"aakanshanarain"},"content":"        private GitHubUsername gitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"aakanshanarain"},"content":"        private TelegramHandle telegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"EthanWong6362"},"content":"        private Set\u003cMod\u003e mods;","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"EthanWong6362"},"content":"         * A defensive copy of {@code mods} is used internally.","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"aakanshanarain"},"content":"            setStudentId(toCopy.id);","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"aakanshanarain"},"content":"            setGitHubUsername(toCopy.gitHubUsername);","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"aakanshanarain"},"content":"            setTelegramHandle(toCopy.telegramHandle);","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"EthanWong6362"},"content":"            setTags(toCopy.mods);","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"aakanshanarain"},"content":"            return CollectionUtil.isAnyNonNull(name, id, phone, email, gitHubUsername, telegramHandle, mods);","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"aakanshanarain"},"content":"        public void setStudentId(StudentId id) {","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"aakanshanarain"},"content":"            this.id \u003d id;","lastModifiedDate":"2021-10-06"},{"lineNumber":169,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"aakanshanarain"},"content":"        public Optional\u003cStudentId\u003e getStudentId() {","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"aakanshanarain"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"aakanshanarain"},"content":"        public void setGitHubUsername(GitHubUsername gitHubUsername) {","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"aakanshanarain"},"content":"            this.gitHubUsername \u003d gitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"aakanshanarain"},"content":"        public Optional\u003cGitHubUsername\u003e getGitHubUsername() {","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"aakanshanarain"},"content":"            return Optional.ofNullable(gitHubUsername);","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"aakanshanarain"},"content":"        public void setTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"aakanshanarain"},"content":"            this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"aakanshanarain"},"content":"        public Optional\u003cTelegramHandle\u003e getTelegramHandle() {","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"aakanshanarain"},"content":"            return Optional.ofNullable(telegramHandle);","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"EthanWong6362"},"content":"         * Sets {@code mods} to this object\u0027s {@code mods}.","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"EthanWong6362"},"content":"         * A defensive copy of {@code mods} is used internally.","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"EthanWong6362"},"content":"        public void setTags(Set\u003cMod\u003e mods) {","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"EthanWong6362"},"content":"            this.mods \u003d (mods !\u003d null) ? new HashSet\u003c\u003e(mods) : null;","lastModifiedDate":"2021-10-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"EthanWong6362"},"content":"         * Returns {@code Optional#empty()} if {@code mods} is null.","lastModifiedDate":"2021-10-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"EthanWong6362"},"content":"        public Optional\u003cSet\u003cMod\u003e\u003e getTags() {","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"EthanWong6362"},"content":"            return (mods !\u003d null) ? Optional.of(Collections.unmodifiableSet(mods)) : Optional.empty();","lastModifiedDate":"2021-10-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":240,"author":{"gitId":"aakanshanarain"},"content":"                    \u0026\u0026 getStudentId().equals(e.getStudentId())","lastModifiedDate":"2021-10-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"aakanshanarain"},"content":"                    \u0026\u0026 getGitHubUsername().equals(e.getGitHubUsername())","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"aakanshanarain"},"content":"                    \u0026\u0026 getTelegramHandle().equals(e.getTelegramHandle())","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"aakanshanarain":42,"charltonator":17,"ngjiayuan":1,"-":162,"EthanWong6362":26}},{"path":"src/main/java/seedu/modulink/logic/commands/EditGroupStatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aakanshanarain"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"aakanshanarain"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.Email;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.GitHubUsername;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.Name;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.Phone;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.StudentId;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.TelegramHandle;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"public class EditGroupStatusCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"    public static final String COMMAND_WORD \u003d \"editGroupStatus\";","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"            + \": Edits the group status of the specified module. \"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"EthanWong6362"},"content":"            + \"To change the grouping status to \u0027don\u0027t need group/not looking for group\u0027, \"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"EthanWong6362"},"content":"            + \"please leave the description blank\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"            + PREFIX_MOD + \"MOD \\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"EthanWong6362"},"content":"            + \"Example: \\n- \" + COMMAND_WORD + \" \" + PREFIX_MOD + \"CS2100 need group\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"EthanWong6362"},"content":"            + \"- \" + COMMAND_WORD + \" \" + PREFIX_MOD + \"CS2101 need member\\n\";","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"    public static final String MESSAGE_EDIT_GROUP_STATUS_SUCCESS \u003d \"Group status changed to: %1$s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"    public static final String MESSAGE_MODULE_DOES_NOT_EXIST \u003d \"The specified module does not exist on your profile. \"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"aakanshanarain"},"content":"            + \"To add the module to your profile, use the addMod command.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"    public static final String MESSAGE_NO_MODULE_SPECIFIED \u003d \"One module must be provided.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"    public static final String MESSAGE_MULTIPLE_MODULES_SPECIFIED \u003d \"Only one module must be provided.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"    public static final String MESSAGE_NO_STATUS_CHANGED \u003d \"The status specified is the same \"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"EthanWong6362"},"content":"            + \"as what currently exists for the specified module.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"aakanshanarain"},"content":"    private final EditCommand.EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"aakanshanarain"},"content":"     * Constructor.","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"aakanshanarain"},"content":"    public EditGroupStatusCommand(EditCommand.EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"aakanshanarain"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"aakanshanarain"},"content":"        this.editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"aakanshanarain"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"aakanshanarain"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"aakanshanarain"},"content":"        Person myProfile \u003d model.getProfile();","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"aakanshanarain"},"content":"        for (Mod mod : myProfile.getMods()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"aakanshanarain"},"content":"            for (Mod toEditModule : editPersonDescriptor.getTags().get()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"aakanshanarain"},"content":"                if (toEditModule.equals(mod)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"aakanshanarain"},"content":"                    if (toEditModule.equalsStatus(mod)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"aakanshanarain"},"content":"                        throw new CommandException(MESSAGE_NO_STATUS_CHANGED);","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"aakanshanarain"},"content":"                    }","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"aakanshanarain"},"content":"                }","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"aakanshanarain"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"aakanshanarain"},"content":"        Person editedProfile \u003d createEditedPerson(myProfile, editPersonDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"aakanshanarain"},"content":"        if (!myProfile.getMods().containsAll(editPersonDescriptor.getTags().get())) {","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"aakanshanarain"},"content":"            throw new CommandException(MESSAGE_MODULE_DOES_NOT_EXIST);","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"aakanshanarain"},"content":"        model.setPerson(myProfile, editedProfile);","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"aakanshanarain"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"aakanshanarain"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_GROUP_STATUS_SUCCESS,","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"aakanshanarain"},"content":"                editPersonDescriptor.getTags().get()));","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"aakanshanarain"},"content":"     * Creates and returns a {@code Person} with the details of {@code myProfile}","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"aakanshanarain"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"aakanshanarain"},"content":"    private static Person createEditedPerson(Person personToEdit,","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"aakanshanarain"},"content":"                                             EditCommand.EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"aakanshanarain"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"aakanshanarain"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"aakanshanarain"},"content":"        StudentId updatedId \u003d editPersonDescriptor.getStudentId().orElse(personToEdit.getStudentId());","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"aakanshanarain"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"aakanshanarain"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"aakanshanarain"},"content":"        GitHubUsername updatedGitHubUsername \u003d editPersonDescriptor.getGitHubUsername()","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"aakanshanarain"},"content":"                .orElse(personToEdit.getGithubUsername());","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"aakanshanarain"},"content":"        TelegramHandle updatedTelegramHandle \u003d editPersonDescriptor.getTelegramHandle()","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"aakanshanarain"},"content":"                .orElse(personToEdit.getTelegramHandle());","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"aakanshanarain"},"content":"        Set\u003cMod\u003e updatedMods \u003d new HashSet\u003c\u003e(Collections.emptySet());","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"aakanshanarain"},"content":"        for (Mod mod : personToEdit.getMods()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"aakanshanarain"},"content":"            if (!editPersonDescriptor.getTags().get().contains(mod)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"aakanshanarain"},"content":"                updatedMods.add(mod);","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"aakanshanarain"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"aakanshanarain"},"content":"        updatedMods.addAll(editPersonDescriptor.getTags().get());","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"aakanshanarain"},"content":"        return new Person(updatedName, updatedId, updatedPhone, updatedEmail,","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"aakanshanarain"},"content":"                updatedGitHubUsername, updatedTelegramHandle, false, updatedMods, true);","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"aakanshanarain"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"aakanshanarain"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"aakanshanarain"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"aakanshanarain"},"content":"            return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"aakanshanarain"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"aakanshanarain"},"content":"        if (!(other instanceof EditGroupStatusCommand)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"aakanshanarain"},"content":"            return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"aakanshanarain"},"content":"        // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"aakanshanarain"},"content":"        EditGroupStatusCommand egsc \u003d (EditGroupStatusCommand) other;","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"aakanshanarain"},"content":"        return editPersonDescriptor.equals(egsc.editPersonDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"aakanshanarain":123,"EthanWong6362":5}},{"path":"src/main/java/seedu/modulink/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"charltonator":2,"-":17}},{"path":"src/main/java/seedu/modulink/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"aakanshanarain"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.ModuleContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":" * Filters and lists all persons in address book who have a certain module (and optionally group status) as their tag.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Show user profiles filtered by module code \"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"            + \"and optionally by group status (need member or need group).\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"            + \"MODULE_CODE is required for filtering by group status. \"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"            + \"The filter will return the profiles with the specified group status of the specified module.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"            + \"Parameters: filter mod/MODULE_CODE [GROUP_STATUS]\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"            + \"Example: \" + COMMAND_WORD + \" mod/CS2030 need member\\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"    private final ModuleContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"    public FilterCommand(ModuleContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"aakanshanarain":41,"charltonator":4}},{"path":"src/main/java/seedu/modulink/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"charltonator":4,"-":38}},{"path":"src/main/java/seedu/modulink/logic/commands/FindIdCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":" * Finds and lists all persons in address book whose Student ID contains any of the argument keywords.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"public class FindIdCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"    public static final String COMMAND_WORD \u003d \"findId\";","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose Student ID matches \"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"            + \"the specified ID (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"            + \"Parameters: Student ID \\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"            + \"Example: \" + COMMAND_WORD + \" A1234567F\";","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"    private final StudentIdContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"    public FindIdCommand(StudentIdContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"charltonator"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"charltonator"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"charltonator"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"charltonator"},"content":"                || (other instanceof FindIdCommand // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"charltonator"},"content":"                \u0026\u0026 predicate.equals(((FindIdCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"charltonator":42}},{"path":"src/main/java/seedu/modulink/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charltonator":2,"-":19}},{"path":"src/main/java/seedu/modulink/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charltonator":3,"-":21}},{"path":"src/main/java/seedu/modulink/logic/commands/ListFavCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.IsFavouritePredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":" * Finds and lists all persons in ModuLink whose Student ID contains any of the argument keywords.","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"public class ListFavCommand extends Command {","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"EthanWong6362"},"content":"    public static final String COMMAND_WORD \u003d \"listFav\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"zacharylwy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all favourites\";","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all favourites of the current user \"","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"zacharylwy"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"zacharylwy"},"content":"        model.updateFilteredPersonList(new IsFavouritePredicate());","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"zacharylwy"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"zacharylwy"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"charltonator":3,"zacharylwy":24,"EthanWong6362":1}},{"path":"src/main/java/seedu/modulink/logic/commands/RemFavCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"ngjiayuan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ngjiayuan"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"ngjiayuan"},"content":" * Removes person whose student ID matches the user input from favourites.","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"ngjiayuan"},"content":" * ID matching is case insensitive.","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"ngjiayuan"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"ngjiayuan"},"content":"public class RemFavCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"EthanWong6362"},"content":"    public static final String COMMAND_WORD \u003d \"remFav\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"ngjiayuan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes a person as a favourite.\\n \"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"ngjiayuan"},"content":"            + \"Parameters: Student_ID\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"ngjiayuan"},"content":"            + \"Example: \" + COMMAND_WORD + \" A1234567X\";","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"EthanWong6362"},"content":"    public static final String MULTIPLE_ID_ERROR \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"EthanWong6362"},"content":"            \"You can only remove one person from your Favourites list at a time.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"ngjiayuan"},"content":"    private final String studentId;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"ngjiayuan"},"content":"    public RemFavCommand(String studentId) {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"ngjiayuan"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"ngjiayuan"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"ngjiayuan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"ngjiayuan"},"content":"        boolean noPersonFound \u003d true;","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"ngjiayuan"},"content":"        ObservableList\u003cPerson\u003e personList \u003d model.getPersonList();","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"ngjiayuan"},"content":"        // Look for the Person with the student ID, and if he is","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"ngjiayuan"},"content":"        // not a favourite, make him a favourite. If he already is,","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"ngjiayuan"},"content":"        // return a message saying he already is.","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"ngjiayuan"},"content":"        for (Person person : personList) {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"ngjiayuan"},"content":"            if (person.getStudentId().toString().equalsIgnoreCase(studentId)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"ngjiayuan"},"content":"                if (!person.getIsFavourite()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"ngjiayuan"},"content":"                    return new CommandResult(Messages.MESSAGE_PERSON_IS_NOT_FAVOURITE);","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"ngjiayuan"},"content":"                } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"ngjiayuan"},"content":"                    person.setFavouriteFalse();","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"ngjiayuan"},"content":"                    noPersonFound \u003d false;","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"ngjiayuan"},"content":"                }","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"ngjiayuan"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"ngjiayuan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"EthanWong6362"},"content":"        // included this so the list will be properly updated","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"EthanWong6362"},"content":"        model.refreshFilteredPersonList();","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"ngjiayuan"},"content":"        if (noPersonFound) {","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"ngjiayuan"},"content":"            return new CommandResult(Messages.MESSAGE_NO_SUCH_ID_FOUND);","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"ngjiayuan"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"ngjiayuan"},"content":"            return new CommandResult(","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"ngjiayuan"},"content":"                    String.format(Messages.MESSAGE_FAVOURITE_REMOVED, studentId));","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"ngjiayuan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"ngjiayuan"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"ngjiayuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"ngjiayuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"ngjiayuan"},"content":"                || (other instanceof RemFavCommand // instanceof handles nulls","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"ngjiayuan"},"content":"                \u0026\u0026 this.studentId.equals(((RemFavCommand) other).studentId));","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"ngjiayuan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"charltonator":5,"ngjiayuan":53,"EthanWong6362":8}},{"path":"src/main/java/seedu/modulink/logic/commands/RemoveModCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"EthanWong6362"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"EthanWong6362"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"EthanWong6362"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.GitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.StudentId;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.TelegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"EthanWong6362"},"content":"public class RemoveModCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"EthanWong6362"},"content":"    public static final String COMMAND_WORD \u003d \"remMod\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"EthanWong6362"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"EthanWong6362"},"content":"            + \": Removes a module from your module list. \"","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"EthanWong6362"},"content":"            + \"Remaining modules will not be affected.\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"EthanWong6362"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"EthanWong6362"},"content":"            + \"[\" + PREFIX_MOD + \"MOD]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"EthanWong6362"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"EthanWong6362"},"content":"            + \" \" + PREFIX_MOD + \"CS2103T\";","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"EthanWong6362"},"content":"    public static final String MESSAGE_ADD_MODULE_SUCCESS \u003d \"Removed module: %1$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"EthanWong6362"},"content":"    public static final String MESSAGE_NO_CHANGE \u003d","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"EthanWong6362"},"content":"            \"Please provide a module to remove with the \\\"mod/\\\" prefix.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"    public static final String MESSAGE_MODULE_DOES_NOT_EXIST \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"EthanWong6362"},"content":"            \"You can only remove existing modules in your module list.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"EthanWong6362"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"EthanWong6362"},"content":"     * Constructor for RemoveModCommand.","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"EthanWong6362"},"content":"    public RemoveModCommand(EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"EthanWong6362"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"EthanWong6362"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"EthanWong6362"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"EthanWong6362"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"EthanWong6362"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"ngjiayuan"},"content":"        Person myProfile \u003d model.getProfile();","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"ngjiayuan"},"content":"        if (!myProfile.getMods().containsAll(editPersonDescriptor.getTags().get())) {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"EthanWong6362"},"content":"            throw new CommandException(MESSAGE_MODULE_DOES_NOT_EXIST);","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"ngjiayuan"},"content":"        Person editedProfile \u003d createEditedPerson(myProfile, editPersonDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"ngjiayuan"},"content":"        model.setPerson(myProfile, editedProfile);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"EthanWong6362"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"EthanWong6362"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_MODULE_SUCCESS, editPersonDescriptor.getTags().get()));","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"EthanWong6362"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"EthanWong6362"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"EthanWong6362"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"EthanWong6362"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"EthanWong6362"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"EthanWong6362"},"content":"        StudentId updatedId \u003d editPersonDescriptor.getStudentId().orElse(personToEdit.getStudentId());","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"EthanWong6362"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"EthanWong6362"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"aakanshanarain"},"content":"        GitHubUsername updatedGitHubUsername \u003d editPersonDescriptor.getGitHubUsername()","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"aakanshanarain"},"content":"                .orElse(personToEdit.getGithubUsername());","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"aakanshanarain"},"content":"        TelegramHandle updatedTelegramHandle \u003d editPersonDescriptor.getTelegramHandle()","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"aakanshanarain"},"content":"                .orElse(personToEdit.getTelegramHandle());","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"EthanWong6362"},"content":"        Set\u003cMod\u003e updatedMods \u003d new HashSet\u003c\u003e(Collections.emptySet());","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"EthanWong6362"},"content":"        for (Mod mod : personToEdit.getMods()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"EthanWong6362"},"content":"            if (!editPersonDescriptor.getTags().get().contains(mod)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"EthanWong6362"},"content":"                updatedMods.add(mod);","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"EthanWong6362"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"aakanshanarain"},"content":"        return new Person(updatedName, updatedId, updatedPhone, updatedEmail,","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"aakanshanarain"},"content":"                updatedGitHubUsername, updatedTelegramHandle, false, updatedMods, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"EthanWong6362"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"EthanWong6362"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"EthanWong6362"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"EthanWong6362"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"EthanWong6362"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"EthanWong6362"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"EthanWong6362"},"content":"        if (!(other instanceof RemoveModCommand)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"EthanWong6362"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"EthanWong6362"},"content":"        // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"EthanWong6362"},"content":"        RemoveModCommand rmc \u003d (RemoveModCommand) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"EthanWong6362"},"content":"        return editPersonDescriptor.equals(rmc.editPersonDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"EthanWong6362"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"aakanshanarain":8,"charltonator":12,"ngjiayuan":4,"EthanWong6362":88}},{"path":"src/main/java/seedu/modulink/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands.exceptions;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"charltonator":1,"-":16}},{"path":"src/main/java/seedu/modulink/logic/parser/AddFavCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.AddFavCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":" * Parses input arguments and creates a new AddFavCommand object","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"public class AddFavCommandParser implements Parser\u003cAddFavCommand\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"     * Parses the given {@code String} of arguments in the context of the AddFavCommand","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"     * and returns a AddFavCommand object for execution.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"    public AddFavCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddFavCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"        if (nameKeywords.length \u003e 1) {","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"EthanWong6362"},"content":"            throw new ParseException(AddFavCommand.MULTIPLE_ID_ERROR);","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"        return new AddFavCommand(nameKeywords[0]);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"charltonator":32,"EthanWong6362":1}},{"path":"src/main/java/seedu/modulink/logic/parser/AddModCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"EthanWong6362"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"EthanWong6362"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"EthanWong6362"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.commons.util.StringUtil;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.AddModCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"EthanWong6362"},"content":"public class AddModCommandParser implements Parser\u003cAddModCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"EthanWong6362"},"content":"     * Parses the given {@code String} of arguments in the context of the AddModCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"EthanWong6362"},"content":"     * and returns an AddModCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"EthanWong6362"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"EthanWong6362"},"content":"    public AddModCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"EthanWong6362"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"EthanWong6362"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"EthanWong6362"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MOD);","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"EthanWong6362"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"EthanWong6362"},"content":"        if (trimmedArgs.isEmpty()","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"EthanWong6362"},"content":"            || StringUtil.countMatch(args, \u0027/\u0027) !\u003d 1","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"EthanWong6362"},"content":"            || parseModsToAdd(argMultimap.getAllValues(PREFIX_MOD)).isEmpty()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"EthanWong6362"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"EthanWong6362"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddModCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"EthanWong6362"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"EthanWong6362"},"content":"        parseModsToAdd(argMultimap.getAllValues(PREFIX_MOD)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"EthanWong6362"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"EthanWong6362"},"content":"            throw new ParseException(AddModCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"EthanWong6362"},"content":"        return new AddModCommand(editPersonDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"EthanWong6362"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"EthanWong6362"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"EthanWong6362"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"EthanWong6362"},"content":"    private Optional\u003cSet\u003cMod\u003e\u003e parseModsToAdd(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"EthanWong6362"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"EthanWong6362"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"EthanWong6362"},"content":"            throw new ParseException(AddModCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"EthanWong6362"},"content":"        Collection\u003cString\u003e tagSet;","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"EthanWong6362"},"content":"        if (tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\")) {","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"EthanWong6362"},"content":"            throw new ParseException(AddModCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"EthanWong6362"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"EthanWong6362"},"content":"            return Optional.of(ParserUtil.parseTags(tags));","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"EthanWong6362"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"charltonator":7,"EthanWong6362":59}},{"path":"src/main/java/seedu/modulink/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.AddFavCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.AddModCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.CreateCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.logic.commands.EditGroupStatusCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.FindCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.FindIdCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.ListCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.ListFavCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.RemFavCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.RemoveModCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"charltonator"},"content":"        case AddFavCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"charltonator"},"content":"            return new AddFavCommandParser().parse(arguments);","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"EthanWong6362"},"content":"        case AddModCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"EthanWong6362"},"content":"            return new AddModCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"ngjiayuan"},"content":"        case CreateCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"ngjiayuan"},"content":"            return new CreateCommandParser().parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"charltonator"},"content":"        case FindIdCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"charltonator"},"content":"            return new FindIdCommandParser().parse(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"zacharylwy"},"content":"        case ListFavCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"zacharylwy"},"content":"            return new ListFavCommand();","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"ngjiayuan"},"content":"        case RemFavCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"ngjiayuan"},"content":"            return new RemFavCommandParser().parse(arguments);","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"EthanWong6362"},"content":"        case RemoveModCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"EthanWong6362"},"content":"            return new RemoveModCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"aakanshanarain"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"aakanshanarain"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"aakanshanarain"},"content":"        case EditGroupStatusCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"aakanshanarain"},"content":"            return new EditGroupStatusCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aakanshanarain":7,"charltonator":25,"ngjiayuan":5,"-":57,"zacharylwy":3,"EthanWong6362":6}},{"path":"src/main/java/seedu/modulink/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"charltonator":1,"-":59}},{"path":"src/main/java/seedu/modulink/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"charltonator":1,"-":147}},{"path":"src/main/java/seedu/modulink/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"id/\");","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"    public static final Prefix PREFIX_GITHUB_USERNAME \u003d new Prefix(\"github/\");","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"    public static final Prefix PREFIX_TELEGRAM_HANDLE \u003d new Prefix(\"tele/\");","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"EthanWong6362"},"content":"    public static final Prefix PREFIX_MOD \u003d new Prefix(\"mod/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"aakanshanarain":3,"charltonator":1,"-":11,"EthanWong6362":1}},{"path":"src/main/java/seedu/modulink/logic/parser/CreateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.commons.util.StringUtil;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.CreateCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.GitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.StudentId;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.TelegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"ngjiayuan"},"content":"public class CreateCommandParser implements Parser\u003cCreateCommand\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"ngjiayuan"},"content":"    public CreateCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"ngjiayuan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ID, PREFIX_PHONE,","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"                        PREFIX_EMAIL, PREFIX_GITHUB_USERNAME, PREFIX_TELEGRAM_HANDLE, PREFIX_MOD);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"zacharylwy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ID, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"EthanWong6362"},"content":"                || !argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"EthanWong6362"},"content":"                || numberOfValidPrefixes(argMultimap) !\u003d StringUtil.countMatch(args, \u0027/\u0027)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"ngjiayuan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"aakanshanarain"},"content":"        StudentId id \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).orElse(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"aakanshanarain"},"content":"        GitHubUsername gitHubUsername \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"aakanshanarain"},"content":"                ParserUtil.parseGithubUsername(argMultimap.getValue(PREFIX_GITHUB_USERNAME).orElse(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"aakanshanarain"},"content":"        TelegramHandle telegramHandle \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"aakanshanarain"},"content":"                ParserUtil.parseTelegramHandle(argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).orElse(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"EthanWong6362"},"content":"        Set\u003cMod\u003e modList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_MOD));","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"aakanshanarain"},"content":"        Person person \u003d new Person(name, id, phone, email, gitHubUsername,","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"aakanshanarain"},"content":"                telegramHandle, false, modList, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"ngjiayuan"},"content":"        return new CreateCommand(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"EthanWong6362"},"content":"     * Checks how many valid prefixes are present in args.","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"EthanWong6362"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"EthanWong6362"},"content":"     * @param argMultimap tokenized list of arguments.","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"EthanWong6362"},"content":"     * @return number of provided prefixes.","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"EthanWong6362"},"content":"    private int numberOfValidPrefixes(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"EthanWong6362"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"EthanWong6362"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"EthanWong6362"},"content":"            i++;","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"EthanWong6362"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"EthanWong6362"},"content":"            i++;","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"EthanWong6362"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"EthanWong6362"},"content":"            i++;","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"EthanWong6362"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"EthanWong6362"},"content":"            i++;","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"EthanWong6362"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB_USERNAME).isPresent()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"EthanWong6362"},"content":"            i++;","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"EthanWong6362"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).isPresent()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"EthanWong6362"},"content":"            i++;","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"EthanWong6362"},"content":"        i +\u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_MOD)).size();","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"EthanWong6362"},"content":"        return i;","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"aakanshanarain":12,"charltonator":15,"ngjiayuan":6,"-":35,"zacharylwy":1,"EthanWong6362":35}},{"path":"src/main/java/seedu/modulink/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"charltonator":5,"-":24}},{"path":"src/main/java/seedu/modulink/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.commons.util.StringUtil;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"ngjiayuan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ID, PREFIX_PHONE,","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"EthanWong6362"},"content":"                        PREFIX_EMAIL, PREFIX_GITHUB_USERNAME, PREFIX_TELEGRAM_HANDLE,","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"EthanWong6362"},"content":"                        PREFIX_MOD);","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"EthanWong6362"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"EthanWong6362"},"content":"        String preamble \u003d argMultimap.getPreamble();","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"EthanWong6362"},"content":"        if (trimmedArgs.isEmpty()","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"EthanWong6362"},"content":"            || !preamble.isEmpty()","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"EthanWong6362"},"content":"            || numberOfValidPrefixes(argMultimap) !\u003d StringUtil.countMatch(args, \u0027/\u0027)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"EthanWong6362"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"EthanWong6362"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"aakanshanarain"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"aakanshanarain"},"content":"            editPersonDescriptor.setStudentId(ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"aakanshanarain"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB_USERNAME).isPresent()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"aakanshanarain"},"content":"            editPersonDescriptor.setGitHubUsername(ParserUtil.parseGithubUsername","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"aakanshanarain"},"content":"                    (argMultimap.getValue(PREFIX_GITHUB_USERNAME).get()));","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"aakanshanarain"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).isPresent()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"aakanshanarain"},"content":"            editPersonDescriptor.setTelegramHandle(ParserUtil.parseTelegramHandle(","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"aakanshanarain"},"content":"                    argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).get()));","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"EthanWong6362"},"content":"        if (parseModsToEdit(argMultimap.getAllValues(PREFIX_MOD)).isPresent()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"EthanWong6362"},"content":"            throw new ParseException(","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"EthanWong6362"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"EthanWong6362"},"content":"        return new EditCommand(editPersonDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"EthanWong6362"},"content":"     * Checks how many valid prefixes are present in args.","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"EthanWong6362"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"EthanWong6362"},"content":"     * @param argMultimap tokenized list of arguments.","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"EthanWong6362"},"content":"     * @return number of provided prefixes.","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"EthanWong6362"},"content":"    private int numberOfValidPrefixes(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"EthanWong6362"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"EthanWong6362"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"EthanWong6362"},"content":"            i++;","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"EthanWong6362"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"EthanWong6362"},"content":"            i++;","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"EthanWong6362"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"EthanWong6362"},"content":"            i++;","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"EthanWong6362"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"EthanWong6362"},"content":"            i++;","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"EthanWong6362"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB_USERNAME).isPresent()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"EthanWong6362"},"content":"            i++;","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"EthanWong6362"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).isPresent()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"EthanWong6362"},"content":"            i++;","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"EthanWong6362"},"content":"        return i;","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"EthanWong6362"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"EthanWong6362"},"content":"     * Only used for error checking.","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":119,"author":{"gitId":"EthanWong6362"},"content":"    private Optional\u003cSet\u003cMod\u003e\u003e parseModsToEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"aakanshanarain":14,"charltonator":10,"ngjiayuan":1,"-":56,"EthanWong6362":48}},{"path":"src/main/java/seedu/modulink/logic/parser/EditGroupStatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aakanshanarain"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"aakanshanarain"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.commons.util.StringUtil;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.logic.commands.EditCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.logic.commands.EditGroupStatusCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"EthanWong6362"},"content":"public class EditGroupStatusCommandParser implements Parser\u003cEditGroupStatusCommand\u003e {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"     * Parses the given {@code String} of arguments in the context of the EditGroupStatusCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"     * and returns an EditGroupStatusCommand object for execution.","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"    public EditGroupStatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MOD);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"EthanWong6362"},"content":"        if (trimmedArgs.isEmpty()","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"EthanWong6362"},"content":"            || StringUtil.countMatch(args, \u0027/\u0027) !\u003d 1) {","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditGroupStatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"aakanshanarain"},"content":"        parseModsToAdd(argMultimap.getAllValues(PREFIX_MOD)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"            throw new ParseException(EditGroupStatusCommand.MESSAGE_NO_MODULE_SPECIFIED);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"        return new EditGroupStatusCommand(editPersonDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"aakanshanarain"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"aakanshanarain"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"aakanshanarain"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"aakanshanarain"},"content":"    private Optional\u003cSet\u003cMod\u003e\u003e parseModsToAdd(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"aakanshanarain"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"aakanshanarain"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"aakanshanarain"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"aakanshanarain"},"content":"        if (tags.size() \u003e 1) {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"aakanshanarain"},"content":"            throw new ParseException(EditGroupStatusCommand.MESSAGE_MULTIPLE_MODULES_SPECIFIED);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"EthanWong6362"},"content":"        if (tags.contains(\"\")) {","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"EthanWong6362"},"content":"            throw new ParseException(EditGroupStatusCommand.MESSAGE_NO_MODULE_SPECIFIED);","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"EthanWong6362"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"EthanWong6362"},"content":"            return Optional.of(ParserUtil.parseTags(tags));","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"aakanshanarain":59,"EthanWong6362":9}},{"path":"src/main/java/seedu/modulink/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.commons.util.StringUtil;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.ModuleContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"    private static final String MESSAGE_MORE_THAN_ONE_PARAMETER_FORMAT \u003d \"Only one module can be specified.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MOD);","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MOD)","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"EthanWong6362"},"content":"                || !argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"EthanWong6362"},"content":"                || StringUtil.countMatch(args, \u0027/\u0027) !\u003d 1) {","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"        Set\u003cMod\u003e modList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_MOD));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"        if (modList.size() \u003e 1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"aakanshanarain"},"content":"            throw new ParseException(String.format(MESSAGE_MORE_THAN_ONE_PARAMETER_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"                    FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"        return new FilterCommand(new ModuleContainsKeywordsPredicate(modList));","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"aakanshanarain"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"aakanshanarain"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"aakanshanarain":41,"charltonator":7,"EthanWong6362":3}},{"path":"src/main/java/seedu/modulink/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.FindCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"charltonator":5,"-":28}},{"path":"src/main/java/seedu/modulink/logic/parser/FindIdCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.FindIdCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":" * Parses input arguments and creates a new FindIdCommand object","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"public class FindIdCommandParser implements Parser\u003cFindIdCommand\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"     * Parses the given {@code String} of arguments in the context of the FindIdCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"     * and returns a FindIdCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"    public FindIdCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindIdCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"        return new FindIdCommand(new StudentIdContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"aakanshanarain":3,"charltonator":31}},{"path":"src/main/java/seedu/modulink/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"charltonator":3,"-":13}},{"path":"src/main/java/seedu/modulink/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.util.StringUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.GitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.StudentId;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.TelegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Status;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"aakanshanarain"},"content":"     * Parses a {@code String gitHubUsername} into a {@code GitHubUsername}.","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"aakanshanarain"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"aakanshanarain"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"aakanshanarain"},"content":"     * @throws ParseException if the given {@code gitHubUsername} is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"aakanshanarain"},"content":"    public static GitHubUsername parseGithubUsername(String gitHubUsername) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"aakanshanarain"},"content":"        if (gitHubUsername !\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"aakanshanarain"},"content":"            String trimmedUsername \u003d gitHubUsername.trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"aakanshanarain"},"content":"            if (!GitHubUsername.isValidUsername(gitHubUsername)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"aakanshanarain"},"content":"                throw new ParseException(GitHubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"aakanshanarain"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"aakanshanarain"},"content":"            return new GitHubUsername(trimmedUsername);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"aakanshanarain"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"aakanshanarain"},"content":"            return new GitHubUsername(null);","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"EthanWong6362"},"content":"    public static Mod parseTag(String tag) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"EthanWong6362"},"content":"        if (!Mod.isValidTagName(trimmedTag)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"EthanWong6362"},"content":"            throw new ParseException(Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"EthanWong6362"},"content":"        return new Mod(trimmedTag);","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"EthanWong6362"},"content":"    public static Set\u003cMod\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":125,"author":{"gitId":"EthanWong6362"},"content":"        final Set\u003cMod\u003e modSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"EthanWong6362"},"content":"            modSet.add(parseTag(tagName));","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"EthanWong6362"},"content":"        return modSet;","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"aakanshanarain"},"content":"     * Parses a {@code String studentId} into a {@code StudentId}.","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"aakanshanarain"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"aakanshanarain"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"aakanshanarain"},"content":"     * @throws ParseException if the given {@code StudentId} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"aakanshanarain"},"content":"    public static StudentId parseStudentId(String studentId) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"aakanshanarain"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"aakanshanarain"},"content":"        String trimmedId \u003d studentId.trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"aakanshanarain"},"content":"        if (!StudentId.isValidId(studentId)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"aakanshanarain"},"content":"            throw new ParseException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"aakanshanarain"},"content":"        return new StudentId(trimmedId);","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"aakanshanarain"},"content":"     * Parses a {@code String status} into a {@code Status}.","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"aakanshanarain"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"aakanshanarain"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"aakanshanarain"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"aakanshanarain"},"content":"    public static Status parseGroupStatus(String status) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"aakanshanarain"},"content":"        if (status !\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"aakanshanarain"},"content":"            String trimmedStatus \u003d status.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"aakanshanarain"},"content":"            if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"aakanshanarain"},"content":"                throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"aakanshanarain"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"aakanshanarain"},"content":"            return Status.parseStatusForFilter(trimmedStatus);","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"aakanshanarain"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"aakanshanarain"},"content":"            return null;","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"aakanshanarain"},"content":"     * Parses a {@code String telegramHandle} into a {@code TelegramHandle}.","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"aakanshanarain"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"aakanshanarain"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"aakanshanarain"},"content":"     * @throws ParseException if the given {@code telegramHandle} is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"aakanshanarain"},"content":"    public static TelegramHandle parseTelegramHandle(String telegramHandle) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"aakanshanarain"},"content":"        if (telegramHandle !\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"aakanshanarain"},"content":"            String trimmedHandle \u003d telegramHandle.trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"aakanshanarain"},"content":"            if (trimmedHandle.startsWith(\"@\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"aakanshanarain"},"content":"                trimmedHandle \u003d trimmedHandle.substring(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"aakanshanarain"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"aakanshanarain"},"content":"            if (!TelegramHandle.isValidHandle(telegramHandle)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"aakanshanarain"},"content":"                throw new ParseException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"aakanshanarain"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"aakanshanarain"},"content":"            return new TelegramHandle(trimmedHandle);","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"aakanshanarain"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"aakanshanarain"},"content":"            return new TelegramHandle(null);","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"aakanshanarain":76,"charltonator":10,"ngjiayuan":1,"-":92,"EthanWong6362":8}},{"path":"src/main/java/seedu/modulink/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"charltonator":1,"-":38}},{"path":"src/main/java/seedu/modulink/logic/parser/RemFavCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.RemFavCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"ngjiayuan"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"ngjiayuan"},"content":" * Parses input arguments and creates a new AddFavCommand object","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"ngjiayuan"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"ngjiayuan"},"content":"public class RemFavCommandParser implements Parser\u003cRemFavCommand\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"ngjiayuan"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"ngjiayuan"},"content":"     * Parses the given {@code String} of arguments in the context of the AddFavCommand","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"ngjiayuan"},"content":"     * and returns a AddFavCommand object for execution.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"ngjiayuan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"ngjiayuan"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"ngjiayuan"},"content":"    public RemFavCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"ngjiayuan"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"ngjiayuan"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"ngjiayuan"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"ngjiayuan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemFavCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"ngjiayuan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"ngjiayuan"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"ngjiayuan"},"content":"        if (nameKeywords.length \u003e 1) {","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"EthanWong6362"},"content":"            throw new ParseException(RemFavCommand.MULTIPLE_ID_ERROR);","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"ngjiayuan"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"ngjiayuan"},"content":"        return new RemFavCommand(nameKeywords[0]);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"ngjiayuan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"charltonator":4,"ngjiayuan":28,"EthanWong6362":1}},{"path":"src/main/java/seedu/modulink/logic/parser/RemoveModCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"EthanWong6362"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"EthanWong6362"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"EthanWong6362"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.commons.util.StringUtil;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.RemoveModCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"EthanWong6362"},"content":"public class RemoveModCommandParser implements Parser\u003cRemoveModCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"EthanWong6362"},"content":"     * Parses the given {@code String} of arguments in the context of the AddModCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"EthanWong6362"},"content":"     * and returns an AddModCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"EthanWong6362"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"EthanWong6362"},"content":"    public RemoveModCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"EthanWong6362"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"EthanWong6362"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"EthanWong6362"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MOD);","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"EthanWong6362"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"EthanWong6362"},"content":"        if (trimmedArgs.isEmpty()","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"EthanWong6362"},"content":"                || StringUtil.countMatch(args, \u0027/\u0027) !\u003d 1","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"EthanWong6362"},"content":"                || parseModsToRemove(argMultimap.getAllValues(PREFIX_MOD)).isEmpty()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"EthanWong6362"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"EthanWong6362"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveModCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"EthanWong6362"},"content":"        parseModsToRemove(argMultimap.getAllValues(PREFIX_MOD)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"EthanWong6362"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"EthanWong6362"},"content":"            throw new ParseException(RemoveModCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"EthanWong6362"},"content":"        return new RemoveModCommand(editPersonDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"EthanWong6362"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"EthanWong6362"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"EthanWong6362"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"EthanWong6362"},"content":"    private Optional\u003cSet\u003cMod\u003e\u003e parseModsToRemove(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"EthanWong6362"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"EthanWong6362"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"EthanWong6362"},"content":"            throw new ParseException(RemoveModCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"EthanWong6362"},"content":"        Collection\u003cString\u003e tagSet;","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"EthanWong6362"},"content":"        if (tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\")) {","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"EthanWong6362"},"content":"            throw new ParseException(RemoveModCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"EthanWong6362"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"EthanWong6362"},"content":"            return Optional.of(ParserUtil.parseTags(tags));","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"EthanWong6362"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"charltonator":7,"EthanWong6362":60}},{"path":"src/main/java/seedu/modulink/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser.exceptions;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"charltonator":2,"-":15}},{"path":"src/main/java/seedu/modulink/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.UniquePersonList;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"aakanshanarain"},"content":"     * Returns true if a person with the same Student ID as {@code person} exists in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"aakanshanarain"},"content":"    public boolean hasStudentId(Person personToCompare) {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"aakanshanarain"},"content":"        requireNonNull(personToCompare);","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"aakanshanarain"},"content":"        for (Person persons : persons) {","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"aakanshanarain"},"content":"            if (persons.getStudentId().equals(personToCompare.getStudentId())) {","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"aakanshanarain"},"content":"                return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"aakanshanarain"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"aakanshanarain"},"content":"        return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"EthanWong6362"},"content":"     * Returns true if a person other than the profile","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"EthanWong6362"},"content":"     * with the same Student ID as {@code person} exists in the address book.","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"EthanWong6362"},"content":"    public boolean hasStudentIdNotProfile(Person personToCompare) {","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"EthanWong6362"},"content":"        requireNonNull(personToCompare);","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"EthanWong6362"},"content":"        for (Person persons : persons) {","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"EthanWong6362"},"content":"            if (persons.getStudentId().equals(personToCompare.getStudentId())","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"EthanWong6362"},"content":"                \u0026\u0026 !persons.getIsMyProfile()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"EthanWong6362"},"content":"                return true;","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"EthanWong6362"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"EthanWong6362"},"content":"        return false;","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"ngjiayuan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"ngjiayuan"},"content":"     * Adds a person to the first index of the address book.","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"ngjiayuan"},"content":"     * This person is the user profile.","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"ngjiayuan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"ngjiayuan"},"content":"    public void addPersonToTop(Person p) {","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"ngjiayuan"},"content":"        persons.add(0, p);","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aakanshanarain":13,"charltonator":3,"ngjiayuan":8,"-":117,"EthanWong6362":15}},{"path":"src/main/java/seedu/modulink/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.GuiSettings;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"EthanWong6362"},"content":"     * Returns true if a person with the same Student ID as {@code person} exists in the address book.","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"aakanshanarain"},"content":"    boolean hasStudentId(Person person);","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"EthanWong6362"},"content":"     * Returns true if a person other than the profile","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"EthanWong6362"},"content":"     * with the same Student ID as {@code person} exists in the address book.","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"EthanWong6362"},"content":"    boolean hasStudentIdNotProfile(Person person);","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"ngjiayuan"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"ngjiayuan"},"content":"     * Adds a user profile.","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"ngjiayuan"},"content":"    void addProfile(Person person);","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"EthanWong6362"},"content":"     * Returns the user\u0027s profile marked with isMyProfile.","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"EthanWong6362"},"content":"    Person getProfile();","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"EthanWong6362"},"content":"    /** Refreshes current filtered person list to show any changes */","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"EthanWong6362"},"content":"    void refreshFilteredPersonList();","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"ngjiayuan"},"content":"    /** Returns an unmodifiable view of the unfiltered person list */","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"ngjiayuan"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"aakanshanarain":2,"charltonator":3,"ngjiayuan":6,"-":86,"EthanWong6362":17}},{"path":"src/main/java/seedu/modulink/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.GuiSettings;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"aakanshanarain"},"content":"    public boolean hasStudentId(Person person) {","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"aakanshanarain"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"aakanshanarain"},"content":"        return addressBook.hasStudentId(person);","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"EthanWong6362"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"EthanWong6362"},"content":"    public boolean hasStudentIdNotProfile(Person person) {","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"EthanWong6362"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"EthanWong6362"},"content":"        return addressBook.hasStudentIdNotProfile(person);","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"ngjiayuan"},"content":"    public void addProfile(Person person) {","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"ngjiayuan"},"content":"        addressBook.addPersonToTop(person);","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"EthanWong6362"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"EthanWong6362"},"content":"    public Person getProfile() {","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"EthanWong6362"},"content":"        Person profile \u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"EthanWong6362"},"content":"        for (Person p : this.addressBook.getPersonList()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"EthanWong6362"},"content":"            if (p.getIsMyProfile()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"EthanWong6362"},"content":"                profile \u003d p;","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"EthanWong6362"},"content":"                break;","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"EthanWong6362"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"EthanWong6362"},"content":"        return profile;","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":162,"author":{"gitId":"EthanWong6362"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":163,"author":{"gitId":"EthanWong6362"},"content":"    public void refreshFilteredPersonList() {","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"EthanWong6362"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"EthanWong6362"},"content":"        Predicate\u003cPerson\u003e predicate \u003d (Predicate\u003cPerson\u003e) filteredPersons.getPredicate();","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"EthanWong6362"},"content":"        Predicate\u003cPerson\u003e updatePredicate \u003d unused -\u003e false;","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"EthanWong6362"},"content":"        updateFilteredPersonList(updatePredicate);","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"EthanWong6362"},"content":"        updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"ngjiayuan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"ngjiayuan"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"ngjiayuan"},"content":"        return this.addressBook.getPersonList();","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aakanshanarain":6,"charltonator":5,"ngjiayuan":7,"-":150,"EthanWong6362":27}},{"path":"src/main/java/seedu/modulink/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":2,"-":15}},{"path":"src/main/java/seedu/modulink/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.GuiSettings;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"charltonator":2,"-":14}},{"path":"src/main/java/seedu/modulink/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.GuiSettings;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"EthanWong6362"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"modulink.json\");","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":2,"-":84,"EthanWong6362":1}},{"path":"src/main/java/seedu/modulink/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charltonator":2,"-":69}},{"path":"src/main/java/seedu/modulink/model/person/GitHubUsername.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aakanshanarain"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"public class GitHubUsername {","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"            \"GitHub username should start with an alphanumeric character, \"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"                    + \"can only contain alphanumeric characters and hyphens, and must not contain any spaces.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"EthanWong6362"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Za-z0-9]+[A-Za-z0-9_-]+$\";","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"    public final String value;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"     * Constructs an {@code GitHub username}.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"     * @param username A valid GitHub username.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"    public GitHubUsername(String username) {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"        checkArgument(isValidUsername(username), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"        value \u003d username;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"     * Returns true if a given string is a valid GitHub username.","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"    public static boolean isValidUsername(String test) {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"            return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"    public String toString() {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"        return value;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"                || (other instanceof GitHubUsername // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"                \u0026\u0026 value.equals(((GitHubUsername) other).value)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"aakanshanarain"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"aakanshanarain"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"aakanshanarain"},"content":"    public boolean isNull() {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"aakanshanarain"},"content":"        return value \u003d\u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"aakanshanarain":53,"EthanWong6362":1}},{"path":"src/main/java/seedu/modulink/model/person/IsFavouritePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":" * Tests that a {@code Person}\u0027s {@code isFavourite} is true.","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"public class IsFavouritePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"        return person.getIsFavourite();","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"charltonator":1,"zacharylwy":13}},{"path":"src/main/java/seedu/modulink/model/person/ModuleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"aakanshanarain"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Status;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":" * Tests that a {@code Person}\u0027s {@code Module} and optionally {@code Status} matches any of the keywords given.","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"public class ModuleContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"    private final Set\u003cMod\u003e mods;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"     * Constructor for the ModuleContainsKeywordsPredicate class.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"     * @param mods Set of modules.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"    public ModuleContainsKeywordsPredicate(Set\u003cMod\u003e mods) {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"        requireNonNull(mods);","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"        this.mods \u003d mods;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"        boolean doesMatchMod \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"EthanWong6362"},"content":"        if (person.getIsMyProfile()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"EthanWong6362"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"        for (Mod mod : person.getMods()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"            for (Mod module : mods) {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"                if (module.modName.equalsIgnoreCase(mod.modName)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"aakanshanarain"},"content":"                    if (!module.status.equals(Status.NONE)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"                        if (mod.status.equals(module.status)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"                            doesMatchMod \u003d true;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"                            break;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"                        }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"                    } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"                        doesMatchMod \u003d true;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"aakanshanarain"},"content":"                        break;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"                    }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"aakanshanarain"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"aakanshanarain"},"content":"        return doesMatchMod;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"aakanshanarain"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"aakanshanarain"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"aakanshanarain"},"content":"                || (other instanceof ModuleContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"aakanshanarain"},"content":"                \u0026\u0026 mods.equals(((ModuleContainsKeywordsPredicate) other).mods)); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"aakanshanarain":52,"charltonator":3,"EthanWong6362":3}},{"path":"src/main/java/seedu/modulink/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charltonator":2,"-":57}},{"path":"src/main/java/seedu/modulink/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.util.StringUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"charltonator":2,"-":29}},{"path":"src/main/java/seedu/modulink/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"ngjiayuan"},"content":"    private static final Person placeholder \u003d new Person(new Name(\"Your name\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"ngjiayuan"},"content":"            new StudentId(\"A0000000A\"), new Phone(\"81234567\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"ngjiayuan"},"content":"            new Email(\"youremail@email.com\"), new GitHubUsername(\"your_github_user\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"ngjiayuan"},"content":"            new TelegramHandle(\"yourtelehandle\"), false,","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"ngjiayuan"},"content":"            new HashSet\u003c\u003e(), true);","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"    private final StudentId id;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"    private final GitHubUsername gitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"    private final TelegramHandle telegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"    private boolean isFavourite;","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"EthanWong6362"},"content":"    private final Set\u003cMod\u003e mods \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"ngjiayuan"},"content":"    private final boolean isMyProfile;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"    public Person(Name name, StudentId id, Phone phone, Email email, GitHubUsername gitHubUsername,","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"                  TelegramHandle telegramHandle, boolean isFavourite, Set\u003cMod\u003e mods, boolean isMyProfile) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"        requireAllNonNull(name, id, phone, email, mods);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"        this.gitHubUsername \u003d gitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"aakanshanarain"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"EthanWong6362"},"content":"        this.isFavourite \u003d isFavourite;","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"EthanWong6362"},"content":"        this.mods.addAll(mods);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"ngjiayuan"},"content":"        this.isMyProfile \u003d isMyProfile;","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"ngjiayuan"},"content":"    public static Person getPlaceholder() {","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"ngjiayuan"},"content":"        return placeholder;","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"aakanshanarain"},"content":"    public StudentId getStudentId() {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"aakanshanarain"},"content":"        return id;","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"aakanshanarain"},"content":"    public GitHubUsername getGithubUsername() {","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"aakanshanarain"},"content":"        return gitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"aakanshanarain"},"content":"    public TelegramHandle getTelegramHandle() {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"aakanshanarain"},"content":"        return telegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"EthanWong6362"},"content":"    public Set\u003cMod\u003e getMods() {","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"EthanWong6362"},"content":"        return Collections.unmodifiableSet(mods);","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"ngjiayuan"},"content":"    public boolean getIsMyProfile() {","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"ngjiayuan"},"content":"        return isMyProfile;","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"EthanWong6362"},"content":"    public boolean getIsFavourite() {","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"EthanWong6362"},"content":"        return isFavourite;","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"ngjiayuan"},"content":"    public void setFavouriteTrue() {","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"charltonator"},"content":"        this.isFavourite \u003d true;","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"ngjiayuan"},"content":"    public void setFavouriteFalse() {","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"ngjiayuan"},"content":"        this.isFavourite \u003d false;","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"EthanWong6362"},"content":"        boolean sameMods \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"EthanWong6362"},"content":"        for (Mod mod : otherPerson.getMods()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"EthanWong6362"},"content":"            sameMods \u0026\u003d getMods().contains(mod);","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":142,"author":{"gitId":"aakanshanarain"},"content":"                \u0026\u0026 otherPerson.getGithubUsername().equals(getGithubUsername())","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"aakanshanarain"},"content":"                \u0026\u0026 otherPerson.getTelegramHandle().equals(getTelegramHandle())","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"EthanWong6362"},"content":"                \u0026\u0026 sameMods","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"EthanWong6362"},"content":"                \u0026\u0026 otherPerson.getIsFavourite() \u003d\u003d getIsFavourite()","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"EthanWong6362"},"content":"                \u0026\u0026 otherPerson.getStudentId().equals(getStudentId());","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"aakanshanarain"},"content":"        return Objects.hash(name, phone, email, gitHubUsername, mods);","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"aakanshanarain"},"content":"                .append(\"; Student ID: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"aakanshanarain"},"content":"                .append(getStudentId())","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":164,"author":{"gitId":"EthanWong6362"},"content":"                .append(getEmail())","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"aakanshanarain"},"content":"                .append(\"; GitHub username: \")","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"aakanshanarain"},"content":"                .append(getGithubUsername())","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"aakanshanarain"},"content":"                .append(\"; Telegram handle: \")","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"aakanshanarain"},"content":"                .append(getTelegramHandle())","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"EthanWong6362"},"content":"                .append(\"; isFavourite: \")","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"EthanWong6362"},"content":"                .append(getIsFavourite());","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":172,"author":{"gitId":"EthanWong6362"},"content":"        Set\u003cMod\u003e mods \u003d getMods();","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"EthanWong6362"},"content":"        if (!mods.isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":175,"author":{"gitId":"EthanWong6362"},"content":"            mods.forEach(builder::append);","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aakanshanarain":30,"charltonator":7,"ngjiayuan":20,"-":99,"EthanWong6362":24}},{"path":"src/main/java/seedu/modulink/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charltonator":2,"-":51}},{"path":"src/main/java/seedu/modulink/model/person/StudentId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"aakanshanarain"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"public class StudentId {","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"            \"Student ID should start with A, have 7 numbers and end with a letter\";","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[aA]\\\\d{7}[a-zA-z]$\";","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"    public final String value;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"     * Constructs an {@code Student ID}.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"     * @param studentId A valid student ID.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"    public StudentId(String studentId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"        checkArgument(isValidId(studentId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"        value \u003d studentId.toUpperCase();","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"     * Returns true if a given string is a valid student ID.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"        return value;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"                || (other instanceof StudentId // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"                \u0026\u0026 value.equals(((StudentId) other).value)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"aakanshanarain":47,"charltonator":2}},{"path":"src/main/java/seedu/modulink/model/person/StudentIdContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.util.StringUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":" * Tests that a {@code Person}\u0027s {@code StudentId} matches any of the keywords given.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"public class StudentIdContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"    public StudentIdContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getStudentId().value, keyword));","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"                || (other instanceof StudentIdContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"                \u0026\u0026 keywords.equals(((StudentIdContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"aakanshanarain":1,"charltonator":30}},{"path":"src/main/java/seedu/modulink/model/person/TelegramHandle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aakanshanarain"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"public class TelegramHandle {","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"            \"Telegram handle can only have alphanumeric and hyphen characters, and should not contain any spaces. \"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"                    + \"The handle can either start with \u0027@\u0027, or just the handle itself.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Za-z0-9_@][A-Za-z0-9_]+$\";","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"    public final String value;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"     * Constructs an {@code TelegramHandle}.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"     * @param handle A valid Telegram handle.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"    public TelegramHandle(String handle) {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"        checkArgument(isValidHandle(handle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"        value \u003d handle;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"     * Returns true if a given string is a valid Telegram handle.","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"    public static boolean isValidHandle(String test) {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"            return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"    public String toString() {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"        return value;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"                || (other instanceof TelegramHandle // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"                \u0026\u0026 value.equals(((TelegramHandle) other).value)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"aakanshanarain"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"aakanshanarain"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"aakanshanarain"},"content":"    public boolean isNull() {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"aakanshanarain"},"content":"        return value \u003d\u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"aakanshanarain":54}},{"path":"src/main/java/seedu/modulink/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"ngjiayuan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"ngjiayuan"},"content":"     * Adds a person to the list at a specific index.","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"ngjiayuan"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"ngjiayuan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"ngjiayuan"},"content":"    public void add(int index, Person toAdd) {","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"ngjiayuan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"ngjiayuan"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"ngjiayuan"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"ngjiayuan"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"ngjiayuan"},"content":"        internalList.add(index, toAdd);","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charltonator":4,"ngjiayuan":12,"-":133}},{"path":"src/main/java/seedu/modulink/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person.exceptions;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"charltonator":1,"-":10}},{"path":"src/main/java/seedu/modulink/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person.exceptions;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"charltonator":1,"-":5}},{"path":"src/main/java/seedu/modulink/model/tag/Mod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.tag;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EthanWong6362"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"EthanWong6362"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EthanWong6362"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"EthanWong6362"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"EthanWong6362"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"EthanWong6362"},"content":"public class Mod {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"EthanWong6362"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"EthanWong6362"},"content":"            \"Please enter a valid Module Code (e.g. CS2103T). You may also include your grouping status.\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"EthanWong6362"},"content":"                + \"Available grouping statuses are: need member, need group. Please leave it blank to \"","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"EthanWong6362"},"content":"                + \"indicate you do not need a group.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"EthanWong6362"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"EthanWong6362"},"content":"            \"([A-Z]){2,3}[0-9]{4}([A-Z])?\";","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"EthanWong6362"},"content":"    public final String oriInput;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"EthanWong6362"},"content":"    public final String modName;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"EthanWong6362"},"content":"    public final Status status;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"EthanWong6362"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"EthanWong6362"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"EthanWong6362"},"content":"     * @param modString A valid tag name.","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"EthanWong6362"},"content":"    public Mod(String modString) throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"EthanWong6362"},"content":"        requireNonNull(modString);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"EthanWong6362"},"content":"        this.oriInput \u003d modString;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"EthanWong6362"},"content":"        int i \u003d modString.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"EthanWong6362"},"content":"        String modCode;","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"EthanWong6362"},"content":"        if (i \u003c 0) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"EthanWong6362"},"content":"            modCode \u003d modString.toUpperCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"EthanWong6362"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"EthanWong6362"},"content":"            modCode \u003d modString.substring(0, i).toUpperCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"EthanWong6362"},"content":"        checkArgument(isValidTagName(modCode), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"EthanWong6362"},"content":"        if (i \u003c 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"EthanWong6362"},"content":"            this.modName \u003d modCode.toUpperCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"EthanWong6362"},"content":"            this.status \u003d Status.NONE;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"EthanWong6362"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"EthanWong6362"},"content":"            this.modName \u003d modCode;","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"EthanWong6362"},"content":"            this.status \u003d Status.parseStatusFromString(modString.substring(i));","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"EthanWong6362"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"EthanWong6362"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"EthanWong6362"},"content":"        test \u003d test.toUpperCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"EthanWong6362"},"content":"        int i \u003d test.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"EthanWong6362"},"content":"        String modCode;","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"EthanWong6362"},"content":"        if (i \u003c 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"EthanWong6362"},"content":"            test \u003d test.toUpperCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"EthanWong6362"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"EthanWong6362"},"content":"            test \u003d test.substring(0, i).toUpperCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"EthanWong6362"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"EthanWong6362"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"EthanWong6362"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"EthanWong6362"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"EthanWong6362"},"content":"                || (other instanceof Mod // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"EthanWong6362"},"content":"                \u0026\u0026 modName.equals(((Mod) other).modName)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"aakanshanarain"},"content":"     * Checks if the statuses of two {@Code Mod} objects are the same.","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"aakanshanarain"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"aakanshanarain"},"content":"     * @param other Other object to compare","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"aakanshanarain"},"content":"     * @return boolean to indicate if statuses are the same or not.","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"aakanshanarain"},"content":"    public boolean equalsStatus(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"aakanshanarain"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"aakanshanarain"},"content":"                || (other instanceof Mod // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"aakanshanarain"},"content":"                \u0026\u0026 status.equals(((Mod) other).status)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"EthanWong6362"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"EthanWong6362"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"EthanWong6362"},"content":"        return modName.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"EthanWong6362"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"EthanWong6362"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"EthanWong6362"},"content":"        return \u0027[\u0027 + modName + \u0027 \u0027 + status.toString() + \u0027]\u0027;","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"EthanWong6362"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"aakanshanarain":12,"charltonator":2,"EthanWong6362":92}},{"path":"src/main/java/seedu/modulink/model/tag/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.tag;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"EthanWong6362"},"content":"public enum Status {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"    NONE(\"G\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"    NEED_GROUP(\"SG\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"    NEED_MEMBER(\"SM\");","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"EthanWong6362"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"EthanWong6362"},"content":"            \"Available grouping statuses are: \\\"need group\\\" and \\\"need member\\\".\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"EthanWong6362"},"content":"            + \"Please leave the description blank to indicate you do not need a group.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"EthanWong6362"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"EthanWong6362"},"content":"            \"((need group)|(need members?))?\";","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"    private String status;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"    Status(String s) {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EthanWong6362"},"content":"        this.status \u003d s;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"     * Parses the status of the filter command.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"     * @param status The status specified in the filter command","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"     * @return The {@code Status} group status.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"    public static Status parseStatusForFilter(String status) {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"        assert (status !\u003d null);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"        if (status.equalsIgnoreCase(\"SG\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"            return Status.NEED_GROUP;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"        } else if (status.equalsIgnoreCase(\"SM\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"            return Status.NEED_MEMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"            return Status.NONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"     * Returns true if a given string is a valid status.","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"EthanWong6362"},"content":"        test \u003d test.toLowerCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"EthanWong6362"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"EthanWong6362"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"EthanWong6362"},"content":"     * Converts a String into a Status by checking for keywords.","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"EthanWong6362"},"content":"     * Used for parsing user input.","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"EthanWong6362"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"EthanWong6362"},"content":"     * @param s the given string.","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"EthanWong6362"},"content":"     * @return the matching status","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"EthanWong6362"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"EthanWong6362"},"content":"    public static Status parseStatusFromString(String s) throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"EthanWong6362"},"content":"        s \u003d s.trim();","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"EthanWong6362"},"content":"        s \u003d s.toLowerCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"EthanWong6362"},"content":"        if (!isValidStatus(s)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"EthanWong6362"},"content":"            throw new ParseException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"EthanWong6362"},"content":"        if (s.equalsIgnoreCase(\"need group\")) {","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"EthanWong6362"},"content":"            return Status.NEED_GROUP;","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"EthanWong6362"},"content":"        } else if (s.equalsIgnoreCase(\"need member\")","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"EthanWong6362"},"content":"                || s.equalsIgnoreCase(\"need members\")) {","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"EthanWong6362"},"content":"            return Status.NEED_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"EthanWong6362"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"EthanWong6362"},"content":"            return Status.NONE;","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"EthanWong6362"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"EthanWong6362"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"EthanWong6362"},"content":"        return \"\" + status;","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"EthanWong6362"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"aakanshanarain":29,"charltonator":1,"EthanWong6362":46}},{"path":"src/main/java/seedu/modulink/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.util;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"ngjiayuan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.GitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.StudentId;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.TelegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Your name\"), new StudentId(\"A0000000A\"), new Phone(\"81234567\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"youremail@email.com\"), new GitHubUsername(\"your_github_user\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"yourtelehandle\"), false,","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"ngjiayuan"},"content":"                new HashSet\u003c\u003e(), true),","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"            new Person(new Name(\"Alex Yeoh\"), new StudentId(\"A1234567R\"), new Phone(\"87438807\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"                new Email(\"alexyeoh@example.com\"), new GitHubUsername(\"alex_yeoh_y\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"EthanWong6362"},"content":"                new TelegramHandle(\"alexyeoh\"), false,","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"EthanWong6362"},"content":"                getTagSet(\"CS2103T\", \"CS2106\", \"CS2101 need member\"), false),","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"EthanWong6362"},"content":"            new Person(new Name(\"Zachary Lau\"), new StudentId(\"A1234567H\"), new Phone(\"96523487\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"EthanWong6362"},"content":"                new Email(\"zachlau@example.com\"), new GitHubUsername(\"zachattach\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"                new TelegramHandle(\"zacharrryyyy\"), false,","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"EthanWong6362"},"content":"                getTagSet(\"CS2100\", \"CS2106\", \"CS2101 need group\"), false),","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"EthanWong6362"},"content":"            new Person(new Name(\"Ng Jia Yuan\"), new StudentId(\"A1234567N\"), new Phone(\"98432567\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"EthanWong6362"},"content":"                new Email(\"ngjy@example.com\"), new GitHubUsername(\"yuan\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"EthanWong6362"},"content":"                new TelegramHandle(\"yuan\"), false,","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"EthanWong6362"},"content":"                getTagSet(\"CS5210 need group\", \"CS2106\", \"CS2100 need member\"), false),","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"EthanWong6362"},"content":"            new Person(new Name(\"Charlton Tan\"), new StudentId(\"A1234567L\"), new Phone(\"97324615\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"EthanWong6362"},"content":"                new Email(\"charles@example.com\"), new GitHubUsername(\"C-dollarsign\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"EthanWong6362"},"content":"                new TelegramHandle(\"followmyspotify\"), false,","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"EthanWong6362"},"content":"                getTagSet(\"CS2101 need group\", \"IS1101\"), false),","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"EthanWong6362"},"content":"            new Person(new Name(\"Ahmad bin Ali\"), new StudentId(\"A1234567B\"), new Phone(\"95238541\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"EthanWong6362"},"content":"                new Email(\"aba@example.com\"), new GitHubUsername(\"alibinahmad\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"EthanWong6362"},"content":"                new TelegramHandle(\"diversity\"), false,","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"EthanWong6362"},"content":"                getTagSet(\"CS2100\", \"CS2106\", \"CS2103T need group\"), false),","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"aakanshanarain"},"content":"            new Person(new Name(\"Bernice Yu\"), new StudentId(\"A1234568X\"), new Phone(\"99272758\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"aakanshanarain"},"content":"                new Email(\"berniceyu@example.com\"), new GitHubUsername(null),","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"aakanshanarain"},"content":"                new TelegramHandle(\"berniceYuuu\"), false,","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2100\", \"CS3230 need group\", \"CS4234 need member\"), false),","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"aakanshanarain"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new StudentId(\"A1234569Y\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"aakanshanarain"},"content":"                new Email(\"charlotte@example.com\"), new GitHubUsername(\"charlotte_oliveiro\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"EthanWong6362"},"content":"                new TelegramHandle(\"charlotte24\"), false,","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS1101S\", \"CS3230 need member\"), false),","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"aakanshanarain"},"content":"            new Person(new Name(\"David Li\"), new StudentId(\"A1234570Z\"), new Phone(\"91031282\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"aakanshanarain"},"content":"                new Email(\"lidavid@example.com\"), new GitHubUsername(\"Davidli\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"aakanshanarain"},"content":"                new TelegramHandle(null), false,","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"EthanWong6362"},"content":"                getTagSet(\"CS2101\"), false),","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"aakanshanarain"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new StudentId(\"A1234571R\"), new Phone(\"92492021\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"aakanshanarain"},"content":"                new Email(\"irfan@example.com\"), new GitHubUsername(\"Irfanib\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"aakanshanarain"},"content":"                new TelegramHandle(\"irfanibrahim\"), false,","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"EthanWong6362"},"content":"                getTagSet(\"CS2101 need member\", \"ES2660 need group\", \"CS2103T\"), false),","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"aakanshanarain"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new StudentId(\"A1234572X\"), new Phone(\"92624417\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"aakanshanarain"},"content":"                new Email(\"royb@example.com\"), new GitHubUsername(\"Roybalakrishnan\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"aakanshanarain"},"content":"                new TelegramHandle(\"heyitsroy\"), false,","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"EthanWong6362"},"content":"                getTagSet(\"CS2100\", \"CS2103T\", \"CS2101 need group\"), false),","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"EthanWong6362"},"content":"            new Person(new Name(\"Nicole Wong\"), new StudentId(\"A1234567Q\"), new Phone(\"96523546\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"EthanWong6362"},"content":"                new Email(\"niolewong@example.com\"), new GitHubUsername(\"NicoleW\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"EthanWong6362"},"content":"                new TelegramHandle(\"yellowNicole\"), false,","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"EthanWong6362"},"content":"                getTagSet(\"CS2101 need member\", \"MA2001\"), false),","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"EthanWong6362"},"content":"            new Person(new Name(\"Jeremy Tan\"), new StudentId(\"A1234567W\"), new Phone(\"96875439\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"EthanWong6362"},"content":"                new Email(\"jTan2000@example.com\"), new GitHubUsername(\"jTanremy\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"EthanWong6362"},"content":"                new TelegramHandle(\"jeret\"), false,","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"EthanWong6362"},"content":"                getTagSet(\"CS2101\", \"CS1101S need member\", \"CS2103T\"), false),","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"EthanWong6362"},"content":"            new Person(new Name(\"Aniq Nathaniel\"), new StudentId(\"A1234567E\"), new Phone(\"92584685\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"EthanWong6362"},"content":"                new Email(\"aniqNathan@example.com\"), new GitHubUsername(\"NathAniq\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"EthanWong6362"},"content":"                new TelegramHandle(\"Aniqle4urThoughts\"), false,","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"EthanWong6362"},"content":"                getTagSet(\"CS2101 need group\", \"CS4234\", \"CS2103T need group\"), false),","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"EthanWong6362"},"content":"            new Person(new Name(\"Timmy Turner\"), new StudentId(\"A1234567E\"), new Phone(\"95483265\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"EthanWong6362"},"content":"                new Email(\"timmyturns@example.com\"), new GitHubUsername(\"TimTam\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"EthanWong6362"},"content":"                new TelegramHandle(null), false,","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"ST2334 need group\", \"GEA1000 need member\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Alice Lin\"), new StudentId(\"A1310684L\"), new Phone(\"88702899\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"alicelin@outlook.com\"), new GitHubUsername(null),","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(null), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2030S\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Alex Ong\"), new StudentId(\"A1158684X\"), new Phone(\"83149485\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"alexong@hotmail.com\"), new GitHubUsername(\"alexong4\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(null), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2101\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Aaron Heng\"), new StudentId(\"A1132128A\"), new Phone(\"81762929\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"aaronheng@gmail.com\"), new GitHubUsername(\"aaronheng21\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(null), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS3243 need member\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Ahmad Ong\"), new StudentId(\"A1191832Z\"), new Phone(\"89946306\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"ahmadong@email.com\"), new GitHubUsername(\"ahmadong4\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"ahmadong42\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2030S need group\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Bob Johnson\"), new StudentId(\"A1872556X\"), new Phone(\"92296295\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"bobjohnson@outlook.com\"), new GitHubUsername(null),","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"bobjohnson71\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2030S need group\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Brandon Jones\"), new StudentId(\"A1096456L\"), new Phone(\"90676077\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"brandonjones@hotmail.com\"), new GitHubUsername(\"brandonjones17\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"brandonjones64\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2101 need group\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Bernard William\"), new StudentId(\"A1664306Y\"), new Phone(\"94379764\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"bernardwilliam@outlook.com\"), new GitHubUsername(\"bernardwilliam39\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"bernardwilliam15\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS3243 need group\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Charlie Davis\"), new StudentId(\"A1359885Y\"), new Phone(\"85889043\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"charliedavis@hotmail.com\"), new GitHubUsername(null),","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"charliedavis57\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2103T need member\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Cassandra Ong\"), new StudentId(\"A1984289X\"), new Phone(\"84809611\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"cassandraong@u.nus.edu\"), new GitHubUsername(\"cassandraong60\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(null), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS3243\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Charles William\"), new StudentId(\"A1900975L\"), new Phone(\"98935555\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"charleswilliam@hotmail.com\"), new GitHubUsername(\"charleswilliam3\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(null), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2106 need member\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Damien Lim\"), new StudentId(\"A1963998Z\"), new Phone(\"98454108\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"damienlim@gmail.com\"), new GitHubUsername(null),","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(null), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2102 need group\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Dan Heng\"), new StudentId(\"A1481608Y\"), new Phone(\"86924167\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"danheng@outlook.com\"), new GitHubUsername(\"danheng47\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"danheng45\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2101\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Denise Gray\"), new StudentId(\"A1617407Z\"), new Phone(\"98499986\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"denisegray@hotmail.com\"), new GitHubUsername(null),","lastModifiedDate":"2021-10-29"},{"lineNumber":137,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"denisegray39\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2040S need member\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Eliza Davis\"), new StudentId(\"A1473884R\"), new Phone(\"83974364\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"elizadavis@yahoo.com\"), new GitHubUsername(\"elizadavis50\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(null), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS3243\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Felicia Lin\"), new StudentId(\"A1830220Z\"), new Phone(\"93013799\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"felicialin@yahoo.com\"), new GitHubUsername(\"felicialin40\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(null), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS3230\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Fundy Smith\"), new StudentId(\"A1711717X\"), new Phone(\"97454364\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"fundysmith@hotmail.com\"), new GitHubUsername(\"fundysmith32\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"fundysmith45\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":150,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2101 need member\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":151,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Gordon Gray\"), new StudentId(\"A1149650L\"), new Phone(\"87929336\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":152,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"gordongray@email.com\"), new GitHubUsername(\"gordongray82\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":153,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"gordongray45\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":154,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS3243\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":155,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"James Ong\"), new StudentId(\"A1899147R\"), new Phone(\"94102049\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"jamesong@yahoo.com\"), new GitHubUsername(null),","lastModifiedDate":"2021-10-29"},{"lineNumber":157,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(null), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":158,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2102\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Jane Gray\"), new StudentId(\"A1371778Y\"), new Phone(\"98642544\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"janegray@u.nus.edu\"), new GitHubUsername(\"janegray14\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":161,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"janegray5\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":162,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS1231S\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":163,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Janice Johnson\"), new StudentId(\"A1779972A\"), new Phone(\"95017499\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"janicejohnson@outlook.com\"), new GitHubUsername(null),","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"janicejohnson94\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS1231S need member\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Justin Jones\"), new StudentId(\"A1380349Z\"), new Phone(\"96762415\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"justinjones@hotmail.com\"), new GitHubUsername(null),","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"justinjones31\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS1101S\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Harold Lin\"), new StudentId(\"A1838586Y\"), new Phone(\"82578104\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"haroldlin@email.com\"), new GitHubUsername(\"haroldlin58\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"haroldlin9\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":174,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2103T need group\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":175,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Henderson William\"), new StudentId(\"A1196405R\"), new Phone(\"89277387\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"hendersonwilliam@yahoo.com\"), new GitHubUsername(\"hendersonwilliam70\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":177,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"hendersonwilliam27\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS3243\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Ishan Heng\"), new StudentId(\"A1246783X\"), new Phone(\"89588652\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"ishanheng@hotmail.com\"), new GitHubUsername(\"ishanheng76\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"ishanheng95\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":182,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2102\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":183,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Destin Smith\"), new StudentId(\"A1412064Z\"), new Phone(\"81394689\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":184,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"destinsmith@email.com\"), new GitHubUsername(\"destinsmith44\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":185,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"destinsmith62\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":186,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2040S need group\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":187,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Logan Jones\"), new StudentId(\"A1112170R\"), new Phone(\"91333890\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":188,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"loganjones@hotmail.com\"), new GitHubUsername(\"loganjones79\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":189,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"loganjones55\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2106 need group\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":191,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Paul Gray\"), new StudentId(\"A1601243Y\"), new Phone(\"89977560\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":192,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"paulgray@email.com\"), new GitHubUsername(\"paulgray2\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":193,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"paulgray58\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":194,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2100 need group\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":195,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Harry Chin\"), new StudentId(\"A1334871X\"), new Phone(\"95501504\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":196,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"harrychin@outlook.com\"), new GitHubUsername(\"harrychin92\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":197,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"harrychin16\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":198,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS1101S need group\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":199,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Reginald Heng\"), new StudentId(\"A1951638Z\"), new Phone(\"94225881\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":200,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"reginaldheng@outlook.com\"), new GitHubUsername(\"reginaldheng92\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":201,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"reginaldheng55\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2106\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":203,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Kevin Lin\"), new StudentId(\"A1768364R\"), new Phone(\"90027713\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":204,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"kevinlin@email.com\"), new GitHubUsername(null),","lastModifiedDate":"2021-10-29"},{"lineNumber":205,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(null), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":206,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2106 need group\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":207,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Kirsten Davis\"), new StudentId(\"A1930742L\"), new Phone(\"89859195\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":208,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"kirstendavis@hotmail.com\"), new GitHubUsername(\"kirstendavis78\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":209,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"kirstendavis58\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":210,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS3243 need member\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":211,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Bernice Smith\"), new StudentId(\"A1757485Z\"), new Phone(\"82955392\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":212,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"bernicesmith@yahoo.com\"), new GitHubUsername(null),","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"bernicesmith1\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":214,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2105\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":215,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Charmaine Heng\"), new StudentId(\"A1134115A\"), new Phone(\"98190393\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":216,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"charmaineheng@outlook.com\"), new GitHubUsername(\"charmaineheng55\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":217,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"charmaineheng78\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":218,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2102\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":219,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Jonathan Lau\"), new StudentId(\"A1707247L\"), new Phone(\"95430738\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":220,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"jonathanlau@u.nus.edu\"), new GitHubUsername(null),","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"jonathanlau41\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":222,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS1101S need group\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":223,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Melvin Johnson\"), new StudentId(\"A1341762Z\"), new Phone(\"87270892\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":224,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"melvinjohnson@email.com\"), new GitHubUsername(\"melvinjohnson1\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":225,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(null), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":226,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS1231S need group\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Mary William\"), new StudentId(\"A1383490L\"), new Phone(\"87715884\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":228,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"marywilliam@u.nus.edu\"), new GitHubUsername(\"marywilliam92\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"marywilliam92\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":230,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS3244 need group\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Nelson Heng\"), new StudentId(\"A1620514A\"), new Phone(\"83104259\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":232,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"nelsonheng@outlook.com\"), new GitHubUsername(\"nelsonheng58\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":233,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"nelsonheng95\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":234,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS3230 need member\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":235,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Nicole Gray\"), new StudentId(\"A1443745Z\"), new Phone(\"95841730\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":236,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"nicolegray@u.nus.edu\"), new GitHubUsername(\"nicolegray0\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":237,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(\"nicolegray97\"), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":238,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2102 need group\"), false),","lastModifiedDate":"2021-10-29"},{"lineNumber":239,"author":{"gitId":"ngjiayuan"},"content":"            new Person(new Name(\"Nico Ong\"), new StudentId(\"A1428496Y\"), new Phone(\"88133575\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":240,"author":{"gitId":"ngjiayuan"},"content":"                new Email(\"nicoong@outlook.com\"), new GitHubUsername(\"nicoong92\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":241,"author":{"gitId":"ngjiayuan"},"content":"                new TelegramHandle(null), false,","lastModifiedDate":"2021-10-29"},{"lineNumber":242,"author":{"gitId":"ngjiayuan"},"content":"                getTagSet(\"CS2103T\"), false)","lastModifiedDate":"2021-10-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":257,"author":{"gitId":"EthanWong6362"},"content":"    public static Set\u003cMod\u003e getTagSet(String... strings) {","lastModifiedDate":"2021-10-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":259,"author":{"gitId":"EthanWong6362"},"content":"                .map(modString -\u003e {","lastModifiedDate":"2021-11-02"},{"lineNumber":260,"author":{"gitId":"EthanWong6362"},"content":"                    try {","lastModifiedDate":"2021-11-02"},{"lineNumber":261,"author":{"gitId":"EthanWong6362"},"content":"                        return new Mod(modString);","lastModifiedDate":"2021-11-02"},{"lineNumber":262,"author":{"gitId":"EthanWong6362"},"content":"                    } catch (ParseException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":263,"author":{"gitId":"EthanWong6362"},"content":"                        return null;","lastModifiedDate":"2021-11-02"},{"lineNumber":264,"author":{"gitId":"EthanWong6362"},"content":"                    }","lastModifiedDate":"2021-11-02"},{"lineNumber":265,"author":{"gitId":"EthanWong6362"},"content":"                })","lastModifiedDate":"2021-11-02"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"aakanshanarain":18,"charltonator":9,"ngjiayuan":165,"-":31,"EthanWong6362":46}},{"path":"src/main/java/seedu/modulink/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":" * Represents a storage for {@link seedu.modulink.model.AddressBook}.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"charltonator":4,"-":41}},{"path":"src/main/java/seedu/modulink/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.GitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.StudentId;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.TelegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"    private final String id;","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"    private final String gitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"    private final String telegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"EthanWong6362"},"content":"    private final boolean isFavourite;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"    private final List\u003cJsonAdaptedTag\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"ngjiayuan"},"content":"    private final boolean isMyProfile;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"ngjiayuan"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"ngjiayuan"},"content":"            @JsonProperty(\"id\") String id, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"gitHubUsername\") String gitHubUsername,","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"aakanshanarain"},"content":"            @JsonProperty(\"telegramHandle\") String telegramHandle, @JsonProperty(\"isFavourite\") boolean isFavourite,","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"ngjiayuan"},"content":"            @JsonProperty(\"modules\") List\u003cJsonAdaptedTag\u003e modules, @JsonProperty(\"isMyProfile\") boolean isMyProfile) {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"aakanshanarain"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"aakanshanarain"},"content":"        this.gitHubUsername \u003d gitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"aakanshanarain"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"EthanWong6362"},"content":"        this.isFavourite \u003d isFavourite;","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"EthanWong6362"},"content":"        if (modules !\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"EthanWong6362"},"content":"            this.modules.addAll(modules);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"ngjiayuan"},"content":"        this.isMyProfile \u003d isMyProfile;","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"aakanshanarain"},"content":"        id \u003d source.getStudentId().value;","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"aakanshanarain"},"content":"        gitHubUsername \u003d source.getGithubUsername().value;","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"aakanshanarain"},"content":"        telegramHandle \u003d source.getTelegramHandle().value;","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"EthanWong6362"},"content":"        isFavourite \u003d source.getIsFavourite();","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"EthanWong6362"},"content":"        modules.addAll(source.getMods().stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"ngjiayuan"},"content":"        isMyProfile \u003d source.getIsMyProfile();","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"EthanWong6362"},"content":"        final List\u003cMod\u003e personMods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"EthanWong6362"},"content":"        for (JsonAdaptedTag tag : modules) {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"EthanWong6362"},"content":"            personMods.add(tag.toModelType());","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"aakanshanarain"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"aakanshanarain"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"aakanshanarain"},"content":"                    StudentId.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"aakanshanarain"},"content":"        if (!StudentId.isValidId(id)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"aakanshanarain"},"content":"            throw new IllegalValueException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"aakanshanarain"},"content":"        final StudentId modelId \u003d new StudentId(id);","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"aakanshanarain"},"content":"        if (!GitHubUsername.isValidUsername(gitHubUsername)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"aakanshanarain"},"content":"            throw new IllegalValueException(GitHubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"aakanshanarain"},"content":"        final GitHubUsername modelUsername \u003d new GitHubUsername(gitHubUsername);","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"aakanshanarain"},"content":"        if (!TelegramHandle.isValidHandle(telegramHandle)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"aakanshanarain"},"content":"            throw new IllegalValueException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"aakanshanarain"},"content":"        final TelegramHandle modelHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"EthanWong6362"},"content":"        final Set\u003cMod\u003e modelMods \u003d new HashSet\u003c\u003e(personMods);","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"aakanshanarain"},"content":"        return new Person(modelName, modelId, modelPhone, modelEmail,","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"aakanshanarain"},"content":"                modelUsername, modelHandle, this.isFavourite, modelMods, this.isMyProfile);","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"aakanshanarain":34,"charltonator":8,"ngjiayuan":7,"-":78,"EthanWong6362":11}},{"path":"src/main/java/seedu/modulink/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"EthanWong6362"},"content":" * Jackson-friendly version of {@link Mod}.","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"EthanWong6362"},"content":"    public JsonAdaptedTag(Mod source) {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"EthanWong6362"},"content":"        tagName \u003d source.oriInput;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"EthanWong6362"},"content":"    public Mod toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"EthanWong6362"},"content":"        if (!Mod.isValidTagName(tagName)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"EthanWong6362"},"content":"            throw new IllegalValueException(Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"EthanWong6362"},"content":"        return new Mod(tagName);","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"charltonator":3,"-":38,"EthanWong6362":7}},{"path":"src/main/java/seedu/modulink/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.util.FileUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.util.JsonUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"charltonator":7,"-":73}},{"path":"src/main/java/seedu/modulink/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"charltonator":5,"-":55}},{"path":"src/main/java/seedu/modulink/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.util.JsonUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"charltonator":5,"-":42}},{"path":"src/main/java/seedu/modulink/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"charltonator":5,"-":27}},{"path":"src/main/java/seedu/modulink/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":6,"-":73}},{"path":"src/main/java/seedu/modulink/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":" * Represents a storage for {@link seedu.modulink.model.UserPrefs}.","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"     * Saves the given {@link seedu.modulink.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"charltonator":6,"-":30}},{"path":"src/main/java/seedu/modulink/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"charltonator"},"content":"         * @see seedu.modulink.logic.Logic#execute(String)","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"charltonator":5,"-":80}},{"path":"src/main/java/seedu/modulink/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w12-4.github.io/tp/UserGuide\";","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"charltonator":2,"-":99,"zacharylwy":1}},{"path":"src/main/java/seedu/modulink/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.GuiSettings;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.Logic;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"charltonator"},"content":"     * @see seedu.modulink.logic.Logic#execute(String)","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"charltonator":8,"-":188}},{"path":"src/main/java/seedu/modulink/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"EthanWong6362"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Status;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"    private Label id;","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"    private Label studentId;","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"    private Label gitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"aakanshanarain"},"content":"    private Label telegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"aakanshanarain"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"EthanWong6362"},"content":"    private ImageView fav;","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"EthanWong6362"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"charltonator"},"content":"    private ImageView userProfile;","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"charltonator"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"EthanWong6362"},"content":"    private FlowPane mods;","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \".\");","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"EthanWong6362"},"content":"        if (person.getIsFavourite()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"ngjiayuan"},"content":"            Image favIcon \u003d new Image(getClass().getResourceAsStream(\"/images/fav_icon.png\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"EthanWong6362"},"content":"            fav.setImage(favIcon);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"charltonator"},"content":"        if (person.getIsMyProfile()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"charltonator"},"content":"            Image userIcon \u003d new Image(getClass().getResourceAsStream(\"/images/user_icon.png\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"charltonator"},"content":"            userProfile.setImage(userIcon);","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"aakanshanarain"},"content":"        studentId.setText(person.getStudentId().value);","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"aakanshanarain"},"content":"        if (!person.getGithubUsername().isNull()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"aakanshanarain"},"content":"            gitHubUsername.setText(\"GitHub Account: www.github.com/\" + person.getGithubUsername().value);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"aakanshanarain"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"aakanshanarain"},"content":"            gitHubUsername.setText(\"No GitHub Account!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"aakanshanarain"},"content":"        if (!person.getTelegramHandle().isNull()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"aakanshanarain"},"content":"            telegramHandle.setText(\"Telegram Chat: https://t.me/\" + person.getTelegramHandle().value);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"aakanshanarain"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"aakanshanarain"},"content":"            telegramHandle.setText(\"No Telegram Account!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"EthanWong6362"},"content":"        person.getMods().stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"EthanWong6362"},"content":"                .sorted(Comparator.comparing(mod -\u003e mod.modName))","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"EthanWong6362"},"content":"                .forEach(mod -\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"EthanWong6362"},"content":"                    if (mod.status.equals(Status.NONE)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"EthanWong6362"},"content":"                        mods.getChildren().add(new Label(mod.modName));","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"EthanWong6362"},"content":"                    } else if (mod.status.equals(Status.NEED_GROUP)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"EthanWong6362"},"content":"                        Label l \u003d new Label(mod.modName);","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"aakanshanarain"},"content":"                        l.setStyle(\"-fx-background-color: #ff0000;\");","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"EthanWong6362"},"content":"                        mods.getChildren().add(l);","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"EthanWong6362"},"content":"                    } else if (mod.status.equals(Status.NEED_MEMBER)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"EthanWong6362"},"content":"                        Label l \u003d new Label(mod.modName);","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"EthanWong6362"},"content":"                        l.setStyle(\"-fx-background-color: yellow; -fx-text-fill: black;\");","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"EthanWong6362"},"content":"                        mods.getChildren().add(l);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"EthanWong6362"},"content":"                    } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"EthanWong6362"},"content":"                        mods.getChildren().add(new Label(mod.modName));","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"EthanWong6362"},"content":"                    }","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"EthanWong6362"},"content":"                });","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":120,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"aakanshanarain":19,"charltonator":10,"ngjiayuan":1,"-":67,"EthanWong6362":24}},{"path":"src/main/java/seedu/modulink/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"charltonator"},"content":"            } else if (person.getIsMyProfile()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"charltonator"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"charltonator"},"content":"                setStyle(\"-fx-background-color: #228B22; -fx-background-radius: 20px; -fx-padding: 10px\");","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"charltonator"},"content":"                setStyle(\"-fx-background-radius: 20px; -fx-padding: 10px\");","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":49,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"charltonator":9,"-":45}},{"path":"src/main/java/seedu/modulink/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"charltonator":1,"-":27}},{"path":"src/main/java/seedu/modulink/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":1,"-":27}},{"path":"src/main/java/seedu/modulink/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"charltonator":1,"-":12}},{"path":"src/main/java/seedu/modulink/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.MainApp;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.util.StringUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.Logic;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"charltonator":5,"-":84}},{"path":"src/main/java/seedu/modulink/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.MainApp;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"charltonator":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"EthanWong6362"},"content":"#mods {","lastModifiedDate":"2021-10-07"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"EthanWong6362"},"content":"#mods .label {","lastModifiedDate":"2021-10-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":350,"EthanWong6362":2}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"         title\u003d\"ModuLink\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"charltonator"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"200\" maxHeight\u003d\"200\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"aakanshanarain":1,"charltonator":1,"-":59}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"EthanWong6362"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"EthanWong6362"},"content":"        \u003cImageView fx:id\u003d\"fav\" fitHeight\u003d\"16.0\" fitWidth\u003d\"16.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"        \u003cImageView fx:id\u003d\"userProfile\" fitHeight\u003d\"16.0\" fitWidth\u003d\"16.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"EthanWong6362"},"content":"      \u003cFlowPane fx:id\u003d\"mods\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"      \u003cLabel fx:id\u003d\"studentId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentId\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"      \u003cLabel fx:id\u003d\"gitHubUsername\" graphicTextGap\u003d\"0.0\" styleClass\u003d\"cell_small_label\" text\u003d\"\\\\$gitHubUsername\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"      \u003cLabel fx:id\u003d\"telegramHandle\" graphicTextGap\u003d\"0.0\" styleClass\u003d\"cell_small_label\" text\u003d\"\\\\$telegramHandle\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"aakanshanarain"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aakanshanarain":12,"charltonator":1,"-":30,"EthanWong6362":3}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"charltonator":1,"-":8}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"    \"id\": \"A1234432Z\",","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"    \"github\": \"hans24\",","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"    \"telegram\": \"@hans24\",","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"    \"id\": \"A1233212B\",","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"aakanshanarain":4,"-":13}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"    \"id\": \"A0000111B\",","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"aakanshanarain":1,"-":8}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"    \"id\": \"A1234567A\",","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"    \"id\": \"A1234567A\",","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"aakanshanarain":2,"-":14}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"    \"id\": \"A1234568A\",","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"aakanshanarain":1,"-":8}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"    \"id\": \"A0000111R\",","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"    \"id\": \"A0000112R\",","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"    \"id\": \"A0000113R\",","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"    \"id\": \"A0000114R\",","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"    \"id\": \"A0000115R\",","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"    \"github\": \"elleMeyer24_01\",","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"    \"id\": \"A0000116R\",","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"aakanshanarain"},"content":"    \"id\": \"A0000117R\",","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"aakanshanarain"},"content":"    \"github\": \"george_best\",","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"aakanshanarain":9,"-":46}},{"path":"src/test/java/seedu/modulink/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"charltonator":1,"-":57}},{"path":"src/test/java/seedu/modulink/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.core;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"charltonator":1,"-":26}},{"path":"src/test/java/seedu/modulink/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.core;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":2,"-":133}},{"path":"src/test/java/seedu/modulink/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.core.index;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"charltonator":2,"-":58}},{"path":"src/test/java/seedu/modulink/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.util;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"charltonator":2,"-":34}},{"path":"src/test/java/seedu/modulink/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.util;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"charltonator":3,"-":105}},{"path":"src/test/java/seedu/modulink/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.util;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.Config;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"charltonator":4,"-":112}},{"path":"src/test/java/seedu/modulink/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.util;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":2,"-":21}},{"path":"src/test/java/seedu/modulink/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.util;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.SerializableTestClass;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.TestUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":3,"-":42}},{"path":"src/test/java/seedu/modulink/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.commons.util;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"charltonator":2,"-":141}},{"path":"src/test/java/seedu/modulink/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.LogicManager.PROFILE_CREATED_ERROR_MESSAGE;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.ListCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.storage.StorageManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"ngjiayuan"},"content":"        String deleteCommand \u003d \"delete 109\";","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"ngjiayuan"},"content":"    public void execute_profileAlreadyCreated_throwsCommandException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"zacharylwy"},"content":"        String createProfileCommand \u003d \"create n/charlton id/a0123456x p/81234567 e/test@email.com\";","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"ngjiayuan"},"content":"        assertCommandException(createProfileCommand, PROFILE_CREATED_ERROR_MESSAGE + \"\\n\" + EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"charltonator":17,"ngjiayuan":3,"-":121,"zacharylwy":1}},{"path":"src/test/java/seedu/modulink/logic/commands/AddFavCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"ngjiayuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"ngjiayuan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddFavCommand.","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"public class AddFavCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"ngjiayuan"},"content":"    private Model model;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"ngjiayuan"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"ngjiayuan"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"ngjiayuan"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"    public void execute_personSetAsFavourite_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"        String personIdString \u003d editedPerson.getStudentId().value;","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"charltonator"},"content":"        assertFalse(editedPerson.getIsFavourite());","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"charltonator"},"content":"        AddFavCommand command \u003d new AddFavCommand(personIdString);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"charltonator"},"content":"        command.execute(model);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"charltonator"},"content":"        assertTrue(editedPerson.getIsFavourite());","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"ngjiayuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"ngjiayuan"},"content":"    public void execute_setFavouriteAsFavourite_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"ngjiayuan"},"content":"        String expectedMessage \u003d Messages.MESSAGE_PERSON_ALREADY_FAVOURITE;","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"ngjiayuan"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"ngjiayuan"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"ngjiayuan"},"content":"        String personIdString \u003d editedPerson.getStudentId().value;","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"ngjiayuan"},"content":"        AddFavCommand command \u003d new AddFavCommand(personIdString);","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"ngjiayuan"},"content":"        command.execute(model);","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"ngjiayuan"},"content":"        assertTrue(editedPerson.getIsFavourite());","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"ngjiayuan"},"content":"        assertEquals(command.execute(model), new CommandResult(expectedMessage));","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"ngjiayuan"},"content":"        assertTrue(editedPerson.getIsFavourite());","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"ngjiayuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"ngjiayuan"},"content":"    public void execute_addNotFoundAsFavourite_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"ngjiayuan"},"content":"        String expectedMessage \u003d Messages.MESSAGE_NO_SUCH_ID_FOUND;","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"ngjiayuan"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"ngjiayuan"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"ngjiayuan"},"content":"        assertFalse(editedPerson.getIsFavourite());","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"ngjiayuan"},"content":"        AddFavCommand addFavCommand \u003d new AddFavCommand(\"a9999999r\");","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"ngjiayuan"},"content":"        assertEquals(addFavCommand.execute(model), new CommandResult(expectedMessage));","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"charltonator":37,"ngjiayuan":28}},{"path":"src/test/java/seedu/modulink/logic/commands/AddModCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"EthanWong6362"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"EthanWong6362"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"EthanWong6362"},"content":"class AddModCommandTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"EthanWong6362"},"content":"    private Model model;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"EthanWong6362"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"EthanWong6362"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"EthanWong6362"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"EthanWong6362"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"EthanWong6362"},"content":"    void execute_addMod_success() throws CommandException, ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"EthanWong6362"},"content":"        Person editedPerson \u003d new PersonBuilder().buildProfile();","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"EthanWong6362"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"EthanWong6362"},"content":"                new EditPersonDescriptorBuilder().withTags(\"CS2103T\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"EthanWong6362"},"content":"        AddModCommand amc \u003d new AddModCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"EthanWong6362"},"content":"        amc.execute(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"        assertTrue(model.getProfile().getMods().contains(new Mod(\"CS2103T\")));","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"EthanWong6362"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"EthanWong6362"},"content":"    public void execute_addDuplicateMod_failure() throws CommandException, ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"EthanWong6362"},"content":"        Person editedPerson \u003d new PersonBuilder().buildProfile();","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"EthanWong6362"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"EthanWong6362"},"content":"                new EditPersonDescriptorBuilder().withTags(\"CS2103T\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"EthanWong6362"},"content":"        AddModCommand amc \u003d new AddModCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"EthanWong6362"},"content":"        amc.execute(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"EthanWong6362"},"content":"        assertTrue(model.getProfile().getMods().contains(new Mod(\"CS2103T\")));","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"EthanWong6362"},"content":"        assertCommandFailure(amc, model, AddModCommand.MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"EthanWong6362"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"charltonator":11,"EthanWong6362":40}},{"path":"src/test/java/seedu/modulink/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"charltonator":1,"-":53}},{"path":"src/test/java/seedu/modulink/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"    public static final String VALID_ID_AMY \u003d \"A0000111A\";","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"    public static final String VALID_ID_BOB \u003d \"A0000111B\";","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"    public static final String VALID_GITHUB_USERNAME_AMY \u003d \"amy_bee\";","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"    public static final String VALID_GITHUB_USERNAME_BOB \u003d \"bobChoo2000\";","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"    public static final String VALID_TELEGRAM_HANDLE_AMY \u003d \"amy_bee\";","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"    public static final String VALID_TELEGRAM_HANDLE_BOB \u003d \"bobCh00\";","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"EthanWong6362"},"content":"    public static final String VALID_TAG_CS2103T \u003d \"CS2103T\";","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"EthanWong6362"},"content":"    public static final String VALID_TAG_CS2100 \u003d \"CS2100\";","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"aakanshanarain"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_ID_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"aakanshanarain"},"content":"    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_ID + VALID_ID_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"aakanshanarain"},"content":"    public static final String GITHUB_USERNAME_DESC_AMY \u003d \" \" + PREFIX_GITHUB_USERNAME + VALID_GITHUB_USERNAME_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"aakanshanarain"},"content":"    public static final String GITHUB_USERNAME_DESC_BOB \u003d \" \" + PREFIX_GITHUB_USERNAME + VALID_GITHUB_USERNAME_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"aakanshanarain"},"content":"    public static final String TELEGRAM_HANDLE_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM_HANDLE + VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"aakanshanarain"},"content":"    public static final String TELEGRAM_HANDLE_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM_HANDLE + VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"EthanWong6362"},"content":"    public static final String TAG_DESC_CS2100 \u003d \" \" + PREFIX_MOD + VALID_TAG_CS2100;","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"EthanWong6362"},"content":"    public static final String TAG_DESC_CS2103T \u003d \" \" + PREFIX_MOD + VALID_TAG_CS2103T;","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"aakanshanarain"},"content":"    public static final String INVALID_ID_DESC \u003d \" \" + PREFIX_ID + \"1234567A\"; // needs to start with letter \u0027A\u0027","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"EthanWong6362"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_MOD + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"aakanshanarain"},"content":"    public static final String INVALID_GITHUB_USERNAME_DESC \u003d \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"aakanshanarain"},"content":"            + PREFIX_GITHUB_USERNAME + \"@bobchoo\"; // @ not allowed in username","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"aakanshanarain"},"content":"    public static final String INVALID_TELEGRAM_HANDLE_DESC \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"aakanshanarain"},"content":"            \" \" + PREFIX_TELEGRAM_HANDLE + \"@bobchoo##\"; // # not allowed in handle","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"aakanshanarain"},"content":"                .withStudentId(VALID_ID_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"aakanshanarain"},"content":"                .withEmail(VALID_EMAIL_AMY).withGitHubUsername(VALID_GITHUB_USERNAME_AMY)","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"aakanshanarain"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY)","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"aakanshanarain"},"content":"                .withTags(VALID_TAG_CS2100).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"aakanshanarain"},"content":"                .withStudentId(VALID_ID_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"aakanshanarain"},"content":"                .withEmail(VALID_EMAIL_BOB).withGitHubUsername(VALID_GITHUB_USERNAME_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"aakanshanarain"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).withTags(VALID_TAG_CS2103T, VALID_TAG_CS2100).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"aakanshanarain":27,"charltonator":14,"-":100,"zacharylwy":1,"EthanWong6362":5}},{"path":"src/test/java/seedu/modulink/logic/commands/CreateCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"ngjiayuan"},"content":"public class CreateCommandIntegrationTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"ngjiayuan"},"content":"        assertCommandFailure(new CreateCommand(personInList), model, CreateCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"charltonator":7,"ngjiayuan":2,"-":23}},{"path":"src/test/java/seedu/modulink/logic/commands/CreateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"// import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.GuiSettings;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"ngjiayuan"},"content":"public class CreateCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"ngjiayuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CreateCommand(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"     **/","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"ngjiayuan"},"content":"        CreateCommand addCommand \u003d new CreateCommand(validPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"ngjiayuan"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"ngjiayuan"},"content":"            CreateCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"ngjiayuan"},"content":"        CreateCommand createAliceCommand \u003d new CreateCommand(alice);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"ngjiayuan"},"content":"        CreateCommand createBobCommand \u003d new CreateCommand(bob);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"ngjiayuan"},"content":"        assertTrue(createAliceCommand.equals(createAliceCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"ngjiayuan"},"content":"        CreateCommand createAliceCommandCopy \u003d new CreateCommand(alice);","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"ngjiayuan"},"content":"        assertTrue(createAliceCommand.equals(createAliceCommandCopy));","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"ngjiayuan"},"content":"        assertFalse(createAliceCommand.equals(1));","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"ngjiayuan"},"content":"        assertFalse(createAliceCommand.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"ngjiayuan"},"content":"        assertFalse(createAliceCommand.equals(createBobCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"aakanshanarain"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"aakanshanarain"},"content":"        public boolean hasStudentId(Person person) {","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"aakanshanarain"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"EthanWong6362"},"content":"        @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"EthanWong6362"},"content":"        public boolean hasStudentIdNotProfile(Person person) {","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"EthanWong6362"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-01"},{"lineNumber":141,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":142,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"ngjiayuan"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"ngjiayuan"},"content":"        public void addProfile(Person target) {","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"ngjiayuan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"EthanWong6362"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"EthanWong6362"},"content":"        public Person getProfile() {","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"EthanWong6362"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"EthanWong6362"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":174,"author":{"gitId":"EthanWong6362"},"content":"        public void refreshFilteredPersonList() {","lastModifiedDate":"2021-10-29"},{"lineNumber":175,"author":{"gitId":"EthanWong6362"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"EthanWong6362"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":177,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"ngjiayuan"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"ngjiayuan"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"ngjiayuan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"ngjiayuan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"aakanshanarain":8,"charltonator":10,"ngjiayuan":21,"-":172,"EthanWong6362":15}},{"path":"src/test/java/seedu/modulink/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"charltonator":13,"-":96}},{"path":"src/test/java/seedu/modulink/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.model.person.StudentId;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"EthanWong6362"},"content":"    public void execute_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"EthanWong6362"},"content":"        model.addPerson(new PersonBuilder().buildProfile());","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"EthanWong6362"},"content":"        Person editedPerson \u003d new PersonBuilder().buildProfile();","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand editCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"EthanWong6362"},"content":"        expectedModel.setPerson(model.getProfile(), editedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"EthanWong6362"},"content":"    public void execute_someFieldsSpecified_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"EthanWong6362"},"content":"        model.addPerson(new PersonBuilder().buildProfile());","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"EthanWong6362"},"content":"        Person lastPerson \u003d model.getProfile();","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"EthanWong6362"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"EthanWong6362"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand editCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"EthanWong6362"},"content":"    public void execute_invalidStudentId_failure() {","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"EthanWong6362"},"content":"        StudentId id \u003d model.getFilteredPersonList().get(0).getStudentId();","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"EthanWong6362"},"content":"        model.addPerson(new PersonBuilder().buildProfile());","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"EthanWong6362"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"EthanWong6362"},"content":"                .withName(VALID_NAME_BOB).withStudentId(id.toString()).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand editCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"EthanWong6362"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT_ID);","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"EthanWong6362"},"content":"        final EditCommand standardCommand \u003d new EditCommand(DESC_AMY);","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":85,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(copyDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":95,"author":{"gitId":"EthanWong6362"},"content":"        assertFalse(standardCommand.equals(new ListCommand()));","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"EthanWong6362"},"content":"        assertFalse(standardCommand.equals(new EditCommand(DESC_BOB)));","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"charltonator":16,"-":61,"EthanWong6362":24}},{"path":"src/test/java/seedu/modulink/logic/commands/EditGroupStatusCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aakanshanarain"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"aakanshanarain"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.tag.Status;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"public class EditGroupStatusCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"    private Model model;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"EthanWong6362"},"content":"    void execute_editGroupStatus_success() throws CommandException, ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"        Person editedPerson \u003d new PersonBuilder().withTags(\"CS2103T\").buildProfile();","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"                new EditPersonDescriptorBuilder().withTags(\"CS2103T need member\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"aakanshanarain"},"content":"        EditGroupStatusCommand editGroupStatusCommand \u003d new EditGroupStatusCommand(descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"        editGroupStatusCommand.execute(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(model.getProfile().getMods().contains(new Mod(\"CS2103T need member\")));","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"    void execute_editGroupStatusDoesNotRetainOriginalStatus_success() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"aakanshanarain"},"content":"        Person editedPerson \u003d new PersonBuilder().withTags(\"CS2103T\").buildProfile();","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"aakanshanarain"},"content":"                new EditPersonDescriptorBuilder().withTags(\"CS2103T need member\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"aakanshanarain"},"content":"        EditGroupStatusCommand editGroupStatusCommand \u003d new EditGroupStatusCommand(descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"aakanshanarain"},"content":"        editGroupStatusCommand.execute(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"aakanshanarain"},"content":"        Mod moduleToTest \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"aakanshanarain"},"content":"        for (Mod mod : model.getProfile().getMods()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"aakanshanarain"},"content":"            if (mod.modName.equals(\"CS2103T\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"aakanshanarain"},"content":"                moduleToTest \u003d mod;","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"aakanshanarain"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"aakanshanarain"},"content":"        assertNotEquals(Status.NONE, moduleToTest.status);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"aakanshanarain"},"content":"    void execute_editGroupStatusDoesNotCreateCopyOfModule_success() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"aakanshanarain"},"content":"        Person editedPerson \u003d new PersonBuilder().withTags(\"CS2103T\").buildProfile();","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"aakanshanarain"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"aakanshanarain"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"aakanshanarain"},"content":"                new EditPersonDescriptorBuilder().withTags(\"CS2103T need member\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"aakanshanarain"},"content":"        EditGroupStatusCommand editGroupStatusCommand \u003d new EditGroupStatusCommand(descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"aakanshanarain"},"content":"        editGroupStatusCommand.execute(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"aakanshanarain"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"aakanshanarain"},"content":"        for (Mod mod : model.getProfile().getMods()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"aakanshanarain"},"content":"            if (mod.modName.equals(\"CS2103T\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"aakanshanarain"},"content":"                count++;","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"aakanshanarain"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"aakanshanarain"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"aakanshanarain"},"content":"        assertEquals(count, 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"aakanshanarain"},"content":"    /* Need help! Don\u0027t know why these don\u0027t work","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"aakanshanarain"},"content":"    public void execute_editGroupStatusWithNoStatusChange_failure() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"aakanshanarain"},"content":"        Person editedPerson \u003d new PersonBuilder().withTags(\"CS2103T\").buildProfile();","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"aakanshanarain"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"aakanshanarain"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"aakanshanarain"},"content":"                new EditPersonDescriptorBuilder().withTags(\"CS2103T\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"aakanshanarain"},"content":"        EditGroupStatusCommand editGroupStatusCommand \u003d new EditGroupStatusCommand(descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"aakanshanarain"},"content":"        editGroupStatusCommand.execute(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(model.getProfile().getMods().contains(new Mod(\"CS2103T\")));","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"aakanshanarain"},"content":"        assertCommandFailure(editGroupStatusCommand, model, EditGroupStatusCommand.MESSAGE_NO_STATUS_CHANGED);","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"aakanshanarain"},"content":"    public void execute_editGroupStatusWhereModuleDoesNotExist_failure() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"aakanshanarain"},"content":"        Person editedPerson \u003d new PersonBuilder().buildProfile();","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"aakanshanarain"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"aakanshanarain"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"aakanshanarain"},"content":"                new EditPersonDescriptorBuilder().withTags(\"CS2100\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"aakanshanarain"},"content":"        EditGroupStatusCommand editGroupStatusCommand \u003d new EditGroupStatusCommand(descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"aakanshanarain"},"content":"        editGroupStatusCommand.execute(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"aakanshanarain"},"content":"        // assertFalse(model.getProfile().getMods().contains(new Mod(\"CS2100\")));","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"aakanshanarain"},"content":"        assertCommandFailure(editGroupStatusCommand, model, EditGroupStatusCommand.MESSAGE_MODULE_DOES_NOT_EXIST);","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"aakanshanarain"},"content":"    */","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"aakanshanarain":100,"EthanWong6362":2}},{"path":"src/test/java/seedu/modulink/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TAG_CS2103T;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"        // same student IDs -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withStudentId(VALID_ID_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"EthanWong6362"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_CS2103T).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"aakanshanarain":4,"charltonator":10,"-":43,"EthanWong6362":1}},{"path":"src/test/java/seedu/modulink/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"charltonator":5,"-":15}},{"path":"src/test/java/seedu/modulink/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"aakanshanarain"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.ModuleContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"public class FilterCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EthanWong6362"},"content":"    public void equals() throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"        ModuleContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"                new ModuleContainsKeywordsPredicate(Set.of(new Mod(\"CS2100\")));","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"        ModuleContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"                new ModuleContainsKeywordsPredicate(Set.of(new Mod(\"CS2103T need group\")));","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"aakanshanarain"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"EthanWong6362"},"content":"    public void execute_zeroKeywords_noProfilesFound() throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"aakanshanarain"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"aakanshanarain"},"content":"        ModuleContainsKeywordsPredicate predicate \u003d preparePredicate(\"CS1441\");","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"aakanshanarain"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"aakanshanarain"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"aakanshanarain"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"aakanshanarain"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"EthanWong6362"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"aakanshanarain"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"aakanshanarain"},"content":"        ModuleContainsKeywordsPredicate predicate \u003d preparePredicate(\"CS2100\");","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"aakanshanarain"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"aakanshanarain"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"aakanshanarain"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"aakanshanarain"},"content":"     * Parses {@code userInput} into a {@code ModuleContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"EthanWong6362"},"content":"    private ModuleContainsKeywordsPredicate preparePredicate(String userInput) throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"aakanshanarain"},"content":"        Set\u003cMod\u003e modList \u003d Set.of(new Mod(userInput.split(\"\\\\s+\")[0]));","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"aakanshanarain"},"content":"        return new ModuleContainsKeywordsPredicate(modList);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"aakanshanarain":67,"charltonator":7,"EthanWong6362":5}},{"path":"src/test/java/seedu/modulink/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"charltonator":11,"-":72}},{"path":"src/test/java/seedu/modulink/logic/commands/FindIdCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":" * Contains integration tests (interaction with the Model) for {@code FindIdCommand}.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"public class FindIdCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"        StudentIdContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"                new StudentIdContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"        StudentIdContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"                new StudentIdContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"charltonator"},"content":"        FindIdCommand findFirstCommand \u003d new FindIdCommand(firstPredicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"charltonator"},"content":"        FindIdCommand findSecondCommand \u003d new FindIdCommand(secondPredicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"charltonator"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"charltonator"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"charltonator"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"charltonator"},"content":"        FindIdCommand findFirstCommandCopy \u003d new FindIdCommand(firstPredicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"charltonator"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"charltonator"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"charltonator"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"charltonator"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"charltonator"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"charltonator"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"charltonator"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"charltonator"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"charltonator"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"charltonator"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"charltonator"},"content":"        StudentIdContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"charltonator"},"content":"        FindIdCommand command \u003d new FindIdCommand(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"charltonator"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"charltonator"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"charltonator"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"charltonator"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"charltonator"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"charltonator"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"charltonator"},"content":"        StudentIdContainsKeywordsPredicate predicate \u003d preparePredicate(\"A1234567A\");","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"charltonator"},"content":"        FindIdCommand command \u003d new FindIdCommand(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"charltonator"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"charltonator"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"charltonator"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredPersonList());","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"charltonator"},"content":"     * Parses {@code userInput} into a {@code StudentIdContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"charltonator"},"content":"    private StudentIdContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"charltonator"},"content":"        return new StudentIdContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"aakanshanarain":1,"charltonator":80}},{"path":"src/test/java/seedu/modulink/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"charltonator":5,"-":15}},{"path":"src/test/java/seedu/modulink/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"charltonator":8,"-":31}},{"path":"src/test/java/seedu/modulink/logic/commands/ListFavCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.IsFavouritePredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"zacharylwy"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"zacharylwy"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"public class ListFavCommandTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"zacharylwy"},"content":"    private Model model;","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"zacharylwy"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"zacharylwy"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"zacharylwy"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"zacharylwy"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"zacharylwy"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"zacharylwy"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"zacharylwy"},"content":"    public void execute_showFavouriteSuccess() {","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"zacharylwy"},"content":"        String expectedMessage \u003d ListFavCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"zacharylwy"},"content":"        IsFavouritePredicate predicate \u003d new IsFavouritePredicate();","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"zacharylwy"},"content":"        ListFavCommand command \u003d new ListFavCommand();","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"zacharylwy"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"zacharylwy"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"zacharylwy"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL), model.getFilteredPersonList());","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"zacharylwy"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"charltonator":10,"zacharylwy":34}},{"path":"src/test/java/seedu/modulink/logic/commands/RemFavCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"ngjiayuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"ngjiayuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"ngjiayuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"ngjiayuan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"ngjiayuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"ngjiayuan"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"ngjiayuan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddFavCommand.","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"ngjiayuan"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"ngjiayuan"},"content":"public class RemFavCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"ngjiayuan"},"content":"    private Model model;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"ngjiayuan"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"ngjiayuan"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"ngjiayuan"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"ngjiayuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"ngjiayuan"},"content":"    public void execute_removePersonFromFavourite_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"ngjiayuan"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"ngjiayuan"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"ngjiayuan"},"content":"        String personIdString \u003d editedPerson.getStudentId().value;","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"ngjiayuan"},"content":"        AddFavCommand addFavCommand \u003d new AddFavCommand(personIdString);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"ngjiayuan"},"content":"        addFavCommand.execute(model);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"ngjiayuan"},"content":"        assertTrue(editedPerson.getIsFavourite());","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"ngjiayuan"},"content":"        RemFavCommand remFavCommand \u003d new RemFavCommand(personIdString);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"ngjiayuan"},"content":"        remFavCommand.execute(model);","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"ngjiayuan"},"content":"        assertFalse(editedPerson.getIsFavourite());","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"ngjiayuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"ngjiayuan"},"content":"    public void execute_removeNotFavouriteFromFavourite_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"ngjiayuan"},"content":"        String expectedMessage \u003d Messages.MESSAGE_PERSON_IS_NOT_FAVOURITE;","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"ngjiayuan"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"ngjiayuan"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"ngjiayuan"},"content":"        String personIdString \u003d editedPerson.getStudentId().value;","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"ngjiayuan"},"content":"        assertFalse(editedPerson.getIsFavourite());","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"ngjiayuan"},"content":"        RemFavCommand remFavCommand \u003d new RemFavCommand(personIdString);","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"ngjiayuan"},"content":"        assertEquals(remFavCommand.execute(model), new CommandResult(expectedMessage));","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"ngjiayuan"},"content":"        assertFalse(editedPerson.getIsFavourite());","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"ngjiayuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"ngjiayuan"},"content":"    public void execute_removeNotFoundFromFavourite_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"ngjiayuan"},"content":"        String expectedMessage \u003d Messages.MESSAGE_NO_SUCH_ID_FOUND;","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"ngjiayuan"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"ngjiayuan"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"ngjiayuan"},"content":"        String personIdString \u003d editedPerson.getStudentId().value;","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"ngjiayuan"},"content":"        AddFavCommand addFavCommand \u003d new AddFavCommand(personIdString);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"ngjiayuan"},"content":"        addFavCommand.execute(model);","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"ngjiayuan"},"content":"        assertTrue(editedPerson.getIsFavourite());","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"ngjiayuan"},"content":"        RemFavCommand remFavCommand \u003d new RemFavCommand(\"a9999999r\");","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"ngjiayuan"},"content":"        assertEquals(remFavCommand.execute(model), new CommandResult(expectedMessage));","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"ngjiayuan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"charltonator":8,"ngjiayuan":60}},{"path":"src/test/java/seedu/modulink/logic/commands/RemoveModCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"EthanWong6362"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"EthanWong6362"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"EthanWong6362"},"content":"class RemoveModCommandTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"EthanWong6362"},"content":"    private Model model;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"EthanWong6362"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"EthanWong6362"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"EthanWong6362"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"EthanWong6362"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"EthanWong6362"},"content":"    void execute_removeMod_success() throws CommandException, ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"EthanWong6362"},"content":"        Person editedPerson \u003d new PersonBuilder().withTags(\"CS2103T\").buildProfile();","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"EthanWong6362"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags(\"CS2103T\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"EthanWong6362"},"content":"        RemoveModCommand rmc \u003d new RemoveModCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"EthanWong6362"},"content":"        rmc.execute(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"EthanWong6362"},"content":"        assertFalse(model.getProfile().getMods().contains(new Mod(\"CS2103T\")));","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"EthanWong6362"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"EthanWong6362"},"content":"    void execute_removeNonExistingMod_failure() {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"EthanWong6362"},"content":"        Person editedPerson \u003d new PersonBuilder().buildProfile();","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"EthanWong6362"},"content":"        model.addPerson(editedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags(\"CS2103T\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"EthanWong6362"},"content":"        RemoveModCommand rmc \u003d new RemoveModCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"EthanWong6362"},"content":"        assertCommandFailure(rmc, model, RemoveModCommand.MESSAGE_MODULE_DOES_NOT_EXIST);","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"EthanWong6362"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"charltonator":11,"EthanWong6362":35}},{"path":"src/test/java/seedu/modulink/logic/parser/AddFavCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.AddFavCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddFavCommandParser.","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"public class AddFavCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"    private AddFavCommandParser parser \u003d new AddFavCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"    public void parse_emptyArgs_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddFavCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"    public void parse_twoArgs_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"EthanWong6362"},"content":"        String expectedMessage \u003d AddFavCommand.MULTIPLE_ID_ERROR;","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"        assertParseFailure(parser, \"A123333X A232113Y\", expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"charltonator"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"charltonator"},"content":"    public void parse_arg_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"charltonator"},"content":"        Person expectedPerson \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"charltonator"},"content":"                .withStudentId(\"A1234567D\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"charltonator"},"content":"                .withFavourite(false).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"charltonator"},"content":"        String id \u003d expectedPerson.getStudentId().value;","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"charltonator"},"content":"        assertParseSuccess(parser, id, new AddFavCommand(id));","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"charltonator":45,"EthanWong6362":1}},{"path":"src/test/java/seedu/modulink/logic/parser/AddModCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"EthanWong6362"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.TAG_DESC_CS2100;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.TAG_DESC_CS2103T;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TAG_CS2100;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TAG_CS2103T;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"EthanWong6362"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.AddModCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"EthanWong6362"},"content":"class AddModCommandParserTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"EthanWong6362"},"content":"    private AddModCommandParser parser \u003d new AddModCommandParser();","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"EthanWong6362"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"EthanWong6362"},"content":"    void parse_oneInput_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"EthanWong6362"},"content":"        String userInput \u003d TAG_DESC_CS2100;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"EthanWong6362"},"content":"                new EditPersonDescriptorBuilder().withTags(VALID_TAG_CS2100).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"EthanWong6362"},"content":"        AddModCommand expectedCommand \u003d new AddModCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"EthanWong6362"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"EthanWong6362"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"EthanWong6362"},"content":"    void parse_multipleInputs_failure() {","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"EthanWong6362"},"content":"        String userInput \u003d TAG_DESC_CS2100 + TAG_DESC_CS2103T;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"EthanWong6362"},"content":"                new EditPersonDescriptorBuilder().withTags(VALID_TAG_CS2100, VALID_TAG_CS2103T).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"EthanWong6362"},"content":"        AddModCommand expectedCommand \u003d new AddModCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"EthanWong6362"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"EthanWong6362"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddModCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"EthanWong6362"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"charltonator":9,"EthanWong6362":29}},{"path":"src/test/java/seedu/modulink/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"EthanWong6362"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.CreateCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.FindCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.ListCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"ngjiayuan"},"content":"        CreateCommand command \u003d (CreateCommand) parser.parseCommand(PersonUtil.getCreateCommand(person));","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"ngjiayuan"},"content":"        assertEquals(new CreateCommand(person), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"EthanWong6362"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"EthanWong6362"},"content":"                .withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"EthanWong6362"},"content":"            + \" n/\" + VALID_NAME_BOB + \" p/\" + VALID_PHONE_BOB);","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"EthanWong6362"},"content":"        assertEquals(new EditCommand(descriptor), command);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"charltonator":19,"ngjiayuan":2,"-":68,"EthanWong6362":7}},{"path":"src/test/java/seedu/modulink/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"charltonator":1,"-":149}},{"path":"src/test/java/seedu/modulink/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"charltonator":3,"-":35}},{"path":"src/test/java/seedu/modulink/logic/parser/CreateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.GITHUB_USERNAME_DESC_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.GITHUB_USERNAME_DESC_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.INVALID_GITHUB_USERNAME_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.INVALID_TELEGRAM_HANDLE_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.TAG_DESC_CS2100;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.TAG_DESC_CS2103T;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TAG_CS2100;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TAG_CS2103T;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.CreateCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.GitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.StudentId;","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.TelegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"ngjiayuan"},"content":"public class CreateCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"ngjiayuan"},"content":"    private CreateCommandParser parser \u003d new CreateCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"EthanWong6362"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_CS2100).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"aakanshanarain"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"aakanshanarain"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + GITHUB_USERNAME_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"EthanWong6362"},"content":"                + TAG_DESC_CS2100, new CreateCommand(expectedPerson));","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"EthanWong6362"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + NAME_DESC_BOB + ID_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"aakanshanarain"},"content":"                + EMAIL_DESC_BOB + GITHUB_USERNAME_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"EthanWong6362"},"content":"                + TAG_DESC_CS2100, String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"EthanWong6362"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_CS2100, VALID_TAG_CS2103T)","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":71,"author":{"gitId":"aakanshanarain"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"aakanshanarain"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + GITHUB_USERNAME_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"aakanshanarain"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + TAG_DESC_CS2103T","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"EthanWong6362"},"content":"                + TAG_DESC_CS2100, new CreateCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"aakanshanarain"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + ID_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"aakanshanarain"},"content":"                + EMAIL_DESC_AMY + GITHUB_USERNAME_DESC_AMY + TELEGRAM_HANDLE_DESC_AMY,","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"ngjiayuan"},"content":"                new CreateCommand(expectedPerson));","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"ngjiayuan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + ID_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"zacharylwy"},"content":"                + EMAIL_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"aakanshanarain"},"content":"        // missing student ID prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_ID_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"zacharylwy"},"content":"                + EMAIL_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"zacharylwy"},"content":"                + VALID_PHONE_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"zacharylwy"},"content":"                + PHONE_DESC_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_ID_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"zacharylwy"},"content":"                + VALID_PHONE_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + ID_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"aakanshanarain"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + GITHUB_USERNAME_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"EthanWong6362"},"content":"                + TAG_DESC_CS2103T + TAG_DESC_CS2100, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"aakanshanarain"},"content":"        // invalid student ID","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_ID_DESC","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"aakanshanarain"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + GITHUB_USERNAME_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"EthanWong6362"},"content":"                + TAG_DESC_CS2103T + TAG_DESC_CS2100, StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"aakanshanarain"},"content":"                + INVALID_PHONE_DESC + EMAIL_DESC_BOB + GITHUB_USERNAME_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"EthanWong6362"},"content":"                + TAG_DESC_CS2103T + TAG_DESC_CS2100, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"aakanshanarain"},"content":"                + PHONE_DESC_BOB + INVALID_EMAIL_DESC + GITHUB_USERNAME_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"EthanWong6362"},"content":"                + TAG_DESC_CS2103T + TAG_DESC_CS2100, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"aakanshanarain"},"content":"        // invalid GitHub username","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"aakanshanarain"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_GITHUB_USERNAME_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"aakanshanarain"},"content":"                + TAG_DESC_CS2103T + TAG_DESC_CS2100, GitHubUsername.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"aakanshanarain"},"content":"        // invalid Telegram handle","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"aakanshanarain"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + GITHUB_USERNAME_DESC_BOB + INVALID_TELEGRAM_HANDLE_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"aakanshanarain"},"content":"                + TAG_DESC_CS2103T + TAG_DESC_CS2100, TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"zacharylwy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ID_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"EthanWong6362"},"content":"                + INVALID_TAG_DESC + VALID_TAG_CS2100, Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + ID_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"zacharylwy"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"EthanWong6362"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_CS2103T + TAG_DESC_CS2100,","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"ngjiayuan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"aakanshanarain":45,"charltonator":38,"ngjiayuan":5,"-":53,"zacharylwy":7,"EthanWong6362":12}},{"path":"src/test/java/seedu/modulink/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"charltonator":6,"-":26}},{"path":"src/test/java/seedu/modulink/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.GITHUB_USERNAME_DESC_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.INVALID_GITHUB_USERNAME_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.INVALID_TELEGRAM_HANDLE_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_GITHUB_USERNAME_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.GitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.StudentId;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.TelegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":58,"author":{"gitId":"EthanWong6362"},"content":"        assertParseFailure(parser, \"i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"EthanWong6362"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, INVALID_ID_DESC, StudentId.MESSAGE_CONSTRAINTS); // invalid student ID","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"EthanWong6362"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"EthanWong6362"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, INVALID_GITHUB_USERNAME_DESC,","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"aakanshanarain"},"content":"                GitHubUsername.MESSAGE_CONSTRAINTS); // invalid GitHub username","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, INVALID_TELEGRAM_HANDLE_DESC,","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"aakanshanarain"},"content":"                TelegramHandle.MESSAGE_CONSTRAINTS); // invalid Telegram handle","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"EthanWong6362"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"EthanWong6362"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"EthanWong6362"},"content":"        String userInput \u003d PHONE_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"EthanWong6362"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"EthanWong6362"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand expectedCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"EthanWong6362"},"content":"        String userInput \u003d PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand expectedCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"EthanWong6362"},"content":"        String userInput \u003d NAME_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand expectedCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"aakanshanarain"},"content":"        // student ID","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"aakanshanarain"},"content":"        userInput \u003d ID_DESC_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"aakanshanarain"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withStudentId(VALID_ID_AMY).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"aakanshanarain"},"content":"        expectedCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"aakanshanarain"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"EthanWong6362"},"content":"        userInput \u003d PHONE_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"EthanWong6362"},"content":"        expectedCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"EthanWong6362"},"content":"        userInput \u003d EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"EthanWong6362"},"content":"        expectedCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"aakanshanarain"},"content":"        // GitHub username","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"aakanshanarain"},"content":"        userInput \u003d GITHUB_USERNAME_DESC_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"aakanshanarain"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGitHubUsername(VALID_GITHUB_USERNAME_AMY).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"aakanshanarain"},"content":"        expectedCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"aakanshanarain"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"aakanshanarain"},"content":"        // Telegram handle","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"aakanshanarain"},"content":"        userInput \u003d TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"aakanshanarain"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"aakanshanarain"},"content":"        expectedCommand \u003d new EditCommand(descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"aakanshanarain"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"aakanshanarain":35,"charltonator":22,"-":67,"EthanWong6362":18}},{"path":"src/test/java/seedu/modulink/logic/parser/EditGroupStatusCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aakanshanarain"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"EthanWong6362"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.TAG_DESC_CS2100;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.TAG_DESC_CS2103T;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TAG_CS2100;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TAG_CS2103T;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.logic.commands.EditCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.logic.commands.EditGroupStatusCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"public class EditGroupStatusCommandParserTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"    private EditGroupStatusCommandParser parser \u003d new EditGroupStatusCommandParser();","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"    void parse_oneInput_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"        String userInput \u003d TAG_DESC_CS2100;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"                new EditPersonDescriptorBuilder().withTags(VALID_TAG_CS2100).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"        EditGroupStatusCommand expectedCommand \u003d new EditGroupStatusCommand(descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"    void parse_multipleInputs_failure() {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"        String userInput \u003d TAG_DESC_CS2100 + TAG_DESC_CS2103T;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"                new EditPersonDescriptorBuilder().withTags(VALID_TAG_CS2100, VALID_TAG_CS2103T).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"        EditGroupStatusCommand expectedCommand \u003d new EditGroupStatusCommand(descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"EthanWong6362"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditGroupStatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"aakanshanarain":36,"EthanWong6362":3}},{"path":"src/test/java/seedu/modulink/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"    /*","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"                new FilterCommand(new ModuleContainsKeywordsPredicate(","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"                        Set.of(new Mod(\"CS2100\"))));","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"        assertParseSuccess(parser, \"CS2100\", expectedFilterCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"        assertParseSuccess(parser, \" \\n mod/CS2100 \\n \\t need group  \\t\", expectedFilterCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"    */","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"aakanshanarain":30,"charltonator":4}},{"path":"src/test/java/seedu/modulink/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.FindCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"charltonator":6,"-":28}},{"path":"src/test/java/seedu/modulink/logic/parser/FindIdCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.FindIdCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"public class FindIdCommandParserTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"    private FindIdCommandParser parser \u003d new FindIdCommandParser();","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindIdCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"    public void parse_validArgs_returnsFindIdCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"        FindIdCommand expectedFindIdCommand \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"                new FindIdCommand(new StudentIdContainsKeywordsPredicate(Arrays.asList(\"A1234567X\", \"A1234678X\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"        assertParseSuccess(parser, \"A1234567X A1234678X\", expectedFindIdCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"        assertParseSuccess(parser, \" \\n A1234567X \\n \\t A1234678X  \\t\", expectedFindIdCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"charltonator":34}},{"path":"src/test/java/seedu/modulink/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.GitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.StudentId;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.TelegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"    private static final String INVALID_STUDENT_ID \u003d \"E0123456R\";","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"    private static final String INVALID_GITHUB_USERNAME \u003d \"@rachel\";","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"    private static final String INVALID_TELEGRAM_HANDLE \u003d \"rach#22\";","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"    private static final String VALID_STUDENT_ID \u003d \"A0227586Y\";","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"EthanWong6362"},"content":"    private static final String VALID_TAG_1 \u003d \"CS2103T\";","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"EthanWong6362"},"content":"    private static final String VALID_TAG_2 \u003d \"CS2100\";","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"    private static final String VALID_GITHUB_USERNAME \u003d \"rachelwalker\";","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"    private static final String VALID_TELEGRAM_HANDLE \u003d \"rach2200\";","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"aakanshanarain"},"content":"    public void parseStudentId_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"aakanshanarain"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStudentId((String) null));","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"aakanshanarain"},"content":"    public void parseStudentId_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"aakanshanarain"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStudentId(INVALID_STUDENT_ID));","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"aakanshanarain"},"content":"    public void parseStudentId_validValueWithoutWhitespace_returnsStudentId() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"aakanshanarain"},"content":"        StudentId expectedStudentId \u003d new StudentId(VALID_STUDENT_ID);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"aakanshanarain"},"content":"        assertEquals(expectedStudentId, ParserUtil.parseStudentId(VALID_STUDENT_ID));","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"aakanshanarain"},"content":"    // figure out why whitespaces makes this test fail","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"aakanshanarain"},"content":"    public void parseStudentId_validValueWithWhitespace_returnsTrimmedStudentId() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"aakanshanarain"},"content":"        String studentIdWithWhitespace \u003d WHITESPACE + VALID_STUDENT_ID + WHITESPACE;","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"aakanshanarain"},"content":"        StudentId expectedStudentId \u003d new StudentId(VALID_STUDENT_ID);","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"aakanshanarain"},"content":"        assertEquals(expectedStudentId, ParserUtil.parseStudentId(studentIdWithWhitespace));","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"aakanshanarain"},"content":"    public void parseGitHubUsername_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"aakanshanarain"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGithubUsername(INVALID_GITHUB_USERNAME));","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"aakanshanarain"},"content":"    public void parseGitHubUsername_validValueWithoutWhitespace_returnsGitHubUsername() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"aakanshanarain"},"content":"        GitHubUsername expectedUsername \u003d new GitHubUsername(VALID_GITHUB_USERNAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"aakanshanarain"},"content":"        assertEquals(expectedUsername, ParserUtil.parseGithubUsername(VALID_GITHUB_USERNAME));","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"aakanshanarain"},"content":"    public void parseGitHubUsername_validValueWithWhitespace_returnsTrimmedGitHubUsername() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"aakanshanarain"},"content":"        String usernameWithWhitespace \u003d WHITESPACE + VALID_GITHUB_USERNAME + WHITESPACE;","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"aakanshanarain"},"content":"        GitHubUsername expectedUsername \u003d new GitHubUsername(VALID_GITHUB_USERNAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"aakanshanarain"},"content":"        assertEquals(expectedUsername, ParserUtil.parseTelegramHandle(usernameWithWhitespace));","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"aakanshanarain"},"content":"    public void parseTelegramHandle_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"aakanshanarain"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegramHandle(INVALID_TELEGRAM_HANDLE));","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"aakanshanarain"},"content":"    public void parseTelegramHandle_validValueWithoutWhitespace_returnsTelegramHandle() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"aakanshanarain"},"content":"        TelegramHandle expectedHandle \u003d new TelegramHandle(VALID_TELEGRAM_HANDLE);","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"aakanshanarain"},"content":"        assertEquals(expectedHandle, ParserUtil.parseTelegramHandle(VALID_TELEGRAM_HANDLE));","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"aakanshanarain"},"content":"    public void parseTelegramHandle_validValueWithWhitespace_returnsTrimmedTelegramHandle() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"aakanshanarain"},"content":"        String handleWithWhitespace \u003d WHITESPACE + VALID_TELEGRAM_HANDLE + WHITESPACE;","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"aakanshanarain"},"content":"        TelegramHandle expectedHandle \u003d new TelegramHandle(VALID_TELEGRAM_HANDLE);","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"aakanshanarain"},"content":"        assertEquals(expectedHandle, ParserUtil.parseTelegramHandle(handleWithWhitespace));","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"EthanWong6362"},"content":"        Mod expectedMod \u003d new Mod(VALID_TAG_1);","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"EthanWong6362"},"content":"        assertEquals(expectedMod, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2021-10-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"EthanWong6362"},"content":"        Mod expectedMod \u003d new Mod(VALID_TAG_1);","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"EthanWong6362"},"content":"        assertEquals(expectedMod, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2021-10-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":241,"author":{"gitId":"EthanWong6362"},"content":"        Set\u003cMod\u003e actualModSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2021-10-07"},{"lineNumber":242,"author":{"gitId":"EthanWong6362"},"content":"        Set\u003cMod\u003e expectedModSet \u003d new HashSet\u003cMod\u003e(Arrays.asList(new Mod(VALID_TAG_1), new Mod(VALID_TAG_2)));","lastModifiedDate":"2021-10-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":244,"author":{"gitId":"EthanWong6362"},"content":"        assertEquals(expectedModSet, actualModSet);","lastModifiedDate":"2021-10-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"aakanshanarain":64,"charltonator":9,"-":164,"EthanWong6362":9}},{"path":"src/test/java/seedu/modulink/logic/parser/RemFavCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"ngjiayuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.RemFavCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"ngjiayuan"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"ngjiayuan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddFavCommandParser.","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"ngjiayuan"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"ngjiayuan"},"content":"public class RemFavCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"ngjiayuan"},"content":"    private RemFavCommandParser parser \u003d new RemFavCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"ngjiayuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"ngjiayuan"},"content":"    public void parse_emptyArgs_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"ngjiayuan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemFavCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"ngjiayuan"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"ngjiayuan"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"ngjiayuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"ngjiayuan"},"content":"    public void parse_twoArgs_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"EthanWong6362"},"content":"        String expectedMessage \u003d RemFavCommand.MULTIPLE_ID_ERROR;","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"ngjiayuan"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"ngjiayuan"},"content":"        assertParseFailure(parser, \"A123333X A232113Y\", expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"ngjiayuan"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"ngjiayuan"},"content":"    public void parse_arg_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"ngjiayuan"},"content":"        Person expectedPerson \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"ngjiayuan"},"content":"                .withStudentId(\"A1234567D\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"ngjiayuan"},"content":"                .withFavourite(false).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"ngjiayuan"},"content":"        String id \u003d expectedPerson.getStudentId().value;","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"ngjiayuan"},"content":"        assertParseSuccess(parser, id, new RemFavCommand(id));","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"ngjiayuan"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"charltonator":7,"ngjiayuan":38,"EthanWong6362":1}},{"path":"src/test/java/seedu/modulink/logic/parser/RemoveModCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"EthanWong6362"},"content":"import static seedu.modulink.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.TAG_DESC_CS2100;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.TAG_DESC_CS2103T;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TAG_CS2100;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TAG_CS2103T;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"EthanWong6362"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.RemoveModCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"EthanWong6362"},"content":"class RemoveModCommandParserTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"EthanWong6362"},"content":"    private RemoveModCommandParser parser \u003d new RemoveModCommandParser();","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"EthanWong6362"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"EthanWong6362"},"content":"    void parse_oneInput_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"EthanWong6362"},"content":"        String userInput \u003d TAG_DESC_CS2100;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"EthanWong6362"},"content":"                new EditPersonDescriptorBuilder().withTags(VALID_TAG_CS2100).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"EthanWong6362"},"content":"        RemoveModCommand expectedCommand \u003d new RemoveModCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"EthanWong6362"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"EthanWong6362"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"EthanWong6362"},"content":"    void parse_multipleInputs_failure() {","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"EthanWong6362"},"content":"        String userInput \u003d TAG_DESC_CS2100 + TAG_DESC_CS2103T;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"EthanWong6362"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"EthanWong6362"},"content":"                new EditPersonDescriptorBuilder().withTags(VALID_TAG_CS2100, VALID_TAG_CS2103T).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"EthanWong6362"},"content":"        RemoveModCommand expectedCommand \u003d new RemoveModCommand(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"EthanWong6362"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"EthanWong6362"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveModCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"EthanWong6362"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"charltonator":9,"EthanWong6362":29}},{"path":"src/test/java/seedu/modulink/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TAG_CS2103T;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"EthanWong6362"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_CS2103T)","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"EthanWong6362"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_CS2103T)","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"charltonator":8,"-":91,"EthanWong6362":2}},{"path":"src/test/java/seedu/modulink/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.GuiSettings;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.AddressBookBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"ngjiayuan"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"ngjiayuan"},"content":"    public void hasProfile_personInIndexZeroOfAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"ngjiayuan"},"content":"        modelManager.addProfile(ALICE);","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"ngjiayuan"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"ngjiayuan"},"content":"        assertEquals(modelManager.getFilteredPersonList().get(0), ALICE);","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"ngjiayuan"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"ngjiayuan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"charltonator":8,"ngjiayuan":7,"-":124}},{"path":"src/test/java/seedu/modulink/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"charltonator":2,"-":19}},{"path":"src/test/java/seedu/modulink/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"charltonator":2,"-":66}},{"path":"src/test/java/seedu/modulink/model/person/GitHubUsernameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aakanshanarain"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"aakanshanarain"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"public class GitHubUsernameTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"        String invalidGitHubUsername \u003d \"\";","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GitHubUsername(invalidGitHubUsername));","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"    public void isValidGitHubUsername() {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"        // invalid GitHub username","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(GitHubUsername.isValidUsername(\"\")); // empty string","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(GitHubUsername.isValidUsername(\" \")); // spaces only","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(GitHubUsername.isValidUsername(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(GitHubUsername.isValidUsername(\"@peter\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(GitHubUsername.isValidUsername(\"alex yeoh\")); // contains spaces","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"        // valid GitHub username","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(GitHubUsername.isValidUsername(\"peterjack\")); // alphabets only","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(GitHubUsername.isValidUsername(\"12345\")); // numbers only","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(GitHubUsername.isValidUsername(\"peterthe2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(GitHubUsername.isValidUsername(\"CapitalTan\")); // with capital letters","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(GitHubUsername.isValidUsername(\"alexa_tan_test\")); // with hyphens","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"aakanshanarain":33}},{"path":"src/test/java/seedu/modulink/model/person/IsFavouritePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"public class IsFavouritePredicateTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"    public void test_returnsTrue() {","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"        // One keyword","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"        IsFavouritePredicate predicate \u003d new IsFavouritePredicate();","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFavourite(true).build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"    public void test_returnsFalse() {","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"zacharylwy"},"content":"        IsFavouritePredicate predicate \u003d new IsFavouritePredicate();","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withFavourite(false).build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"charltonator":2,"zacharylwy":22}},{"path":"src/test/java/seedu/modulink/model/person/ModuleContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"aakanshanarain"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"public class ModuleContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EthanWong6362"},"content":"    public void equals() throws ParseException {","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"        Set\u003cMod\u003e firstPredicateKeywordList \u003d Set.of(new Mod(\"CS2100\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"        Set\u003cMod\u003e secondPredicateKeywordList \u003d Set.of(new Mod(\"CS2103T\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"        ModuleContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"                new ModuleContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"        ModuleContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"                new ModuleContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"        ModuleContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"                new ModuleContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"aakanshanarain":37,"charltonator":2,"EthanWong6362":2}},{"path":"src/test/java/seedu/modulink/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"zacharylwy"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"charltonator":2,"-":72,"zacharylwy":1}},{"path":"src/test/java/seedu/modulink/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"charltonator":2,"-":38}},{"path":"src/test/java/seedu/modulink/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TAG_CS2103T;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"EthanWong6362"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getMods().remove(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"EthanWong6362"},"content":"                .withTags(VALID_TAG_CS2103T).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":83,"author":{"gitId":"EthanWong6362"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_CS2103T).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"charltonator":9,"-":74,"EthanWong6362":3}},{"path":"src/test/java/seedu/modulink/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"charltonator":2,"-":38}},{"path":"src/test/java/seedu/modulink/model/person/StudentIdContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"public class StudentIdContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"    public void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"        StudentIdContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"                new StudentIdContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"        StudentIdContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"                new StudentIdContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"        StudentIdContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"                new StudentIdContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"charltonator"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"charltonator"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"charltonator"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"charltonator"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"charltonator"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"charltonator"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"charltonator"},"content":"    public void test_studentIdContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"charltonator"},"content":"        StudentIdContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"charltonator"},"content":"                new StudentIdContainsKeywordsPredicate(Collections.singletonList(\"A1234567X\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"charltonator"},"content":"        assertTrue(predicate.test(new PersonBuilder().withStudentId(\"A1234567X\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"charltonator"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"charltonator"},"content":"    public void test_studentIdDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"charltonator"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"charltonator"},"content":"        StudentIdContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"charltonator"},"content":"                new StudentIdContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"charltonator"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"A1234567X\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"charltonator"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"charltonator"},"content":"        predicate \u003d new StudentIdContainsKeywordsPredicate(Arrays.asList(\"A1234567X\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"charltonator"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"A1234555X\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"charltonator":63}},{"path":"src/test/java/seedu/modulink/model/person/StudentIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"aakanshanarain"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"public class StudentIdTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StudentId(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"    public void constructor_invalidStudentId_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"        String invalidStudentId \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new StudentId(invalidStudentId));","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"    public void isValidId() {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"        // null Student ID","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"        assertThrows(NullPointerException.class, () -\u003e StudentId.isValidId(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"        // invalid Student IDs","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(StudentId.isValidId(\"\")); // empty string","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(StudentId.isValidId(\" \")); // spaces only","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(StudentId.isValidId(\"91\")); // less than 9 characters","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(StudentId.isValidId(\"B1234567A\")); // doesn\u0027t start with \u0027A\u0027","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(StudentId.isValidId(\"A123456Z\")); // doesn\u0027t have 7 digits","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(StudentId.isValidId(\"A1234567\")); // doesn\u0027t end with a letter","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(StudentId.isValidId(\"A 1293998Z\")); // contains a space","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"        // valid Student IDs","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(StudentId.isValidId(\"A0123456Z\")); // exactly 9 characters","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(StudentId.isValidId(\"A1234567A\")); // can have different last letter","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(StudentId.isValidId(\"a1234567A\")); // first letter is not capitalised","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(StudentId.isValidId(\"a1234567b\")); // neither first nor last letter are capitalised","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(StudentId.isValidId(\"A1234567b\")); // last letter is not capitalised","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"aakanshanarain":41,"charltonator":2}},{"path":"src/test/java/seedu/modulink/model/person/TelegramHandleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aakanshanarain"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"aakanshanarain"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"public class TelegramHandleTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"aakanshanarain"},"content":"        String invalidTelegramHandle \u003d \"\";","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"aakanshanarain"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TelegramHandle(invalidTelegramHandle));","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"aakanshanarain"},"content":"    public void isValidTelegramHandle() {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"aakanshanarain"},"content":"        // invalid Telegram handle","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(TelegramHandle.isValidHandle(\"\")); // empty string","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(TelegramHandle.isValidHandle(\" \")); // spaces only","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(TelegramHandle.isValidHandle(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(TelegramHandle.isValidHandle(\"@peter!23\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(TelegramHandle.isValidHandle(\"@peter@23\")); // contains \u0027@\u0027 after first character","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"        assertFalse(TelegramHandle.isValidHandle(\"alex yeoh\")); // contains spaces","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"        // valid Telegram handle","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(TelegramHandle.isValidHandle(\"peterjack\")); // alphabets only","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(TelegramHandle.isValidHandle(\"12345\")); // numbers only","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(TelegramHandle.isValidHandle(\"peterthe2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(TelegramHandle.isValidHandle(\"CapitalTan\")); // with capital letters","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"        assertTrue(TelegramHandle.isValidHandle(\"alexa_tan_test\")); // with hyphens","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"aakanshanarain":34}},{"path":"src/test/java/seedu/modulink/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TAG_CS2103T;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.PersonBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"EthanWong6362"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_CS2103T)","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"EthanWong6362"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_CS2103T)","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"charltonator":8,"-":159,"EthanWong6362":2}},{"path":"src/test/java/seedu/modulink/model/tag/ModTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.model.tag;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"EthanWong6362"},"content":"public class ModTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"EthanWong6362"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Mod(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"EthanWong6362"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Mod(invalidTagName));","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"EthanWong6362"},"content":"        assertThrows(NullPointerException.class, () -\u003e Mod.isValidTagName(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"charltonator":2,"-":20,"EthanWong6362":4}},{"path":"src/test/java/seedu/modulink/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.GitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.StudentId;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.TelegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"aakanshanarain"},"content":"    private static final String INVALID_ID \u003d \"1234568Z\";","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"aakanshanarain"},"content":"    private static final String INVALID_GITHUB_USERNAME \u003d \"@alex\";","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"aakanshanarain"},"content":"    private static final String INVALID_TELEGRAM_HANDLE \u003d \"alex!22\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"    private static final String VALID_ID \u003d BENSON.getStudentId().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"    private static final String VALID_GITHUB_USERNAME \u003d BENSON.getGithubUsername().toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"    private static final String VALID_TELEGRAM_HANDLE \u003d BENSON.getTelegramHandle().toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"    private static final boolean VALID_ISFAVOURITE \u003d BENSON.getIsFavourite();","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"EthanWong6362"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getMods().stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"ngjiayuan"},"content":"    private static final boolean VALID_ISMYPROFILE \u003d BENSON.getIsMyProfile();","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"aakanshanarain"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_ID, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"aakanshanarain"},"content":"                    VALID_GITHUB_USERNAME, VALID_TELEGRAM_HANDLE, VALID_ISFAVOURITE, VALID_TAGS, VALID_ISMYPROFILE);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"aakanshanarain"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_ID, VALID_PHONE,","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"aakanshanarain"},"content":"                VALID_EMAIL, VALID_GITHUB_USERNAME, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"aakanshanarain"},"content":"                VALID_ISFAVOURITE, VALID_TAGS, VALID_ISMYPROFILE);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"aakanshanarain"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_ID, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"aakanshanarain"},"content":"                        VALID_GITHUB_USERNAME, VALID_TELEGRAM_HANDLE, VALID_ISFAVOURITE, VALID_TAGS, VALID_ISMYPROFILE);","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"aakanshanarain"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_ID,","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"aakanshanarain"},"content":"                null, VALID_EMAIL, VALID_GITHUB_USERNAME,","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"aakanshanarain"},"content":"                VALID_TELEGRAM_HANDLE, VALID_ISFAVOURITE, VALID_TAGS, VALID_ISMYPROFILE);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"aakanshanarain"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_ID, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"aakanshanarain"},"content":"                        VALID_GITHUB_USERNAME, VALID_TELEGRAM_HANDLE, VALID_ISFAVOURITE,","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"zacharylwy"},"content":"                        VALID_TAGS, VALID_ISMYPROFILE);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"aakanshanarain"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_ID,","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"aakanshanarain"},"content":"                VALID_PHONE, null, VALID_GITHUB_USERNAME,","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"aakanshanarain"},"content":"                VALID_TELEGRAM_HANDLE, VALID_ISFAVOURITE, VALID_TAGS, VALID_ISMYPROFILE);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"aakanshanarain"},"content":"    public void toModelType_invalidStudentId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"aakanshanarain"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"ngjiayuan"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_ID, VALID_PHONE,","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"aakanshanarain"},"content":"                        VALID_EMAIL, VALID_GITHUB_USERNAME, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"aakanshanarain"},"content":"                        VALID_ISFAVOURITE, VALID_TAGS, VALID_ISMYPROFILE);","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"aakanshanarain"},"content":"        String expectedMessage \u003d StudentId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"aakanshanarain"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"aakanshanarain"},"content":"    public void toModelType_nullStudentId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"aakanshanarain"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null,","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"aakanshanarain"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_GITHUB_USERNAME,","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"aakanshanarain"},"content":"                VALID_TELEGRAM_HANDLE, VALID_ISFAVOURITE, VALID_TAGS, VALID_ISMYPROFILE);","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"aakanshanarain"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentId.class.getSimpleName());","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"aakanshanarain"},"content":"    public void toModelType_invalidGitHubUsername_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"aakanshanarain"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"aakanshanarain"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_ID, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"aakanshanarain"},"content":"                        INVALID_GITHUB_USERNAME, VALID_TELEGRAM_HANDLE, VALID_ISFAVOURITE,","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"aakanshanarain"},"content":"                        VALID_TAGS, VALID_ISMYPROFILE);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"aakanshanarain"},"content":"        String expectedMessage \u003d GitHubUsername.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"aakanshanarain"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"aakanshanarain"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"aakanshanarain"},"content":"    public void toModelType_invalidTelegramHandle_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"aakanshanarain"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"aakanshanarain"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_ID, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"aakanshanarain"},"content":"                        VALID_GITHUB_USERNAME, INVALID_TELEGRAM_HANDLE, VALID_ISFAVOURITE,","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"aakanshanarain"},"content":"                        VALID_TAGS, VALID_ISMYPROFILE);","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"aakanshanarain"},"content":"        String expectedMessage \u003d TelegramHandle.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"aakanshanarain"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"ngjiayuan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_ID, VALID_PHONE,","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"aakanshanarain"},"content":"                        VALID_EMAIL, VALID_GITHUB_USERNAME,","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"aakanshanarain"},"content":"                        VALID_TELEGRAM_HANDLE, VALID_ISFAVOURITE, invalidTags, VALID_ISMYPROFILE);","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"aakanshanarain":60,"charltonator":9,"ngjiayuan":3,"-":79,"zacharylwy":1,"EthanWong6362":2}},{"path":"src/test/java/seedu/modulink/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"charltonator":9,"-":101}},{"path":"src/test/java/seedu/modulink/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.util.JsonUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.testutil.TypicalPersons;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"charltonator":6,"-":40}},{"path":"src/test/java/seedu/modulink/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.GuiSettings;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"charltonator":5,"-":118}},{"path":"src/test/java/seedu/modulink/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.GuiSettings;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":6,"-":62}},{"path":"src/test/java/seedu/modulink/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.testutil;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":3,"-":31}},{"path":"src/test/java/seedu/modulink/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.testutil;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"charltonator":1,"-":33}},{"path":"src/test/java/seedu/modulink/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.testutil;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"EthanWong6362"},"content":"import seedu.modulink.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.GitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.StudentId;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.TelegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"        descriptor.setStudentId(person.getStudentId());","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"aakanshanarain"},"content":"        descriptor.setGitHubUsername(person.getGithubUsername());","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"aakanshanarain"},"content":"        descriptor.setTelegramHandle(person.getTelegramHandle());","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"EthanWong6362"},"content":"        descriptor.setTags(person.getMods());","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"aakanshanarain"},"content":"     * Sets the {@code Student ID} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"aakanshanarain"},"content":"    public EditPersonDescriptorBuilder withStudentId(String studentId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"aakanshanarain"},"content":"        descriptor.setStudentId(new StudentId(studentId));","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"aakanshanarain"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"aakanshanarain"},"content":"     * Sets the {@code GitHubUsername} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"aakanshanarain"},"content":"    public EditPersonDescriptorBuilder withGitHubUsername(String gitHubUsername) {","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"aakanshanarain"},"content":"        descriptor.setGitHubUsername(new GitHubUsername(gitHubUsername));","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"aakanshanarain"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"aakanshanarain"},"content":"     * Sets the {@code TelegramHandle} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"aakanshanarain"},"content":"    public EditPersonDescriptorBuilder withTelegramHandle(String telegramHandle) {","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"aakanshanarain"},"content":"        descriptor.setTelegramHandle(new TelegramHandle(telegramHandle));","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"aakanshanarain"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"EthanWong6362"},"content":"     * Parses the {@code mods} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"EthanWong6362"},"content":"    public EditPersonDescriptorBuilder withTags(String... mods) {","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"EthanWong6362"},"content":"        Set\u003cMod\u003e modSet \u003d Stream.of(mods).map(modString -\u003e {","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"EthanWong6362"},"content":"            try {","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"EthanWong6362"},"content":"                return new Mod(modString);","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"EthanWong6362"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"EthanWong6362"},"content":"                return null;","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"EthanWong6362"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"EthanWong6362"},"content":"        }).collect(Collectors.toSet());","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"EthanWong6362"},"content":"        descriptor.setTags(modSet);","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"aakanshanarain":29,"charltonator":8,"-":65,"EthanWong6362":12}},{"path":"src/test/java/seedu/modulink/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.testutil;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.GitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.StudentId;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"aakanshanarain"},"content":"import seedu.modulink.model.person.TelegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"aakanshanarain"},"content":"    public static final String DEFAULT_ID \u003d \"A1234567Z\";","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"aakanshanarain"},"content":"    public static final String DEFAULT_GITHUB_USERNAME \u003d \"amybee\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"aakanshanarain"},"content":"    public static final String DEFAULT_TELEGRAM_HANDLE \u003d \"amybee22\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"EthanWong6362"},"content":"    public static final boolean DEFAULT_IS_FAVOURITE \u003d false;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"ngjiayuan"},"content":"    public static final boolean DEFAULT_IS_MY_PROFILE \u003d false;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"    private StudentId id;","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"    private GitHubUsername gitHubUsername;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"aakanshanarain"},"content":"    private TelegramHandle telegramHandle;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"EthanWong6362"},"content":"    private boolean isFavourite;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"    private Set\u003cMod\u003e mods;","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"ngjiayuan"},"content":"    private boolean isMyProfile;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"        id \u003d new StudentId(DEFAULT_ID);","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"aakanshanarain"},"content":"        gitHubUsername \u003d new GitHubUsername(DEFAULT_GITHUB_USERNAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"aakanshanarain"},"content":"        telegramHandle \u003d new TelegramHandle(DEFAULT_TELEGRAM_HANDLE);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"EthanWong6362"},"content":"        isFavourite \u003d DEFAULT_IS_FAVOURITE;","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"EthanWong6362"},"content":"        mods \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"ngjiayuan"},"content":"        isMyProfile \u003d DEFAULT_IS_MY_PROFILE;","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"aakanshanarain"},"content":"        id \u003d personToCopy.getStudentId();","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"aakanshanarain"},"content":"        gitHubUsername \u003d personToCopy.getGithubUsername();","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"aakanshanarain"},"content":"        telegramHandle \u003d personToCopy.getTelegramHandle();","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"EthanWong6362"},"content":"        isFavourite \u003d personToCopy.getIsFavourite();","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"EthanWong6362"},"content":"        mods \u003d new HashSet\u003c\u003e(personToCopy.getMods());","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"ngjiayuan"},"content":"        isMyProfile \u003d personToCopy.getIsMyProfile();","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"aakanshanarain"},"content":"     * Sets the {@code StudentId} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"aakanshanarain"},"content":"    public PersonBuilder withStudentId(String studentId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"aakanshanarain"},"content":"        this.id \u003d new StudentId(studentId);","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"aakanshanarain"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"EthanWong6362"},"content":"     * Parses the {@code mods} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"EthanWong6362"},"content":"    public PersonBuilder withTags(String ... mods) {","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"EthanWong6362"},"content":"        this.mods \u003d SampleDataUtil.getTagSet(mods);","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"aakanshanarain"},"content":"     * Sets the {@code GitHubUsername} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"aakanshanarain"},"content":"    public PersonBuilder withGitHubUsername(String gitHubUsername) {","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"aakanshanarain"},"content":"        this.gitHubUsername \u003d new GitHubUsername(gitHubUsername);","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"aakanshanarain"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"aakanshanarain"},"content":"     * Sets the {@code TelegramHandle} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"aakanshanarain"},"content":"    public PersonBuilder withTelegramHandle(String telegramHandle) {","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"aakanshanarain"},"content":"        this.telegramHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"aakanshanarain"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"aakanshanarain"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"aakanshanarain"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"zacharylwy"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"zacharylwy"},"content":"     * Sets the {@code isFavourite} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":128,"author":{"gitId":"zacharylwy"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":129,"author":{"gitId":"zacharylwy"},"content":"    public PersonBuilder withFavourite(boolean isFavourite) {","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"zacharylwy"},"content":"        this.isFavourite \u003d isFavourite;","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"zacharylwy"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":132,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":133,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":134,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"aakanshanarain"},"content":"     * Builds a {@Code Person} object","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"aakanshanarain"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":139,"author":{"gitId":"aakanshanarain"},"content":"        return new Person(name, id, phone, email,","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"aakanshanarain"},"content":"                gitHubUsername, telegramHandle, isFavourite, mods, isMyProfile);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":143,"author":{"gitId":"aakanshanarain"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"aakanshanarain"},"content":"     * Builds the user\u0027s {@Code Person} personal profile","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"aakanshanarain"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"aakanshanarain"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"EthanWong6362"},"content":"    public Person buildProfile() {","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"aakanshanarain"},"content":"        return new Person(name, id, phone, email,","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"aakanshanarain"},"content":"                gitHubUsername, telegramHandle, isFavourite, mods, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"EthanWong6362"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"EthanWong6362"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"aakanshanarain":50,"charltonator":8,"ngjiayuan":4,"-":69,"zacharylwy":8,"EthanWong6362":13}},{"path":"src/test/java/seedu/modulink/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.testutil;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_GITHUB_USERNAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.CreateCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.tag.Mod;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"ngjiayuan"},"content":"    public static String getCreateCommand(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"ngjiayuan"},"content":"        return CreateCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"aakanshanarain"},"content":"        sb.append(PREFIX_ID + person.getStudentId().value + \" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"        sb.append(PREFIX_GITHUB_USERNAME + person.getGithubUsername().value + \" \");","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"aakanshanarain"},"content":"        sb.append(PREFIX_TELEGRAM_HANDLE + person.getTelegramHandle().value + \" \");","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"EthanWong6362"},"content":"        person.getMods().stream().forEach(","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"EthanWong6362"},"content":"            s -\u003e sb.append(PREFIX_MOD + s.modName + \" \")","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"aakanshanarain"},"content":"        descriptor.getStudentId().ifPresent(studentId -\u003e sb.append(PREFIX_ID).append(studentId.value).append(\" \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"aakanshanarain"},"content":"        descriptor.getGitHubUsername().ifPresent(gitHubUsername -\u003e sb.append(PREFIX_GITHUB_USERNAME)","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"aakanshanarain"},"content":"                .append(gitHubUsername.value).append(\" \"));","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"aakanshanarain"},"content":"        descriptor.getTelegramHandle().ifPresent(telegramHandle -\u003e sb.append(PREFIX_TELEGRAM_HANDLE)","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"aakanshanarain"},"content":"                .append(telegramHandle.value).append(\" \"));","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"EthanWong6362"},"content":"            Set\u003cMod\u003e mods \u003d descriptor.getTags().get();","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"EthanWong6362"},"content":"            if (mods.isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"EthanWong6362"},"content":"                sb.append(PREFIX_MOD);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"EthanWong6362"},"content":"                mods.forEach(s -\u003e sb.append(PREFIX_MOD).append(s.modName).append(\" \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"aakanshanarain":10,"charltonator":10,"ngjiayuan":2,"-":42,"EthanWong6362":6}},{"path":"src/test/java/seedu/modulink/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.testutil;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":1,"-":71}},{"path":"src/test/java/seedu/modulink/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.testutil;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charltonator":4,"-":51}},{"path":"src/test/java/seedu/modulink/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.testutil;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"charltonator":2,"-":10}},{"path":"src/test/java/seedu/modulink/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.testutil;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_GITHUB_USERNAME_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_GITHUB_USERNAME_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TAG_CS2100;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TAG_CS2103T;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"aakanshanarain"},"content":"import static seedu.modulink.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"aakanshanarain"},"content":"            .withStudentId(\"A1234567A\")","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"aakanshanarain"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"aakanshanarain"},"content":"            .withGitHubUsername(\"alicepauline\")","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"aakanshanarain"},"content":"            .withTelegramHandle(\"@alicepauline_99\")","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"zacharylwy"},"content":"            .withFavourite(true)","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"EthanWong6362"},"content":"            .withTags(\"CS2100\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"aakanshanarain"},"content":"            .withStudentId(\"A1234567B\")","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"zacharylwy"},"content":"            .withFavourite(true)","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"EthanWong6362"},"content":"            .withTags(\"CS2103T\", \"CS2100\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"aakanshanarain"},"content":"            .withStudentId(\"A1234567C\")","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"aakanshanarain"},"content":"            .withEmail(\"heinz@example.com\").withGitHubUsername(\"carl_kurz\")","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"aakanshanarain"},"content":"            .withFavourite(true).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"aakanshanarain"},"content":"            .withStudentId(\"A1234567D\").withEmail(\"cornelia@example.com\").withTelegramHandle(\"@danielmeierr\")","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"EthanWong6362"},"content":"            .withFavourite(false).withTags(\"CS2103T\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"zacharylwy"},"content":"            .withEmail(\"werner@example.com\").withStudentId(\"A1234567E\").withFavourite(false).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"aakanshanarain"},"content":"            .withEmail(\"lydia@example.com\").withGitHubUsername(\"fiona123\")","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"aakanshanarain"},"content":"            .withStudentId(\"A1234567F\").withFavourite(false).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"zacharylwy"},"content":"            .withEmail(\"anna@example.com\").withStudentId(\"A1234567G\").withFavourite(false).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":59,"author":{"gitId":"aakanshanarain"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withStudentId(\"A1234567H\")","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"aakanshanarain"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"zacharylwy"},"content":"            .withEmail(\"stefan@example.com\").withFavourite(false).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"aakanshanarain"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withStudentId(\"A1234567I\")","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"aakanshanarain"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"zacharylwy"},"content":"            .withEmail(\"hans@example.com\").withFavourite(false).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":67,"author":{"gitId":"aakanshanarain"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withStudentId(VALID_ID_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"aakanshanarain"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"aakanshanarain"},"content":"            .withEmail(VALID_EMAIL_AMY).withGitHubUsername(VALID_GITHUB_USERNAME_AMY)","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"aakanshanarain"},"content":"            .withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY).withTags(VALID_TAG_CS2100).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"aakanshanarain"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"aakanshanarain"},"content":"            .withStudentId(VALID_ID_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"aakanshanarain"},"content":"            .withEmail(VALID_EMAIL_BOB).withGitHubUsername(VALID_GITHUB_USERNAME_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"aakanshanarain"},"content":"            .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).withTags(VALID_TAG_CS2103T, VALID_TAG_CS2100)","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"aakanshanarain":27,"charltonator":13,"-":46,"zacharylwy":6,"EthanWong6362":3}},{"path":"src/test/java/seedu/modulink/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"charltonator":1,"-":34}},{"path":"src/test/java/seedu/modulink/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"package seedu.modulink.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"import static seedu.modulink.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"import seedu.modulink.MainApp;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"charltonator":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"\u003c?import seedu.modulink.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"charltonator":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":"\u003cfx:root type\u003d\"seedu.modulink.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"charltonator":1,"-":5}}]
