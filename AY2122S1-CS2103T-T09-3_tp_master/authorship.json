[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"# CSBook","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T09-3/tp/branch/master/graph/badge.svg?token\u003dROK6R0FQXN)](https://codecov.io/gh/AY2122S1-CS2103T-T09-3/tp)","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"## What is CSBook?","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"**CSBook is a desktop application for CS Teaching Assistants to manage their students\u0027 details.**","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"## Features","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":"### 1. Group Your Students","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":"CSBook provides you an organized way to manage your students by grouping them based on their classes.","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"### 2. Manage Student Details","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"CSBook allows you to add contact details of your students and additional information (e.g. grades).","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"### 3. Command-Line Interface","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"While it has a GUI, most of the user interactions happen using a Command Line Interface (CLI).","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"greyguy21"},"content":"## Usage","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":"### Some example usages include:","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":"- `listgroups`: Listing all Groups","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"greyguy21"},"content":"  Shows a list of all groups in the CSBook.","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"greyguy21"},"content":"- `viewgroup`: View details of a Group","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"greyguy21"},"content":"  Finds and displays details about a group","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"SKCheongBrian":1,"greyguy21":25,"-":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"You can reach us at the email `e0559779@u.nus.edu`","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"### Erin Ong","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"\u003cimg src\u003d\"images/greyguy21.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"[[github](https://github.com/greyguy21)]","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"* Responsibilities: UI","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"### Lim Jun Wei","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"\u003cimg src\u003d\"images/junwei26.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"[[github](https://github.com/junwei26/)]","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"* Role: Developer","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"* Responsibilities: Github expert, Scheduling and Tracking","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"### Teo Zhi Hao","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"\u003cimg src\u003d\"images/yttruire.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"[[github](https://github.com/Yttruire)]","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"* Responsibilities: Data management and Integration","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"### Brian Cheong","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"junwei26"},"content":"\u003cimg src\u003d\"images/skcheongbrian.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"junwei26"},"content":"[[github](https://github.com/SKCheongBrian)]","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"junwei26"},"content":"* Responsibilities: Testing and documentation","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"junwei26"},"content":"### Tan Jia Xian","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"junwei26"},"content":"\u003cimg src\u003d\"images/tanjiaxian99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"junwei26"},"content":"[[github](https://github.com/tanjiaxian99)]","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"junwei26"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"junwei26":25,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"- Table of Contents","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"- {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/nus-cs2103-AY2122S1/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Yttruire"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-T09-3/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103T-T09-3/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"tanjiaxian99"},"content":"- At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"tanjiaxian99"},"content":"- At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"tanjiaxian99"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"tanjiaxian99"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"tanjiaxian99"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"tanjiaxian99"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"tanjiaxian99"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"tanjiaxian99"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"tanjiaxian99"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"Yttruire"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-T09-3/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"Yttruire"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StudentListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"Yttruire"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103T-T09-3/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S1-CS2103T-T09-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"tanjiaxian99"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"tanjiaxian99"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"tanjiaxian99"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"Yttruire"},"content":"- depends on some classes in the `Model` component, as it displays `Student` object residing in the `Model`.","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"Yttruire"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-T09-3/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"greyguy21"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a student).","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"tanjiaxian99"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"tanjiaxian99"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"Yttruire"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-T09-3/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"Yttruire"},"content":"- stores the address book data i.e., all `Student` objects (which are contained in a `UniqueStudentList` object).","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"Yttruire"},"content":"- stores the currently \u0027selected\u0027 `Student` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cStudent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"tanjiaxian99"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"tanjiaxian99"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"Yttruire"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Student` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Student` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"Yttruire"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-T09-3/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"tanjiaxian99"},"content":"- can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"tanjiaxian99"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"tanjiaxian99"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"tanjiaxian99"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"tanjiaxian99"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"tanjiaxian99"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2021-09-22"},{"lineNumber":169,"author":{"gitId":"tanjiaxian99"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2021-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"greyguy21"},"content":"Step 2. The user executes `delete 5` command to delete the 5th student in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-09-28"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"greyguy21"},"content":"Step 3. The user executes `add n/David …​` to add a new student. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-09-28"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"greyguy21"},"content":"Step 4. The user now decides that adding the student was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-09-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"tanjiaxian99"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2021-09-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"tanjiaxian99"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2021-09-22"},{"lineNumber":233,"author":{"gitId":"tanjiaxian99"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2021-09-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":235,"author":{"gitId":"tanjiaxian99"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2021-09-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"greyguy21"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the student being deleted).","lastModifiedDate":"2021-09-28"},{"lineNumber":238,"author":{"gitId":"tanjiaxian99"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2021-09-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"tanjiaxian99"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"tanjiaxian99"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2021-09-22"},{"lineNumber":251,"author":{"gitId":"tanjiaxian99"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2021-09-22"},{"lineNumber":252,"author":{"gitId":"tanjiaxian99"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2021-09-22"},{"lineNumber":253,"author":{"gitId":"tanjiaxian99"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2021-09-22"},{"lineNumber":254,"author":{"gitId":"tanjiaxian99"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2021-09-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"tanjiaxian99"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"tanjiaxian99"},"content":"* has a need to manage a large number of students","lastModifiedDate":"2021-09-22"},{"lineNumber":265,"author":{"gitId":"tanjiaxian99"},"content":"* teaches more than one module","lastModifiedDate":"2021-09-22"},{"lineNumber":266,"author":{"gitId":"tanjiaxian99"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2021-09-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"tanjiaxian99"},"content":"**Value proposition**: manage student details faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------| ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"tanjiaxian99"},"content":"| `* * *`  | new user                                   | add a new student entry         |                  |","lastModifiedDate":"2021-09-22"},{"lineNumber":280,"author":{"gitId":"tanjiaxian99"},"content":"| `* * *`  | new user                                   | edit a student entry         | can make changes to my students\u0027 information without removing and adding them separately                 |","lastModifiedDate":"2021-09-22"},{"lineNumber":281,"author":{"gitId":"tanjiaxian99"},"content":"| `* * *`  | new user                                   | delete a student entry         | remove students that I no longer teach                 |","lastModifiedDate":"2021-09-22"},{"lineNumber":282,"author":{"gitId":"tanjiaxian99"},"content":"| `* * *`  | new user                                   | group my weaker students together         | easily identify these students and focus more of my energies on them                 |","lastModifiedDate":"2021-09-22"},{"lineNumber":283,"author":{"gitId":"tanjiaxian99"},"content":"| `* * *`  | new user                                   | view the students in a particular group        | check on their performance as a group                 |","lastModifiedDate":"2021-09-22"},{"lineNumber":284,"author":{"gitId":"tanjiaxian99"},"content":"| `* * *`  | new user                                   | remove students from a group        | ensure that each group contains the correct students as their performance changes                 |","lastModifiedDate":"2021-09-22"},{"lineNumber":285,"author":{"gitId":"tanjiaxian99"},"content":"| `* * *`  | new user                                   | search for my groups with a parameter        | find a specific group given a detail I know about that group              |","lastModifiedDate":"2021-09-22"},{"lineNumber":286,"author":{"gitId":"tanjiaxian99"},"content":"| `* * *`  | new user                                   | delete a group       | remove certain groups which are no longer needed              |","lastModifiedDate":"2021-09-22"},{"lineNumber":287,"author":{"gitId":"tanjiaxian99"},"content":"| `* * *`  | new user                                   | export my student\u0027s information containing their grades        | share/document all the data               |","lastModifiedDate":"2021-09-22"},{"lineNumber":288,"author":{"gitId":"tanjiaxian99"},"content":"| `* *`  | new user                                   | record my student\u0027s assessment grade         | keep track of their individual performance                 |","lastModifiedDate":"2021-09-22"},{"lineNumber":289,"author":{"gitId":"tanjiaxian99"},"content":"| `* *`  | new user                                   | search for my students with a parameter        | find specific students given a detail I know about them               |","lastModifiedDate":"2021-09-22"},{"lineNumber":290,"author":{"gitId":"tanjiaxian99"},"content":"| `* *`  | new user                                   | sort my students by their grades        | find the top and bottom performers of my class               |","lastModifiedDate":"2021-09-22"},{"lineNumber":291,"author":{"gitId":"tanjiaxian99"},"content":"| `* *`  | lazy user                                  | be able to autocomplete my student\u0027s name       | easily find my student\u0027s name in the event that I forget their full name              |","lastModifiedDate":"2021-09-22"},{"lineNumber":292,"author":{"gitId":"tanjiaxian99"},"content":"| `* *`  | lazy user                                  | access commands that I frequent easily      | save time on typing out my most frequently used commands              |","lastModifiedDate":"2021-09-22"},{"lineNumber":293,"author":{"gitId":"tanjiaxian99"},"content":"| `* *`  | lazy user                                  | import my student details from luminus      | avoid having to manually key in my student\u0027s information             |","lastModifiedDate":"2021-09-22"},{"lineNumber":294,"author":{"gitId":"tanjiaxian99"},"content":"| `* *`  | user that cares about security             | safeguard my CSBook    | ensure only authorized users can view my student\u0027s data            |","lastModifiedDate":"2021-09-22"},{"lineNumber":295,"author":{"gitId":"tanjiaxian99"},"content":"| `* *`  | user that cares about security             | encrypt my student\u0027s information    | protect my students\u0027 sensitive data from potential malware            |","lastModifiedDate":"2021-09-22"},{"lineNumber":296,"author":{"gitId":"tanjiaxian99"},"content":"| `* *`  | user that cares about security             | backup my student\u0027s information   | in the event that my student\u0027s information gets corrupted            |","lastModifiedDate":"2021-09-22"},{"lineNumber":297,"author":{"gitId":"tanjiaxian99"},"content":"| `*`  | new user                                   | visualise my student\u0027s assessment data        | visualize graphically how my students are performing in class                 |","lastModifiedDate":"2021-09-22"},{"lineNumber":298,"author":{"gitId":"tanjiaxian99"},"content":"| `*`  | lazy user                                  | chat with my student via Telegram directly from the app      | avoid having to open the Telegram app separately             |","lastModifiedDate":"2021-09-22"},{"lineNumber":299,"author":{"gitId":"tanjiaxian99"},"content":"| `*`  | experienced user                           | set-up custom shortcuts     | easily access my most frequently used commands            |","lastModifiedDate":"2021-09-22"},{"lineNumber":300,"author":{"gitId":"tanjiaxian99"},"content":"| `*`  | experienced user                           | be able to undo my commands     | backtrack when a mistake is made            |","lastModifiedDate":"2021-09-22"},{"lineNumber":301,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":302,"author":{"gitId":"tanjiaxian99"},"content":"_{More to be added}_","lastModifiedDate":"2021-09-22"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"tanjiaxian99"},"content":"(For all use cases below, the **System** is the `CSBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-22"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"tanjiaxian99"},"content":"**Use case: Record a student\u0027s grades**","lastModifiedDate":"2021-09-22"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"tanjiaxian99"},"content":"1. User searches for a specific student.","lastModifiedDate":"2021-09-22"},{"lineNumber":313,"author":{"gitId":"tanjiaxian99"},"content":"2. CSBook shows the specified student.","lastModifiedDate":"2021-09-22"},{"lineNumber":314,"author":{"gitId":"tanjiaxian99"},"content":"3. User enters the grades of the student.","lastModifiedDate":"2021-09-22"},{"lineNumber":315,"author":{"gitId":"tanjiaxian99"},"content":"4. CSBook updates the student with the added grades.","lastModifiedDate":"2021-09-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"tanjiaxian99"},"content":"- 1a. The student cannot be found.","lastModifiedDate":"2021-09-22"},{"lineNumber":322,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":323,"author":{"gitId":"tanjiaxian99"},"content":"  - 1a1. CSBook shows an error message.","lastModifiedDate":"2021-09-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"tanjiaxian99"},"content":"- 3a. There is more than one student listed.","lastModifiedDate":"2021-09-22"},{"lineNumber":328,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":329,"author":{"gitId":"tanjiaxian99"},"content":"  - 3a1. CSBook shows an error message.","lastModifiedDate":"2021-09-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"tanjiaxian99"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2021-09-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":333,"author":{"gitId":"tanjiaxian99"},"content":"- 3b. Grades specified is of an invalid format","lastModifiedDate":"2021-09-22"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":335,"author":{"gitId":"tanjiaxian99"},"content":"  - 3b1. CSBook shows an error message.","lastModifiedDate":"2021-09-22"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"tanjiaxian99"},"content":"**Use case: Group students together**","lastModifiedDate":"2021-09-22"},{"lineNumber":340,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":341,"author":{"gitId":"tanjiaxian99"},"content":"**MSS**","lastModifiedDate":"2021-09-22"},{"lineNumber":342,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":343,"author":{"gitId":"tanjiaxian99"},"content":"1. User creates a new group.","lastModifiedDate":"2021-09-22"},{"lineNumber":344,"author":{"gitId":"tanjiaxian99"},"content":"2. CSBook shows the newly created group.","lastModifiedDate":"2021-09-22"},{"lineNumber":345,"author":{"gitId":"tanjiaxian99"},"content":"3. User adds students to group.","lastModifiedDate":"2021-09-22"},{"lineNumber":346,"author":{"gitId":"tanjiaxian99"},"content":"4. CSBook updates and shows the group with the students\u0027 names.","lastModifiedDate":"2021-09-22"},{"lineNumber":347,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":348,"author":{"gitId":"tanjiaxian99"},"content":"   Use case ends.","lastModifiedDate":"2021-09-22"},{"lineNumber":349,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":350,"author":{"gitId":"tanjiaxian99"},"content":"**Extensions**","lastModifiedDate":"2021-09-22"},{"lineNumber":351,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":352,"author":{"gitId":"tanjiaxian99"},"content":"- 1a. A group with the same name exists.","lastModifiedDate":"2021-09-22"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"tanjiaxian99"},"content":"  - 1a1. CSBook shows an error message.","lastModifiedDate":"2021-09-22"},{"lineNumber":355,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":356,"author":{"gitId":"tanjiaxian99"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":357,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":358,"author":{"gitId":"tanjiaxian99"},"content":"- 3a. The given student is invalid.","lastModifiedDate":"2021-09-22"},{"lineNumber":359,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":360,"author":{"gitId":"tanjiaxian99"},"content":"  - 3a1. CSBook shows an error message.","lastModifiedDate":"2021-09-22"},{"lineNumber":361,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":362,"author":{"gitId":"tanjiaxian99"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2021-09-22"},{"lineNumber":363,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":364,"author":{"gitId":"tanjiaxian99"},"content":"**Use case: View a group**","lastModifiedDate":"2021-09-22"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"tanjiaxian99"},"content":"1. User requests to list groups.","lastModifiedDate":"2021-09-22"},{"lineNumber":369,"author":{"gitId":"tanjiaxian99"},"content":"2. CSBook shows a list of available groups.","lastModifiedDate":"2021-09-22"},{"lineNumber":370,"author":{"gitId":"tanjiaxian99"},"content":"3. User requests to show a specific group.","lastModifiedDate":"2021-09-22"},{"lineNumber":371,"author":{"gitId":"tanjiaxian99"},"content":"4. CSBook retrieves and displays the specified group.","lastModifiedDate":"2021-09-22"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"tanjiaxian99"},"content":"- 2a. There are no groups.","lastModifiedDate":"2021-09-22"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"tanjiaxian99"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2021-09-22"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"tanjiaxian99"},"content":"  - 3a1. CSBook shows an error message.","lastModifiedDate":"2021-09-22"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"tanjiaxian99"},"content":"_{More to be added}_","lastModifiedDate":"2021-09-22"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"Yttruire"},"content":"1.  (Compatibility) Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2021-09-25"},{"lineNumber":392,"author":{"gitId":"Yttruire"},"content":"2.  (Capacity/Scalability) Should be able to hold up to 100 students without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-26"},{"lineNumber":393,"author":{"gitId":"Yttruire"},"content":"3.  (Usability) A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-25"},{"lineNumber":394,"author":{"gitId":"Yttruire"},"content":"4.  (Recoverability) Should the stored student data of the application be corrupted, it can still recover and function on a clean slate by itself.","lastModifiedDate":"2021-09-25"},{"lineNumber":395,"author":{"gitId":"Yttruire"},"content":"5.  (Security) The stored student data of the application should be encrpyted/stored securely to reduce the chances of an unintended leak of information from the application.","lastModifiedDate":"2021-09-25"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"tanjiaxian99"},"content":"_{More to be added}_","lastModifiedDate":"2021-09-22"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"tanjiaxian99"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-09-22"},{"lineNumber":402,"author":{"gitId":"greyguy21"},"content":"- **Student**: A student that is studying any specific module in university","lastModifiedDate":"2021-09-28"},{"lineNumber":403,"author":{"gitId":"Yttruire"},"content":"- **Module**: An academic unit usually comprising lectures, tutorials and sometimes laboratory sessions. Teaching assistants may assist in teaching tutorial classes to a group of students","lastModifiedDate":"2021-09-25"},{"lineNumber":404,"author":{"gitId":"Yttruire"},"content":"- **Teaching Assistant (TA)**: The intended user of the application, in charge of teaching at least 1 module","lastModifiedDate":"2021-09-25"},{"lineNumber":405,"author":{"gitId":"Yttruire"},"content":"- **CSBook**: The name of the application","lastModifiedDate":"2021-09-25"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"tanjiaxian99"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"greyguy21"},"content":"### Deleting a student","lastModifiedDate":"2021-09-28"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"greyguy21"},"content":"1. Deleting a student while all students are being shown","lastModifiedDate":"2021-09-28"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"greyguy21"},"content":"   1. Prerequisites: List all students using the `list` command. Multiple students in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"greyguy21"},"content":"      Expected: No student is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-09-28"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Yttruire":20,"tanjiaxian99":125,"greyguy21":10,"-":303}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"CSBook is a **desktop app for teaching assistants (TAs) to manage their students, optimized for use via a Command Line Interface** (CLI) while still having the","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"benefits of a Graphical User Interface (GUI). If you can type fast, CSBook can get your student management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"1. Download the latest `CSBook.jar` from [here](https://github.com/AY2122S1-CS2103T-T09-3/tp/releases).","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for CSBook.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"   * **`list`** : Lists all students.","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Yttruire"},"content":"   * **`add`**`n/Jia Xian t/@albino_monkii e/albinomonkey@u.nus.edu g/CS2103T` : Adds a student named `Jia Xian` to CSBook","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Yttruire"},"content":"   * **`delete`**`3` : Deletes the 3rd student shown in the current list.","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Yttruire"},"content":"   * **`clear`** : Deletes all students.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"tanjiaxian99"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"tanjiaxian99"},"content":"  e.g. if the command specifies `n/NAME p/TELEGRAM_HANDLE`, `p/TELEGRAM_HANDLE n/NAME` is also acceptable.","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"tanjiaxian99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"greyguy21"},"content":"  e.g. if the command specifies `n/NAME t/TELEGRAM_HANDLE`, `t/TELEGRAM_HANDLE n/NAME` is also acceptable.","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"tanjiaxian99"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e ff2a7f5e7e87f9b02e1a6e604ac83958baa27998","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":59,"author":{"gitId":"greyguy21"},"content":"  e.g. if you specify `t/albino_monkii t/albino_api`, only `t/albino_api` will be taken.","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"Yttruire"},"content":"### Adding a student: `add`","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Yttruire"},"content":"Adds a student to the CSBook.","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"tanjiaxian99"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"tanjiaxian99"},"content":"Format: `add n/NAME p/TELEGRAM_HANDLE e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"tanjiaxian99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"Yttruire"},"content":"Format: `add n/NAME t/TELEGRAM_HANDLE e/NUS_EMAIL g/GROUP_NAME`","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"tanjiaxian99"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e ff2a7f5e7e87f9b02e1a6e604ac83958baa27998","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"Yttruire"},"content":"* `add n/Jia Xian t/@albino_monkii e/albinomonkey@u.nus.edu g/CS2103T`","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"Yttruire"},"content":"* `add n/Jun Wei t/@albino_api e/albinoape@u.nus.edu g/CS2101`","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"Yttruire"},"content":"### Listing all students : `list`","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"Yttruire"},"content":"Shows a list of all students in the CSBook.","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"Yttruire"},"content":"### Editing a student : `edit`","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"Yttruire"},"content":"Edits an existing student in the CSBook.","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"tanjiaxian99"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"tanjiaxian99"},"content":"Format: `edit INDEX [n/NAME] [p/TELEGRAM_HANDLE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"tanjiaxian99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"Yttruire"},"content":"Format: `edit INDEX [n/NAME] [t/TELEGRAM_HANDLE] [e/NUS_EMAIL] [g/GROUP_NAME]`","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"tanjiaxian99"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e ff2a7f5e7e87f9b02e1a6e604ac83958baa27998","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"Yttruire"},"content":"* Edits the student at the specified INDEX. The index refers to the index number shown in the displayed student list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"tanjiaxian99"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"tanjiaxian99"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the telegramHandle number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"tanjiaxian99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"Yttruire"},"content":"*  `edit 1 t/@albino_monkey e/e0540014X@u.nus.edu` Edits the telegram handle and email address of the 1st student to be `@albino_monkey` and `e0540014X@u.nus.edu` respectively.","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"Yttruire"},"content":"*  `edit 2 n/Jiaxian` Edits the name of the 2nd student to be `Jiaxian`.","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"tanjiaxian99"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e ff2a7f5e7e87f9b02e1a6e604ac83958baa27998","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"junwei26"},"content":"### Locating students by name: `find`","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"junwei26"},"content":"Finds students whose names contain any of the given keywords.","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"junwei26"},"content":"* Students matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"junwei26"},"content":"### Deleting a student : `delete`","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"junwei26"},"content":"Deletes the specified student from CSBook.","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"junwei26"},"content":"* Deletes the student at the specified `INDEX`.","lastModifiedDate":"2021-09-23"},{"lineNumber":147,"author":{"gitId":"junwei26"},"content":"* The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"Yttruire"},"content":"* `list` followed by `delete 2` deletes the 2nd student in CSBook.","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"junwei26"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st student in the results of the `find` command.","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"junwei26"},"content":"### View details of a group","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"junwei26"},"content":"Finds and displays details about a group, including the group description, ","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"junwei26"},"content":"number of students and some details about each student in the group .","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"junwei26"},"content":"Format: `viewgroup GROUPNAME`","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"junwei26"},"content":"Examples:","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"junwei26"},"content":"* `viewgroup CS2103T` displays the group\u0027s description and its students.","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"junwei26"},"content":"  ![result for `viewgroup CS2103T`](images/viewGroupCS2103T.png)","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"Yttruire"},"content":"### Listing all groups : `listgroups`","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"Yttruire"},"content":"Shows a list of all groups in the CSBook.","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":169,"author":{"gitId":"Yttruire"},"content":"Format: `listgroups`","lastModifiedDate":"2021-09-25"},{"lineNumber":170,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":171,"author":{"gitId":"Yttruire"},"content":"Examples:","lastModifiedDate":"2021-09-25"},{"lineNumber":172,"author":{"gitId":"Yttruire"},"content":"* `listgroups` displays a list of all the groups, including their group description and number of students in them.","lastModifiedDate":"2021-09-25"},{"lineNumber":173,"author":{"gitId":"Yttruire"},"content":"  ![result for `listgroups`](images/listGroups.png)","lastModifiedDate":"2021-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"junwei26"},"content":"Clears all entries from CSBook.","lastModifiedDate":"2021-09-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"SKCheongBrian"},"content":"### Creating a group: `addgroup`","lastModifiedDate":"2021-09-25"},{"lineNumber":182,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"SKCheongBrian"},"content":"Creates a group with the given group name and given description so that students can be added into it. ","lastModifiedDate":"2021-09-26"},{"lineNumber":184,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":185,"author":{"gitId":"SKCheongBrian"},"content":"Format: `addgroup n/GROUPNAME d/DESCRIPTION`","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":187,"author":{"gitId":"SKCheongBrian"},"content":"* Creates a group with the specified `GROUPNAME` and `DESCRIPTION`.","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":189,"author":{"gitId":"SKCheongBrian"},"content":"Examples:","lastModifiedDate":"2021-09-25"},{"lineNumber":190,"author":{"gitId":"SKCheongBrian"},"content":"* `addgroup n/CS2103T d/Software engineering mod` creates a group called `CS2103T` and the description `Software engineering mod` ","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"SKCheongBrian"},"content":"where students can be added into.","lastModifiedDate":"2021-09-26"},{"lineNumber":192,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":193,"author":{"gitId":"SKCheongBrian"},"content":"### Delete Group: deletegroup","lastModifiedDate":"2021-09-25"},{"lineNumber":194,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":195,"author":{"gitId":"SKCheongBrian"},"content":"Deletes the group with the specified group name.","lastModifiedDate":"2021-09-25"},{"lineNumber":196,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":197,"author":{"gitId":"SKCheongBrian"},"content":"Format: `deletegroup GROUPNAME`","lastModifiedDate":"2021-09-25"},{"lineNumber":198,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":199,"author":{"gitId":"SKCheongBrian"},"content":"* Deletes the group with the specified `GROUPNAME`.","lastModifiedDate":"2021-09-25"},{"lineNumber":200,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":201,"author":{"gitId":"SKCheongBrian"},"content":"Examples:","lastModifiedDate":"2021-09-25"},{"lineNumber":202,"author":{"gitId":"SKCheongBrian"},"content":"* `deletegroup CS2103T` deletes the group CS2103T.","lastModifiedDate":"2021-09-25"},{"lineNumber":203,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"greyguy21"},"content":"CSBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":216,"author":{"gitId":"greyguy21"},"content":"CSBook data are saved as a JSON file `[JAR file location]/data/CSBook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":219,"author":{"gitId":"Yttruire"},"content":"If your changes to the data file makes its format invalid, CSBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"tanjiaxian99"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-10-07"},{"lineNumber":229,"author":{"gitId":"tanjiaxian99"},"content":"**Add** | `add n/NAME p/TELEGRAM_HANDLE e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2021-09-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"tanjiaxian99"},"content":"**Edit** | `edit INDEX [n/NAME] [p/TELEGRAM_HANDLE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-09-24"},{"lineNumber":233,"author":{"gitId":"tanjiaxian99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":234,"author":{"gitId":"greyguy21"},"content":"**Add** | `add n/NAME t/TELEGRAM_HANDLE e/NUS_EMAIL g/GROUPNAME` \u003cbr\u003e e.g., `add n/Jia Xian t/albino_monkii e/albinomonkey@u.nus.edu g/CS2103T`","lastModifiedDate":"2021-09-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"greyguy21"},"content":"**Edit** | `edit INDEX [n/NAME] [t/TELEGRAM_HANDLE] [e/NUS_EMAIL] `\u003cbr\u003e e.g.,`edit 1 t/@albino_monkey e/e0540014X@u.nus.edu`","lastModifiedDate":"2021-09-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"**List** | `list` ","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"tanjiaxian99"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e ff2a7f5e7e87f9b02e1a6e604ac83958baa27998","lastModifiedDate":"2021-10-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"greyguy21"},"content":"**Add Group** | `addgroup GROUPNAME`","lastModifiedDate":"2021-09-25"},{"lineNumber":242,"author":{"gitId":"greyguy21"},"content":"**Delete Group** | `deletegroup GROUPNAME`","lastModifiedDate":"2021-09-25"},{"lineNumber":243,"author":{"gitId":"greyguy21"},"content":"**View Group** | `viewgroup GROUPNAME`","lastModifiedDate":"2021-09-25"},{"lineNumber":244,"author":{"gitId":"greyguy21"},"content":"**List Groups** | `listgroups`","lastModifiedDate":"2021-09-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Yttruire":32,"tanjiaxian99":21,"SKCheongBrian":23,"greyguy21":10,"junwei26":20,"-":139}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteStudent(p)","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yttruire":1,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"AddressBook *-right-\u003e \"1\" UniqueStudentList","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"UniqueTagList -[hidden]down- UniqueStudentList","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"UniqueTagList -[hidden]down- UniqueStudentList","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"UniqueStudentList -right-\u003e Student","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"Student -up-\u003e \"*\" Tag","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"Person *--\u003e TelegramHandle","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"Student *--\u003e Name","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"Student *--\u003e Phone","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"Student *--\u003e Email","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Yttruire"},"content":"Student *--\u003e Address","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e ff2a7f5e7e87f9b02e1a6e604ac83958baa27998","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yttruire":9,"tanjiaxian99":4,"-":15}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"Yttruire"},"content":"DeleteCommand -\u003e Model : deleteStudent(1)","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yttruire":1,"-":68}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"Class UniqueStudentList","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"Class Student","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"Class TelegramHandle","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"tanjiaxian99"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"tanjiaxian99"},"content":"Person *--\u003e TelegramHandle","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"tanjiaxian99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Yttruire"},"content":"AddressBook *--\u003e \"1\" UniqueStudentList","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"Yttruire"},"content":"UniqueStudentList --\u003e \"~* all\" Student","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"Yttruire"},"content":"Student *--\u003e Name","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"Yttruire"},"content":"Student *--\u003e Phone","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"Yttruire"},"content":"Student *--\u003e Email","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"Yttruire"},"content":"Student *--\u003e Address","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"Yttruire"},"content":"Student *--\u003e \"*\" Tag","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"tanjiaxian99"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e ff2a7f5e7e87f9b02e1a6e604ac83958baa27998","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"tanjiaxian99"},"content":"Name -[hidden]right-\u003e TelegramHandle","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"tanjiaxian99"},"content":"TelegramHandle -[hidden]right-\u003e Address","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"Yttruire"},"content":"ModelManager --\u003e\"~* filtered\" Student","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yttruire":10,"tanjiaxian99":7,"-":47}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"Class JsonAdaptedStudent","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"Yttruire"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedStudent","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"Yttruire"},"content":"JsonAdaptedStudent --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yttruire":3,"-":40}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"Class StudentListPanel","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"Class StudentCard","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"MainWindow *-down-\u003e \"1\" StudentListPanel","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Yttruire"},"content":"StudentListPanel -down-\u003e \"*\" StudentCard","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"Yttruire"},"content":"StudentListPanel --|\u003e UiPart","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"Yttruire"},"content":"StudentCard --|\u003e UiPart","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"Yttruire"},"content":"StudentCard ..\u003e Model","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"Yttruire"},"content":"StudentListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yttruire":8,"-":52}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"ecp -\u003e ec ++: index, editStudentDescriptor","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"greyguy21":1,"-":20}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":" * Changes the remark of an existing student in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"greyguy21"},"content":"            + \": Edits the remark of the student identified \"","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"greyguy21"},"content":"            + \"by the index number used in the last student listing. \"","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"greyguy21"},"content":"     * @param index of the student in the filtered student list to edit the remark","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"greyguy21"},"content":"     * @param remark of the student to be updated to","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"Yttruire"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of student data. We achieve that by working with the `Student` model. Each field in a Student is implemented as a separate class (e.g. a `Name` object represents the student’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a student.","lastModifiedDate":"2021-09-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"greyguy21"},"content":"Create a new `Remark` in `seedu.address.model.student`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-09-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"greyguy21"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each student.","lastModifiedDate":"2021-09-28"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"greyguy21"},"content":"Simply add the following to [`seedu.address.ui.StudentCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-09-28"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"Yttruire"},"content":"**`StudentCard.java`:**","lastModifiedDate":"2021-09-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"Yttruire"},"content":"Then insert the following into [`main/resources/view/StudentListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2021-09-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"Yttruire"},"content":"**`StudentListCard.fxml`:**","lastModifiedDate":"2021-09-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"Yttruire"},"content":"## Modify `Student` to support a `Remark` field","lastModifiedDate":"2021-09-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"Yttruire"},"content":"Since `StudentCard` displays data from a `Student`, we need to update `Student` to get our `Remark` displayed!","lastModifiedDate":"2021-09-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"Yttruire"},"content":"### Modify `Student`","lastModifiedDate":"2021-09-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"Yttruire"},"content":"We change the constructor of `Student` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2021-09-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"Yttruire"},"content":"### Update other usages of `Student`","lastModifiedDate":"2021-09-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"Yttruire"},"content":"Unfortunately, a change to `Student` will cause other commands to break, you will have to modify these commands to use the updated `Student`!","lastModifiedDate":"2021-09-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"Yttruire"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Student` class to find these commands.","lastModifiedDate":"2021-09-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"Yttruire"},"content":"AddressBook stores data by serializing `JsonAdaptedStudent` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedStudent` to work with our new `Student`!","lastModifiedDate":"2021-09-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"Yttruire"},"content":"Now that we have finalized the `Student` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2021-09-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"Yttruire"},"content":"**`StudentCard.java`:**","lastModifiedDate":"2021-09-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"Yttruire"},"content":"public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2021-09-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"greyguy21"},"content":"    remark.setText(student.getRemark().value);","lastModifiedDate":"2021-09-28"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"Yttruire"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Student`. Since all fields in a `Student` are immutable, we create a new instance of a `Student` with the values that we want and","lastModifiedDate":"2021-09-29"},{"lineNumber":329,"author":{"gitId":"Yttruire"},"content":"save it with `Model#setStudent()`.","lastModifiedDate":"2021-09-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"Yttruire"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Student: %1$s\";","lastModifiedDate":"2021-09-29"},{"lineNumber":336,"author":{"gitId":"Yttruire"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Student: %1$s\";","lastModifiedDate":"2021-09-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"Yttruire"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-09-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"tanjiaxian99"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-10-07"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"tanjiaxian99"},"content":"                personToEdit.getName(), personToEdit.getTelegramHandle(), personToEdit.getEmail(),","lastModifiedDate":"2021-09-24"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"tanjiaxian99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":352,"author":{"gitId":"Yttruire"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-09-29"},{"lineNumber":353,"author":{"gitId":"Yttruire"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2021-09-29"},{"lineNumber":354,"author":{"gitId":"tanjiaxian99"},"content":"                studentToEdit.getName(), studentToEdit.getTelegramHandle(), studentToEdit.getEmail(),","lastModifiedDate":"2021-10-07"},{"lineNumber":355,"author":{"gitId":"greyguy21"},"content":"                studentToEdit.getAddress(), remark, studentToEdit.getTags());","lastModifiedDate":"2021-09-28"},{"lineNumber":356,"author":{"gitId":"tanjiaxian99"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e ff2a7f5e7e87f9b02e1a6e604ac83958baa27998","lastModifiedDate":"2021-10-07"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"Yttruire"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-09-29"},{"lineNumber":359,"author":{"gitId":"Yttruire"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"greyguy21"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2021-09-28"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":366,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":367,"author":{"gitId":"greyguy21"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2021-09-28"},{"lineNumber":368,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"Yttruire"},"content":"    private String generateSuccessMessage(Student studentToEdit) {","lastModifiedDate":"2021-09-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"greyguy21"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2021-09-28"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":385,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":408,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Yttruire":25,"tanjiaxian99":5,"greyguy21":13,"-":365}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Student` class.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"The `address` field in `Student` is actually an instance of the `seedu.address.model.student.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Yttruire"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditStudentDescriptor` may require more careful inspection.","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Yttruire"},"content":"Let’s try removing references to `Address` in `EditStudentDescriptor`.","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Yttruire"},"content":"1. Safe delete the field `address` in `EditStudentDescriptor`.","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Yttruire"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Student` class will require you to modify its constructor.","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"Yttruire"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `StudentCard` that has not been removed nor identified.","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"Yttruire"},"content":"A quick look at the `StudentCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"Yttruire"},"content":"**`StudentCard.java`**","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"Yttruire"},"content":"**`StudentCard.fxml`**","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"tanjiaxian99"},"content":"\u003cLabel fx:id\u003d\"telegramHandle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegramHandle\" /\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"Yttruire"},"content":"**`invalidStudentAddressBook.json`:**","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"greyguy21"},"content":"  \"students\": [ {","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"Yttruire"},"content":"    \"name\": \"Student with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"tanjiaxian99"},"content":"    \"telegramHandle\": \"@hans_muster\",","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Yttruire":12,"tanjiaxian99":2,"greyguy21":1,"-":96}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"tanjiaxian99"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/TELEGRAM_HANDLE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"Yttruire"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditStudentDescriptor`. Recall that we can verify the contents of `editStudentDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"Yttruire"},"content":"       Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-09-29"},{"lineNumber":193,"author":{"gitId":"Yttruire"},"content":"       Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2021-09-29"},{"lineNumber":194,"author":{"gitId":"Yttruire"},"content":"       if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2021-09-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"Yttruire"},"content":"       model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-09-29"},{"lineNumber":198,"author":{"gitId":"Yttruire"},"content":"       model.updateFilteredStudentList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"greyguy21"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedStudent));","lastModifiedDate":"2021-09-28"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"Yttruire"},"content":"   * it uses the `setStudent()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the student data.","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"Yttruire"},"content":"   * it uses the `updateFilteredStudentList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ students.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"greyguy21"},"content":"     FYI, The \u0027filtered list\u0027 is the list of students resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the students so that the user can see the edited student along with all other students. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":207,"author":{"gitId":"greyguy21"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of students is being tracked.","lastModifiedDate":"2021-09-28"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"greyguy21"},"content":"        students.addAll(","lastModifiedDate":"2021-09-28"},{"lineNumber":235,"author":{"gitId":"Yttruire"},"content":"            source.getStudentList()","lastModifiedDate":"2021-09-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"Yttruire"},"content":"                  .map(JsonAdaptedStudent::new)","lastModifiedDate":"2021-09-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"Yttruire"},"content":"1. It appears that a `JsonAdaptedStudent` is created for each `Student` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2021-09-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"Yttruire"},"content":"    5.  Add a new field to `Student`","lastModifiedDate":"2021-09-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Yttruire":12,"tanjiaxian99":1,"greyguy21":4,"-":284}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"    public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%1$d students listed!\";","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"    public static final String MESSAGE_DISPLAY_GROUP_FORMAT \u003d \"Group Name: %s\\nDescription: %s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"    public static final String MESSAGE_GROUP_NOT_FOUND \u003d \"The group indicated does not exist\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yttruire":1,"greyguy21":2,"junwei26":1,"-":11}},{"path":"src/main/java/seedu/address/commons/util/EncryptedJsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":" * Converts a Java object instance to an encrypted Json file and vice versa","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"public class EncryptedJsonUtil {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EncryptedJsonUtil.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tanjiaxian99"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tanjiaxian99"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"tanjiaxian99"},"content":"                    .addDeserializer(Level.class, new EncryptedJsonUtil.LevelDeserializer(Level.class)));","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tanjiaxian99"},"content":"    static \u003cT\u003e void serializeObjectToEncryptedJsonFile(Path encryptedJsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"tanjiaxian99"},"content":"        String jsonString \u003d toJsonString(objectToSerialize);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"tanjiaxian99"},"content":"        FileUtil.writeToEncryptedFile(encryptedJsonFile, EncryptionUtil.encryptSerializableObject(jsonString));","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"tanjiaxian99"},"content":"    static \u003cT\u003e T deserializeObjectFromEncryptedJsonFile(Path encryptedJsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"tanjiaxian99"},"content":"            throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"tanjiaxian99"},"content":"        String jsonString \u003d (String) EncryptionUtil.decryptSealedObject(","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"tanjiaxian99"},"content":"                FileUtil.readFromEncryptedFile(encryptedJsonFile));","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"tanjiaxian99"},"content":"        return fromJsonString(jsonString, classOfObjectToDeserialize);","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"tanjiaxian99"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"tanjiaxian99"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"tanjiaxian99"},"content":"     * @param classOfObjectToDeserialize Encrypted Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"tanjiaxian99"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readEncryptedJsonFile(","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tanjiaxian99"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"tanjiaxian99"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"tanjiaxian99"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"tanjiaxian99"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"tanjiaxian99"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"tanjiaxian99"},"content":"        T jsonFile;","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"tanjiaxian99"},"content":"            jsonFile \u003d deserializeObjectFromEncryptedJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"tanjiaxian99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tanjiaxian99"},"content":"            logger.warning(\"Error reading from encryptedJsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"tanjiaxian99"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"tanjiaxian99"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"tanjiaxian99"},"content":"     * Saves the Json object to the specified encrypted file.","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"tanjiaxian99"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"tanjiaxian99"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"tanjiaxian99"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"tanjiaxian99"},"content":"    public static \u003cT\u003e void saveEncryptedJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"tanjiaxian99"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"tanjiaxian99"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"tanjiaxian99"},"content":"        serializeObjectToEncryptedJsonFile(filePath, jsonFile);","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"tanjiaxian99"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"tanjiaxian99"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"tanjiaxian99"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"tanjiaxian99"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"tanjiaxian99"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"tanjiaxian99"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"tanjiaxian99"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"tanjiaxian99"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"tanjiaxian99"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"tanjiaxian99"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"tanjiaxian99"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"tanjiaxian99"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"tanjiaxian99"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"tanjiaxian99"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"tanjiaxian99"},"content":"            super(vc);","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"tanjiaxian99"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"tanjiaxian99"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"tanjiaxian99"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"tanjiaxian99"},"content":"        /**","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"tanjiaxian99"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"tanjiaxian99"},"content":"         * \u003cp\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"tanjiaxian99"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"tanjiaxian99"},"content":"         *","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"tanjiaxian99"},"content":"         */","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"tanjiaxian99"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"tanjiaxian99"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"tanjiaxian99"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"tanjiaxian99"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"tanjiaxian99"},"content":"            return Level.class;","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"tanjiaxian99":145}},{"path":"src/main/java/seedu/address/commons/util/EncryptionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import java.security.InvalidAlgorithmParameterException;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import java.security.InvalidKeyException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import java.security.NoSuchAlgorithmException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"import javax.crypto.BadPaddingException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"import javax.crypto.Cipher;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"import javax.crypto.IllegalBlockSizeException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"import javax.crypto.NoSuchPaddingException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"import javax.crypto.SealedObject;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"import javax.crypto.spec.IvParameterSpec;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"import javax.crypto.spec.SecretKeySpec;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":" * Encrypts and decrypts files","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"public class EncryptionUtil {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EncryptionUtil.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a new Cipher instance backed by AES encryption.","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"     * @param opmode the operation mode of the cipher set to either","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"    private static Cipher createCipherInstance(int opmode) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"            Cipher cipher \u003d Cipher.getInstance(\"AES/CBC/PKCS5Padding\");","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"            byte[] keyBytes \u003d new byte[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"            String algorithm \u003d \"AES\";","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"            SecretKeySpec key \u003d new SecretKeySpec(keyBytes, algorithm);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"            cipher.init(opmode, key, new IvParameterSpec(new byte[16]));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"            return cipher;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tanjiaxian99"},"content":"        } catch (NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tanjiaxian99"},"content":"                | InvalidAlgorithmParameterException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"tanjiaxian99"},"content":"            logger.warning(\"Error create new Cipher instance with opmode\" + opmode + \": \" + e);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tanjiaxian99"},"content":"            throw new IllegalStateException(e);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a new Cipher instance in Encrypt Mode","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"tanjiaxian99"},"content":"    public static Cipher createEncryptCipherInstance() {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"tanjiaxian99"},"content":"        return createCipherInstance(Cipher.ENCRYPT_MODE);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a new Cipher instance in Decrypt Mode","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"tanjiaxian99"},"content":"    public static Cipher createDecryptCipherInstance() {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"tanjiaxian99"},"content":"        return createCipherInstance(Cipher.DECRYPT_MODE);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tanjiaxian99"},"content":"     * Encrypts the given Serializable object.","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"tanjiaxian99"},"content":"     * @param serializableObject the object to be encrypted","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tanjiaxian99"},"content":"     * @return a Sealed Object instance containing the Serializable object","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws IOException if there was an error during encryption","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"tanjiaxian99"},"content":"    public static SealedObject encryptSerializableObject(Serializable serializableObject) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"tanjiaxian99"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"tanjiaxian99"},"content":"            return new SealedObject(serializableObject, createEncryptCipherInstance());","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"tanjiaxian99"},"content":"        } catch (IllegalBlockSizeException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"tanjiaxian99"},"content":"            logger.warning(\"Error encrypted serializable object \" + serializableObject + \": \" + e);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"tanjiaxian99"},"content":"            throw new IOException(e);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tanjiaxian99"},"content":"     * Decrypts the given SealedObject object","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"tanjiaxian99"},"content":"     * @param sealedObject the object to be decrypted","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"tanjiaxian99"},"content":"     * @return a decrypted Serializable instance","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws IOException if there was an error during decryption","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"tanjiaxian99"},"content":"    public static Serializable decryptSealedObject(SealedObject sealedObject) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"tanjiaxian99"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"tanjiaxian99"},"content":"            return (Serializable) sealedObject.getObject(createDecryptCipherInstance());","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"tanjiaxian99"},"content":"        } catch (IOException | ClassNotFoundException | IllegalBlockSizeException","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"tanjiaxian99"},"content":"                | BadPaddingException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"tanjiaxian99"},"content":"            logger.warning(\"Error decrypting sealed object \" + sealedObject + \": \" + e);","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"tanjiaxian99"},"content":"            throw new IOException(e);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"tanjiaxian99":89}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.BufferedInputStream;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.BufferedOutputStream;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"import javax.crypto.CipherInputStream;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"import javax.crypto.CipherOutputStream;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"import javax.crypto.SealedObject;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"tanjiaxian99"},"content":"     * Reads from the encrypted file.","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"tanjiaxian99"},"content":"     * Assumes encrypted file exists.","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"tanjiaxian99"},"content":"     * @param encryptedFile cannot be null","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"tanjiaxian99"},"content":"     * @return An instance of Sealed Object containing the encrypted data","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws IOException if there was an error during reading from the file","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"tanjiaxian99"},"content":"    public static SealedObject readFromEncryptedFile(Path encryptedFile) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"tanjiaxian99"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"tanjiaxian99"},"content":"            CipherInputStream cipherInputStream \u003d new CipherInputStream(new BufferedInputStream(","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"tanjiaxian99"},"content":"                    new FileInputStream(encryptedFile.toFile())),","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"tanjiaxian99"},"content":"                    EncryptionUtil.createDecryptCipherInstance());","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"tanjiaxian99"},"content":"            ObjectInputStream inputStream \u003d new ObjectInputStream(cipherInputStream);","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"tanjiaxian99"},"content":"            return (SealedObject) inputStream.readObject();","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"tanjiaxian99"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"tanjiaxian99"},"content":"            throw new IOException(e);","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"tanjiaxian99"},"content":"     * Writes given Sealed Object to encrypted file.","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"tanjiaxian99"},"content":"     * @param encryptedFile cannot be null","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"tanjiaxian99"},"content":"     * @param content cannot be null","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"tanjiaxian99"},"content":"    public static void writeToEncryptedFile(Path encryptedFile, SealedObject content) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"tanjiaxian99"},"content":"        CipherOutputStream cipherOutputStream \u003d new CipherOutputStream(new BufferedOutputStream(","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"tanjiaxian99"},"content":"                new FileOutputStream(encryptedFile.toFile())),","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"tanjiaxian99"},"content":"                EncryptionUtil.createEncryptCipherInstance());","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"tanjiaxian99"},"content":"        ObjectOutputStream outputStream \u003d new ObjectOutputStream(cipherOutputStream);","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"tanjiaxian99"},"content":"        outputStream.writeObject(content);","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"tanjiaxian99"},"content":"        outputStream.close();","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanjiaxian99":42,"-":83}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"greyguy21"},"content":"    /** Returns an unmodifiable view of the filtered list of students */","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"greyguy21"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"greyguy21"},"content":"    /** Returns an unmodifiable view of the filtered list of groups */","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"greyguy21"},"content":"    ObservableList\u003cGroup\u003e getFilteredGroupList();","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"greyguy21":7,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"greyguy21"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"greyguy21"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"greyguy21"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"greyguy21"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"greyguy21"},"content":"        return model.getFilteredGroupList();","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"greyguy21":9,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.GroupContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":" * Adds a student to the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the address book. \"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"            + PREFIX_TELEGRAM_HANDLE + \"TELEGRAM HANDLE \"","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"            + PREFIX_GROUP_NAME + \"GROUPNAME \"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"            + PREFIX_TELEGRAM_HANDLE + \"@john_doe \"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"greyguy21"},"content":"            + PREFIX_GROUP_NAME + \"CS2103T \";","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"greyguy21"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"greyguy21"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the address book\";","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Yttruire"},"content":"    public static final String MESSAGE_GROUP_NONEXISTENT \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Yttruire"},"content":"            \"The group indicated does not exist. Please create it first.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"greyguy21"},"content":"    private final Student toAdd;","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"greyguy21"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"greyguy21"},"content":"    public AddCommand(Student student) {","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"greyguy21"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"greyguy21"},"content":"        toAdd \u003d student;","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"greyguy21"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"greyguy21"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"Yttruire"},"content":"        if (!model.hasGroup(toAdd.getGroup())) {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"Yttruire"},"content":"            throw new CommandException(MESSAGE_GROUP_NONEXISTENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"Yttruire"},"content":"        // Retrieve existing group in model","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"Yttruire"},"content":"        GroupName groupName \u003d toAdd.getGroup().getGroupName();","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"Yttruire"},"content":"        model.updateFilteredGroupList(new GroupContainsKeywordsPredicate(List.of(groupName.toString())));","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"Yttruire"},"content":"        Group retrievedGroup \u003d model.getFilteredGroupList().get(0);","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"Yttruire"},"content":"        Student studentToAdd \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"Yttruire"},"content":"                new Student(toAdd.getName(), toAdd.getTelegramHandle(), toAdd.getEmail(), retrievedGroup);","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"Yttruire"},"content":"        // Add student with the group fetched from the data in the model","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"Yttruire"},"content":"        model.addStudent(studentToAdd);","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yttruire":18,"tanjiaxian99":3,"greyguy21":15,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/AddGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":" * Adds a group to the CSBook.","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"public class AddGroupCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String COMMAND_WORD \u003d \"addgroup\";","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a group to the CSBook. \"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"            + PREFIX_GROUP_NAME + \"GROUPNAME \"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"            + PREFIX_GROUP_NAME + \"CS2103T \"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"            + PREFIX_DESCRIPTION + \"software engineering mod \";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New group added: %1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"This group already exists in the CSBook\";","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"    private final Group toAdd;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"     * Creates an AddGroupCommand to add the specified {@code Group}","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"    public AddGroupCommand(Group group) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"        toAdd \u003d group;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"        if (model.hasGroup(toAdd)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"        model.addGroup(new Group(toAdd.getGroupName(), toAdd.getDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"SKCheongBrian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"SKCheongBrian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"SKCheongBrian"},"content":"                || (other instanceof AddGroupCommand // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"SKCheongBrian"},"content":"                \u0026\u0026 toAdd.equals(((AddGroupCommand) other).toAdd));","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"SKCheongBrian":57}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":"    private final boolean showGroups;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean showGroups) {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"greyguy21"},"content":"        this.showGroups \u003d showGroups;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"greyguy21"},"content":"    public boolean isShowGroups() {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"greyguy21"},"content":"        return showGroups;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"greyguy21":9,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":" * Deletes a student identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"            + \": Deletes the student identified by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"greyguy21"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"greyguy21"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"greyguy21"},"content":"        Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"greyguy21"},"content":"        model.deleteStudent(studentToDelete);","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete));","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yttruire":1,"greyguy21":9,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/DeleteGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_GROUPS;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.GroupContainsKeywordsPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":" * Deletes a student identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"public class DeleteGroupCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"    public static final String COMMAND_WORD \u003d \"deletegroup\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"            + \": Deletes the group identified by its unique name.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"            + \"Parameters: GROUPNAME (must be an ASCII string without whitespace)\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"            + \"Example: \" + COMMAND_WORD + \" CS2103T\";","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":"    public static final String MESSAGE_DELETE_GROUP_SUCCESS \u003d \"Deleted Group: %1$s\";","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Yttruire"},"content":"    private final GroupName targetGroupName;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"    public DeleteGroupCommand(GroupName targetGroupName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Yttruire"},"content":"        this.targetGroupName \u003d targetGroupName;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Yttruire"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Yttruire"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Yttruire"},"content":"        // Get the group that we want to delete, indicated by the given group name","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Yttruire"},"content":"        model.updateFilteredGroupList(new GroupContainsKeywordsPredicate(List.of(targetGroupName.toString())));","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Yttruire"},"content":"        if (model.getFilteredGroupList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Yttruire"},"content":"            throw new CommandException(Messages.MESSAGE_GROUP_NOT_FOUND);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Yttruire"},"content":"        Group groupToDelete \u003d model.getFilteredGroupList().get(0);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Yttruire"},"content":"        model.deleteGroup(groupToDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Yttruire"},"content":"        model.updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Yttruire"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_GROUP_SUCCESS, groupToDelete));","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"Yttruire"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Yttruire"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Yttruire"},"content":"                || (other instanceof DeleteGroupCommand // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"Yttruire"},"content":"                \u0026\u0026 targetGroupName.equals(((DeleteGroupCommand) other).targetGroupName)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Yttruire":59}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.GroupContainsKeywordsPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"import seedu.address.model.student.TelegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":" * Edits the details of an existing student in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"greyguy21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"greyguy21"},"content":"        + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"tanjiaxian99"},"content":"        + \"[\" + PREFIX_TELEGRAM_HANDLE + \"TELEGRAM HANDLE] \"","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"        + \"[\" + PREFIX_GROUP_NAME + \"GROUP NAME] \"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"tanjiaxian99"},"content":"        + PREFIX_TELEGRAM_HANDLE + \"@john_doe \"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"greyguy21"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the address book.\";","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"Yttruire"},"content":"    public static final String MESSAGE_GROUP_NONEXISTENT \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Yttruire"},"content":"        \"The group indicated does not exist. Please create it first.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"greyguy21"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"greyguy21"},"content":"     * @param index                 of the student in the filtered student list to edit","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"greyguy21"},"content":"     * @param editStudentDescriptor details to edit the student with","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"greyguy21"},"content":"    public EditCommand(Index index, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"greyguy21"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"greyguy21"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"greyguy21"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"greyguy21"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"Yttruire"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor, model);","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"greyguy21"},"content":"        if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"greyguy21"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"greyguy21"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"greyguy21"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"greyguy21"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"greyguy21"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"greyguy21"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"Yttruire"},"content":"    private static Student createEditedStudent(Student studentToEdit,","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"Yttruire"},"content":"                                               EditStudentDescriptor editStudentDescriptor,","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"Yttruire"},"content":"                                               Model model) throws CommandException {","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"greyguy21"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"greyguy21"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"tanjiaxian99"},"content":"        TelegramHandle updatedTelegramHandle \u003d editStudentDescriptor.getTelegramHandle()","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"tanjiaxian99"},"content":"            .orElse(studentToEdit.getTelegramHandle());","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"greyguy21"},"content":"        Email updatedEmail \u003d editStudentDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"Yttruire"},"content":"        Group updatedGroup \u003d editStudentDescriptor.getGroup().orElse(studentToEdit.getGroup());","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"Yttruire"},"content":"        if (!model.hasGroup(updatedGroup)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"Yttruire"},"content":"            throw new CommandException(MESSAGE_GROUP_NONEXISTENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"Yttruire"},"content":"        // Retrieve existing group in model","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"Yttruire"},"content":"        GroupName groupName \u003d updatedGroup.getGroupName();","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"Yttruire"},"content":"        model.updateFilteredGroupList(new GroupContainsKeywordsPredicate(List.of(groupName.toString())));","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"Yttruire"},"content":"        Group retrievedUpdatedGroup \u003d model.getFilteredGroupList().get(0);","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"tanjiaxian99"},"content":"        return new Student(updatedName, updatedTelegramHandle, updatedEmail, retrievedUpdatedGroup);","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"greyguy21"},"content":"            \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"greyguy21"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"greyguy21"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"greyguy21"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"tanjiaxian99"},"content":"        private TelegramHandle telegramHandle;","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"Yttruire"},"content":"        private Group group;","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"greyguy21"},"content":"        public EditStudentDescriptor() {","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"greyguy21"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"greyguy21"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"tanjiaxian99"},"content":"            setTelegramHandle(toCopy.telegramHandle);","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"Yttruire"},"content":"            setGroup(toCopy.group);","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"tanjiaxian99"},"content":"            return CollectionUtil.isAnyNonNull(name, telegramHandle, email);","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"tanjiaxian99"},"content":"        public void setTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"tanjiaxian99"},"content":"            this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2021-09-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"tanjiaxian99"},"content":"        public Optional\u003cTelegramHandle\u003e getTelegramHandle() {","lastModifiedDate":"2021-09-23"},{"lineNumber":176,"author":{"gitId":"tanjiaxian99"},"content":"            return Optional.ofNullable(telegramHandle);","lastModifiedDate":"2021-09-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"Yttruire"},"content":"        public void setGroup(Group group) {","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"Yttruire"},"content":"            this.group \u003d group;","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"Yttruire"},"content":"        public Optional\u003cGroup\u003e getGroup() {","lastModifiedDate":"2021-10-06"},{"lineNumber":192,"author":{"gitId":"Yttruire"},"content":"            return Optional.ofNullable(group);","lastModifiedDate":"2021-10-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"greyguy21"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"greyguy21"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2021-09-28"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"tanjiaxian99"},"content":"                \u0026\u0026 getTelegramHandle().equals(e.getTelegramHandle())","lastModifiedDate":"2021-09-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"Yttruire"},"content":"                \u0026\u0026 getGroup().equals(e.getGroup());","lastModifiedDate":"2021-10-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Yttruire":23,"tanjiaxian99":15,"SKCheongBrian":1,"greyguy21":40,"-":138}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"greyguy21":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":" * Finds and lists all students in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose names contain any of \"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"greyguy21"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"greyguy21":5,"-":37}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"greyguy21":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":" * Lists all students in the address book to the user.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"greyguy21":4,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/ListGroupsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"greyguy21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_GROUPS;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"public class ListGroupsCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"    public static final String COMMAND_WORD \u003d \"listgroups\";","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all groups\";","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"        model.updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true);","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"greyguy21":20}},{"path":"src/main/java/seedu/address/logic/commands/ViewGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.Description;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.student.ContainsGroupNamePredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":" * Displays all students in a group that has the given group name.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"public class ViewGroupCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    public static final String COMMAND_WORD \u003d \"viewgroup\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Find and displays details about a group that matches \"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"            + \"the specified group name (case-sensitive).\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"            + \"Parameters: GROUPNAME \\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"            + \"Example: \" + COMMAND_WORD + \" CS2103T\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"    private final ContainsGroupNamePredicate predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"    private final GroupName groupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"     * Creates a ViewGroupCommand to find a {@code Group} with the specified {@code GroupName}","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"    public ViewGroupCommand(ContainsGroupNamePredicate predicate, GroupName groupName) {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"        String displayedText \u003d getGroupInformation(model) + \"\\n\" + Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"junwei26"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"junwei26"},"content":"                String.format(displayedText, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"junwei26"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"junwei26"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"junwei26"},"content":"                || (other instanceof ViewGroupCommand // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"junwei26"},"content":"                \u0026\u0026 predicate.equals(((ViewGroupCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"junwei26"},"content":"    public String getGroupInformation(Model model) {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"junwei26"},"content":"        ObservableList\u003cGroup\u003e groupList \u003d model.getAddressBook().getGroupList();","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"junwei26"},"content":"        // Finds group in the grouplist that has the given group name","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"junwei26"},"content":"        for (Group group : groupList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"junwei26"},"content":"            if (group.getGroupName().equals(groupName)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"junwei26"},"content":"                GroupName groupName \u003d group.getGroupName();","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"junwei26"},"content":"                Description description \u003d group.getDescription();","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"junwei26"},"content":"                return String.format(Messages.MESSAGE_DISPLAY_GROUP_FORMAT, groupName, description);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"junwei26"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"junwei26"},"content":"        return Messages.MESSAGE_GROUP_NOT_FOUND;","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"junwei26":68}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Yttruire":2,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Description;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"import seedu.address.model.student.TelegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TELEGRAM_HANDLE, PREFIX_EMAIL, PREFIX_GROUP_NAME);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_TELEGRAM_HANDLE, PREFIX_EMAIL, PREFIX_GROUP_NAME)","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"tanjiaxian99"},"content":"        TelegramHandle telegramHandle \u003d ParserUtil","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"tanjiaxian99"},"content":"                .parseTelegramHandle(argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).get());","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"greyguy21"},"content":"        GroupName groupName \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP_NAME).get());","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"Yttruire"},"content":"        // Actual description will be grabbed from group that should already exist in addressBook","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"Yttruire"},"content":"        Group group \u003d new Group(groupName, new Description(\"placeholder\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"tanjiaxian99"},"content":"        Student student \u003d new Student(name, telegramHandle, email, group);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"greyguy21"},"content":"        return new AddCommand(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Yttruire":2,"tanjiaxian99":7,"SKCheongBrian":2,"greyguy21":7,"-":43}},{"path":"src/main/java/seedu/address/logic/parser/AddGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Description;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":" * Parses input arguments and creates a new AddGroupCommand object","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"public class AddGroupCommandParser implements Parser\u003cAddGroupCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"     * Parses the given {@code String} of arguments in the context of the AddGroupCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"     * and returns an AddGroupCommand object for execution","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"    public AddGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP_NAME, PREFIX_DESCRIPTION);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GROUP_NAME, PREFIX_DESCRIPTION)","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"        GroupName groupName \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP_NAME).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"        Group group \u003d new Group(groupName, description);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"        return new AddGroupCommand(group);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"SKCheongBrian":47}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"import seedu.address.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"import seedu.address.logic.commands.ListGroupsCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"import seedu.address.logic.commands.ViewGroupCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"Yttruire"},"content":"        case DeleteGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Yttruire"},"content":"            return new DeleteGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"greyguy21"},"content":"        case ListGroupsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"greyguy21"},"content":"            return new ListGroupsCommand();","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":81,"author":{"gitId":"junwei26"},"content":"        case ViewGroupCommand.COMMAND_WORD :","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"junwei26"},"content":"            return new ViewGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"SKCheongBrian"},"content":"        case AddGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"SKCheongBrian"},"content":"            return new AddGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yttruire":4,"SKCheongBrian":4,"greyguy21":4,"junwei26":4,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"    public static final Prefix PREFIX_TELEGRAM_HANDLE \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"    public static final Prefix PREFIX_GROUP_NAME \u003d new Prefix(\"g/\");","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix (\"d/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tanjiaxian99":1,"SKCheongBrian":1,"greyguy21":1,"-":11}},{"path":"src/main/java/seedu/address/logic/parser/DeleteGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"import seedu.address.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"public class DeleteGroupCommandParser implements Parser\u003cDeleteGroupCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteGroupCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"     * and returns a DeleteGroupCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"    public DeleteGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"            GroupName groupName \u003d ParserUtil.parseGroupName(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"            return new DeleteGroupCommand(groupName);","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteGroupCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Yttruire":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.Description;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TELEGRAM_HANDLE, PREFIX_EMAIL, PREFIX_GROUP_NAME);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditCommand.EditStudentDescriptor();","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"greyguy21"},"content":"            editStudentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"tanjiaxian99"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).isPresent()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"tanjiaxian99"},"content":"            editStudentDescriptor.setTelegramHandle(","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"tanjiaxian99"},"content":"                    ParserUtil.parseTelegramHandle(argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"greyguy21"},"content":"            editStudentDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"greyguy21"},"content":"        if (argMultimap.getValue(PREFIX_GROUP_NAME).isPresent()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"Yttruire"},"content":"            editStudentDescriptor.setGroup(","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Yttruire"},"content":"                    new Group(ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP_NAME).get()),","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"Yttruire"},"content":"                            new Description(\"placeholder\")));","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"greyguy21"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"        return new EditCommand(index, editStudentDescriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Yttruire":5,"tanjiaxian99":5,"greyguy21":8,"-":45}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"greyguy21":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Description;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"import seedu.address.model.student.TelegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"tanjiaxian99"},"content":"     * Parses a {@code String telegramHandle} into a {@code TelegramHandle}.","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws ParseException if the given {@code telegramHandle} is invalid.","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"tanjiaxian99"},"content":"    public static TelegramHandle parseTelegramHandle(String telegramHandle) throws ParseException {","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"tanjiaxian99"},"content":"        requireNonNull(telegramHandle);","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"tanjiaxian99"},"content":"        String trimmedTelegramHandle \u003d telegramHandle.trim();","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"tanjiaxian99"},"content":"        if (!TelegramHandle.isValidTelegramHandle(trimmedTelegramHandle)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"tanjiaxian99"},"content":"            throw new ParseException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"tanjiaxian99"},"content":"        return new TelegramHandle(trimmedTelegramHandle);","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"greyguy21"},"content":"     * Parses a {@code String groupName} into an {@code GroupName}.","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"greyguy21"},"content":"     * @throws ParseException if the given {@code groupName} is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"greyguy21"},"content":"    public static GroupName parseGroupName(String groupName) throws ParseException {","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"greyguy21"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"greyguy21"},"content":"        String trimmedGroupName \u003d groupName.trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"SKCheongBrian"},"content":"        if (!GroupName.isValidName(trimmedGroupName)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"SKCheongBrian"},"content":"            throw new ParseException(GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"greyguy21"},"content":"        return new GroupName(trimmedGroupName);","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"SKCheongBrian"},"content":"     * Parses a {@code String description} into a {@Code Description}.","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"SKCheongBrian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"SKCheongBrian"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"SKCheongBrian"},"content":"     * @throws ParseException if given description is not valid.","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"SKCheongBrian"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"SKCheongBrian"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"SKCheongBrian"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"SKCheongBrian"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"SKCheongBrian"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"SKCheongBrian"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tanjiaxian99":9,"SKCheongBrian":14,"greyguy21":9,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/ViewGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import seedu.address.logic.commands.ViewGroupCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.student.ContainsGroupNamePredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"public class ViewGroupCommandParser implements Parser\u003cViewGroupCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewGroupCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"     * and returns a ViewGroupCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"    public ViewGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"            GroupName groupName \u003d ParserUtil.parseGroupName(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"            return new ViewGroupCommand(new ContainsGroupNamePredicate(groupName), groupName);","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewGroupCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"junwei26":26}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.UniqueGroupList;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"    private final UniqueGroupList groups;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"greyguy21"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"        groups \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"     * Creates an AddressBook using the Students in the {@code toBeCopied}","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"greyguy21"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"greyguy21"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"greyguy21"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"greyguy21"},"content":"        this.students.setStudent(students);","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"Yttruire"},"content":"     * Replaces the contents of the student list with {@code groups}.","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Yttruire"},"content":"     * {@code students} must not contain duplicate groups.","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Yttruire"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Yttruire"},"content":"        this.groups.setGroup(groups);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"greyguy21"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"Yttruire"},"content":"        setGroups(newData.getGroupList()); //TODO Load group data in the future","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"greyguy21"},"content":"    //// student-level operations","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"greyguy21"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"greyguy21"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"greyguy21"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"greyguy21"},"content":"        return this.students.contains(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"greyguy21"},"content":"     * Adds a student to the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"greyguy21"},"content":"     * The student must not already exist in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"greyguy21"},"content":"    public void addStudent(Student s) {","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"greyguy21"},"content":"        students.add(s);","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"greyguy21"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"greyguy21"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the address","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"greyguy21"},"content":"     * book.","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"greyguy21"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"greyguy21"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"greyguy21"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"greyguy21"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"greyguy21"},"content":"        students.remove(key);","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"Yttruire"},"content":"    //// group-level operations","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"Yttruire"},"content":"     * Returns true if a group with the same identity as {@code group} exists in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"Yttruire"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"Yttruire"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"Yttruire"},"content":"        return this.groups.contains(group);","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"Yttruire"},"content":"     * Adds a group to the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"Yttruire"},"content":"     * The group must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"Yttruire"},"content":"    public void addGroup(Group g) {","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"Yttruire"},"content":"        groups.add(g);","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"Yttruire"},"content":"    public void removeGroup(Group key) {","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"Yttruire"},"content":"        groups.remove(key);","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"Yttruire"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"Yttruire"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"Yttruire"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the address","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"Yttruire"},"content":"     * book.","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"Yttruire"},"content":"    public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"Yttruire"},"content":"        requireNonNull(editedGroup);","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"Yttruire"},"content":"        groups.setGroup(target, editedGroup);","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"greyguy21"},"content":"        return students.asUnmodifiableObservableList().size() + \" students\";","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"greyguy21"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":160,"author":{"gitId":"greyguy21"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2021-09-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":163,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"Yttruire"},"content":"    public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"Yttruire"},"content":"        return groups.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"greyguy21"},"content":"                \u0026\u0026 students.equals(((AddressBook) other).students));","lastModifiedDate":"2021-09-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"greyguy21"},"content":"        return students.hashCode();","lastModifiedDate":"2021-09-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yttruire":46,"greyguy21":33,"-":100}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"    Predicate\u003cGroup\u003e PREDICATE_SHOW_ALL_GROUPS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"greyguy21"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"greyguy21"},"content":"     * Deletes the given student.","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"greyguy21"},"content":"     * The student must exist in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"greyguy21"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"greyguy21"},"content":"     * Adds the given student.","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"greyguy21"},"content":"     * {@code student} must not already exist in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"greyguy21"},"content":"    void addStudent(Student student);","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"greyguy21"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"greyguy21"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the address","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"greyguy21"},"content":"     * book.","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"greyguy21"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"greyguy21"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"greyguy21"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"greyguy21"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"greyguy21"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"Yttruire"},"content":"     * Returns true if a group with the same identity as {@code group} exists in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"Yttruire"},"content":"    boolean hasGroup(Group group);","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Yttruire"},"content":"     * Deletes the given group.","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"Yttruire"},"content":"     * The group must exist in the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"Yttruire"},"content":"    void deleteGroup(Group target);","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"SKCheongBrian"},"content":"     * Adds the given group.","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"SKCheongBrian"},"content":"     * {@code group} must not already exist in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"SKCheongBrian"},"content":"    void addGroup(Group group); //TODO to implement in 1.2b","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"Yttruire"},"content":"    ///**","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"Yttruire"},"content":"    // * Replaces the given group {@code target} with {@code editedGroup}.","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"Yttruire"},"content":"    // * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"Yttruire"},"content":"    // * The group identity of {@code editedGroup} must not be the same as another existing group in the address","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"Yttruire"},"content":"    // * book.","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"Yttruire"},"content":"    // */","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"Yttruire"},"content":"    // void setGroup(Group target, Group editedGroup); //TODO to implement in 1.2b","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"Yttruire"},"content":"    /** Returns an unmodifiable view of the filtered group list */","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"Yttruire"},"content":"    ObservableList\u003cGroup\u003e getFilteredGroupList();","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"Yttruire"},"content":"     * Updates the filter of the filtered group list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"Yttruire"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"Yttruire"},"content":"    void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Yttruire":31,"SKCheongBrian":6,"greyguy21":18,"-":70}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.GroupContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"greyguy21"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Yttruire"},"content":"    private final FilteredList\u003cGroup\u003e filteredGroups;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"greyguy21"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.addressBook.getStudentList());","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"Yttruire"},"content":"        filteredGroups \u003d new FilteredList\u003c\u003e(this.addressBook.getGroupList());","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"greyguy21"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"greyguy21"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"greyguy21"},"content":"        return addressBook.hasStudent(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"greyguy21"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"Yttruire"},"content":"        // Retrieve existing group in model","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"Yttruire"},"content":"        GroupName groupName \u003d target.getGroupName();","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"Yttruire"},"content":"        updateFilteredGroupList(new GroupContainsKeywordsPredicate(List.of(groupName.toString())));","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"Yttruire"},"content":"        Group retrievedGroup \u003d getFilteredGroupList().get(0);","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"Yttruire"},"content":"        // Remove reference to student from the group that the student belonged to","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"Yttruire"},"content":"        retrievedGroup.removeStudent(target);","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"greyguy21"},"content":"        addressBook.removeStudent(target);","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"greyguy21"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"Yttruire"},"content":"        // Retrieve existing group in model","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"Yttruire"},"content":"        GroupName groupName \u003d student.getGroupName();","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"Yttruire"},"content":"        updateFilteredGroupList(new GroupContainsKeywordsPredicate(List.of(groupName.toString())));","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"Yttruire"},"content":"        Group retrievedGroup \u003d getFilteredGroupList().get(0);","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"Yttruire"},"content":"        updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"Yttruire"},"content":"        // Add reference to student into the group","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"Yttruire"},"content":"        retrievedGroup.addStudent(student);","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"greyguy21"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"greyguy21"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"greyguy21"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"greyguy21"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"greyguy21"},"content":"        addressBook.setStudent(target, editedStudent);","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"Yttruire"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"Yttruire"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"Yttruire"},"content":"        return addressBook.hasGroup(group);","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"Yttruire"},"content":"    public void deleteGroup(Group target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"Yttruire"},"content":"        Set\u003cStudent\u003e studentsToDelete \u003d target.getStudents();","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"Yttruire"},"content":"        // Delete all students associated with the group","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"Yttruire"},"content":"        for (Student student : studentsToDelete) {","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"Yttruire"},"content":"            addressBook.removeStudent(student);","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"Yttruire"},"content":"        addressBook.removeGroup(target);","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"SKCheongBrian"},"content":"    public void addGroup(Group group) {","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"SKCheongBrian"},"content":"        addressBook.addGroup(group);","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"SKCheongBrian"},"content":"        updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"greyguy21"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":166,"author":{"gitId":"greyguy21"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2021-09-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"greyguy21"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":171,"author":{"gitId":"greyguy21"},"content":"        return filteredStudents;","lastModifiedDate":"2021-09-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"greyguy21"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-09-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":177,"author":{"gitId":"greyguy21"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2021-09-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":180,"author":{"gitId":"Yttruire"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Group List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"Yttruire"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"Yttruire"},"content":"        return filteredGroups;","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"Yttruire"},"content":"    public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"Yttruire"},"content":"        filteredGroups.setPredicate(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":209,"author":{"gitId":"Yttruire"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents)","lastModifiedDate":"2021-10-06"},{"lineNumber":210,"author":{"gitId":"Yttruire"},"content":"                \u0026\u0026 filteredGroups.equals(other.filteredGroups);","lastModifiedDate":"2021-10-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yttruire":46,"SKCheongBrian":4,"greyguy21":20,"-":143}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"     * Returns an unmodifiable view of the groups list.","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"     * This list will not contain any duplicate groups.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"    ObservableList\u003cGroup\u003e getGroupList();","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yttruire":6,"greyguy21":4,"-":13}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"csbook\");","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanjiaxian99":1,"-":86}},{"path":"src/main/java/seedu/address/model/group/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":" * Represents a Group\u0027s description in the CSBook","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":" * Guarantee: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"public class Description {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"    public final String description;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"     * Creates a Description with the given description.","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"    public Description(String description) {","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"        return description;","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"                \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"        return description.hashCode();","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"SKCheongBrian":49}},{"path":"src/main/java/seedu/address/model/group/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":" * Represents a Group in the CSBook.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":" * Guarantee: groupName is present and not null, field values are validated, immutable.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"public class Group {","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"    // Identity fields","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"    private final GroupName groupName;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"    private final Description description;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"    // Data fields","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"    private final Set\u003cStudent\u003e students \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"    public Group(GroupName groupName, Description description) {","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"        requireAllNonNull(groupName, description);","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"    public GroupName getGroupName() {","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"        return groupName;","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"        return description;","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"    public Set\u003cStudent\u003e getStudents() {","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"        return Collections.unmodifiableSet(students);","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"        students.add(student);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"junwei26"},"content":"    public void addAllStudents(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"junwei26"},"content":"        this.students.addAll(students);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"SKCheongBrian"},"content":"    public void removeStudent(Student student) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"SKCheongBrian"},"content":"        students.remove(student);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns true if both groups have the same GroupName.","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"SKCheongBrian"},"content":"     * This defines a weaker notion of equality between two groups.","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"SKCheongBrian"},"content":"    public boolean isSameGroup(Group otherGroup) {","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"SKCheongBrian"},"content":"        if (otherGroup \u003d\u003d this) {","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"SKCheongBrian"},"content":"            return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"SKCheongBrian"},"content":"        return otherGroup !\u003d null","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"SKCheongBrian"},"content":"                \u0026\u0026 otherGroup.getGroupName().equals(getGroupName());","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"Yttruire"},"content":"     * Returns true if the group has no assigned students","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"Yttruire"},"content":"    public boolean hasNoStudents() {","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"Yttruire"},"content":"        return students.isEmpty();","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns true if both Groups have the same GroupName and list of students","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"SKCheongBrian"},"content":"     * This defines a stronger notion of equality between two groups.","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"SKCheongBrian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"SKCheongBrian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"SKCheongBrian"},"content":"            return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"SKCheongBrian"},"content":"        if (!(other instanceof Group)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"SKCheongBrian"},"content":"            return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"SKCheongBrian"},"content":"        Group otherGroup \u003d (Group) other;","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"SKCheongBrian"},"content":"        return otherGroup.getGroupName().equals(getGroupName())","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"SKCheongBrian"},"content":"                \u0026\u0026 getDescription().equals(otherGroup.getDescription())","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"SKCheongBrian"},"content":"                \u0026\u0026 getStudents().equals(otherGroup.getStudents());","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"SKCheongBrian"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"SKCheongBrian"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"SKCheongBrian"},"content":"        return Objects.hash(groupName, students, description);","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"SKCheongBrian"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"SKCheongBrian"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"SKCheongBrian"},"content":"        builder.append(getGroupName())","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"SKCheongBrian"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"SKCheongBrian"},"content":"                .append(getDescription());","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"SKCheongBrian"},"content":"        Set\u003cStudent\u003e students \u003d getStudents();","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"SKCheongBrian"},"content":"        if (!students.isEmpty()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"SKCheongBrian"},"content":"            builder.append(\"; Students: \");","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"Yttruire"},"content":"            students.forEach(student -\u003e builder.append(student.getName()).append(\", \"));","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"Yttruire"},"content":"            builder.delete(builder.lastIndexOf(\", \"), builder.length() - 1); // Remove last delimiter","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"SKCheongBrian"},"content":"        return builder.toString();","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"Yttruire":9,"SKCheongBrian":107,"junwei26":5}},{"path":"src/main/java/seedu/address/model/group/GroupContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"public class GroupContainsKeywordsPredicate implements Predicate\u003cGroup\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"    public GroupContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"    public boolean test(Group group) {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(group.getGroupName().toString(), keyword));","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Yttruire"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":"                || (other instanceof GroupContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"                \u0026\u0026 keywords.equals(((GroupContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Yttruire":31}},{"path":"src/main/java/seedu/address/model/group/GroupName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":" * Represents a Group\u0027s name in the CSBook.","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":" * Guarantee: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"public class GroupName {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"            \"Group names should only contain alphanumeric character and spaces, and it should not be blank\";","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"     * The first character of the group name must not be a whitespace,","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"    public final String fullName;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"     * Constructs a {@code GroupName}.","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"    public GroupName(String name) {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"        fullName \u003d name;","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns true if a given string is valid name.","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"        return fullName;","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"                || (other instanceof GroupName // instanceof handles nulls","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"                \u0026\u0026 fullName.equals(((GroupName) other).fullName)); // state check","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"SKCheongBrian"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"SKCheongBrian"},"content":"        return fullName.hashCode();","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"SKCheongBrian":56}},{"path":"src/main/java/seedu/address/model/group/UniqueGroupList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":" * A list of groups that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":" * A group is considered unique by comparing using {@code Group#isSameGroup(Group)}. As such, adding and updating of","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":" * groups uses Group#isSameGroup(Group) for equality so as to ensure that the group being added or updated is","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":" * unique in terms of identity in the UniqueGroupList. However, the removal of a group uses Group#equals(Object) so","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":" * as to ensure that the group with exactly the same fields will be removed.","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":" *","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":" *","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":" * @see Group#isSameGroup(Group)","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"public class UniqueGroupList implements Iterable\u003cGroup\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":"    private final ObservableList\u003cGroup\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"    private final ObservableList\u003cGroup\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Yttruire"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Yttruire"},"content":"     * Returns true if the list contains an equivalent group as the given argument.","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Yttruire"},"content":"    public boolean contains(Group toCheck) {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Yttruire"},"content":"        return internalList.stream().anyMatch(toCheck::isSameGroup);","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"Yttruire"},"content":"     * Adds a group to the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Yttruire"},"content":"     * The group must not already exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"Yttruire"},"content":"    public void add(Group toAdd) {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"Yttruire"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Yttruire"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Yttruire"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"Yttruire"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Yttruire"},"content":"     * Removes the equivalent group from the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Yttruire"},"content":"     * The group must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"Yttruire"},"content":"    public void remove(Group toRemove) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Yttruire"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Yttruire"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Yttruire"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"Yttruire"},"content":"     * Replaces the group {@code target} in the list with {@code editedGroup}.","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"Yttruire"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"Yttruire"},"content":"     * The group identity of {@code editedGroup} must not be the same as another existing group in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"Yttruire"},"content":"    public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"Yttruire"},"content":"        requireAllNonNull(target, editedGroup);","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"Yttruire"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"Yttruire"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"Yttruire"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"Yttruire"},"content":"        if (!target.isSameGroup(editedGroup) \u0026\u0026 contains(editedGroup)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"Yttruire"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"Yttruire"},"content":"        internalList.set(index, editedGroup);","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"Yttruire"},"content":"    public void setGroup(UniqueGroupList replacement) {","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"Yttruire"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"Yttruire"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"Yttruire"},"content":"     * Replaces the contents of this list with {@code groups}.","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"Yttruire"},"content":"     * {@code groups} must not contain duplicate groups.","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"Yttruire"},"content":"    public void setGroup(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Yttruire"},"content":"        requireAllNonNull(groups);","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"Yttruire"},"content":"        if (!groupsAreUnique(groups)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"Yttruire"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"Yttruire"},"content":"        internalList.setAll(groups);","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"Yttruire"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"Yttruire"},"content":"    public ObservableList\u003cGroup\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"Yttruire"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"Yttruire"},"content":"    public Iterator\u003cGroup\u003e iterator() {","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"Yttruire"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"Yttruire"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"Yttruire"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"Yttruire"},"content":"                || (other instanceof UniqueGroupList // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"Yttruire"},"content":"                \u0026\u0026 internalList.equals(((UniqueGroupList) other).internalList));","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"Yttruire"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"Yttruire"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"Yttruire"},"content":"     * Returns true if {@code groups} contains only unique groups.","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"Yttruire"},"content":"    private boolean groupsAreUnique(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"Yttruire"},"content":"        for (int i \u003d 0; i \u003c groups.size() - 1; i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"Yttruire"},"content":"            for (int j \u003d i + 1; j \u003c groups.size(); j++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"Yttruire"},"content":"                if (groups.get(i).isSameGroup(groups.get(j))) {","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"Yttruire"},"content":"                    return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"Yttruire"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"Yttruire"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"Yttruire"},"content":"        return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Yttruire":137}},{"path":"src/main/java/seedu/address/model/group/exceptions/DuplicateGroupException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":" * Signals that the operation will result in duplicate Groups (Groups are considered duplicates if they have the same","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":" * name).","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"public class DuplicateGroupException extends RuntimeException {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"    public DuplicateGroupException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"        super(\"Operation would result in duplicate groups\");","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Yttruire":11}},{"path":"src/main/java/seedu/address/model/group/exceptions/GroupNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":" * Signals that the operation is unable to find the specified group.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"public class GroupNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"    public GroupNotFoundException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"        super(\"Specified group cannot be found\");","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Yttruire":10}},{"path":"src/main/java/seedu/address/model/student/ContainsGroupNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"public class ContainsGroupNamePredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"    private final GroupName groupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"    public ContainsGroupNamePredicate(GroupName groupName) {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"        //TODO : Change student.getGroup().getGroupName() to student.getGroupName() once we change student group field","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"        return groupName.equals(student.getGroup().getGroupName());","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"                || (other instanceof ContainsGroupNamePredicate // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"                \u0026\u0026 groupName.equals(((ContainsGroupNamePredicate) other).groupName)); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"junwei26":27}},{"path":"src/main/java/seedu/address/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":" * Represents a Student\u0027s email in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"greyguy21":2,"-":69}},{"path":"src/main/java/seedu/address/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":" * Represents a Student\u0027s name in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"greyguy21":2,"-":57}},{"path":"src/main/java/seedu/address/model/student/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(student.getName().fullName, keyword));","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"greyguy21":5,"-":26}},{"path":"src/main/java/seedu/address/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":" * Represents a Student in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":"public class Student {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"    private final TelegramHandle telegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"greyguy21"},"content":"    private final Group group;","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"    public Student(Name name, TelegramHandle telegramHandle, Email email, Group group) {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"        requireAllNonNull(name, telegramHandle, email, group);","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"        this.group \u003d group;","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"tanjiaxian99"},"content":"    public TelegramHandle getTelegramHandle() {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"tanjiaxian99"},"content":"        return telegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"    public Group getGroup() {","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"        return group;","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"Yttruire"},"content":"    public GroupName getGroupName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Yttruire"},"content":"        return group.getGroupName();","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"greyguy21"},"content":"     * Returns true if both students have the same name.","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"greyguy21"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"greyguy21"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"greyguy21"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"greyguy21"},"content":"                \u0026\u0026 otherStudent.getName().equals(getName());","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"greyguy21"},"content":"     * Returns true if both students have the same identity and data fields.","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"greyguy21"},"content":"     * This defines a stronger notion of equality between two students.","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"greyguy21"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"greyguy21"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"greyguy21"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"tanjiaxian99"},"content":"                \u0026\u0026 otherStudent.getTelegramHandle().equals(getTelegramHandle())","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"greyguy21"},"content":"                \u0026\u0026 otherStudent.getEmail().equals(getEmail())","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"Yttruire"},"content":"                \u0026\u0026 otherStudent.getGroup().equals(getGroup());","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"Yttruire"},"content":"        return Objects.hash(name, telegramHandle, email, getGroupName());","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"tanjiaxian99"},"content":"                .append(\"; Telegram Handle: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"tanjiaxian99"},"content":"                .append(getTelegramHandle())","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"Yttruire"},"content":"                .append(\"; Group: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"Yttruire"},"content":"                .append(getGroupName());","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yttruire":9,"tanjiaxian99":9,"SKCheongBrian":5,"greyguy21":18,"-":68}},{"path":"src/main/java/seedu/address/model/student/TelegramHandle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":" * Represents a Person\u0027s telegram handle in the address book.","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegramHandle(String)}","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"public class TelegramHandle {","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"            \"Telegram handles should start with an @, followed by lowercase letters, numbers or underscores. \"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"                    + \"Minimum length is 5.\";","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"    public static final String VALIDATION_REGEX \u003d \"@[[a-z][0-9]_]{5,}\";","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"     * Constructs a {@code TelegramHandle}.","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"     * @param telegramHandle A valid telegram handle.","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"    public TelegramHandle(String telegramHandle) {","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"        requireNonNull(telegramHandle);","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"        checkArgument(isValidTelegramHandle(telegramHandle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"        value \u003d telegramHandle;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns true if a given string is a valid telegram handle.","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"    public static boolean isValidTelegramHandle(String test) {","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"tanjiaxian99"},"content":"                || (other instanceof TelegramHandle // instanceof handles nulls","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"tanjiaxian99"},"content":"                \u0026\u0026 value.equals(((TelegramHandle) other).value)); // state check","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanjiaxian99":17,"-":36}},{"path":"src/main/java/seedu/address/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"greyguy21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import java.util.List;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":" * A student is considered unique by comparing using {@code Student#isSameStudent(Student)}. As such, adding and","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":" * updating of students uses Student#isSameStudent(Student) for equality so as to ensure that the student being added","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":" * or updated is unique in terms of identity in the UniqueStudentList. However, the removal of a student uses","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":" * Student#equals(Object) so as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":" *","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"greyguy21"},"content":" *","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"greyguy21"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"greyguy21"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"greyguy21"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"greyguy21"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"greyguy21"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"greyguy21"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"greyguy21"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"greyguy21"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudent);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"     * Adds a student to the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"greyguy21"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"greyguy21"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"greyguy21"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"greyguy21"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"greyguy21"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"greyguy21"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"greyguy21"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"greyguy21"},"content":"     * The student must exist in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"greyguy21"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"greyguy21"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"greyguy21"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"greyguy21"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"greyguy21"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"greyguy21"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"greyguy21"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"greyguy21"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"greyguy21"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"greyguy21"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"greyguy21"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"greyguy21"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"greyguy21"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"greyguy21"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"greyguy21"},"content":"        if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"greyguy21"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"greyguy21"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"greyguy21"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"greyguy21"},"content":"    public void setStudent(UniqueStudentList replacement) {","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"greyguy21"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"greyguy21"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"greyguy21"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"greyguy21"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"greyguy21"},"content":"    public void setStudent(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"greyguy21"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"greyguy21"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"greyguy21"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"greyguy21"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"greyguy21"},"content":"        internalList.setAll(students);","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"greyguy21"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"greyguy21"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"greyguy21"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"greyguy21"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"greyguy21"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"greyguy21"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"greyguy21"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"greyguy21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"greyguy21"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"greyguy21"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"greyguy21"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"greyguy21"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"greyguy21"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"greyguy21"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"greyguy21"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"greyguy21"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"greyguy21"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"greyguy21"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"greyguy21"},"content":"                if (students.get(i).isSameStudent(students.get(j))) {","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"greyguy21"},"content":"                    return false;","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"greyguy21"},"content":"                }","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"greyguy21"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"greyguy21"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"greyguy21"},"content":"        return true;","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"greyguy21"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"greyguy21":137}},{"path":"src/main/java/seedu/address/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"greyguy21"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":" * Signals that the operation will result in duplicate Students (Students are considered duplicates if they have the","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":" * same identity).","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"        super(\"Operation would result in duplicate students\");","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"greyguy21":11}},{"path":"src/main/java/seedu/address/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"greyguy21"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"greyguy21":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Description;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"import seedu.address.model.student.TelegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"        return new Student[]{","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"            new Student(new Name(\"Alex Yeoh\"), new TelegramHandle(\"@alex_yeoh\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"                new Group(new GroupName(\"CS2103T\"), new Description(\"SWE Module\"))),","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"            new Student(new Name(\"Bernice Yu\"), new TelegramHandle(\"@bernice_yu\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"                new Group(new GroupName(\"CS2103T\"), new Description(\"SWE Module\"))),","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new TelegramHandle(\"@charlotte\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"                    new Email(\"charlotte@example.com\"), new Group(new GroupName(\"CS2103T\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"                    new Description(\"SWE Module\"))),","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"            new Student(new Name(\"David Li\"), new TelegramHandle(\"@david_li\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"                new Group(new GroupName(\"CS2103T\"), new Description(\"SWE Module\"))),","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new TelegramHandle(\"@irfan_ibrahim\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"                new Group(new GroupName(\"CS2103T\"), new Description(\"SWE Module\"))),","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new TelegramHandle(\"@roy_balakrishnan\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"                    new Email(\"royb@example.com\"), new Group(new GroupName(\"CS2103T\"), new Description(\"SWE Module\")))","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"    private static Group[] getSampleGroups() {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Yttruire"},"content":"        return new Group[]{","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Yttruire"},"content":"            new Group(new GroupName(\"CS2103T\"), new Description(\"SWE Module\")),","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Yttruire"},"content":"            new Group(new GroupName(\"CS2101\"), new Description(\"test\"))","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":44,"author":{"gitId":"greyguy21"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Yttruire"},"content":"        for (Group sampleGroup : getSampleGroups()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Yttruire"},"content":"            sampleAb.addGroup(sampleGroup);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Yttruire":7,"tanjiaxian99":7,"SKCheongBrian":2,"greyguy21":8,"junwei26":7,"-":23}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.Description;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":" * Jackson-friendly version of {@link Group}.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"class JsonAdaptedGroup {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Group\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    private final String name;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"    private final String description;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"     * Constructs a {@code JsonAdaptedGroup} with the given group details.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"    public JsonAdaptedGroup(@JsonProperty(\"name\") String name, @JsonProperty(\"description\") String description) {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"     * Converts a given {@code Group} into this class for Jackson use.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"    public JsonAdaptedGroup(Group source) {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"        this.name \u003d source.getGroupName().toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"        this.description \u003d source.getDescription().toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"     * Converts this Jackson-friendly adapted Group object into the model\u0027s {@code Group} object.","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted group","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"junwei26"},"content":"     *                               or there is no Group in the group list that has the same group name","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"junwei26"},"content":"     *                               as the student.","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"junwei26"},"content":"    public Group toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"junwei26"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"junwei26"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"junwei26"},"content":"                    GroupName.class.getSimpleName()));","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"junwei26"},"content":"        if (!GroupName.isValidName(name)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"junwei26"},"content":"            throw new IllegalValueException(GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"junwei26"},"content":"        final GroupName modelGroupName \u003d new GroupName(name);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"junwei26"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"junwei26"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"junwei26"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"junwei26"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"junwei26"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"junwei26"},"content":"        final Description modelDescription \u003d new Description(this.description);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"junwei26"},"content":"        return new Group(modelGroupName, modelDescription);","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"junwei26":66}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Description;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"import seedu.address.model.student.TelegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"greyguy21"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"    public static final String MESSAGE_GROUP_NAME_NOT_FOUND \u003d \"No matching group can be found in the group \"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"                                                                + \"list with the same group name as the student\u0027s.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"    private final String telegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"greyguy21"},"content":"    private final String groupName;","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"greyguy21"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"tanjiaxian99"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name, @JsonProperty(\"telegramHandle\") String telegramHandle,","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"groupName\") String groupName) {","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"tanjiaxian99"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"greyguy21"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"greyguy21"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"greyguy21"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"tanjiaxian99"},"content":"        telegramHandle \u003d source.getTelegramHandle().value;","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Yttruire"},"content":"        groupName \u003d source.getGroup().getGroupName().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"greyguy21"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"junwei26"},"content":"    public Student toModelType(ObservableList\u003cGroup\u003e groupList) throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"tanjiaxian99"},"content":"        if (telegramHandle \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"tanjiaxian99"},"content":"                    TelegramHandle.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"tanjiaxian99"},"content":"        if (!TelegramHandle.isValidTelegramHandle(telegramHandle)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"tanjiaxian99"},"content":"            throw new IllegalValueException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"tanjiaxian99"},"content":"        final TelegramHandle modelTelegramHandle \u003d new TelegramHandle(this.telegramHandle);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"greyguy21"},"content":"        if (groupName \u003d\u003d null) {","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"greyguy21"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"greyguy21"},"content":"                GroupName.class.getSimpleName()));","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"greyguy21"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"greyguy21"},"content":"        final GroupName modelGroupName \u003d new GroupName(groupName);","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"junwei26"},"content":"        Group modelGroup \u003d retrieveByName(modelGroupName, groupList);","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"junwei26"},"content":"        return new Student(modelName, modelTelegramHandle, modelEmail, modelGroup);","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"junwei26"},"content":"     * Returns a {@code Group} from a given group list that matches the given {@code GroupName}.","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"junwei26"},"content":"     * @return group from the group list that matches the given group name","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"junwei26"},"content":"     * @throws IllegalValueException if no group that matches the groupName can be found.","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"junwei26"},"content":"    public Group retrieveByName(GroupName groupName, ObservableList\u003cGroup\u003e groupList) throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"junwei26"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"junwei26"},"content":"        for (Group group : groupList) {","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"junwei26"},"content":"            if (group.getGroupName().equals(groupName)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"junwei26"},"content":"                String groupNameString \u003d groupName.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"junwei26"},"content":"                String descriptionString \u003d group.getDescription().toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"junwei26"},"content":"                return new Group(new GroupName(groupNameString),","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"junwei26"},"content":"                        new Description(descriptionString));","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"junwei26"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"junwei26"},"content":"        throw new IllegalValueException(MESSAGE_GROUP_NAME_NOT_FOUND);","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Yttruire":2,"tanjiaxian99":11,"SKCheongBrian":2,"junwei26":30,"greyguy21":21,"-":51}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"import seedu.address.commons.util.EncryptedJsonUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"tanjiaxian99"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d EncryptedJsonUtil.readEncryptedJsonFile(","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"tanjiaxian99"},"content":"        EncryptedJsonUtil.saveEncryptedJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanjiaxian99":3,"-":77}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"greyguy21"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Students list contains duplicate student(s).\";","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"Groups list contains duplicate group(s).\";","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"greyguy21"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"    private final List\u003cJsonAdaptedGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"greyguy21"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given students.","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students,","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"                                            @JsonProperty(\"groups\") List\u003cJsonAdaptedGroup\u003e groups) {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"        this.groups.addAll(groups);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"greyguy21"},"content":"        this.students.addAll(students);","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"greyguy21"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"junwei26"},"content":"        groups.addAll(source.getGroupList().stream().map(JsonAdaptedGroup::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"junwei26"},"content":"        for (JsonAdaptedGroup jsonAdaptedGroup : groups) {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"junwei26"},"content":"            Group group \u003d jsonAdaptedGroup.toModelType();","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"junwei26"},"content":"            if (addressBook.hasGroup(group)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"junwei26"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"junwei26"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"junwei26"},"content":"            addressBook.addGroup(group);","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"junwei26"},"content":"        ObservableList\u003cGroup\u003e groupList \u003d addressBook.getGroupList();","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"greyguy21"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"junwei26"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType(groupList);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"greyguy21"},"content":"            if (addressBook.hasStudent(student)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"greyguy21"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"greyguy21"},"content":"            addressBook.addStudent(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"junwei26"},"content":"        for (Group groupWithoutStudentList : groupList) {","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"junwei26"},"content":"            List\u003cStudent\u003e studentsInGroup \u003d addressBook.getStudentList().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"junwei26"},"content":"                    .filter(student -\u003e student.getGroup().equals(groupWithoutStudentList)).collect(Collectors.toList());","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"junwei26"},"content":"            Group groupWithStudentList \u003d new Group(groupWithoutStudentList.getGroupName(),","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"junwei26"},"content":"                    groupWithoutStudentList.getDescription());","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"junwei26"},"content":"            groupWithStudentList.addAllStudents(studentsInGroup);","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"junwei26"},"content":"            addressBook.setGroup(groupWithoutStudentList, groupWithStudentList);","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"junwei26":31,"greyguy21":10,"-":49}},{"path":"src/main/java/seedu/address/ui/GroupCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"greyguy21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":" * A UI component that displays information of a {@code Group}.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"public class GroupCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":"    private static final String FXML \u003d \"GroupCard.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"    public final Group group;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"greyguy21"},"content":"    private Label id;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"greyguy21"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"    private Label name;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"greyguy21"},"content":"    private Label description;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"     * Creates a {@code GroupCard} with the given {@code Group} and index to display.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"greyguy21"},"content":"    public GroupCard(Group group, int displayedIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"greyguy21"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"greyguy21"},"content":"        this.group \u003d group;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"greyguy21"},"content":"        id.setText(displayedIndex + \".\");","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"        name.setText(group.getGroupName().toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"greyguy21"},"content":"        description.setText(group.getDescription().toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"greyguy21"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"greyguy21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"greyguy21"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"greyguy21"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"greyguy21"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"greyguy21"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"greyguy21"},"content":"        if (!(other instanceof GroupCard)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"greyguy21"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"greyguy21"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"greyguy21"},"content":"        // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"greyguy21"},"content":"        GroupCard card \u003d (GroupCard) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"greyguy21"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"greyguy21"},"content":"            \u0026\u0026 group.equals(card.group);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"greyguy21"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"greyguy21":59}},{"path":"src/main/java/seedu/address/ui/GroupListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"greyguy21"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":" * Panel containing the list of students.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"public class GroupListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"    private static final String FXML \u003d \"GroupListPanel.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GroupListPanel.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"    private ListView\u003cGroup\u003e groupListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"greyguy21"},"content":"     * Creates a {@code GroupListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":"    public GroupListPanel(ObservableList\u003cGroup\u003e groupList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"greyguy21"},"content":"        groupListView.setItems(groupList);","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"greyguy21"},"content":"        groupListView.setCellFactory(listview -\u003e new GroupListViewCell());","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"greyguy21"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Group} using a {@code GroupCard}","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"greyguy21"},"content":"    private class GroupListViewCell extends ListCell\u003cGroup\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"greyguy21"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"        protected void updateItem(Group group, boolean empty) {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"greyguy21"},"content":"            super.updateItem(group, empty);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"            if (empty || group \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"greyguy21"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"greyguy21"},"content":"                setText(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"greyguy21"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"greyguy21"},"content":"                setGraphic(new GroupCard(group, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"greyguy21"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"greyguy21"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"greyguy21":48}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import java.awt.Desktop;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import java.net.URI;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-t09-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"    private Button openUrlButton;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"SKCheongBrian"},"content":"     * Opens the user guide in the browser.","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"SKCheongBrian"},"content":"    private void openInBrowser() {","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"SKCheongBrian"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"SKCheongBrian"},"content":"            Desktop.getDesktop().browse(new URI(USERGUIDE_URL));","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"SKCheongBrian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"SKCheongBrian"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"SKCheongBrian"},"content":"        } catch (URISyntaxException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"SKCheongBrian"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"SKCheongBrian":15,"-":92}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"greyguy21"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"greyguy21"},"content":"    private GroupListPanel groupListPanel;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"greyguy21"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"greyguy21"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"greyguy21"},"content":"    private StackPane groupListPanelPlaceholder;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"greyguy21"},"content":"    private void showStudents() {","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"greyguy21"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"greyguy21"},"content":"        listPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"greyguy21"},"content":"        showStudents();","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"greyguy21"},"content":"    private void handleShowGroups() {","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"greyguy21"},"content":"        groupListPanel \u003d new GroupListPanel(logic.getFilteredGroupList());","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"greyguy21"},"content":"        listPanelPlaceholder.getChildren().add(groupListPanel.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"greyguy21"},"content":"    public StudentListPanel getStudentListPanel() {","lastModifiedDate":"2021-09-28"},{"lineNumber":180,"author":{"gitId":"greyguy21"},"content":"        return studentListPanel;","lastModifiedDate":"2021-09-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"greyguy21"},"content":"    public GroupListPanel getGroupListPanel() {","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"greyguy21"},"content":"        return groupListPanel;","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"greyguy21"},"content":"            if (commandResult.isShowGroups()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"greyguy21"},"content":"                handleShowGroups();","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"greyguy21"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"greyguy21"},"content":"                showStudents();","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"greyguy21"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"greyguy21":27,"-":192}},{"path":"src/main/java/seedu/address/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":" * A UI component that displays information of a {@code Student}.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"greyguy21"},"content":"    public final Student student;","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"    private Label telegramHandle;","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"    private Label groupName;","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"     * Creates a {@code StudentCard} with the given {@code Student} and index to display.","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"greyguy21"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"greyguy21"},"content":"        this.student \u003d student;","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"greyguy21"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"Yttruire"},"content":"        groupName.setText(student.getGroup().getGroupName().toString());","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"tanjiaxian99"},"content":"        telegramHandle.setText(student.getTelegramHandle().value);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"greyguy21"},"content":"        email.setText(student.getEmail().value);","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"greyguy21"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"greyguy21"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Yttruire":1,"tanjiaxian99":2,"greyguy21":14,"-":52}},{"path":"src/main/java/seedu/address/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"greyguy21"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":" * Panel containing the list of students.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"    @FXML","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"greyguy21"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":"        super(FXML);","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"greyguy21"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"greyguy21"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"greyguy21"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"greyguy21"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"greyguy21"},"content":"        @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"greyguy21"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"greyguy21"},"content":"                setGraphic(null);","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"greyguy21"},"content":"                setText(null);","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"greyguy21"},"content":"            } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"greyguy21"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"greyguy21"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"greyguy21"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"greyguy21":49}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"greyguy21"},"content":"#filterField, #studentListPanel, #studentWebpage {","lastModifiedDate":"2021-09-28"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"}],"authorContributionMap":{"greyguy21":1,"-":338}},{"path":"src/main/resources/view/GroupCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"greyguy21"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"greyguy21"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"greyguy21"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"greyguy21"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"greyguy21"},"content":"            \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegramHandle\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"greyguy21"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"greyguy21"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"greyguy21":31}},{"path":"src/main/resources/view/GroupListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"    \u003cListView fx:id\u003d\"groupListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"greyguy21":2,"-":6}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"          \u003cButton fx:id\u003d\"openUrlButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#openInBrowser\" text\u003d\"Open In Browser\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"SKCheongBrian":1,"-":44}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"greyguy21"},"content":"        \u003cVBox fx:id\u003d\"list\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"greyguy21"},"content":"          \u003cStackPane fx:id\u003d\"listPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"greyguy21"},"content":"\u003c!--        \u003cVBox fx:id\u003d\"groupList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e--\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"greyguy21"},"content":"\u003c!--          \u003cpadding\u003e--\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"greyguy21"},"content":"\u003c!--            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e--\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"\u003c!--          \u003c/padding\u003e--\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"greyguy21"},"content":"\u003c!--          \u003cStackPane fx:id\u003d\"groupListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e--\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"greyguy21"},"content":"\u003c!--        \u003c/VBox\u003e--\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"greyguy21":9,"-":59}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"      \u003cLabel fx:id\u003d\"telegramHandle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegramHandle\" /\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"      \u003cLabel fx:id\u003d\"groupName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$groupName\" /\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanjiaxian99":1,"greyguy21":1,"-":32}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"greyguy21":1,"-":7}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"  \"students\": [ {","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"greyguy21"},"content":"    \"name\": \"Valid Student\",","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"    \"telegramHandle\": \"@student\",","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"    \"groupName\": \"CS2103T\"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"    \"name\": \"Student With Invalid Telegram Handle Field\",","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"    \"telegramHandle\": \"948asdf2424\",","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"    \"groupName\": \"CS2103T\"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"  \"groups\" : [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"    \"name\" : \"CS2103T\",","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"    \"description\" : \"A Software engineering module\"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanjiaxian99":3,"greyguy21":4,"junwei26":4,"-":6}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"  \"students\": [ {","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"greyguy21"},"content":"    \"name\": \"Student with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"    \"telegramHandle\": \"@student\",","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"    \"groupName\": \"CS2103T\"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"  \"groups\" : [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"    \"name\" : \"CS2103T\",","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"    \"description\" : \"A Software engineering module\"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanjiaxian99":1,"greyguy21":3,"junwei26":4,"-":4}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"  \"students\": [ {","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"    \"telegramHandle\": \"@alice_pauline\",","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"    \"groupName\": \"CS2103T\"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"    \"telegramHandle\": \"@alice_pauline\",","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"    \"groupName\": \"CS2103T\"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"  \"groups\" : [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"    \"name\" : \"CS2103T\",","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"    \"description\" : \"A Software engineering module\"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanjiaxian99":2,"greyguy21":3,"junwei26":4,"-":8}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"  \"students\": [ {","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"    \"telegramHandle\": \"@hans_muster\",","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"    \"groupName\": \"CS2103T\"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"  \"groups\" : [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"    \"name\" : \"CS2103T\",","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"    \"description\" : \"A Software engineering module\"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanjiaxian99":1,"greyguy21":2,"junwei26":4,"-":5}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalStudentsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"  \"_comment\": \"AddressBook save file which contains the same Student values as in TypicalStudents#getTypicalAddressBook()\",","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"greyguy21"},"content":"  \"students\" : [ {","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"    \"telegramHandle\" : \"@alice_pauline\",","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"    \"groupName\": \"CS2103T\"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"    \"telegramHandle\" : \"@benson_meier\",","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"    \"groupName\": \"CS2103T\"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"    \"telegramHandle\" : \"@carl_kurz\",","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"    \"groupName\": \"CS2103T\"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"    \"telegramHandle\" : \"@daniel_meier\",","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"greyguy21"},"content":"    \"groupName\": \"CS2103T\"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"    \"telegramHandle\" : \"@elle_meyer\",","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":"    \"groupName\": \"CS2103T\"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"    \"telegramHandle\" : \"@fiona_kunz\",","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"greyguy21"},"content":"    \"groupName\": \"CS2103T\"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"    \"telegramHandle\" : \"@george_best\",","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"    \"groupName\": \"CS2103T\"","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"  \"groups\" : [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"    \"name\" : \"CS2103T\",","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"    \"description\" : \"A Software engineering module\"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Yttruire"},"content":"  }, {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Yttruire"},"content":"    \"name\" : \"CS2101\",","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Yttruire"},"content":"    \"description\" : \"An effective communication module\"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Yttruire":3,"tanjiaxian99":7,"greyguy21":9,"junwei26":4,"-":23}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"greyguy21"},"content":"        final Index fifthStudentIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"greyguy21"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"greyguy21"},"content":"        assertTrue(fifthStudentIndex.equals(fifthStudentIndex));","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"greyguy21"},"content":"        assertFalse(fifthStudentIndex.equals(null));","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"greyguy21"},"content":"        assertFalse(fifthStudentIndex.equals(5.0f));","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"greyguy21"},"content":"        assertFalse(fifthStudentIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"greyguy21":7,"-":53}},{"path":"src/test/java/seedu/address/commons/util/EncryptedJsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.testutil.SerializableTestClass;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TestUtil;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":" * Tests encrypted JSON Read and Write","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"public class EncryptedJsonUtilTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize\");","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"    public void serializeObjectToEncryptedJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"        EncryptedJsonUtil.serializeObjectToEncryptedJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"        assertEquals(EncryptionUtil.decryptSealedObject(FileUtil.readFromEncryptedFile(SERIALIZATION_FILE)),","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"                SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"    public void deserializeObjectFromEncryptedJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"        FileUtil.writeToEncryptedFile(SERIALIZATION_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"                EncryptionUtil.encryptSerializableObject(SerializableTestClass.JSON_STRING_REPRESENTATION));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"        SerializableTestClass serializableTestClass \u003d EncryptedJsonUtil","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"                .deserializeObjectFromEncryptedJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanjiaxian99":12,"-":35}},{"path":"src/test/java/seedu/address/commons/util/EncryptionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import javax.crypto.Cipher;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"import javax.crypto.SealedObject;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":" * Tests encryption and decryption","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"public class EncryptionUtilTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"    public void createCipherInstanceWithEncryptMode_noExceptionThrown() {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"        assertTrue(EncryptionUtil.createEncryptCipherInstance() instanceof Cipher);","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"    public void createCipherInstanceWithDecryptMode_noExceptionThrown() {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"        assertTrue(EncryptionUtil.createDecryptCipherInstance() instanceof Cipher);","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"    public void encryptSerializableObjectWithSerializableObject_noExceptionThrown() throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"        assertTrue(EncryptionUtil.encryptSerializableObject(\"\") instanceof SealedObject);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"    public void decryptSealedObjectWithSealedObject_noExceptionThrown() throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"        SealedObject sealedObject \u003d EncryptionUtil.encryptSerializableObject(\"\");","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"        assertTrue(EncryptionUtil.decryptSealedObject(sealedObject) instanceof Serializable);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"tanjiaxian99":37}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"// import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"// import static seedu.address.logic.commands.CommandTestUtil.GROUP_NAME_DESC_AMY;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"// import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"// import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"// import static seedu.address.testutil.TypicalStudents.AMY;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"// import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"// import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"// import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"greyguy21"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"SKCheongBrian"},"content":"    //    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"SKCheongBrian"},"content":"    //    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"SKCheongBrian"},"content":"    //        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"SKCheongBrian"},"content":"    //        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"SKCheongBrian"},"content":"    //                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"SKCheongBrian"},"content":"    //                .resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"SKCheongBrian"},"content":"    //        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"SKCheongBrian"},"content":"    //                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"SKCheongBrian"},"content":"    //        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"SKCheongBrian"},"content":"    //        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"SKCheongBrian"},"content":"    //","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"SKCheongBrian"},"content":"    //        // Execute add command","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"tanjiaxian99"},"content":"    //        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + TELEGRAM_HANDLE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"SKCheongBrian"},"content":"    //                + GROUP_NAME_DESC_AMY;","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"SKCheongBrian"},"content":"    //        Student expectedStudent \u003d new StudentBuilder(AMY).build();","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"SKCheongBrian"},"content":"    //        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"SKCheongBrian"},"content":"    //        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"SKCheongBrian"},"content":"    //        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"SKCheongBrian"},"content":"    //assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"SKCheongBrian"},"content":"    //}","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"SKCheongBrian"},"content":"    //TODO look above at this shit","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"greyguy21"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"greyguy21"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tanjiaxian99":2,"SKCheongBrian":27,"greyguy21":4,"-":131}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"    //TODO Fix test case","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Yttruire"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"    public void execute_newStudent_success() {","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"greyguy21"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"greyguy21"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"        assertCommandSuccess(new AddCommand(validStudent), model,","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"greyguy21"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"Yttruire"},"content":"    */","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"Yttruire"},"content":"    //TODO Fix test case","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Yttruire"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"greyguy21"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(0);","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"greyguy21"},"content":"        assertCommandFailure(new AddCommand(studentInList), model, AddCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"Yttruire"},"content":"    */","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Yttruire":11,"greyguy21":9,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"//import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"greyguy21"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"greyguy21"},"content":"    // TODO: fix test case","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"    public void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"greyguy21"},"content":"        ModelStubAcceptingStudentAdded modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"greyguy21"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"greyguy21"},"content":"        CommandResult commandResult \u003d new AddCommand(validStudent).execute(modelStub);","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"greyguy21"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"greyguy21"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.studentsAdded);","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"Yttruire"},"content":"    */","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"greyguy21"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"greyguy21"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"greyguy21"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent);","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"greyguy21"},"content":"        ModelStub modelStub \u003d new ModelStubWithStudent(validStudent);","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"greyguy21"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"greyguy21"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"greyguy21"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"greyguy21"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"greyguy21"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"greyguy21"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"greyguy21"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"greyguy21"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"greyguy21"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"Yttruire"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"Yttruire"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"Yttruire"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"Yttruire"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"Yttruire"},"content":"        public void deleteGroup(Group target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"Yttruire"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"SKCheongBrian"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"SKCheongBrian"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"SKCheongBrian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"Yttruire"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"Yttruire"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"Yttruire"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"Yttruire"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"Yttruire"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"greyguy21"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2021-09-28"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"greyguy21"},"content":"    private class ModelStubWithStudent extends ModelStub {","lastModifiedDate":"2021-09-28"},{"lineNumber":185,"author":{"gitId":"greyguy21"},"content":"        private final Student student;","lastModifiedDate":"2021-09-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"greyguy21"},"content":"        ModelStubWithStudent(Student student) {","lastModifiedDate":"2021-09-28"},{"lineNumber":188,"author":{"gitId":"greyguy21"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":189,"author":{"gitId":"greyguy21"},"content":"            this.student \u003d student;","lastModifiedDate":"2021-09-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"greyguy21"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-09-28"},{"lineNumber":194,"author":{"gitId":"greyguy21"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":195,"author":{"gitId":"greyguy21"},"content":"            return this.student.isSameStudent(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"greyguy21"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2021-09-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"greyguy21"},"content":"    private class ModelStubAcceptingStudentAdded extends ModelStub {","lastModifiedDate":"2021-09-28"},{"lineNumber":203,"author":{"gitId":"greyguy21"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"greyguy21"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-09-28"},{"lineNumber":207,"author":{"gitId":"greyguy21"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":208,"author":{"gitId":"greyguy21"},"content":"            return studentsAdded.stream().anyMatch(student::isSameStudent);","lastModifiedDate":"2021-09-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"greyguy21"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-09-28"},{"lineNumber":213,"author":{"gitId":"greyguy21"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":214,"author":{"gitId":"greyguy21"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Yttruire":23,"SKCheongBrian":5,"greyguy21":42,"-":153}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"greyguy21":1,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"greyguy21"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"greyguy21"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"greyguy21"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"greyguy21"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"greyguy21":5,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"    public static final String VALID_TELEGRAM_HANDLE_AMY \u003d \"@amy_bee\";","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"    public static final String VALID_TELEGRAM_HANDLE_BOB \u003d \"@bob_choo\";","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALID_GROUP_NAME \u003d \"CS2103T\";","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALID_GROUP_NAME_CS1231S \u003d \"CS1231S\";","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALID_GROUP_NAME_CS1101S \u003d \"CS1101S\";","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALID_GROUP_NAME_CS2030S \u003d \"CS2030S\";","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALID_GROUP_NAME_CS2040S \u003d \"CS2040S\";","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALID_GROUP_DESCRIPTION \u003d \"Software eng mod\";","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALID_GROUP_DESCRIPTION_CS1231S \u003d \"Discrete Structures\";","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALID_GROUP_DESCRIPTION_CS1101S \u003d \"Programming Methodology I\";","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALID_GROUP_DESCRIPTION_CS2030S \u003d \"Programming Methodology II\";","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALID_GROUP_DESCRIPTION_CS2040S \u003d \"Data Structures and Algorithms\";","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALID_GROUP_NAME_AMY \u003d \"CS2103T\"; // TODO change back later @albino monke","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALID_DESC_AMY \u003d \"hi\";","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALID_GROUP_NAME_BOB \u003d \"CS2103T\"; // TODO change back later @albino monke","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String VALID_DESC_BOB \u003d \"hi\";","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"tanjiaxian99"},"content":"    public static final String TELEGRAM_HANDLE_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM_HANDLE + VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"tanjiaxian99"},"content":"    public static final String TELEGRAM_HANDLE_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM_HANDLE + VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"junwei26"},"content":"    public static final String GROUP_NAME_DESC_AMY \u003d \" \" + VALID_GROUP_NAME_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"junwei26"},"content":"    public static final String GROUP_NAME_DESC_BOB \u003d \" \" + VALID_GROUP_NAME_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"tanjiaxian99"},"content":"    public static final String INVALID_TELEGRAM_HANDLE_DESC \u003d \" \"","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"tanjiaxian99"},"content":"            + PREFIX_TELEGRAM_HANDLE + \"911a\"; // \u0027a\u0027 not allowed in telegram handles","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"greyguy21"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"greyguy21"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"greyguy21"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY).withEmail(VALID_EMAIL_AMY).withGroup(","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"junwei26"},"content":"                        VALID_GROUP_NAME_AMY, VALID_DESC_AMY).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"greyguy21"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"tanjiaxian99"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).withEmail(VALID_EMAIL_BOB).withGroup(","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"junwei26"},"content":"                        VALID_GROUP_NAME_BOB, VALID_DESC_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"junwei26"},"content":"            System.out.println(result.getFeedbackToUser());","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"junwei26"},"content":"            System.out.println(expectedCommandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"greyguy21"},"content":"     * - the address book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"greyguy21"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"greyguy21"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"greyguy21"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"greyguy21"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"greyguy21"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"greyguy21"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"greyguy21"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"greyguy21"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"greyguy21"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tanjiaxian99":9,"SKCheongBrian":17,"greyguy21":17,"junwei26":6,"-":88}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"greyguy21"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"greyguy21"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"greyguy21"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"greyguy21"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"greyguy21"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"greyguy21"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"greyguy21"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"greyguy21"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"greyguy21"},"content":"        showNoStudent(expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"greyguy21"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"greyguy21"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"greyguy21"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"greyguy21"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"greyguy21"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"greyguy21"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"greyguy21"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"greyguy21"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"greyguy21"},"content":"    private void showNoStudent(Model model) {","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"greyguy21"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"greyguy21"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"greyguy21":28,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/DeleteGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"public class DeleteGroupCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":"    public void execute_validGroup_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"        Group groupToDelete \u003d model.getFilteredGroupList().get(0);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Yttruire"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(groupToDelete.getGroupName());","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"        String expectedMessage \u003d String.format(DeleteGroupCommand.MESSAGE_DELETE_GROUP_SUCCESS, groupToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Yttruire"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Yttruire"},"content":"        expectedModel.deleteGroup(groupToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Yttruire"},"content":"        assertCommandSuccess(deleteGroupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Yttruire"},"content":"    public void execute_invalidGroup_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Yttruire"},"content":"        String nonExistentGroupName \u003d \"qwertyuiopasdfghjklzxcvbnm\";","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Yttruire"},"content":"        assertTrue(GroupName.isValidName(nonExistentGroupName));","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Yttruire"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(new GroupName(nonExistentGroupName));","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Yttruire"},"content":"        assertCommandFailure(deleteGroupCommand, model, Messages.MESSAGE_GROUP_NOT_FOUND);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Yttruire"},"content":"    public void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Yttruire"},"content":"        final GroupName firstGroupName \u003d model.getFilteredGroupList().get(0).getGroupName();","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Yttruire"},"content":"        final GroupName secondGroupName \u003d model.getFilteredGroupList().get(1).getGroupName();","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Yttruire"},"content":"        DeleteGroupCommand deleteFirstCommand \u003d new DeleteGroupCommand(firstGroupName);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Yttruire"},"content":"        DeleteGroupCommand deleteSecondCommand \u003d new DeleteGroupCommand(secondGroupName);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Yttruire"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"Yttruire"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"Yttruire"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"Yttruire"},"content":"        DeleteGroupCommand deleteFirstCommandCopy \u003d new DeleteGroupCommand(firstGroupName);","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"Yttruire"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"Yttruire"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"Yttruire"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"Yttruire"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"Yttruire"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"Yttruire"},"content":"        // different group -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"Yttruire"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Yttruire":75}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"//import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"greyguy21"},"content":"    // TODO: fix test case","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"greyguy21"},"content":"    /*","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"greyguy21"},"content":"        Student editedStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"greyguy21"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"greyguy21"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"greyguy21"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"greyguy21"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"greyguy21"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"greyguy21"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"greyguy21"},"content":"        Student editedStudent \u003d studentInList.withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"greyguy21"},"content":"            .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"greyguy21"},"content":"            .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"greyguy21"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastStudent, descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"greyguy21"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"greyguy21"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"greyguy21"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, new EditStudentDescriptor());","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"greyguy21"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"greyguy21"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"greyguy21"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"greyguy21"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"greyguy21"},"content":"        Student editedStudent \u003d new StudentBuilder(studentInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"greyguy21"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"greyguy21"},"content":"            new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"greyguy21"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"greyguy21"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"greyguy21"},"content":"    public void execute_duplicateStudentUnfilteredList_failure() {","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"greyguy21"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"greyguy21"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"greyguy21"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_STUDENT, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"greyguy21"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"greyguy21"},"content":"    public void execute_duplicateStudentFilteredList_failure() {","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"greyguy21"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"greyguy21"},"content":"        // edit student in filtered list into a duplicate in address book","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"greyguy21"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"greyguy21"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"greyguy21"},"content":"            new EditStudentDescriptorBuilder(studentInList).build());","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"greyguy21"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"greyguy21"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"greyguy21"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"greyguy21"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"greyguy21"},"content":"            .build();","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"greyguy21"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"greyguy21"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"greyguy21"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"greyguy21"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"greyguy21"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"greyguy21"},"content":"            new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"greyguy21"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"greyguy21"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, DESC_AMY);","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"greyguy21"},"content":"        EditCommand.EditStudentDescriptor copyDescriptor \u003d new EditCommand.EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"greyguy21"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_STUDENT, copyDescriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"greyguy21"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_STUDENT, DESC_AMY)));","lastModifiedDate":"2021-09-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"greyguy21"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_STUDENT, DESC_BOB)));","lastModifiedDate":"2021-09-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"greyguy21":67,"-":109}},{"path":"src/test/java/seedu/address/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"        EditStudentDescriptor descriptorWithSameValues \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"        EditStudentDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"tanjiaxian99"},"content":"        // different telegram handle -\u003e returns false","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"tanjiaxian99"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tanjiaxian99":2,"greyguy21":7,"-":39}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"greyguy21":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.CARL;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"greyguy21"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"greyguy21"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"greyguy21"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"greyguy21"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"greyguy21"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"greyguy21"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"greyguy21"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"greyguy21"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"greyguy21"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"greyguy21":15,"-":68}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"greyguy21":2,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"greyguy21"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"greyguy21":4,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/ListGroupsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListGroupsCommand.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"public class ListGroupsCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"    private Model model;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"greyguy21"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"greyguy21"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":"    public void execute_listIsFiltered_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"greyguy21"},"content":"        assertCommandSuccess(new ListGroupsCommand(), model, ListGroupsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"greyguy21"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"greyguy21":30}},{"path":"src/test/java/seedu/address/logic/commands/ViewGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.Description;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.student.ContainsGroupNamePredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"public class ViewGroupCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"    private Model model;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"        List\u003cGroup\u003e testGroups \u003d Arrays.asList(new Group(new GroupName(\"CS2103T\"), new Description(\"SWE Module\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"        Student validStudent1 \u003d new StudentBuilder().withName(\"Erin\")","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"                .withGroup(\"CS2103T\", \"SWE Module\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"        Student validStudent2 \u003d new StudentBuilder().withName(\"Monkey\")","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"                .withGroup(\"CS2103T\", \"SWE Module\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"        Student validStudent3 \u003d new StudentBuilder().withName(\"Pei Xian\")","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"                .withGroup(\"CS2101\", \"SWE Module\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"        List\u003cStudent\u003e testStudents \u003d Arrays.asList(validStudent1, validStudent2, validStudent3);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"        AddressBook addressBook \u003d getTypicalAddressBook();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"        addressBook.setGroups(testGroups);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"        addressBook.setStudents(testStudents);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"junwei26"},"content":"        model \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"junwei26"},"content":"        expectedModel \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"junwei26"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"junwei26"},"content":"    public void execute_groupExists_displaysStudentsInGroup() {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"junwei26"},"content":"        ContainsGroupNamePredicate predicate \u003d new ContainsGroupNamePredicate(new GroupName(\"CS2103T\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"junwei26"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"junwei26"},"content":"        String successMessage \u003d String.format(Messages.MESSAGE_DISPLAY_GROUP_FORMAT, \"CS2103T\", \"SWE Module\") + \"\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"junwei26"},"content":"                                + String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"junwei26"},"content":"        assertCommandSuccess(new ViewGroupCommand(predicate, new GroupName(\"CS2103T\")), model,","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"junwei26"},"content":"                successMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"junwei26"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"junwei26"},"content":"    public void execute_groupDoesNotExist_displaysGroupNotFoundMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"junwei26"},"content":"        ContainsGroupNamePredicate predicate \u003d new ContainsGroupNamePredicate(new GroupName(\"CS2100\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"junwei26"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"junwei26"},"content":"        String feedbackMessage \u003d Messages.MESSAGE_GROUP_NOT_FOUND + \"\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"junwei26"},"content":"                + String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"junwei26"},"content":"        assertCommandSuccess(new ViewGroupCommand(predicate, new GroupName(\"CS2100\")), model,","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"junwei26"},"content":"                feedbackMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"junwei26":67}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.GROUP_NAME_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TELEGRAM_HANDLE_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_NAME_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"//import seedu.address.model.student.TelegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"Yttruire"},"content":"    //TODO Fix test case","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Yttruire"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"        Student expectedStudent \u003d new StudentBuilder(BOB).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"greyguy21"},"content":"                + GROUP_NAME_DESC_BOB, new AddCommand(expectedStudent));","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"greyguy21"},"content":"                + GROUP_NAME_DESC_BOB, new AddCommand(expectedStudent));","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"tanjiaxian99"},"content":"        // multiple telegram handles - last telegram handle accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + TELEGRAM_HANDLE_DESC_AMY + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"greyguy21"},"content":"                + GROUP_NAME_DESC_BOB, new AddCommand(expectedStudent));","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"greyguy21"},"content":"                + GROUP_NAME_DESC_BOB, new AddCommand(expectedStudent));","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"greyguy21"},"content":"        Student expectedStudent \u003d new StudentBuilder(BOB).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"tanjiaxian99"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"greyguy21"},"content":"            + GROUP_NAME_DESC_BOB, new AddCommand(expectedStudent));","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"tanjiaxian99"},"content":"        // multiple telegram handles - last telegram handle accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + TELEGRAM_HANDLE_DESC_AMY + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"greyguy21"},"content":"            + GROUP_NAME_DESC_BOB, new AddCommand(expectedStudent));","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"tanjiaxian99"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"greyguy21"},"content":"            + GROUP_NAME_DESC_BOB, new AddCommand(expectedStudent));","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB + GROUP_NAME_DESC_BOB,","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"tanjiaxian99"},"content":"        // missing telegram handle prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_TELEGRAM_HANDLE_BOB + EMAIL_DESC_BOB + GROUP_NAME_DESC_BOB,","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + VALID_EMAIL_BOB + GROUP_NAME_DESC_BOB,","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_TELEGRAM_HANDLE_BOB + VALID_EMAIL_BOB + VALID_GROUP_NAME_BOB,","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        //invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB + GROUP_NAME_DESC_BOB,","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"junwei26"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"tanjiaxian99"},"content":"        // invalid telegram handle","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_TELEGRAM_HANDLE_DESC + EMAIL_DESC_BOB + GROUP_NAME_DESC_BOB,","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"tanjiaxian99"},"content":"                TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + INVALID_EMAIL_DESC + GROUP_NAME_DESC_BOB,","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"junwei26"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB + GROUP_NAME_DESC_BOB,","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"greyguy21"},"content":"                        + GROUP_NAME_DESC_BOB,","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Yttruire":28,"tanjiaxian99":30,"greyguy21":10,"junwei26":2,"-":52}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"greyguy21"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"greyguy21"},"content":"import seedu.address.testutil.StudentUtil;","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"    //TODO Fix test case","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Yttruire"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"greyguy21"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(StudentUtil.getAddCommand(student));","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"greyguy21"},"content":"        assertEquals(new AddCommand(student), command);","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"greyguy21"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"greyguy21"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_STUDENT), command);","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"greyguy21"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"greyguy21"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(student).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"greyguy21"},"content":"                + INDEX_FIRST_STUDENT.getOneBased() + \" \" + StudentUtil.getEditStudentDescriptorDetails(descriptor));","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"greyguy21"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_STUDENT, descriptor), command);","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Yttruire":5,"greyguy21":15,"-":84}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"junwei26"},"content":"        String argsString \u003d \"  some random string a/ address with leading and trailing spaces \";","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"junwei26":1,"-":149}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"greyguy21":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/DeleteGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"import seedu.address.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"public class DeleteGroupCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"    private DeleteGroupCommandParser parser \u003d new DeleteGroupCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"        String validGroupName \u003d \"CS2103T\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"        assertParseSuccess(parser, validGroupName, new DeleteGroupCommand(new GroupName(validGroupName)));","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"        assertParseFailure(parser, \"%\",","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Yttruire":27}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TELEGRAM_HANDLE_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"//import seedu.address.model.student.TelegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"Yttruire"},"content":"    //TODO Fix test case","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Yttruire"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TELEGRAM_HANDLE_DESC,","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"tanjiaxian99"},"content":"                TelegramHandle.MESSAGE_CONSTRAINTS); // invalid telegram handle","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"tanjiaxian99"},"content":"        // invalid telegram handle followed by valid email","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TELEGRAM_HANDLE_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"tanjiaxian99"},"content":"                TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"tanjiaxian99"},"content":"        // valid telegram handle followed by invalid telegram handle. The test case for invalid telegram handle","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"tanjiaxian99"},"content":"        // followed by valid telegram handle is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseFailure(parser, \"1\" + TELEGRAM_HANDLE_DESC_BOB + INVALID_TELEGRAM_HANDLE_DESC,","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"tanjiaxian99"},"content":"                TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"tanjiaxian99"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_TELEGRAM_HANDLE_AMY,","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"greyguy21"},"content":"        Index targetIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"tanjiaxian99"},"content":"        String userInput \u003d targetIndex.getOneBased() + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"tanjiaxian99"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"greyguy21"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"tanjiaxian99"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"tanjiaxian99"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"tanjiaxian99"},"content":"        String userInput \u003d targetIndex.getOneBased() + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"tanjiaxian99"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"tanjiaxian99"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"greyguy21"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"greyguy21"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"tanjiaxian99"},"content":"        // telegram handle","lastModifiedDate":"2021-09-24"},{"lineNumber":125,"author":{"gitId":"tanjiaxian99"},"content":"        userInput \u003d targetIndex.getOneBased() + TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"tanjiaxian99"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"greyguy21"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"greyguy21"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"tanjiaxian99"},"content":"        String userInput \u003d targetIndex.getOneBased() + TELEGRAM_HANDLE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"tanjiaxian99"},"content":"                + TELEGRAM_HANDLE_DESC_AMY + EMAIL_DESC_AMY + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"tanjiaxian99"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"tanjiaxian99"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"tanjiaxian99"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"tanjiaxian99"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_TELEGRAM_HANDLE_DESC + TELEGRAM_HANDLE_DESC_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"tanjiaxian99"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"tanjiaxian99"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).build();","lastModifiedDate":"2021-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"tanjiaxian99"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_TELEGRAM_HANDLE_DESC","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"tanjiaxian99"},"content":"                + TELEGRAM_HANDLE_DESC_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"tanjiaxian99"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"tanjiaxian99"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Yttruire":24,"tanjiaxian99":38,"greyguy21":7,"-":103}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"greyguy21":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"import seedu.address.model.student.TelegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"    private static final String INVALID_TELEGRAM_HANDLE \u003d \"@rac\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"    private static final String INVALID_GROUP_NAME \u003d \"  \";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"    private static final String VALID_TELEGRAM_HANDLE \u003d \"@rachel_walker\";","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"    private static final String VALID_GROUP_NAME \u003d \"CS2103T\";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"greyguy21"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"    public void parseTelegramHandle_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"tanjiaxian99"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTelegramHandle((String) null));","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"tanjiaxian99"},"content":"    public void parseTelegramHandle_invalidValue_throwsParseException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"tanjiaxian99"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegramHandle(INVALID_TELEGRAM_HANDLE));","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"tanjiaxian99"},"content":"    public void parseTelegramHandle_validValueWithoutWhitespace_returnsTelegramHandle() throws Exception {","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"tanjiaxian99"},"content":"        TelegramHandle expectedTelegramHandle \u003d new TelegramHandle(VALID_TELEGRAM_HANDLE);","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"tanjiaxian99"},"content":"        assertEquals(expectedTelegramHandle, ParserUtil.parseTelegramHandle(VALID_TELEGRAM_HANDLE));","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"tanjiaxian99"},"content":"    public void parseTelegramHandle_validValueWithWhitespace_returnsTrimmedTelegramHandle() throws Exception {","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"tanjiaxian99"},"content":"        String telegramHandleWithWhitespace \u003d WHITESPACE + VALID_TELEGRAM_HANDLE + WHITESPACE;","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"tanjiaxian99"},"content":"        TelegramHandle expectedTelegramHandle \u003d new TelegramHandle(VALID_TELEGRAM_HANDLE);","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"tanjiaxian99"},"content":"        assertEquals(expectedTelegramHandle, ParserUtil.parseTelegramHandle(telegramHandleWithWhitespace));","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"junwei26"},"content":"    public void parseGroupName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"junwei26"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGroupName((String) null));","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"junwei26"},"content":"    public void parseGroupName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"junwei26"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroupName(INVALID_GROUP_NAME));","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"junwei26"},"content":"    public void parseGroupName_validValueWithoutWhitespace_returnsGroupName() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"junwei26"},"content":"        GroupName expectedGroupName \u003d new GroupName(VALID_GROUP_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"junwei26"},"content":"        assertEquals(expectedGroupName, ParserUtil.parseGroupName(VALID_GROUP_NAME));","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"junwei26"},"content":"    public void parseGroupName_validValueWithWhitespace_returnsTrimmedGroupName() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"junwei26"},"content":"        String groupNameWithWhitespace \u003d WHITESPACE + VALID_GROUP_NAME + WHITESPACE;","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"junwei26"},"content":"        GroupName expectedGroupName \u003d new GroupName(VALID_GROUP_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"junwei26"},"content":"        assertEquals(expectedGroupName, ParserUtil.parseGroupName(groupNameWithWhitespace));","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"tanjiaxian99":14,"greyguy21":5,"junwei26":14,"-":107}},{"path":"src/test/java/seedu/address/logic/parser/ViewGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"import seedu.address.logic.commands.ViewGroupCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.student.ContainsGroupNamePredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"import seedu.address.testutil.TypicalGroups;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"public class ViewGroupCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"    private ViewGroupCommandParser parser \u003d new ViewGroupCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    private Group group \u003d TypicalGroups.TYPICAL_GROUP_CS2103T;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"    private String validGroupName \u003d group.getGroupName().toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"    private ContainsGroupNamePredicate predicate \u003d new ContainsGroupNamePredicate(group.getGroupName());","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"    public void parser_validArgs_returnsViewGroupCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"        assertParseSuccess(parser, validGroupName, new ViewGroupCommand(predicate, group.getGroupName()));","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"    public void parser_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"        assertParseFailure(parser, \"  \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"junwei26":33}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"greyguy21"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"greyguy21"},"content":"        assertEquals(Collections.emptyList(), addressBook.getStudentList());","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"greyguy21"},"content":"    public void resetData_withDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"greyguy21"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"tanjiaxian99"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"greyguy21"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"greyguy21"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newStudents);","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"greyguy21"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":55,"author":{"gitId":"greyguy21"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"greyguy21"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasStudent(null));","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"greyguy21"},"content":"        assertFalse(addressBook.hasStudent(ALICE));","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"greyguy21"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"greyguy21"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"greyguy21"},"content":"        assertTrue(addressBook.hasStudent(ALICE));","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"greyguy21"},"content":"    public void hasStudent_studentWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"greyguy21"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"tanjiaxian99"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"greyguy21"},"content":"        assertTrue(addressBook.hasStudent(editedAlice));","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":78,"author":{"gitId":"greyguy21"},"content":"    public void getStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"greyguy21"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getStudentList().remove(0));","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"greyguy21"},"content":"     * A stub ReadOnlyAddressBook whose students list can violate interface constraints.","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"greyguy21"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"Yttruire"},"content":"        private final ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"greyguy21"},"content":"        AddressBookStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"greyguy21"},"content":"            this.students.setAll(students);","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"greyguy21"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"greyguy21"},"content":"            return students;","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Yttruire"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"Yttruire"},"content":"        public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"Yttruire"},"content":"            return groups;","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Yttruire":6,"tanjiaxian99":2,"greyguy21":29,"-":67}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.testutil.TypicalGroups.TYPICAL_GROUP_CS2103T;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"greyguy21"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"greyguy21"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"greyguy21"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"greyguy21"},"content":"        assertFalse(modelManager.hasStudent(ALICE));","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"greyguy21"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"Yttruire"},"content":"        modelManager.addGroup(TYPICAL_GROUP_CS2103T);","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"greyguy21"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"greyguy21"},"content":"        assertTrue(modelManager.hasStudent(ALICE));","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"greyguy21"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"greyguy21"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"greyguy21"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withStudent(ALICE).withStudent(BENSON).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":123,"author":{"gitId":"greyguy21"},"content":"        modelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"greyguy21"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Yttruire":2,"greyguy21":16,"-":116}},{"path":"src/test/java/seedu/address/model/group/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"public class DescriptionTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"    public void constructor_null_throwNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"        String invalidGroupName \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidGroupName));","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"    public void isValidGroupName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"        // null group name","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"        // invalid name","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"        assertFalse(Description.isValidDescription(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"        assertFalse(Description.isValidDescription(\"cs1231*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"        // valid name","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"        assertTrue(Description.isValidDescription(\"test mod\")); // alphabets only","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"        assertTrue(Description.isValidDescription(\"12345\")); // numbers only","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"        assertTrue(Description.isValidDescription(\"test mod the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"        assertTrue(Description.isValidDescription(\"Capital Mod\")); // with capital letters","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"        assertTrue(Description.isValidDescription(\"the longest mod description you will ever see\")); // long names","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"SKCheongBrian":40}},{"path":"src/test/java/seedu/address/model/group/GroupContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"public class GroupContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"        GroupContainsKeywordsPredicate firstPredicate \u003d new GroupContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"        GroupContainsKeywordsPredicate secondPredicate \u003d new GroupContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"        GroupContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Yttruire"},"content":"                new GroupContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Yttruire"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Yttruire"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Yttruire"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Yttruire"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Yttruire"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Yttruire"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Yttruire"},"content":"    public void test_groupNameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Yttruire"},"content":"        // One keyword","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Yttruire"},"content":"        GroupContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Yttruire"},"content":"                new GroupContainsKeywordsPredicate(Collections.singletonList(\"CS2103T\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Yttruire"},"content":"        assertTrue(predicate.test(new GroupBuilder().withGroupName(\"CS2103T\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Yttruire"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Yttruire"},"content":"        // Note, predicate can have more than one keyword, but groupName can only contain a single word","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Yttruire"},"content":"        predicate \u003d new GroupContainsKeywordsPredicate(Arrays.asList(\"CS2101\", \"CS2103T\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Yttruire"},"content":"        assertTrue(predicate.test(new GroupBuilder().withGroupName(\"CS2103T\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Yttruire"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Yttruire"},"content":"        predicate \u003d new GroupContainsKeywordsPredicate(Arrays.asList(\"cS2103t\", \"tUtOrIAl\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Yttruire"},"content":"        assertTrue(predicate.test(new GroupBuilder().withGroupName(\"CS2103T\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Yttruire"},"content":"    public void test_groupNameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Yttruire"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Yttruire"},"content":"        GroupContainsKeywordsPredicate predicate \u003d new GroupContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Yttruire"},"content":"        assertFalse(predicate.test(new GroupBuilder().withGroupName(\"CS2103T\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Yttruire"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Yttruire"},"content":"        predicate \u003d new GroupContainsKeywordsPredicate(Arrays.asList(\"CS2101\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Yttruire"},"content":"        assertFalse(predicate.test(new GroupBuilder().withGroupName(\"CS2103T\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Yttruire"},"content":"        // Keywords match description, but does not match name","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Yttruire"},"content":"        predicate \u003d new GroupContainsKeywordsPredicate(Arrays.asList(\"softwareengineering\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Yttruire"},"content":"        assertFalse(predicate.test(new GroupBuilder().withGroupName(\"CS2103T\")","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Yttruire"},"content":"                .withDescription(\"softwareengineering\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Yttruire":74}},{"path":"src/test/java/seedu/address/model/group/GroupNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"public class GroupNameTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"    public void constructor_null_throwNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GroupName(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"        String invalidGroupName \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GroupName(invalidGroupName));","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"    public void isValidGroupName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"        // null group name","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"        assertThrows(NullPointerException.class, () -\u003e GroupName.isValidName(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"        // invalid name","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"        assertFalse(GroupName.isValidName(\"\")); // empty string","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"        assertFalse(GroupName.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"        assertFalse(GroupName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"        assertFalse(GroupName.isValidName(\"cs1231*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"        // valid name","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"        assertTrue(GroupName.isValidName(\"test mod\")); // alphabets only","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"        assertTrue(GroupName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"        assertTrue(GroupName.isValidName(\"test mod the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"        assertTrue(GroupName.isValidName(\"Capital Mod\")); // with capital letters","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"        assertTrue(GroupName.isValidName(\"David Roger Jackson Ray Jr 2nd Mod\")); // long names","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"SKCheongBrian":40}},{"path":"src/test/java/seedu/address/model/group/GroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_DESCRIPTION_CS1101S;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_NAME_CS1101S;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.testutil.TypicalGroup.CS1231S;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.testutil.TypicalGroup.DEFAULT_GROUP;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"public class GroupTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"    public void isSameGroup() {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"        assertTrue(DEFAULT_GROUP.isSameGroup(DEFAULT_GROUP));","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"        assertFalse(DEFAULT_GROUP.isSameGroup(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"        Group editedDefaultGroup \u003d new GroupBuilder(DEFAULT_GROUP).withDescription(VALID_DESC_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"        assertTrue(DEFAULT_GROUP.isSameGroup(editedDefaultGroup));","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"        editedDefaultGroup \u003d new GroupBuilder(DEFAULT_GROUP)","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"                .withGroupName(VALID_GROUP_NAME.toLowerCase()).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"        assertFalse(DEFAULT_GROUP.isSameGroup(editedDefaultGroup));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"        String nameWithTrailingSpaces \u003d VALID_GROUP_NAME + \" \";","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"        editedDefaultGroup \u003d new GroupBuilder(DEFAULT_GROUP).withGroupName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"        assertFalse(DEFAULT_GROUP.isSameGroup(editedDefaultGroup));","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"        Group defaultCopy \u003d new GroupBuilder(DEFAULT_GROUP).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"        assertTrue(DEFAULT_GROUP.equals(defaultCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"        assertTrue(DEFAULT_GROUP.equals(DEFAULT_GROUP));","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"SKCheongBrian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"SKCheongBrian"},"content":"        assertFalse(DEFAULT_GROUP.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"SKCheongBrian"},"content":"        // different group -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"SKCheongBrian"},"content":"        assertFalse(DEFAULT_GROUP.equals(CS1231S));","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"SKCheongBrian"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"SKCheongBrian"},"content":"        Group editedDefaultGroup \u003d new GroupBuilder(DEFAULT_GROUP).withGroupName(VALID_GROUP_NAME_CS1101S).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"SKCheongBrian"},"content":"        assertFalse(DEFAULT_GROUP.equals(editedDefaultGroup));","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"SKCheongBrian"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"SKCheongBrian"},"content":"        editedDefaultGroup \u003d new GroupBuilder(DEFAULT_GROUP).withDescription(VALID_GROUP_DESCRIPTION_CS1101S).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"SKCheongBrian"},"content":"        assertFalse(DEFAULT_GROUP.equals(editedDefaultGroup));","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"SKCheongBrian":65}},{"path":"src/test/java/seedu/address/model/group/UniqueGroupListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.testutil.TypicalGroups.TYPICAL_GROUP_CS2101;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.testutil.TypicalGroups.TYPICAL_GROUP_CS2103T;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"public class UniqueGroupListTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"    private final UniqueGroupList uniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"    public void contains_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Yttruire"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.contains(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Yttruire"},"content":"    public void contains_groupNotInList_returnsFalse() {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"        assertFalse(uniqueGroupList.contains(TYPICAL_GROUP_CS2103T));","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"    public void contains_groupInList_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.add(TYPICAL_GROUP_CS2103T);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Yttruire"},"content":"        assertTrue(uniqueGroupList.contains(TYPICAL_GROUP_CS2103T));","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Yttruire"},"content":"    public void contains_groupWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.add(TYPICAL_GROUP_CS2103T);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Yttruire"},"content":"        Group editedGroup \u003d new GroupBuilder(TYPICAL_GROUP_CS2103T).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Yttruire"},"content":"        assertTrue(uniqueGroupList.contains(editedGroup));","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Yttruire"},"content":"    public void add_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Yttruire"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.add(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"Yttruire"},"content":"    public void add_duplicateGroup_throwsDuplicateGroupException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.add(TYPICAL_GROUP_CS2103T);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Yttruire"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e uniqueGroupList.add(TYPICAL_GROUP_CS2103T));","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"Yttruire"},"content":"    public void setGroup_nullTargetGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"Yttruire"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroup(null, TYPICAL_GROUP_CS2103T));","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"Yttruire"},"content":"    public void setGroup_nullEditedGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"Yttruire"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroup(TYPICAL_GROUP_CS2103T, null));","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"Yttruire"},"content":"    public void setGroup_targetGroupNotInList_throwsGroupNotFoundException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"Yttruire"},"content":"        assertThrows(GroupNotFoundException.class, () -\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"Yttruire"},"content":"                uniqueGroupList.setGroup(TYPICAL_GROUP_CS2103T, TYPICAL_GROUP_CS2103T));","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"Yttruire"},"content":"    public void setGroup_editedGroupIsSameGroup_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.add(TYPICAL_GROUP_CS2103T);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.setGroup(TYPICAL_GROUP_CS2103T, TYPICAL_GROUP_CS2103T);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"Yttruire"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"Yttruire"},"content":"        expectedUniqueGroupList.add(TYPICAL_GROUP_CS2103T);","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"Yttruire"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"Yttruire"},"content":"    public void setGroup_editedGroupHasSameIdentity_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.add(TYPICAL_GROUP_CS2103T);","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"Yttruire"},"content":"        Group editedGroup \u003d new GroupBuilder(TYPICAL_GROUP_CS2103T).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.setGroup(TYPICAL_GROUP_CS2103T, editedGroup);","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"Yttruire"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"Yttruire"},"content":"        expectedUniqueGroupList.add(editedGroup);","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"Yttruire"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"Yttruire"},"content":"    public void setGroup_editedGroupHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.add(TYPICAL_GROUP_CS2103T);","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.setGroup(TYPICAL_GROUP_CS2103T, TYPICAL_GROUP_CS2101);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Yttruire"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Yttruire"},"content":"        expectedUniqueGroupList.add(TYPICAL_GROUP_CS2101);","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"Yttruire"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"Yttruire"},"content":"    public void setGroup_editedGroupHasNonUniqueIdentity_throwsDuplicateGroupException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.add(TYPICAL_GROUP_CS2103T);","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.add(TYPICAL_GROUP_CS2101);","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"Yttruire"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"Yttruire"},"content":"                uniqueGroupList.setGroup(TYPICAL_GROUP_CS2103T, TYPICAL_GROUP_CS2101));","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"Yttruire"},"content":"    public void remove_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"Yttruire"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.remove(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"Yttruire"},"content":"    public void remove_groupDoesNotExist_throwsGroupNotFoundException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"Yttruire"},"content":"        assertThrows(GroupNotFoundException.class, () -\u003e uniqueGroupList.remove(TYPICAL_GROUP_CS2103T));","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"Yttruire"},"content":"    public void remove_existingGroup_removesGroup() {","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.add(TYPICAL_GROUP_CS2103T);","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.remove(TYPICAL_GROUP_CS2103T);","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"Yttruire"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"Yttruire"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"Yttruire"},"content":"    public void setGroups_nullUniqueGroupList_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"Yttruire"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroup((UniqueGroupList) null));","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"Yttruire"},"content":"    public void setGroups_uniqueGroupList_replacesOwnListWithProvidedUniqueGroupList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.add(TYPICAL_GROUP_CS2103T);","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"Yttruire"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"Yttruire"},"content":"        expectedUniqueGroupList.add(TYPICAL_GROUP_CS2101);","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.setGroup(expectedUniqueGroupList);","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"Yttruire"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"Yttruire"},"content":"    public void setGroups_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"Yttruire"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroup((List\u003cGroup\u003e) null));","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"Yttruire"},"content":"    public void setGroups_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.add(TYPICAL_GROUP_CS2103T);","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"Yttruire"},"content":"        List\u003cGroup\u003e groupList \u003d Collections.singletonList(TYPICAL_GROUP_CS2101);","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"Yttruire"},"content":"        uniqueGroupList.setGroup(groupList);","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"Yttruire"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"Yttruire"},"content":"        expectedUniqueGroupList.add(TYPICAL_GROUP_CS2101);","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"Yttruire"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"Yttruire"},"content":"    public void setGroups_listWithDuplicateGroups_throwsDuplicateGroupException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"Yttruire"},"content":"        List\u003cGroup\u003e listWithDuplicateGroups \u003d Arrays.asList(TYPICAL_GROUP_CS2103T, TYPICAL_GROUP_CS2103T);","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"Yttruire"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e uniqueGroupList.setGroup(listWithDuplicateGroups));","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"Yttruire"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"Yttruire"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"Yttruire"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"Yttruire"},"content":"                uniqueGroupList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Yttruire":168}},{"path":"src/test/java/seedu/address/model/student/ContainsGroupNamePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"class ContainsGroupNamePredicateTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"        GroupName firstGroupName \u003d new GroupName(\"CS2103T\");","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"        GroupName secondGroupName \u003d new GroupName(\"CS2101\");","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"        ContainsGroupNamePredicate firstPredicate \u003d new ContainsGroupNamePredicate(firstGroupName);","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"        ContainsGroupNamePredicate secondPredicate \u003d new ContainsGroupNamePredicate(secondGroupName);","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"        ContainsGroupNamePredicate firstPredicateCopy \u003d new ContainsGroupNamePredicate(firstGroupName);","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"    public void test_containsGroupName_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"        ContainsGroupNamePredicate predicate \u003d new ContainsGroupNamePredicate(new GroupName(\"CS2103T\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice\")","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"junwei26"},"content":"                .withGroup(\"CS2103T\", \"test\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"junwei26"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"junwei26"},"content":"    public void test_doesNotContainsGroupName_returnsFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"junwei26"},"content":"        ContainsGroupNamePredicate predicate \u003d new ContainsGroupNamePredicate(new GroupName(\"CS2103T\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"junwei26"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\")","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"junwei26"},"content":"                .withGroup(\"GEQ1000\", \"test\").build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"junwei26":52}},{"path":"src/test/java/seedu/address/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"greyguy21":1,"-":67}},{"path":"src/test/java/seedu/address/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"greyguy21"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"greyguy21"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"greyguy21"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"greyguy21"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"greyguy21"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"tanjiaxian99"},"content":"        // Keywords match telegram handle and email, but does not match name","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"tanjiaxian99"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"@alice_bob\", \"alice@email.com\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withTelegramHandle(\"@alice_bob\")","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"tanjiaxian99"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tanjiaxian99":4,"greyguy21":9,"-":62}},{"path":"src/test/java/seedu/address/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"greyguy21":1,"-":39}},{"path":"src/test/java/seedu/address/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":"public class StudentTest {","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"    public void isSameStudent() {","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"        assertTrue(ALICE.isSameStudent(ALICE));","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"greyguy21"},"content":"        assertFalse(ALICE.isSameStudent(null));","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"greyguy21"},"content":"        assertTrue(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"greyguy21"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"greyguy21"},"content":"        Student editedBob \u003d new StudentBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"greyguy21"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"        editedBob \u003d new StudentBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"greyguy21"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"greyguy21"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"greyguy21"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"greyguy21"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"tanjiaxian99"},"content":"        // different telegram handle -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"tanjiaxian99"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"greyguy21"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"tanjiaxian99":5,"greyguy21":19,"-":50}},{"path":"src/test/java/seedu/address/model/student/TelegramHandleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"public class TelegramHandleTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TelegramHandle(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"    public void constructor_invalidTelegramHandle_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"        String invalidTelegramHandle \u003d \"\";","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TelegramHandle(invalidTelegramHandle));","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"    public void isValidTelegramHandle() {","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"        // null telegram handle number","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"        assertThrows(NullPointerException.class, () -\u003e TelegramHandle.isValidTelegramHandle(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"        // invalid telegram handle numbers","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"\")); // empty string","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\" \")); // spaces only","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"pauline\")); // missing @","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"@abcd\")); // less than 5 characters","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"@Pauline\")); // uppercase letters","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"@pauline chia\")); // spaces within characters","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"        // valid telegram handle numbers","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(\"@abcde\")); // exactly 5 characters","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(\"@pauline_chia\"));","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"tanjiaxian99"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(\"@abcdefg_1234567890_hijklmnop\")); // long telegram handles","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"tanjiaxian99":40}},{"path":"src/test/java/seedu/address/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"greyguy21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"import java.util.List;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"greyguy21"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"    public void contains_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"greyguy21"},"content":"    public void contains_studentNotInList_returnsFalse() {","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"        assertFalse(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"greyguy21"},"content":"    public void contains_studentInList_returnsTrue() {","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"        assertTrue(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"greyguy21"},"content":"    public void contains_studentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"greyguy21"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"greyguy21"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"greyguy21"},"content":"    public void add_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"greyguy21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"greyguy21"},"content":"    public void add_duplicateStudent_throwsDuplicateStudentException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"greyguy21"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.add(ALICE));","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"greyguy21"},"content":"    public void setStudent_nullTargetStudent_throwsNullPointerException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(null, ALICE));","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"greyguy21"},"content":"    public void setStudent_nullEditedStudent_throwsNullPointerException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"greyguy21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(ALICE, null));","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"greyguy21"},"content":"    public void setStudent_targetStudentNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"greyguy21"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.setStudent(ALICE, ALICE));","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"greyguy21"},"content":"    public void setStudent_editedStudentIsSameStudent_success() {","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.setStudent(ALICE, ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"greyguy21"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"greyguy21"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"greyguy21"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"greyguy21"},"content":"    public void setStudent_editedStudentHasSameIdentity_success() {","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"greyguy21"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.setStudent(ALICE, editedAlice);","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"greyguy21"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"greyguy21"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"greyguy21"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"greyguy21"},"content":"    public void setStudent_editedStudentHasDifferentIdentity_success() {","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.setStudent(ALICE, BOB);","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"greyguy21"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"greyguy21"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"greyguy21"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"greyguy21"},"content":"    public void setStudent_editedStudentHasNonUniqueIdentity_throwsDuplicateStudentException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.add(BOB);","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"greyguy21"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudent(ALICE, BOB));","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"greyguy21"},"content":"    public void remove_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"greyguy21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"greyguy21"},"content":"    public void remove_studentDoesNotExist_throwsStudentNotFoundException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"greyguy21"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.remove(ALICE));","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"greyguy21"},"content":"    public void remove_existingStudent_removesStudent() {","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.remove(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"greyguy21"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"greyguy21"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"greyguy21"},"content":"    public void setStudents_nullUniqueStudentList_throwsNullPointerException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"greyguy21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent((UniqueStudentList) null));","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"greyguy21"},"content":"    public void setStudents_uniqueStudentList_replacesOwnListWithProvidedUniqueStudentList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"greyguy21"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"greyguy21"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.setStudent(expectedUniqueStudentList);","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"greyguy21"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"greyguy21"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"greyguy21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent((List\u003cStudent\u003e) null));","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"greyguy21"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"greyguy21"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"greyguy21"},"content":"        uniqueStudentList.setStudent(studentList);","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"greyguy21"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-09-28"},{"lineNumber":151,"author":{"gitId":"greyguy21"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"greyguy21"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":156,"author":{"gitId":"greyguy21"},"content":"    public void setStudents_listWithDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":157,"author":{"gitId":"greyguy21"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"greyguy21"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudent(listWithDuplicateStudents));","lastModifiedDate":"2021-09-28"},{"lineNumber":159,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":160,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":161,"author":{"gitId":"greyguy21"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":162,"author":{"gitId":"greyguy21"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":163,"author":{"gitId":"greyguy21"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-09-28"},{"lineNumber":164,"author":{"gitId":"greyguy21"},"content":"            -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-09-28"},{"lineNumber":165,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":166,"author":{"gitId":"greyguy21"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"greyguy21":166}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import static seedu.address.storage.JsonAdaptedStudent.MESSAGE_GROUP_NAME_NOT_FOUND;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.Description;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"import seedu.address.model.student.TelegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"    private static final String INVALID_TELEGRAM_HANDLE \u003d \"@rac\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"    private static final String VALID_TELEGRAM_HANDLE \u003d BENSON.getTelegramHandle().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Yttruire"},"content":"    private static final String VALID_GROUP_NAME \u003d BENSON.getGroup().getGroupName().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"    private static final String VALID_DESCRIPTION \u003d \"A Software engineering module\";","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Yttruire"},"content":"    //TODO Fix test case","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Yttruire"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"greyguy21"},"content":"    public void toModelType_validStudentDetails_returnsStudent() throws Exception {","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"greyguy21"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"        assertEquals(BENSON, student.toModelType());","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"junwei26"},"content":"        ObservableList\u003cGroup\u003e groupList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"junwei26"},"content":"        groupList.add(new Group(new GroupName(VALID_GROUP_NAME), new Description(VALID_DESCRIPTION)));","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"greyguy21"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"tanjiaxian99"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_TELEGRAM_HANDLE, VALID_EMAIL, VALID_GROUP_NAME);","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"junwei26"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e student.toModelType(groupList));","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"junwei26"},"content":"        ObservableList\u003cGroup\u003e groupList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"junwei26"},"content":"        groupList.add(new Group(new GroupName(VALID_GROUP_NAME), new Description(VALID_DESCRIPTION)));","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"tanjiaxian99"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(null, VALID_TELEGRAM_HANDLE, VALID_EMAIL, VALID_GROUP_NAME);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"junwei26"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e student.toModelType(groupList));","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"tanjiaxian99"},"content":"    public void toModelType_invalidTelegramHandle_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"junwei26"},"content":"        ObservableList\u003cGroup\u003e groupList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"junwei26"},"content":"        groupList.add(new Group(new GroupName(VALID_GROUP_NAME), new Description(VALID_DESCRIPTION)));","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"greyguy21"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"tanjiaxian99"},"content":"                new JsonAdaptedStudent(VALID_NAME, INVALID_TELEGRAM_HANDLE, VALID_EMAIL, VALID_GROUP_NAME);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"tanjiaxian99"},"content":"        String expectedMessage \u003d TelegramHandle.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"junwei26"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e student.toModelType(groupList));","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"    public void toModelType_nullTelegramHandle_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"junwei26"},"content":"        ObservableList\u003cGroup\u003e groupList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"junwei26"},"content":"        groupList.add(new Group(new GroupName(VALID_GROUP_NAME), new Description(VALID_DESCRIPTION)));","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"greyguy21"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, null, VALID_EMAIL, VALID_GROUP_NAME);","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"tanjiaxian99"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TelegramHandle.class.getSimpleName());","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"junwei26"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e student.toModelType(groupList));","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"junwei26"},"content":"        ObservableList\u003cGroup\u003e groupList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"junwei26"},"content":"        groupList.add(new Group(new GroupName(VALID_GROUP_NAME), new Description(VALID_DESCRIPTION)));","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"greyguy21"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"tanjiaxian99"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_TELEGRAM_HANDLE, INVALID_EMAIL, VALID_GROUP_NAME);","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"junwei26"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e student.toModelType(groupList));","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"junwei26"},"content":"        ObservableList\u003cGroup\u003e groupList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"junwei26"},"content":"        groupList.add(new Group(new GroupName(VALID_GROUP_NAME), new Description(VALID_DESCRIPTION)));","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"tanjiaxian99"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_TELEGRAM_HANDLE, null, VALID_GROUP_NAME);","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"junwei26"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e student.toModelType(groupList));","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"junwei26"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"junwei26"},"content":"    public void toModelType_nullGroupName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"junwei26"},"content":"        ObservableList\u003cGroup\u003e groupList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"junwei26"},"content":"        groupList.add(new Group(new GroupName(VALID_GROUP_NAME), new Description(VALID_DESCRIPTION)));","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"junwei26"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_TELEGRAM_HANDLE, VALID_EMAIL, null);","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"junwei26"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GroupName.class.getSimpleName());","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"junwei26"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e student.toModelType(groupList));","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"junwei26"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"junwei26"},"content":"    public void toModelType_noMatchingGroupNameInGroupList_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"junwei26"},"content":"        ObservableList\u003cGroup\u003e groupList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"junwei26"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"junwei26"},"content":"                VALID_EMAIL, VALID_GROUP_NAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"junwei26"},"content":"        String expectedMessage \u003d MESSAGE_GROUP_NAME_NOT_FOUND;","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"junwei26"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e student.toModelType(groupList));","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Yttruire":6,"tanjiaxian99":12,"junwei26":45,"greyguy21":12,"-":43}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.testutil.TypicalStudents.HOON;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.testutil.TypicalStudents.IDA;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"greyguy21"},"content":"    public void readAddressBook_invalidStudentAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"greyguy21"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidStudentAddressBook.json\"));","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"greyguy21"},"content":"    public void readAddressBook_invalidAndValidStudentAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidStudentAddressBook.json\"));","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"Yttruire"},"content":"    //TODO Fix test case","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Yttruire"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"greyguy21"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"greyguy21"},"content":"        original.removeStudent(ALICE);","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"greyguy21"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Yttruire":9,"greyguy21":7,"-":98}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.testutil.TypicalStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"    private static final Path TYPICAL_STUDENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStudentsAddressBook.json\");","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"    private static final Path INVALID_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentAddressBook.json\");","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"    private static final Path DUPLICATE_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStudentAddressBook.json\");","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"    //TODO Fix test case","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":"    public void toModelType_typicalStudentsFile_success() throws Exception {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STUDENTS_FILE,","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"greyguy21"},"content":"        AddressBook typicalStudentsAddressBook \u003d TypicalStudents.getTypicalAddressBook();","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"        assertEquals(addressBookFromFile, typicalStudentsAddressBook);","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"    public void toModelType_invalidStudentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"greyguy21"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STUDENT_FILE,","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"greyguy21"},"content":"    public void toModelType_duplicateStudents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STUDENT_FILE,","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"greyguy21"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Yttruire":7,"greyguy21":12,"-":32}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"//import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"Yttruire"},"content":"    //TODO Fix test case","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Yttruire"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Yttruire"},"content":"    */","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"Yttruire"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Yttruire"},"content":"     * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Yttruire"},"content":"     * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Yttruire"},"content":"     * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Yttruire"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Yttruire"},"content":"    */","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yttruire":13,"-":60}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withStudent(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"greyguy21"},"content":"     * Adds a new {@code Student} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":"    public AddressBookBuilder withStudent(Student student) {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"greyguy21":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"greyguy21"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.Description;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"import seedu.address.model.student.TelegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":" * A utility class to help with building EditStudentDescriptor objects.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"greyguy21"},"content":"    private EditStudentDescriptor descriptor;","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"greyguy21"},"content":"    public EditStudentDescriptorBuilder(EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"greyguy21"},"content":"        this.descriptor \u003d new EditStudentDescriptor(descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"greyguy21"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"greyguy21"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"greyguy21"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"        descriptor.setTelegramHandle(student.getTelegramHandle());","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"greyguy21"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"greyguy21"},"content":"     * Sets the {@code Name} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"    public EditStudentDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"greyguy21"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"greyguy21"},"content":"        return this;","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"tanjiaxian99"},"content":"     * Sets the {@code TelegramHandle} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"tanjiaxian99"},"content":"    public EditStudentDescriptorBuilder withTelegramHandle(String telegramHandle) {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"tanjiaxian99"},"content":"        descriptor.setTelegramHandle(new TelegramHandle(telegramHandle));","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"greyguy21"},"content":"        return this;","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"greyguy21"},"content":"     * Sets the {@code Email} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"greyguy21"},"content":"    public EditStudentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"greyguy21"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"greyguy21"},"content":"        return this;","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"greyguy21"},"content":"     * Sets the {@code GroupName} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"Yttruire"},"content":"    public EditStudentDescriptorBuilder withGroup(Group group) {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"Yttruire"},"content":"        descriptor.setGroup(group);","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Yttruire"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Yttruire"},"content":"     * Sets the {@code GroupName} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Yttruire"},"content":"    public EditStudentDescriptorBuilder withGroup(String groupName, String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Yttruire"},"content":"        descriptor.setGroup(new Group(new GroupName(groupName), new Description(description)));","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"greyguy21"},"content":"        return this;","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"greyguy21"},"content":"    public EditStudentDescriptor build() {","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"greyguy21"},"content":"        return descriptor;","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"greyguy21"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yttruire":12,"tanjiaxian99":5,"greyguy21":64}},{"path":"src/test/java/seedu/address/testutil/GroupBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalStudents;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Description;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":" * A utility class to help with building Group objects.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"public class GroupBuilder {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String DEFAULT_GROUPNAME \u003d \"CS2103T\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"software eng mod\";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"    private GroupName groupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"    private Description description;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"    private Set\u003cStudent\u003e students;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"     * Creates a {@code GroupBuilder} with the default details.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"    public GroupBuilder() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"        groupName \u003d new GroupName(DEFAULT_GROUPNAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"        students \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"     * Intitialzes the GroupBuilder with the data of {@code groupToCopy}.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"    public GroupBuilder(Group groupToCopy) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"        groupName \u003d groupToCopy.getGroupName();","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"        description \u003d groupToCopy.getDescription();","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"        students \u003d groupToCopy.getStudents();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"     * Sets the {@code GroupName} of the {@code Group} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"    public GroupBuilder withGroupName(String groupName) {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"        this.groupName \u003d new GroupName(groupName);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"SKCheongBrian"},"content":"     * Sets the {@code Description} of the {@code Group} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"SKCheongBrian"},"content":"    public GroupBuilder withDescription(String description) {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"SKCheongBrian"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"SKCheongBrian"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"Yttruire"},"content":"     * Adds a reference of the {@code Student} that belongs to this group","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"Yttruire"},"content":"    public GroupBuilder withStudent(Student student) {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"Yttruire"},"content":"        students.add(student);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"Yttruire"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"Yttruire"},"content":"     * Sets the {@code Students} of the {@code Group} that we are building","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"Yttruire"},"content":"     * with typical students.","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"Yttruire"},"content":"    public GroupBuilder withTypicalStudents() {","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"Yttruire"},"content":"        students.addAll(getTypicalStudents());","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"Yttruire"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"SKCheongBrian"},"content":"     * Sets the {@code Students} of the {@code Group} that we are building","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"SKCheongBrian"},"content":"     * with sample students.","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"SKCheongBrian"},"content":"    public GroupBuilder withSampleStudents() {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"SKCheongBrian"},"content":"        Student[] studentsArray \u003d SampleDataUtil.getSampleStudents();","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"SKCheongBrian"},"content":"        HashSet\u003cStudent\u003e students \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Yttruire"},"content":"        students.addAll(Arrays.asList(studentsArray));","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"SKCheongBrian"},"content":"        this.students \u003d students;","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"SKCheongBrian"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"SKCheongBrian"},"content":"     * Builds a group","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"SKCheongBrian"},"content":"     * @return built group","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"SKCheongBrian"},"content":"    public Group build() {","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"SKCheongBrian"},"content":"        Group group \u003d new Group(groupName, description);","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"SKCheongBrian"},"content":"        for (Student student : students) {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"SKCheongBrian"},"content":"            group.addStudent(student);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"SKCheongBrian"},"content":"        return group;","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Yttruire":21,"SKCheongBrian":80}},{"path":"src/test/java/seedu/address/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"greyguy21"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Description;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"import seedu.address.model.student.TelegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"greyguy21"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"greyguy21"},"content":"public class StudentBuilder {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"greyguy21"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"    public static final String DEFAULT_TELEGRAM_HANDLE \u003d \"@amy_bee\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"greyguy21"},"content":"    public static final String DEFAULT_GROUP_NAME \u003d \"CS2103T\";","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"software eng mod\";","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"greyguy21"},"content":"    private Name name;","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"    private TelegramHandle telegramHandle;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"greyguy21"},"content":"    private Email email;","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"    private Group group;","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"greyguy21"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"greyguy21"},"content":"    public StudentBuilder() {","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"        telegramHandle \u003d new TelegramHandle(DEFAULT_TELEGRAM_HANDLE);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"greyguy21"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"        group \u003d new Group(new GroupName(DEFAULT_GROUP_NAME), new Description(DEFAULT_DESCRIPTION));","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"greyguy21"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"greyguy21"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"tanjiaxian99"},"content":"        telegramHandle \u003d studentToCopy.getTelegramHandle();","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"greyguy21"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"        group \u003d studentToCopy.getGroup();","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"greyguy21"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"greyguy21"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"greyguy21"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"greyguy21"},"content":"        return this;","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"tanjiaxian99"},"content":"     * Sets the {@code TelegramHandle} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"tanjiaxian99"},"content":"    public StudentBuilder withTelegramHandle(String telegramHandle) {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"tanjiaxian99"},"content":"        this.telegramHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"greyguy21"},"content":"        return this;","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"greyguy21"},"content":"     * Sets the {@code Email} of the {@code Student} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"greyguy21"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"greyguy21"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"greyguy21"},"content":"        return this;","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"greyguy21"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"greyguy21"},"content":"     * Sets the {@code GroupName} of the {@code Student} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"greyguy21"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"SKCheongBrian"},"content":"    public StudentBuilder withGroup(String groupName, String description) {","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"SKCheongBrian"},"content":"        this.group \u003d new Group(new GroupName(groupName), new Description(description));","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"greyguy21"},"content":"        return this;","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"Yttruire"},"content":"     * Sets the {@code GroupName} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Yttruire"},"content":"    public StudentBuilder withGroup(Group group) {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"Yttruire"},"content":"        this.group \u003d new Group(new GroupName(group.getGroupName().toString()),","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"Yttruire"},"content":"                new Description(group.getDescription().toString()));","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"Yttruire"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"SKCheongBrian"},"content":"     * Builds a student","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"SKCheongBrian"},"content":"     * @return built student","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"greyguy21"},"content":"    public Student build() {","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"Yttruire"},"content":"        // TODO Double confirm, do we need to load a group from the model for this testUtil method/class?","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"tanjiaxian99"},"content":"        return new Student(name, telegramHandle, email, group);","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"greyguy21"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"greyguy21"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yttruire":10,"tanjiaxian99":9,"SKCheongBrian":12,"greyguy21":66}},{"path":"src/test/java/seedu/address/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"greyguy21"},"content":" * A utility class for Student.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"greyguy21"},"content":"public class StudentUtil {","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"greyguy21"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"greyguy21"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"greyguy21"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getStudentDetails(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"greyguy21"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"greyguy21"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"greyguy21"},"content":"        sb.append(PREFIX_NAME + student.getName().fullName + \" \");","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"        sb.append(PREFIX_TELEGRAM_HANDLE + student.getTelegramHandle().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"greyguy21"},"content":"        sb.append(PREFIX_EMAIL + student.getEmail().value + \" \");","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Yttruire"},"content":"        sb.append(PREFIX_GROUP_NAME + student.getGroup().getGroupName().toString() + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"greyguy21"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"greyguy21"},"content":"    public static String getEditStudentDescriptorDetails(EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"tanjiaxian99"},"content":"        descriptor.getTelegramHandle()","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"tanjiaxian99"},"content":"                .ifPresent(telegramHandle -\u003e sb.append(PREFIX_TELEGRAM_HANDLE).append(telegramHandle.value)","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"tanjiaxian99"},"content":"                .append(\" \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"Yttruire"},"content":"        descriptor.getGroup().ifPresent(group -\u003e sb.append(PREFIX_GROUP_NAME).append(group.getGroupName().toString())","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"greyguy21"},"content":"                .append(\" \"));","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Yttruire":2,"tanjiaxian99":5,"greyguy21":16,"junwei26":2,"-":27}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"greyguy21"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"greyguy21"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"greyguy21"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"greyguy21"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"greyguy21"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"greyguy21"},"content":"    public static Student getStudent(Model model, Index index) {","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"greyguy21"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"greyguy21":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalGroup.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_DESCRIPTION_CS1101S;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_DESCRIPTION_CS1231S;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_DESCRIPTION_CS2030S;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_DESCRIPTION_CS2040S;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_NAME_CS1101S;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_NAME_CS1231S;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_NAME_CS2030S;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_NAME_CS2040S;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"public class TypicalGroup {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"    public static final Group DEFAULT_GROUP \u003d new GroupBuilder().withSampleStudents().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"    public static final Group CS1231S \u003d new GroupBuilder().withGroupName(VALID_GROUP_NAME_CS1231S)","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"            .withDescription(VALID_GROUP_DESCRIPTION_CS1231S).withSampleStudents().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"    public static final Group CS1101S \u003d new GroupBuilder().withGroupName(VALID_GROUP_NAME_CS1101S)","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"            .withDescription(VALID_GROUP_DESCRIPTION_CS1101S).withSampleStudents().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"    public static final Group CS2030S \u003d new GroupBuilder().withGroupName(VALID_GROUP_NAME_CS2030S)","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"            .withDescription(VALID_GROUP_DESCRIPTION_CS2030S).withSampleStudents().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"    public static final Group CS2040S \u003d new GroupBuilder().withGroupName(VALID_GROUP_NAME_CS2040S)","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"            .withDescription(VALID_GROUP_DESCRIPTION_CS2040S).withSampleStudents().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"    private TypicalGroup() {} // prevents instantiation","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"        AddressBook csb \u003d new AddressBook();","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"        for (Group group : getTypicalGroups()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"            csb.addGroup(group);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"        return csb;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"    public static List\u003cGroup\u003e getTypicalGroups() {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(DEFAULT_GROUP, CS1231S, CS1101S, CS2030S, CS2040S));","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"SKCheongBrian":44}},{"path":"src/test/java/seedu/address/testutil/TypicalGroups.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":" * A utility class containing a list of {@code Group} objects to be used in tests.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"public class TypicalGroups {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"    public static final String TYPICAL_GROUP_CS2103T_NAME \u003d \"CS2103T\";","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"    public static final String TYPICAL_GROUP_CS2103T_DESC \u003d \"A Software engineering module\";","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"    public static final String TYPICAL_GROUP_CS2101_NAME \u003d \"CS2101\";","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"    public static final String TYPICAL_GROUP_CS2101_DESC \u003d \"An effective communication module\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"    public static final Group TYPICAL_GROUP_CS2103T \u003d new GroupBuilder()","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"            .withGroupName(TYPICAL_GROUP_CS2103T_NAME).withDescription(TYPICAL_GROUP_CS2103T_DESC)","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"            .withTypicalStudents().build();","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"    public static final Group TYPICAL_GROUP_CS2101 \u003d new GroupBuilder()","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"            .withGroupName(TYPICAL_GROUP_CS2101_NAME).withDescription(TYPICAL_GROUP_CS2101_DESC).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Yttruire":21}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"greyguy21"},"content":"    public static final Index INDEX_FIRST_STUDENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"greyguy21"},"content":"    public static final Index INDEX_SECOND_STUDENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"greyguy21"},"content":"    public static final Index INDEX_THIRD_STUDENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"greyguy21":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESC_AMY;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESC_BOB;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_NAME_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"greyguy21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_NAME_BOB;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.testutil.TypicalGroups.TYPICAL_GROUP_CS2101;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.testutil.TypicalGroups.TYPICAL_GROUP_CS2103T;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.testutil.TypicalGroups.TYPICAL_GROUP_CS2103T_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"import static seedu.address.testutil.TypicalGroups.TYPICAL_GROUP_CS2103T_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"greyguy21"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"greyguy21"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"greyguy21"},"content":"public class TypicalStudents {","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"            .withTelegramHandle(\"@alice_pauline\")","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Yttruire"},"content":"            .withGroup(TYPICAL_GROUP_CS2103T_NAME, TYPICAL_GROUP_CS2103T_DESC).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\").withEmail(\"johnd@example.com\")","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Yttruire"},"content":"            .withTelegramHandle(\"@benson_meier\")","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"            .withGroup(TYPICAL_GROUP_CS2103T_NAME, TYPICAL_GROUP_CS2103T_DESC).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Yttruire"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withEmail(\"heinz@example.com\")","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Yttruire"},"content":"            .withTelegramHandle(\"@carl_kurz\")","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Yttruire"},"content":"            .withGroup(TYPICAL_GROUP_CS2103T_NAME, TYPICAL_GROUP_CS2103T_DESC).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Yttruire"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Yttruire"},"content":"            .withTelegramHandle(\"@daniel_meier\")","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Yttruire"},"content":"            .withGroup(TYPICAL_GROUP_CS2103T_NAME, TYPICAL_GROUP_CS2103T_DESC).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"tanjiaxian99"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withTelegramHandle(\"@elle_meyer\")","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Yttruire"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Yttruire"},"content":"            .withGroup(TYPICAL_GROUP_CS2103T_NAME, TYPICAL_GROUP_CS2103T_DESC).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tanjiaxian99"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withTelegramHandle(\"@fiona_kunz\")","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Yttruire"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Yttruire"},"content":"            .withGroup(TYPICAL_GROUP_CS2103T_NAME, TYPICAL_GROUP_CS2103T_DESC).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tanjiaxian99"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withTelegramHandle(\"@george_best\")","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Yttruire"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Yttruire"},"content":"            .withGroup(TYPICAL_GROUP_CS2103T_NAME, TYPICAL_GROUP_CS2103T_DESC).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"tanjiaxian99"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\").withTelegramHandle(\"@hoon_meier\")","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Yttruire"},"content":"            .withEmail(\"stefan@example.com\").withGroup(TYPICAL_GROUP_CS2103T_NAME, TYPICAL_GROUP_CS2103T_DESC).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tanjiaxian99"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\").withTelegramHandle(\"@ida_mueller\")","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Yttruire"},"content":"            .withEmail(\"hans@example.com\").withGroup(TYPICAL_GROUP_CS2103T_NAME, TYPICAL_GROUP_CS2103T_DESC).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":58,"author":{"gitId":"greyguy21"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"tanjiaxian99"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"tanjiaxian99"},"content":"            .withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Yttruire"},"content":"            .withGroup(new GroupBuilder().withGroupName(VALID_GROUP_NAME_AMY).withDescription(VALID_DESC_AMY).build())","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Yttruire"},"content":"            .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"tanjiaxian99"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"tanjiaxian99"},"content":"            .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"Yttruire"},"content":"            .withGroup(new GroupBuilder().withGroupName(VALID_GROUP_NAME_BOB).withDescription(VALID_DESC_BOB).build())","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Yttruire"},"content":"            .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"greyguy21"},"content":"    private TypicalStudents() {} // prevents instantiation","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"greyguy21"},"content":"     * Returns an {@code AddressBook} with all the typical students.","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"greyguy21"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"greyguy21"},"content":"            ab.addStudent(student);","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":81,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"Yttruire"},"content":"        for (Group group : getTypicalGroups()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"Yttruire"},"content":"            ab.addGroup(group);","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":89,"author":{"gitId":"greyguy21"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"Yttruire"},"content":"        return new ArrayList\u003c\u003e(List.of(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":92,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Yttruire"},"content":"    public static List\u003cGroup\u003e getTypicalGroups() {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Yttruire"},"content":"        return new ArrayList\u003c\u003e(List.of(TYPICAL_GROUP_CS2103T, TYPICAL_GROUP_CS2101));","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Yttruire":39,"tanjiaxian99":13,"SKCheongBrian":2,"greyguy21":11,"-":31}}]
