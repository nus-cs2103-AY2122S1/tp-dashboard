[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-F12-2/tp/actions)","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Jeromesyl"},"content":"# Intern Watcher","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Jeromesyl"},"content":"Intern Watcher (IW) is a **desktop app for Human Resource Managers to track and manage internship applicants**.","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":"* Ideal for HR Managers of small to medium organizations who receive large volumes of applications. ","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Jeromesyl"},"content":"* Use Intern Watcher to track applicants\u0027 details, as well as filter applicants by their details.","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":"* Manage the application status of applicants (eg. Received, Interviewed, Accepted, Applied, etc.)","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Jeromesyl"},"content":"Check out [User Guide](https://ay2122s1-cs2103t-f12-2.github.io/tp/UserGuide.html) and download the latest JAR file [here](https://github.com/AY2122S1-CS2103T-F12-2/tp/releases) to get started!","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"yunpeng1234":3,"Jeromesyl":6,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"mainClassName \u003d \u0027seedu.intern.Main\u0027","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"    archiveName \u003d \u0027internwatcher.jar\u0027","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"    archiveVersion \u003d \u0027v1.2\u0027","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"run {","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":72,"Chang-CH":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"### Chang Chuan Hao","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"\u003cimg src\u003d\"images/chang-ch.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"[[github](https://github.com/Chang-CH)]","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"[[portfolio](team/chang-ch.md)]","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"* Role: Team lead","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"* Responsibilities: Responsible for overall project coordination.","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"* Features: Edit ALL, UI","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"### Gu Geng","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"\u003cimg src\u003d\"images/jackgugz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"[[github](https://github.com/jackgugz)]","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"[[portfolio](team/jackgugz.md)]","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"* Role: Code quality","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"* Responsibilities: Looks after code quality, ensures adherence to coding standards, etc.","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"* Features: Filter feature","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Jeromesyl"},"content":"### Jerome Soh","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Jeromesyl"},"content":"\u003cimg src\u003d\"images/jeromesyl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Jeromesyl"},"content":"[[github](http://github.com/Jeromesyl)]","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Jeromesyl"},"content":"[[portfolio](team/jeromesyl.md)]","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Jeromesyl"},"content":"* Role: Scheduling and tracking","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"Jeromesyl"},"content":"* Responsibilities: : In charge of defining, assigning, and tracking project tasks.","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"* Features: Undo/Redo features","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"nicolej2122"},"content":"### Nicole Joseph","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"nicolej2122"},"content":"\u003cimg src\u003d\"images/nicolej2122.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"nicolej2122"},"content":"[[github](http://github.com/nicolej2122)]","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"nicolej2122"},"content":"[[portfolio](team/nicolej2122.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"* Role: Testing","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time.","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"* Features: View feature","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"### Xiao Yunpeng","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"\u003cimg src\u003d\"images/yunpeng1234.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"[[github](http://github.com/yunpeng1234)]","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"[[portfolio](team/yunpeng1234.md)]","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"* Role: Integration","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"* Responsibilities: In charge of versioning of the code, maintaining the code repository, integrating various parts of the software to create a whole.","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"* Features: UI, Delete ALL","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"yunpeng1234":4,"Jeromesyl":6,"nicolej2122":4,"-":29,"Chang-CH":5,"jackgugz":16}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-F12-2/tp/blob/master/src/main/java/seedu/intern/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103T-F12-2/tp/blob/master/src/main/java/seedu/intern/MainApp.java). It is responsible for,","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-F12-2/tp/blob/master/src/main/java/seedu/intern/ui/Ui.java)","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ApplicantListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103T-F12-2/tp/blob/master/src/main/java/seedu/intern/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/InternWatcher-level3/tree/master/src/main/resources/view/MainWindow.fxml).","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"* depends on some classes in the `Model` component, as it displays `Applicant` object residing in the `Model`.","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-F12-2/tp/blob/master/src/main/java/seedu/intern/logic/Logic.java)","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"1. When `Logic` is called upon to execute a command, it uses the `InternWatcherParser` class to parse the user command.","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add an applicant).","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned from `Logic`.","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"* When called upon to parse a user command, the `InternWatcherParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `InternWatcherParser` returns a `Command` object.","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"Chang-CH"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-F12-2/tp/blob/master/src/main/java/seedu/intern/model/Model.java)","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"Chang-CH"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"Chang-CH"},"content":"* stores the address book data i.e., all `Applicant` objects (which are contained in a `UniqueApplicantList` object).","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"Chang-CH"},"content":"* stores the currently \u0027selected\u0027 `Applicant` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cApplicant\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"Chang-CH"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Skill` list in the `InternWatcher`, which `Applicant` references. This allows `InternWatcher` to only require one `Skill` object per unique skill, instead of each `Applicant` needing their own `Skill` objects.\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"Chang-CH"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"Chang-CH"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-F12-2/tp/blob/master/src/main/java/seedu/intern/storage/Storage.java)","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"Chang-CH"},"content":"* inherits from both `InternWatcherStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"Chang-CH"},"content":"Classes used by multiple components are in the `seedu.InternWatcher.commons` package.","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"jackgugz"},"content":"This section describes some noteworthy details and design considerations on how certain features are implemented.","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"jackgugz"},"content":"###  Add feature","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"jackgugz"},"content":"#### Design considerations:","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"jackgugz"},"content":"**Aspect: Prevent duplicate entries**","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"jackgugz"},"content":"- **Alternative 1 (current choice)**: Disallow entries with duplicate names in a case-insensitive manner.","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"jackgugz"},"content":"    - Pros: Easy to implement","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"jackgugz"},"content":"    - Cons: Disallow different people of same name to be added to the app at the same time.","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"jackgugz"},"content":"- **Alternative 2**: Create and use another unique attribute for the applicants and use that for identification.","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"jackgugz"},"content":"    - Pros: Allow for multiple entries with the same name.","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"jackgugz"},"content":"    - Cons: Harder to implement. Users may abuse the `add` command intentionally and unintentionally.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"jackgugz"},"content":"Therefore, with the above consideration and the fact that different applicants sharing same name is relatively rare case, we decided to proceed with alternative 1.","lastModifiedDate":"2021-11-07"},{"lineNumber":164,"author":{"gitId":"jackgugz"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"jackgugz"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"jackgugz"},"content":"**Aspect: Restriction over graduation year month**","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"jackgugz"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":168,"author":{"gitId":"jackgugz"},"content":"As internship has timeliness as its nature and our application development only started in 2021, it would be more reasonable for us to set January 2020 to be the lower bound of accepted graduation year month to give HRs some allowance to keep some previous data. However, anyone who graduated before such said time will not likely be looking for an internship anymore, and therefore should be disallowed in our system.","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"Chang-CH"},"content":"###  Edit ALL feature","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"Chang-CH"},"content":"#### Implementation","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"Chang-CH"},"content":"* The edit ALL mechanism is facilitated by the new `Selection` class. A new parser `ParserUtil#parseSelection`","lastModifiedDate":"2021-11-07"},{"lineNumber":175,"author":{"gitId":"Chang-CH"},"content":"has been added to parse `Selection` values, which accepts either integers or the `ALL` string. The `Selection` class supports","lastModifiedDate":"2021-10-23"},{"lineNumber":176,"author":{"gitId":"jackgugz"},"content":"operations `Selection#hasAllSelectFlag` and `Selection#hasIndex`, which is used by `EditCommand#execute`. ","lastModifiedDate":"2021-11-07"},{"lineNumber":177,"author":{"gitId":"jackgugz"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":178,"author":{"gitId":"Chang-CH"},"content":"* `EditCommand#execute`","lastModifiedDate":"2021-11-07"},{"lineNumber":179,"author":{"gitId":"Jeromesyl"},"content":"has been modified, such that whenever `Selection#hasAllSelectFlag` returns `true`, `EditCommand#execute` edits all applicants with","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"jackgugz"},"content":"the fields specified. ","lastModifiedDate":"2021-11-07"},{"lineNumber":181,"author":{"gitId":"jackgugz"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":182,"author":{"gitId":"Chang-CH"},"content":"* `Selection` has been given a private constructor with static factory methods `Selection#fromIndex` and","lastModifiedDate":"2021-11-07"},{"lineNumber":183,"author":{"gitId":"Chang-CH"},"content":"`Selection#fromAllFlag` to ensure `Selection` should not contain both index and all flag.","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"Jeromesyl"},"content":"The following activity diagrams summarizes what happens when a user enters an `edit` command.","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"Chang-CH"},"content":"\u003cimg src\u003d\"images/EditActivityDiagram.png\" width\u003d\"500\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":188,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"yunpeng1234"},"content":"Edit ALL updates the details of all currently displayed applicants by obtaining the list of currently displayed applicants via `Model#getFilteredApplicantList`.","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"Jeromesyl"},"content":"The list is then copied, after which each individual applicant is modified via `Model#setApplicant` in a for loop.","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"Jeromesyl"},"content":"The following sequence diagram summaries what happens when a user enters an `edit``ALL` command.","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"Chang-CH"},"content":"\u003cimg src\u003d\"images/EditAllSequenceDiagram.png\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":196,"author":{"gitId":"Chang-CH"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"Chang-CH"},"content":"**Aspect: How edit ALL is parsed**","lastModifiedDate":"2021-10-23"},{"lineNumber":198,"author":{"gitId":"Chang-CH"},"content":"- **Alternative 1 (current choice)**: Modify the parser to parse the `Selection`, accepting a special flag to indicate all applicants","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"Chang-CH"},"content":"should be edited.","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"Chang-CH"},"content":"    - Pros: Easy to implement","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"Chang-CH"},"content":"    - Cons: `EditCommand` and its related parsers may become harder to test since its behaviour is now different depending","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"Chang-CH"},"content":"    on the user input.","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"Chang-CH"},"content":"- **Alternative 2**: Create a separate `EditAllCommand` with its own parser.","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"Chang-CH"},"content":"    - Pros: Easier to test, the behaviour of `EditAllCommand` should not affect `EditCommand`.","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"Chang-CH"},"content":"    - Cons: Harder to implement. Users might also find editing multiple applicants having a separate command unintuitive.","lastModifiedDate":"2021-10-23"},{"lineNumber":206,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":207,"author":{"gitId":"Jeromesyl"},"content":"**Aspect: How edit arguments are stored**","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"Jeromesyl"},"content":"- **Alternative 1 (current choice)**: Create a `Selection` class with private constructor and static factory methods to store either the","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"Jeromesyl"},"content":"  `ALL` flag or the `Index`.","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"Jeromesyl"},"content":"    - Pros: Disallows `ALL` flag to exist together with `Index`, making debugging easier. Keeps modifications to existing classes minimal.","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"Jeromesyl"},"content":"    - Cons: Most `EditCommand` tests would have to be changed to accommodate the new constructor. `Selection`","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"Jeromesyl"},"content":"- **Alternative 2**: Overload `EditCommand` constructor to accept an additional boolean flag.","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"Jeromesyl"},"content":"    - Pros: Easy to implement, existing classes/methods need not be changed.","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"Jeromesyl"},"content":"    - Cons: Additional parser method must be created. Users may unintentionally pass both `ALL` and `Index` to parser.","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"Jeromesyl"},"content":"**Aspect: What attributes can edit ALL accept**","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"Jeromesyl"},"content":"- **Alternative 1 (current choice)**: Only allow mass modifications to `ApplicationStatus`.","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"Jeromesyl"},"content":"    - Pros: Users cannot unintentionally modify all applicants\u0027 personal details, such as `Name`, `Email`, `Grade`.","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"Jeromesyl"},"content":"      There should not be a reason to mass modify these fields. If a user created a number of applicants with the wrong details","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"Jeromesyl"},"content":"      `UndoCommand` can be used instead.","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"Jeromesyl"},"content":"    - Cons: Usage of `edit ALL` would be limited.","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"Chang-CH"},"content":"- **Alternative 2**: Allow mass modifications of all fields","lastModifiedDate":"2021-11-06"},{"lineNumber":223,"author":{"gitId":"Jeromesyl"},"content":"    - Pros: `edit ALL` behaviour can be kept similar to `edit INDEX`, increasing usability.","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"Jeromesyl"},"content":"    - Cons: Allows users to unintentionally modify applicant fields that should normally not require mass edits.","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"yunpeng1234"},"content":"###  Delete ALL feature","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"yunpeng1234"},"content":"#### Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"Chang-CH"},"content":"* The delete ALL mechanism is facilitated by the new `Selection` class shared with edit ALL. A new parser `ParserUtil#parseSelection`","lastModifiedDate":"2021-11-07"},{"lineNumber":230,"author":{"gitId":"Chang-CH"},"content":"has been added to parse `Selection` values, which accepts either integers or the `ALL` string. The `Selection` class supports","lastModifiedDate":"2021-10-30"},{"lineNumber":231,"author":{"gitId":"jackgugz"},"content":"operations `Selection#hasAllSelectFlag` and `Selection#hasIndex`, which is used by `DeleteCommand#execute`. ","lastModifiedDate":"2021-11-07"},{"lineNumber":232,"author":{"gitId":"jackgugz"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":233,"author":{"gitId":"Chang-CH"},"content":"* `DeleteCommand#execute`","lastModifiedDate":"2021-11-07"},{"lineNumber":234,"author":{"gitId":"jackgugz"},"content":"has been modified, such that whenever `Selection#hasAllSelectFlag` returns `true`, `DeleteCommand#execute` delete all applicants on the displayed list. ","lastModifiedDate":"2021-11-07"},{"lineNumber":235,"author":{"gitId":"jackgugz"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":236,"author":{"gitId":"Chang-CH"},"content":"* `Selection` has been given a private constructor with static factory methods `Selection#fromIndex` and","lastModifiedDate":"2021-11-07"},{"lineNumber":237,"author":{"gitId":"Chang-CH"},"content":"`Selection#fromAllFlag` to ensure `Selection` should not contain both index and all flag.","lastModifiedDate":"2021-10-30"},{"lineNumber":238,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":239,"author":{"gitId":"Chang-CH"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-30"},{"lineNumber":240,"author":{"gitId":"Chang-CH"},"content":"**Aspect: How delete ALL is parsed**","lastModifiedDate":"2021-10-30"},{"lineNumber":241,"author":{"gitId":"Chang-CH"},"content":"- **Alternative 1 (current choice)**: Modify the parser to parse the `Selection`, accepting a special flag to indicate all applicants","lastModifiedDate":"2021-10-30"},{"lineNumber":242,"author":{"gitId":"Chang-CH"},"content":"  should be deleted.","lastModifiedDate":"2021-10-30"},{"lineNumber":243,"author":{"gitId":"Chang-CH"},"content":"    - Pros: Easy to implement","lastModifiedDate":"2021-10-30"},{"lineNumber":244,"author":{"gitId":"Chang-CH"},"content":"    - Cons: `DeleteCommand` and its related parsers may become harder to test since its behaviour is now different depending","lastModifiedDate":"2021-10-30"},{"lineNumber":245,"author":{"gitId":"Chang-CH"},"content":"      on the user input.","lastModifiedDate":"2021-10-30"},{"lineNumber":246,"author":{"gitId":"Chang-CH"},"content":"- **Alternative 2**: Create a special `Index` of -1 when ALL tag is attached, as such, only when the index is -1, will we execute \u0027delete All\u0027","lastModifiedDate":"2021-10-30"},{"lineNumber":247,"author":{"gitId":"Chang-CH"},"content":"    - Pros: Easy to implement","lastModifiedDate":"2021-10-30"},{"lineNumber":248,"author":{"gitId":"Chang-CH"},"content":"    - Cons: Bypasses the intention of the Index Class. Having a negative `Index` might throw unexpected errors.","lastModifiedDate":"2021-10-30"},{"lineNumber":249,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"yunpeng1234"},"content":"![DeleteAllSequenceDiagram](images/DeleteAllSequenceDiagram.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":251,"author":{"gitId":"yunpeng1234"},"content":"    ","lastModifiedDate":"2021-11-03"},{"lineNumber":252,"author":{"gitId":"jackgugz"},"content":"### Filter feature","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"jackgugz"},"content":"#### Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"jackgugz"},"content":"The filter mechanism is facilitated by `FilterCommandParser`.","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"jackgugz"},"content":"`FilterCommandParser` produces a `FilterApplicantDescriptor`, which in turn helps to create a `FilterCommand`.","lastModifiedDate":"2021-11-07"},{"lineNumber":258,"author":{"gitId":"jackgugz"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"jackgugz"},"content":"`Optional` and `Set` data structures have been used to contain optional set of filters for different attributes within `FilterApplicantDescriptor`.","lastModifiedDate":"2021-11-07"},{"lineNumber":260,"author":{"gitId":"jackgugz"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"jackgugz"},"content":"The `FilterCommand` will make use of the `FilterApplicantDescriptor` to create a `CombineFiltersPredicate` that will be supplied to `ModelManager#updateFilteredApplicantList(Predicate\u003cApplicant\u003e)` in its `execute` method.","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"jackgugz"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":263,"author":{"gitId":"jackgugz"},"content":"`ModelManager` helps filter through the applicant list with specified filter criteria contained and interpreted by the `CombineFiltersPredicate#test()`.","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"jackgugz"},"content":"![FilterSequenceDiagram](images/filter/FilterSequenceDiagram.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":265,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"jackgugz"},"content":"#### Design considerations:","lastModifiedDate":"2021-11-04"},{"lineNumber":267,"author":{"gitId":"jackgugz"},"content":"**Aspect: How filter for different attributes work**","lastModifiedDate":"2021-11-04"},{"lineNumber":268,"author":{"gitId":"jackgugz"},"content":"- **Name, Phone, Email**: These attributes are excluded from filter criteria as `filter` is supposed to serve the purpose of selecting potential candidates based on practical considerations other than these three attributes.","lastModifiedDate":"2021-11-04"},{"lineNumber":269,"author":{"gitId":"jackgugz"},"content":"- **Grade**: HRs should be more interested in finding candidates whose grades meet a certain threshold. Therefore, only applicants that have grades not smaller than the input `Grade` will be displayed.","lastModifiedDate":"2021-11-04"},{"lineNumber":270,"author":{"gitId":"jackgugz"},"content":"- **GraduationYearMonth**: HRs should be more interested in finding candidates who graduate before a certain period and who are readily available for deployment before internship starts. Therefore, only applicants that graduate strictly earlier than the input `GraduationYearMonth` will be displayed.","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"jackgugz"},"content":"- **Institutions**: HRs should be more open to accept applicants from a collection of institutions. For example, HRs may be interested in finding applicants that are from either NUS or NTU as the company has affiliation programme with the said two institutions. Also, such filters should be case-insensitive as the capitalisation is not meaningful when considering the said attributes.","lastModifiedDate":"2021-11-04"},{"lineNumber":272,"author":{"gitId":"jackgugz"},"content":"- **Jobs**: HRs should be more interested in filtering applicants for a range of related jobs. For example, HRs may be interested in choosing appropriate applicants for both software engineer and software tester as the requirements for both jobs are similar, and it is easier to look at both at once. Also, such filters should be case-insensitive as the capitalisation is not meaningful when considering the said attributes.","lastModifiedDate":"2021-11-04"},{"lineNumber":273,"author":{"gitId":"jackgugz"},"content":"- **Skills**: HRs should be more interested to use multiple `Skill` filters to exclusively find applicants that have all skills required in order to perform the applied job. And the filters shall be case-sensitive as capitalisation may differentiate two seemingly same skills.","lastModifiedDate":"2021-11-04"},{"lineNumber":274,"author":{"gitId":"jackgugz"},"content":"- **Statues**: HRs should be more interested to only look at certain groups of applicants filtered by a selection of `Status` filters. For example, a HR wishes to delete all applicants to a job except for those \"accepted\" after the job is filled up. This filter shall be case-sensitive as it is a special tag that has pre-defined elements.","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"jackgugz"},"content":"- **Courses**: HRs should be more interested to find applicants from a collection of courses as one same job can be assigned to applicants from similar but different courses. Also, the filter shall be case-insensitive.","lastModifiedDate":"2021-11-04"},{"lineNumber":276,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"Jeromesyl"},"content":"### Undo/redo feature","lastModifiedDate":"2021-10-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"Jeromesyl"},"content":"#### Implementation","lastModifiedDate":"2021-10-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"Jeromesyl"},"content":"The undo/redo mechanism is facilitated by `VersionedInternWatcher`. It extends `InternWatcher` with an undo/redo history, stored internally as an `watcherStateList` and `currStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2021-10-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":283,"author":{"gitId":"Jeromesyl"},"content":"* `VersionedInternWatcher#commitState()` — Saves the current Intern Watcher state in its history.","lastModifiedDate":"2021-10-23"},{"lineNumber":284,"author":{"gitId":"Jeromesyl"},"content":"* `VersionedInternWatcher#undo()` — Restores the previous Intern Watcher state from its history.","lastModifiedDate":"2021-10-23"},{"lineNumber":285,"author":{"gitId":"Jeromesyl"},"content":"* `VersionedInternWatcher#redo()` — Restores a previously undone Intern Watcher state from its history.","lastModifiedDate":"2021-10-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"Chang-CH"},"content":"These operations are exposed in the `Model` interface as `Model#commitInternWatcher()`, `Model#undoInternWatcher()` and `Model#redoInternWatcher()` respectively.","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"Jeromesyl"},"content":"Step 1. The user launches the application for the first time. The `VersionedInternWatcher` will be initialized with the initial Intern Watcher state, and the `currStatePointer` pointing to that single Intern Watcher state.","lastModifiedDate":"2021-10-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"Jeromesyl"},"content":"![UndoRedoState0](images/undo-redo/UndoRedoState0.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"Jeromesyl"},"content":"Step 2. The user executes `delete 5` command to delete the 5th applicant in the applicant list . The `delete` command calls `Model#commitInternWatcher()`, causing the modified state of the applicant list after the `delete 5` command executes to be saved in the `watcherStateList`, and the `currStatePointer` is shifted to the newly inserted Intern Watcher state.","lastModifiedDate":"2021-10-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"Jeromesyl"},"content":"![UndoRedoState1](images/undo-redo/UndoRedoState1.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"Jeromesyl"},"content":"Step 3. The user executes `add n/David …​` to add a new applicant. The `add` command also calls `Model#commitInternWatcher()`, causing another modified Intern Watcher state to be saved into the `watcherStateList`.","lastModifiedDate":"2021-10-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"Jeromesyl"},"content":"![UndoRedoState2](images/undo-redo/UndoRedoState2.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"Jeromesyl"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitInternWatcher()`, so the Intern Watcher state will not be saved into the `watcherStateList`.","lastModifiedDate":"2021-10-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"Jeromesyl"},"content":"Step 4. The user now decides that adding the applicant was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoInternWatcher()`, which will shift the `currStatePointer` once to the left, pointing it to the previous state, and restores the applicant list to that state.","lastModifiedDate":"2021-10-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"Jeromesyl"},"content":"![UndoRedoState3](images/undo-redo/UndoRedoState3.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"Jeromesyl"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currStatePointer` is at index 0, pointing to the initial Intern Watcher state, then there are no previous Intern Watcher states to restore. The `undo` command uses `Model#canUndoInternWatcher()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2021-10-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"Jeromesyl"},"content":"![UndoSequenceDiagram](images/undo-redo/UndoSequenceDiagram.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"Jeromesyl"},"content":"The `redo` command does the opposite — it calls `Model#redoInternWatcher()`, which shifts the `currStatePointer` once to the right, pointing to the previously undone state, and restores the applicant list to that state.","lastModifiedDate":"2021-10-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"Jeromesyl"},"content":"![UndoRedoState6](images/undo-redo/UndoRedoState6.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":328,"author":{"gitId":"Jeromesyl"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currStatePointer` is at index `watcherStateList.size() - 1`, pointing to the latest Intern Watcher state, then there are no undone Intern Watcher states to restore. The `redo` command uses `Model#canRedoInternWatcher()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2021-10-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"Jeromesyl"},"content":"Step 5. Let\u0027s say that the user goes through with the Undo command and the `currStatePointer` points to the previous state. The user then decides to execute the command `list`. Commands that do not modify the applicant list, such as `list`, will usually not call `Model#commitInternWatcher()`, `Model#undoInternWatcher()` or `Model#redoInternWatcher()`. Thus, the `watcherStateList` remains unchanged.","lastModifiedDate":"2021-11-04"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"Jeromesyl"},"content":"![UndoRedoState4](images/undo-redo/UndoRedoState4.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"Jeromesyl"},"content":"Step 6. The user executes `clear`, which calls `Model#commitInternWatcher()`. Since the `currStatePointer` is not pointing at the end of the `watcherStateList`, all Intern Watcher states after the `currStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2021-10-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"Jeromesyl"},"content":"![UndoRedoState5](images/undo-redo/UndoRedoState5.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"Jeromesyl"},"content":"\u003cimg src\u003d\"images/undo-redo/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"Jeromesyl"},"content":"* **Alternative 1 (current choice):** Saves the entire applicant list.","lastModifiedDate":"2021-10-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"Chang-CH"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the applicant being deleted).","lastModifiedDate":"2021-10-19"},{"lineNumber":355,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"Jeromesyl"},"content":"**Aspect: How to store saved states:**","lastModifiedDate":"2021-11-04"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":359,"author":{"gitId":"Jeromesyl"},"content":"* **Alternative 1:** Use two stack data structures, one for Command history and one for Undo history.","lastModifiedDate":"2021-11-04"},{"lineNumber":360,"author":{"gitId":"Jeromesyl"},"content":"    * Pros: Using a stack is intuitive for undo/redo as the current state is simply the top of the Command History stack. When undo is executed, the top of the stack can be popped and added into the Undo History stack.","lastModifiedDate":"2021-11-04"},{"lineNumber":361,"author":{"gitId":"Jeromesyl"},"content":"    * Cons: We must implement and manage two stacks for the functionality.","lastModifiedDate":"2021-11-04"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"Jeromesyl"},"content":"* **Alternative 2 (current choice):** Use array list data structure with a pointer.","lastModifiedDate":"2021-11-04"},{"lineNumber":364,"author":{"gitId":"Jeromesyl"},"content":"    * Pros: Easy to implement. Only requires one data structure for both undo and redo.","lastModifiedDate":"2021-11-04"},{"lineNumber":365,"author":{"gitId":"Jeromesyl"},"content":"    * Cons: The array list must be constantly updated and purged when a new undoable command is executed.","lastModifiedDate":"2021-11-05"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":373,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":374,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":375,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":376,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"jackgugz"},"content":"* has a need to manage a significant number of internship applications from campus recruitment","lastModifiedDate":"2021-09-28"},{"lineNumber":387,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":390,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"jackgugz"},"content":"**Value proposition**: Manage applications faster and more efficiently with the functions the app provides","lastModifiedDate":"2021-09-28"},{"lineNumber":393,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"| Priority | As a …​    | I want to …​                                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"jackgugz"},"content":"| -------- | ------------- | --------------------------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-11-07"},{"lineNumber":402,"author":{"gitId":"jackgugz"},"content":"| `* * `   | new user      | see usage instructions                              | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2021-11-07"},{"lineNumber":403,"author":{"gitId":"Chang-CH"},"content":"| `* * *`  | user          | add a new applicant                                 |                                                                        |","lastModifiedDate":"2021-10-19"},{"lineNumber":404,"author":{"gitId":"Chang-CH"},"content":"| `* * *`  | user          | delete an applicant                                 | remove entries that I no longer need                                   |","lastModifiedDate":"2021-10-19"},{"lineNumber":405,"author":{"gitId":"jackgugz"},"content":"| `* * `   | user          | delete all shown applicants                         | delete all entries that I no longer need                               |","lastModifiedDate":"2021-11-07"},{"lineNumber":406,"author":{"gitId":"Chang-CH"},"content":"| `* * *`  | user          | update applicant details                            | change entries accordingly                                             |","lastModifiedDate":"2021-10-19"},{"lineNumber":407,"author":{"gitId":"jackgugz"},"content":"| `* * `   | user          | update all filtered applicants\u0027 details             | change all entries accordingly                                         |","lastModifiedDate":"2021-11-07"},{"lineNumber":408,"author":{"gitId":"jackgugz"},"content":"| `* * *`  | user          | view an organised list of applicants                | see suitable applicants at a glance                                    |","lastModifiedDate":"2021-09-28"},{"lineNumber":409,"author":{"gitId":"jackgugz"},"content":"| `* * `   | user          | undo or redo my last action                         | rectify a mistake I made                                               |","lastModifiedDate":"2021-11-07"},{"lineNumber":410,"author":{"gitId":"Chang-CH"},"content":"| `* * *`  | user          | save applicant profiles to a file                   | refer to them later                                                    |","lastModifiedDate":"2021-10-11"},{"lineNumber":411,"author":{"gitId":"Chang-CH"},"content":"| `* * *`  | user          | read applicant profiles from a file                 | refer to them                                                          |","lastModifiedDate":"2021-10-11"},{"lineNumber":412,"author":{"gitId":"jackgugz"},"content":"| `* * *`  | user          | mass filter applicants against certain criteria     | find suitable applicants fitted for the job                            |","lastModifiedDate":"2021-11-07"},{"lineNumber":413,"author":{"gitId":"jackgugz"},"content":"| `* * `   | user          | find applicants by their names                      | review and edit them accordingly                                       |","lastModifiedDate":"2021-11-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"Chang-CH"},"content":"(For all use cases below, the **System** is the `InternWatcher` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-10-19"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":421,"author":{"gitId":"Chang-CH"},"content":"**Use case: Add an applicant application**","lastModifiedDate":"2021-10-19"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":423,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":425,"author":{"gitId":"Chang-CH"},"content":"1.  User requests to list applicants","lastModifiedDate":"2021-10-19"},{"lineNumber":426,"author":{"gitId":"Chang-CH"},"content":"2.  InternWatcher shows a list of applicants","lastModifiedDate":"2021-10-19"},{"lineNumber":427,"author":{"gitId":"Chang-CH"},"content":"3.  User requests to add a specific applicant in the list","lastModifiedDate":"2021-10-19"},{"lineNumber":428,"author":{"gitId":"Chang-CH"},"content":"4.  InternWatcher adds the applicant","lastModifiedDate":"2021-10-19"},{"lineNumber":429,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":430,"author":{"gitId":"jackgugz"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":431,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":432,"author":{"gitId":"jackgugz"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":433,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":434,"author":{"gitId":"jackgugz"},"content":"* 3a. The given details are invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":435,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":436,"author":{"gitId":"Chang-CH"},"content":"    * 3a1. InternWatcher shows an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":437,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":438,"author":{"gitId":"jackgugz"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":439,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":440,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":441,"author":{"gitId":"Chang-CH"},"content":"**Use case: Delete an applicant application**","lastModifiedDate":"2021-10-19"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"Chang-CH"},"content":"1.  User requests to list applicants","lastModifiedDate":"2021-10-19"},{"lineNumber":446,"author":{"gitId":"Chang-CH"},"content":"2.  InternWatcher shows a list of applicants","lastModifiedDate":"2021-10-19"},{"lineNumber":447,"author":{"gitId":"Chang-CH"},"content":"3.  User requests to delete a specific applicant in the list","lastModifiedDate":"2021-10-19"},{"lineNumber":448,"author":{"gitId":"Chang-CH"},"content":"4.  InternWatcher deletes the applicant","lastModifiedDate":"2021-10-19"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"Chang-CH"},"content":"    * 3a1. InternWatcher shows an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":465,"author":{"gitId":"Chang-CH"},"content":"**Use case: Update an applicant application**","lastModifiedDate":"2021-10-19"},{"lineNumber":466,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":467,"author":{"gitId":"jackgugz"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":468,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":469,"author":{"gitId":"Chang-CH"},"content":"1.  User requests to list applicants","lastModifiedDate":"2021-10-19"},{"lineNumber":470,"author":{"gitId":"Chang-CH"},"content":"2.  InternWatcher shows a list of applicants","lastModifiedDate":"2021-10-19"},{"lineNumber":471,"author":{"gitId":"Chang-CH"},"content":"3.  User requests to update a specific applicant in the list","lastModifiedDate":"2021-10-19"},{"lineNumber":472,"author":{"gitId":"Chang-CH"},"content":"4.  InternWatcher updates the applicant","lastModifiedDate":"2021-10-19"},{"lineNumber":473,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":474,"author":{"gitId":"jackgugz"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":475,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":476,"author":{"gitId":"jackgugz"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":477,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":478,"author":{"gitId":"jackgugz"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":479,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":480,"author":{"gitId":"Chang-CH"},"content":"    * 3a1. InternWatcher shows an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":481,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":482,"author":{"gitId":"jackgugz"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":483,"author":{"gitId":"jackgugz"},"content":"* 3b. The given details are invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":484,"author":{"gitId":"Chang-CH"},"content":"    * 3b1. InternWatcher shows an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":485,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":486,"author":{"gitId":"jackgugz"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":487,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":488,"author":{"gitId":"Chang-CH"},"content":"**Use case: Update all applicants application**","lastModifiedDate":"2021-10-30"},{"lineNumber":489,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":490,"author":{"gitId":"Chang-CH"},"content":"**MSS**","lastModifiedDate":"2021-10-19"},{"lineNumber":491,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":492,"author":{"gitId":"Chang-CH"},"content":"1.  User filters applicants to update","lastModifiedDate":"2021-10-19"},{"lineNumber":493,"author":{"gitId":"Chang-CH"},"content":"2.  InternWatcher shows a list of applicants","lastModifiedDate":"2021-10-19"},{"lineNumber":494,"author":{"gitId":"Chang-CH"},"content":"3.  User requests to update all applicants in the list","lastModifiedDate":"2021-10-19"},{"lineNumber":495,"author":{"gitId":"Chang-CH"},"content":"4.  InternWatcher updates all displayed applicants","lastModifiedDate":"2021-11-07"},{"lineNumber":496,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":497,"author":{"gitId":"Chang-CH"},"content":"    Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":498,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":499,"author":{"gitId":"Chang-CH"},"content":"**Extensions**","lastModifiedDate":"2021-10-19"},{"lineNumber":500,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":501,"author":{"gitId":"Chang-CH"},"content":"* 3a. The given details are invalid.","lastModifiedDate":"2021-10-19"},{"lineNumber":502,"author":{"gitId":"Chang-CH"},"content":"    * 3b1. InternWatcher shows an error message.","lastModifiedDate":"2021-10-19"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":504,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-19"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":506,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":507,"author":{"gitId":"Jeromesyl"},"content":"**Use case: Undo the last command**","lastModifiedDate":"2021-11-04"},{"lineNumber":508,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":509,"author":{"gitId":"Jeromesyl"},"content":"**MSS**","lastModifiedDate":"2021-11-04"},{"lineNumber":510,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":511,"author":{"gitId":"Jeromesyl"},"content":"1.  User requests to undo their last command to the applicant.","lastModifiedDate":"2021-11-04"},{"lineNumber":512,"author":{"gitId":"Jeromesyl"},"content":"2.  InternWatcher reverts to the previous state before the last command.","lastModifiedDate":"2021-11-04"},{"lineNumber":513,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":514,"author":{"gitId":"Jeromesyl"},"content":"    Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":515,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":516,"author":{"gitId":"Jeromesyl"},"content":"**Extensions**","lastModifiedDate":"2021-11-04"},{"lineNumber":517,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":518,"author":{"gitId":"Jeromesyl"},"content":"* 1a. There are no previous states to revert to.","lastModifiedDate":"2021-11-04"},{"lineNumber":519,"author":{"gitId":"Jeromesyl"},"content":"    * 1a1. InternWatcher shows an error message.","lastModifiedDate":"2021-11-04"},{"lineNumber":520,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":521,"author":{"gitId":"Jeromesyl"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-11-04"},{"lineNumber":522,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":523,"author":{"gitId":"jackgugz"},"content":"**Use case: Filter all applicant applications**","lastModifiedDate":"2021-11-07"},{"lineNumber":524,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":525,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":526,"author":{"gitId":"jackgugz"},"content":"**MSS**","lastModifiedDate":"2021-11-07"},{"lineNumber":527,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":528,"author":{"gitId":"jackgugz"},"content":"1.  User requests to list applicants","lastModifiedDate":"2021-11-07"},{"lineNumber":529,"author":{"gitId":"jackgugz"},"content":"2.  InternWatcher shows a list of applicants","lastModifiedDate":"2021-11-07"},{"lineNumber":530,"author":{"gitId":"jackgugz"},"content":"3.  User requests to filter the list based on specifications entered","lastModifiedDate":"2021-11-07"},{"lineNumber":531,"author":{"gitId":"jackgugz"},"content":"4.  InternWatcher shows a list of applicants that fit the specifications","lastModifiedDate":"2021-11-07"},{"lineNumber":532,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":533,"author":{"gitId":"jackgugz"},"content":"    Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":534,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":535,"author":{"gitId":"jackgugz"},"content":"**Extensions**","lastModifiedDate":"2021-11-07"},{"lineNumber":536,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":537,"author":{"gitId":"jackgugz"},"content":"* 3a. Any given filters are invalid.","lastModifiedDate":"2021-11-07"},{"lineNumber":538,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":539,"author":{"gitId":"jackgugz"},"content":"    * 3a1. InternWatcher shows an error message.","lastModifiedDate":"2021-11-07"},{"lineNumber":540,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":541,"author":{"gitId":"jackgugz"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-11-07"},{"lineNumber":542,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":543,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"Chang-CH"},"content":"2.  Should be able to hold up to 1000 applicants without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-10-19"},{"lineNumber":549,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"Chang-CH"},"content":"4.  Project should deliver new updates every two weeks","lastModifiedDate":"2021-10-01"},{"lineNumber":551,"author":{"gitId":"Chang-CH"},"content":"5.  Data should be saved upon exit into a JSON format file","lastModifiedDate":"2021-10-01"},{"lineNumber":552,"author":{"gitId":"Chang-CH"},"content":"6.  Data should be read from a JSON at a fixed file location","lastModifiedDate":"2021-10-01"},{"lineNumber":553,"author":{"gitId":"Chang-CH"},"content":"7.  The final product should not have to use a mouse","lastModifiedDate":"2021-10-01"},{"lineNumber":554,"author":{"gitId":"Chang-CH"},"content":"8.  The final product should be contained in a single window","lastModifiedDate":"2021-10-01"},{"lineNumber":555,"author":{"gitId":"Chang-CH"},"content":"9.  The system should provide sufficient hints to be usable by a novice.","lastModifiedDate":"2021-10-01"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":588,"author":{"gitId":"Chang-CH"},"content":"### Editing an applicant","lastModifiedDate":"2021-10-30"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":590,"author":{"gitId":"Chang-CH"},"content":"1. Editing an applicant while all applicants are shown","lastModifiedDate":"2021-10-30"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":592,"author":{"gitId":"Chang-CH"},"content":"   1. Prerequisites: List all applicants using the `list` command. Multiple applicants in the list.","lastModifiedDate":"2021-10-30"},{"lineNumber":593,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":594,"author":{"gitId":"Chang-CH"},"content":"   1. Test case: `edit 1 a/ INTERVIEWED`\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":595,"author":{"gitId":"Chang-CH"},"content":"      Expected: First applicant of the list modified to have the `INTERVIEWED` application status. Details of the edited applicant shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-10-30"},{"lineNumber":596,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":597,"author":{"gitId":"Chang-CH"},"content":"   1. Test case: `edit 0 a/ INTERVIEWED`\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":598,"author":{"gitId":"Chang-CH"},"content":"      Expected: No applicant is edited. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-30"},{"lineNumber":599,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":600,"author":{"gitId":"Chang-CH"},"content":"   1. Other incorrect edit commands to try: `edit`, `edit x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":601,"author":{"gitId":"Chang-CH"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2021-11-07"},{"lineNumber":602,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":603,"author":{"gitId":"Chang-CH"},"content":"   1. Test case: `edit ALL a/ INTERVIEWED`\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":604,"author":{"gitId":"Chang-CH"},"content":"      Expected: All currently displayed applicants modified with the `INTERVIEWED` application status. Number of applicants successfully edited shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-10-30"},{"lineNumber":605,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":606,"author":{"gitId":"Chang-CH"},"content":"   1. Test case: `edit ALL p/ 123`\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":607,"author":{"gitId":"Chang-CH"},"content":"      Expected: No applicant is edited. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-11-07"},{"lineNumber":608,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":609,"author":{"gitId":"Chang-CH"},"content":"   ","lastModifiedDate":"2021-10-30"},{"lineNumber":610,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":611,"author":{"gitId":"Chang-CH"},"content":"### Deleting an applicant","lastModifiedDate":"2021-10-19"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"Chang-CH"},"content":"1. Deleting an applicant while all applicants are being shown","lastModifiedDate":"2021-10-19"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"Chang-CH"},"content":"   1. Prerequisites: List all applicants using the `list` command. Multiple applicants in the list.","lastModifiedDate":"2021-10-19"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"nicolej2122"},"content":"      Expected: First applicant is deleted from the list. Details of the deleted applicant shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-10-20"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"Chang-CH"},"content":"      Expected: No applicant is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-19"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"Chang-CH"},"content":"   1. Test case: `delete ALL`\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":627,"author":{"gitId":"Chang-CH"},"content":"      Expected: All currently displayed applicants are deleted. Number of applicants successfully deleted shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-11-07"},{"lineNumber":628,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":629,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":630,"author":{"gitId":"nicolej2122"},"content":"### Viewing an applicant\u0027s details","lastModifiedDate":"2021-10-20"},{"lineNumber":631,"author":{"gitId":"nicolej2122"},"content":"1. Viewing an applicant\u0027s details while all applicants are being shown","lastModifiedDate":"2021-10-20"},{"lineNumber":632,"author":{"gitId":"nicolej2122"},"content":"   1. Prerequisites: List all applicants using the `list` command. Multiple applicants in the list.","lastModifiedDate":"2021-10-20"},{"lineNumber":633,"author":{"gitId":"nicolej2122"},"content":"   2. Test case: `view 1`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":634,"author":{"gitId":"nicolej2122"},"content":"      Expected: First applicant\u0027s details are displayed. Details of the applicant is shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-10-20"},{"lineNumber":635,"author":{"gitId":"nicolej2122"},"content":"   3. Test case: `view 0`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":636,"author":{"gitId":"Chang-CH"},"content":"      Expected: No applicant detail displayed. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-30"},{"lineNumber":637,"author":{"gitId":"nicolej2122"},"content":"   4. Other incorrect view commands to try: `view`, `view x`. `...`(where x is larger than the list or a non-positive number)\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":638,"author":{"gitId":"nicolej2122"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2021-10-20"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"Chang-CH"},"content":"   1. Save file is missing: A new save file `internwatcher.json` will be created on `exit` the next time Intern Watcher is used.","lastModifiedDate":"2021-11-07"},{"lineNumber":646,"author":{"gitId":"Chang-CH"},"content":"   2. Save file is corrupted: If invalid data is present, such as a person with phone number `abcd`, Intern Watcher will start with","lastModifiedDate":"2021-11-07"},{"lineNumber":647,"author":{"gitId":"Chang-CH"},"content":"   an empty applicant list instead.","lastModifiedDate":"2021-11-07"},{"lineNumber":648,"author":{"gitId":"Chang-CH"},"content":"   3. Save file applicant has duplicate fields: If an applicant has duplicate fields, such as two `phone` key value pairs, Intern Watcher","lastModifiedDate":"2021-11-07"},{"lineNumber":649,"author":{"gitId":"Chang-CH"},"content":"   will parse the applicant with the last `phone` value.","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"yunpeng1234":8,"Jeromesyl":74,"nicolej2122":10,"-":303,"Chang-CH":141,"jackgugz":113}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"   1. Run the `seedu.intern.Main` and try a few commands.","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":54,"Chang-CH":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"   e.g. `seedu.intern.commons.StringUtilTest`","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"   e.g. `seedu.intern.storage.StorageManagerTest`","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"   e.g. `seedu.intern.logic.LogicManagerTest`","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"-":33,"Chang-CH":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Jeromesyl"},"content":"![App Logo](images/intern_watcher.png)","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Jeromesyl"},"content":"Intern Watcher (IW) is a **desktop app for Human Resource Managers to manage internship applicants, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, IW can get your applicant management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"You can use Intern Watcher to add, edit and delete the internship applicants. Intern Watcher also allows you to track applicants\u0027 details such as grades and skills, as well as filter applicants by their details.","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"This user guide covers a quick walk-through on how to use this application, as well as the full descriptions of the features available.","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"1. Ensure you have Java `11` or above installed in your Computer. You can download it [here](https://www.oracle.com/java/technologies/downloads/#java11).","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"Jeromesyl"},"content":"2. Download the latest `internwatcher.jar` from [here](https://github.com/AY2122S1-CS2103T-F12-2/tp/releases).","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Jeromesyl"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Intern Watcher.","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"   \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Jeromesyl"},"content":"5. Type any command in the command box and press the \"Enter\" key to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"6. Some example commands you can try:","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Jeromesyl"},"content":"   * `list` : Lists all applicants.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"   * `add n/John p/123 e/a@a.com g/4.50 i/NTU c/Computer Science y/06/2025 j/Software Engineer a/INTERVIEWED` : Adds an applicant named `John` with the above details to Intern Watcher.","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"Jeromesyl"},"content":"   * `find john` : Lists all applicants whose name contains john.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"Jeromesyl"},"content":"   * `filter g/4.50 c/Computer Science` : Lists all applicants who have a grade greater or equal to 4.50 and who are studying the Computer Science course.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Jeromesyl"},"content":"   * `delete 3` : Deletes the 3rd applicant shown in the current list.","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Jeromesyl"},"content":"   * `view 3 T` : Displays the skills of the 3rd applicant shown in the current list.","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"Jeromesyl"},"content":"   * `undo` : Undo the last command that you entered.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Jeromesyl"},"content":"   * `redo` : Reverse the last undo command.","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Jeromesyl"},"content":"   * `clear` : Deletes all applicants from the application.","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"7. To see more detailed information about each command, refer to [Features](#features).","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"Jeromesyl"},"content":"8. To see restrictions and specifications of each field, refer to [Specification of Fields.](#specification-of-fields).","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"**:information_source: Notes about the command formats:**\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"Jeromesyl"},"content":"* Words in `UPPER_CASE` are the field parameters to be supplied by you.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Jeromesyl"},"content":"  This excludes special tags for **Edit**, **View**, **Delete** commands. \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"Jeromesyl"},"content":"  * e.g. in `add n/NAME`, `NAME` is a field parameter to be replaced. You can enter `add n/John Doe`.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Jeromesyl"},"content":"  * e.g. in `delete ALL`, `ALL` is to be typed the same in full capital letters.","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"Jeromesyl"},"content":"* Fields in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"  * e.g in `n/NAME [s/SKILL]`, the `SKILL` parameter is optional. You can enter `n/John Doe s/Python` or `n/John Doe`.","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"Jeromesyl"},"content":"* Fields with `…+` notation behind them can be specified zero or more times.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Jeromesyl"},"content":"  * e.g. `[s/SKILL]…+` can be specified as ` ` (i.e. 0 times), `s/Java`, `s/Python s/C` etc.","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"Jeromesyl"},"content":"* Fields can be specified in any order.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Jeromesyl"},"content":"  * e.g. if the command format specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"* If a command expects only one instance of a field parameter, but the parameter has been specified multiple times, only the last occurrence of the parameter will be taken regardless if the previous specified parameter is valid or not.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"  * e.g. if you specify `p/abcdefg p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":81,"author":{"gitId":"Jeromesyl"},"content":"* Extra parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"Jeromesyl"},"content":"  * e.g. if the command is specified as `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"Jeromesyl"},"content":"Displays a message explaining how to access the help page.","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"### Adding an applicant: `add`","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"Jeromesyl"},"content":"Adds a new applicant to Intern Watcher.","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"yunpeng1234"},"content":"Format: `add n/NAME p/PHONE e/EMAIL g/GRADE i/INSTITUTION c/COURSE y/GRADUATION_YEAR_MONTH j/JOB [a/APPLICATION_STATUS] [s/SKILL]…+`","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"yunpeng1234"},"content":"* Entries with same `NAME` (case-insensitive) will not be allowed. For example, `John Doe` and `john doe` are considered the same applicant and the second entry will not be allowed.","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"jackgugz"},"content":"* `APPLICATION_STATUS` and `SKILL` are case-sensitive.","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"nicolej2122"},"content":"An applicant can have any number of skills (including 0)","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"nicolej2122"},"content":"* `add n/Jonathan Tan p/86565432 e/jonathan_tan@example.com g/4.50 i/NTU c/Computer Science y/06/2025 j/Software Engineer a/SCHEDULED s/Python s/Java s/C` adds","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"Chang-CH"},"content":" an applicant with the specified information.","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"Chang-CH"},"content":"  ![Add result](images/AddResult.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"Chang-CH"},"content":"### Listing all applicants : `list`","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"nicolej2122"},"content":"Displays the list of all applicants in Intern Watcher.","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"nicolej2122"},"content":"### Viewing an applicant\u0027s details : `view`","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"nicolej2122"},"content":"Displays the specified applicant\u0027s academic records, or skills.","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"yunpeng1234"},"content":"Format: `view INDEX [T]`","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"nicolej2122"},"content":"* If only `INDEX` is specified, it will show the specified applicant\u0027s academic records by default.","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"Jeromesyl"},"content":"  * `INDEX` refers to the index number of the applicant, shown in the applicant list.","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"Chang-CH"},"content":"  * `INDEX` **must be a positive integer**, e.g. 1, 2, 3, …","lastModifiedDate":"2021-11-06"},{"lineNumber":129,"author":{"gitId":"Chang-CH"},"content":"  * `INDEX` of 0 or less, or indexes greater than `2147483647` will be treated as invalid commands.","lastModifiedDate":"2021-11-06"},{"lineNumber":130,"author":{"gitId":"Jeromesyl"},"content":"* Specifying `T` together with `INDEX` switches between the academic records tab and the skills tab.","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"yunpeng1234"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"Jeromesyl"},"content":"* `list` followed by `view 1`. Shows the 1st applicant\u0027s academic records.","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"yunpeng1234"},"content":"|Command|Effect|","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"yunpeng1234"},"content":"|---|---|","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"Jeromesyl"},"content":"|\u003cimg src\u003d\"images/ViewOneBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/ViewOneAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"Jeromesyl"},"content":"* `view 2 T` Shows the 2nd applicant\u0027s skills, if academic records was previously selected.","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"yunpeng1234"},"content":"|Command|Effect|","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"yunpeng1234"},"content":"|---|---|","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"Jeromesyl"},"content":"|\u003cimg src\u003d\"images/ViewTwoTBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/ViewTwoTAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"Chang-CH"},"content":"### Filtering by Fields : `filter`","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"Jeromesyl"},"content":"Displays applicants in Intern Watcher that match one or more given fields.","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"Jeromesyl"},"content":"Format: `filter [g/GRADE] [i/INSTITUTION]…+ [c/COURSE]…+ [y/GRADUATION_YEAR_MONTH] [j/JOB]…+ [a/APPLICATION_STATUS]…+ [s/SKILL]…+`","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"yunpeng1234"},"content":"* `filter` will show applicants that match all fields specified.","lastModifiedDate":"2021-11-06"},{"lineNumber":152,"author":{"gitId":"Jeromesyl"},"content":"* `[i/INSTITUTION]…+`, `[c/COURSE]…+` and `[j/JOB]…+` are case-insensitive and `[a/APPLICATION_STATUS]…+` and `[s/SKILL]…+` are case-sensitive.","lastModifiedDate":"2021-11-07"},{"lineNumber":153,"author":{"gitId":"Chang-CH"},"content":"* If `[g/GRADE]` is specified, it will show all applicants with grades higher or equal to the `g/Grade` specified.","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"Chang-CH"},"content":"* Likewise, if `[y/GRADUATION_YEAR_MONTH]` is specified, it will show all applicants with graduation dates that is strictly before the `GRADUATION_YEAR_MONTH` specified.","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"jackgugz"},"content":"* If `[s/SKILL]…+` is specified, only applicants with all specified `[s/SKILL]…+` will be shown.","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"yunpeng1234"},"content":"* For either of `[c/COURSE]…+` or `[j/JOB]…+`, if more than 1 instance of a single field, such as `[j/JOB]…+` is specified, applicants with their job field **containing** at least one of the `[j/JOB]…+` specified will be shown.","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"Jeromesyl"},"content":"* For either of `[i/INSTITUTION]…+` or `[a/APPLICATION_STATUS]…+`, if more than 1 instance of a single field, such as `[i/INSTITUTION]…+` is specified, applicants with their field **matching** at least one of the `[i/INSTITUTION]…+` specified will be shown.","lastModifiedDate":"2021-11-07"},{"lineNumber":158,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":159,"author":{"gitId":"Chang-CH"},"content":"Examples:","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"jackgugz"},"content":"* `filter s/Python s/Java` will show only applicants with skills in both JAVA and PYTHON.","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"nicolej2122"},"content":"|\u003cimg src\u003d\"images/FilterBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/FilterAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":166,"author":{"gitId":"jackgugz"},"content":"* `filter s/HTML g/4.50 i/NTU` will show applicants whose grade is not less than 4.50, knows HTML and is from NTU.","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-10-31"},{"lineNumber":169,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-10-31"},{"lineNumber":170,"author":{"gitId":"nicolej2122"},"content":"|\u003cimg src\u003d\"images/FilterSpecificBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/FilterSpecificAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"Chang-CH"},"content":"### Editing applicants : `edit`","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"Jeromesyl"},"content":"Edits the information of an existing applicant, or the application status of all currently displayed applicants in the applicant list.","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"Chang-CH"},"content":"#### Editing a specific applicant:","lastModifiedDate":"2021-11-07"},{"lineNumber":177,"author":{"gitId":"Chang-CH"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [g/GRADE] [i/INSTITUTION] [c/COURSE] [y/GRADUATION_YEAR_MONTH] [j/JOB] [a/APPLICATION_STATUS] [s/SKILL]…`","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"Jeromesyl"},"content":"* If only `INDEX` is specified, the applicant at the specified `INDEX` will be edited.","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"Chang-CH"},"content":"    * `INDEX` refers to the index number shown in the displayed applicant list. ","lastModifiedDate":"2021-11-06"},{"lineNumber":180,"author":{"gitId":"Chang-CH"},"content":"    * `INDEX` **must be a positive integer** e.g. 1, 2, 3, …","lastModifiedDate":"2021-11-06"},{"lineNumber":181,"author":{"gitId":"Chang-CH"},"content":"    * `INDEX` of 0 or less, or indexes greater than `2147483647` will be treated as invalid commands.","lastModifiedDate":"2021-11-06"},{"lineNumber":182,"author":{"gitId":"Jeromesyl"},"content":"* When editing skills, all existing skills of the applicant will be replaced i.e adding of skills is not cumulative.","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"yunpeng1234"},"content":"* You can remove all the applicant’s skills by typing `s/` without","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"Chang-CH"},"content":"  specifying any skills after it.","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"Chang-CH"},"content":"#### Editing all currently displayed applicants:","lastModifiedDate":"2021-11-07"},{"lineNumber":187,"author":{"gitId":"Chang-CH"},"content":"Format: `edit ALL a/APPLICATION_STATUS`","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"Jeromesyl"},"content":"* If `ALL` is specified, all applicants currently displayed in the applicant list will be edited.","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"Chang-CH"},"content":"* Currently only the `APPLICATION_STATUS` of applicants can be edited. It is unlikely that the other fields would need multi editing.","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"Jeromesyl"},"content":"* The `APPLICATION_STATUS` can only be one of these 7 statuses: `ACCEPTED`, `REJECTED`, `INTERVIEWED`, `APPLIED`, `SCHEDULED`, `RECEIVED` and `OFFERED`.","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"yunpeng1234"},"content":"*  `edit 1 p/89274567 e/alex_yeoh@example.com` edits the phone number and email address of the 1st applicant to be `89274567` and `alex_yeoh@example.com` respectively.","lastModifiedDate":"2021-11-06"},{"lineNumber":195,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"Chang-CH"},"content":"|\u003cimg src\u003d\"images/EditIndexBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/EditIndexAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"Jeromesyl"},"content":"*  `edit 1 s/` clears all existing skills of the 1st applicant.","lastModifiedDate":"2021-11-07"},{"lineNumber":201,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"Chang-CH"},"content":"|\u003cimg src\u003d\"images/EditSkillBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/EditSkillAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"Jeromesyl"},"content":"*  `filter a/APPLIED` followed by `edit ALL a/INTERVIEWED` updates all applicants with `APPLIED` application status to have the `INTERVIEWED` application status.","lastModifiedDate":"2021-11-07"},{"lineNumber":207,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"Chang-CH"},"content":"|\u003cimg src\u003d\"images/EditAllStatusBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/EditAllStatusAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"Chang-CH"},"content":"### Deleting an applicant : `delete`","lastModifiedDate":"2021-10-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"Jeromesyl"},"content":"Deletes the specified applicant, or all applicants currently displayed in the applicant list.","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"Chang-CH"},"content":"#### Deleting a specific applicant:","lastModifiedDate":"2021-11-07"},{"lineNumber":217,"author":{"gitId":"Chang-CH"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-11-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"Jeromesyl"},"content":"* If `INDEX` is specified, the applicant at the specified `INDEX` will be deleted.","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"Chang-CH"},"content":"    * `INDEX` refers to the index number shown in the displayed applicant list. ","lastModifiedDate":"2021-11-06"},{"lineNumber":221,"author":{"gitId":"Chang-CH"},"content":"    * `INDEX` **must be a positive integer** e.g. 1, 2, 3, …","lastModifiedDate":"2021-11-06"},{"lineNumber":222,"author":{"gitId":"Chang-CH"},"content":"    * `INDEX` of 0 or less, or indexes greater than `2147483647` will be treated as invalid commands.","lastModifiedDate":"2021-11-06"},{"lineNumber":223,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":224,"author":{"gitId":"Chang-CH"},"content":"#### Deleting all currently displayed applicants:","lastModifiedDate":"2021-11-07"},{"lineNumber":225,"author":{"gitId":"Chang-CH"},"content":"Format: `delete ALL`","lastModifiedDate":"2021-11-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"Jeromesyl"},"content":"* If `ALL` is specified, all applicants currently displayed in the applicant list will be deleted.","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"Jeromesyl"},"content":"* `list` followed by `delete 2` deletes the 2nd applicant in Intern Watcher.","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"yunpeng1234"},"content":"|Command|Effect|","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"yunpeng1234"},"content":"|---|---|","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"nicolej2122"},"content":"|\u003cimg src\u003d\"images/DeleteTwoBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/DeleteTwoAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"Jeromesyl"},"content":"* `list` followed by `delete ALL` deletes all applicants in Intern Watcher. Effect is similar to `clear` when used in conjunction with `list`.","lastModifiedDate":"2021-11-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"yunpeng1234"},"content":"|Command|Effect|","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"yunpeng1234"},"content":"|---|---|","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"nicolej2122"},"content":"|\u003cimg src\u003d\"images/DeleteALLBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/DeleteALLAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"nicolej2122"},"content":"* `find David` followed by `delete 1` deletes the 1st applicant in the results of the `find` command.","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"yunpeng1234"},"content":"|Command|Effect|","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"yunpeng1234"},"content":"|---|---|","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"nicolej2122"},"content":"|\u003cimg src\u003d\"images/DeleteFindDavidBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/DeleteFindDavidAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":248,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":249,"author":{"gitId":"Chang-CH"},"content":"### Locating applicants by name: `find`","lastModifiedDate":"2021-10-31"},{"lineNumber":250,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":251,"author":{"gitId":"Jeromesyl"},"content":"Displays applicants whose names contain at least one of the given keywords.","lastModifiedDate":"2021-11-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"Jeromesyl"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`.","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"Jeromesyl"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"Jeromesyl"},"content":"* Only the NAME field of the applicants are searched.","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"Jeromesyl"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`.","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"Jeromesyl"},"content":"* Applicants matching at least one keyword will be returned.","lastModifiedDate":"2021-11-04"},{"lineNumber":260,"author":{"gitId":"Jeromesyl"},"content":"  * e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2021-10-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2021-10-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"Jeromesyl"},"content":"Clears all applicant entries from Intern Watcher.","lastModifiedDate":"2021-10-25"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"Jeromesyl"},"content":"### Undoing an action : `undo`","lastModifiedDate":"2021-10-25"},{"lineNumber":274,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"Jeromesyl"},"content":"Undo a previous command action.","lastModifiedDate":"2021-11-04"},{"lineNumber":276,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":277,"author":{"gitId":"Jeromesyl"},"content":"Format: `undo`","lastModifiedDate":"2021-10-25"},{"lineNumber":278,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":279,"author":{"gitId":"Jeromesyl"},"content":"* Only undoable command actions can be undone.","lastModifiedDate":"2021-11-04"},{"lineNumber":280,"author":{"gitId":"Jeromesyl"},"content":"    * Undoable command actions include: `add`, `edit`, `delete`, `clear`, `redo`.","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"Jeromesyl"},"content":"* Consecutive `undo` commands are available until the applicant list returns to its **initial state at launch** of the application.","lastModifiedDate":"2021-11-04"},{"lineNumber":282,"author":{"gitId":"Jeromesyl"},"content":"* If the current state of the applicant list is the initial state, the `undo` command will not be available.","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"Chang-CH"},"content":"* The applicant detail panel state will not be preserved. For instance, after `view 1` and `delete 1`, `undo` will restore the deleted applicant to the applicant list, but the applicant detail panel will not be reverted to show the details of the deleted applicant.","lastModifiedDate":"2021-11-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":286,"author":{"gitId":"Jeromesyl"},"content":"* `undo` (after `delete 2`). The applicant that was removed will be restored in Intern Watcher.","lastModifiedDate":"2021-10-25"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"yunpeng1234"},"content":"|Command|Effect|","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"yunpeng1234"},"content":"|---|---|","lastModifiedDate":"2021-10-28"},{"lineNumber":290,"author":{"gitId":"yunpeng1234"},"content":"|\u003cimg src\u003d\"images/UndoBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/UndoAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":292,"author":{"gitId":"Jeromesyl"},"content":"* `undo` (after initial startup of Intern Watcher). As there are no previous states to restore, no undo action will be performed.","lastModifiedDate":"2021-10-25"},{"lineNumber":293,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":294,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":295,"author":{"gitId":"Jeromesyl"},"content":"### Redoing an action: `redo`","lastModifiedDate":"2021-10-25"},{"lineNumber":296,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":297,"author":{"gitId":"Jeromesyl"},"content":"Reverses a previous undo command action.","lastModifiedDate":"2021-11-04"},{"lineNumber":298,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":299,"author":{"gitId":"Jeromesyl"},"content":"Format: `redo`","lastModifiedDate":"2021-10-25"},{"lineNumber":300,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":301,"author":{"gitId":"Jeromesyl"},"content":"* `redo` is the reverse of `undo`. Only undoable command actions can be redone.","lastModifiedDate":"2021-11-04"},{"lineNumber":302,"author":{"gitId":"Jeromesyl"},"content":"  * Undoable actions include: `add`, `edit`, `delete`, `clear`, `redo`.","lastModifiedDate":"2021-10-25"},{"lineNumber":303,"author":{"gitId":"Jeromesyl"},"content":"* Consecutive `redo` commands are available until the applicant list reaches the **newest state**.","lastModifiedDate":"2021-11-04"},{"lineNumber":304,"author":{"gitId":"Jeromesyl"},"content":"  *  The newest state is the most recent change in history.","lastModifiedDate":"2021-11-04"},{"lineNumber":305,"author":{"gitId":"Jeromesyl"},"content":"* If the current state of the applicant list is the newest state, the redo command will not be available.","lastModifiedDate":"2021-11-04"},{"lineNumber":306,"author":{"gitId":"Jeromesyl"},"content":"* If a new undoable action is performed when the applicant list is **not** in its newest state, the current state becomes the newest state.","lastModifiedDate":"2021-11-04"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":308,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":309,"author":{"gitId":"Jeromesyl"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":310,"author":{"gitId":"Jeromesyl"},"content":"* `clear` followed by `undo` followed by `redo`. The clear command will be redone.","lastModifiedDate":"2021-10-25"},{"lineNumber":311,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"yunpeng1234"},"content":"|Command|Effect|","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"yunpeng1234"},"content":"|---|---|","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"yunpeng1234"},"content":"|\u003cimg src\u003d\"images/RedoClearBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/RedoClearAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"nicolej2122"},"content":"* `delete 2` followed by `redo`. As the state after `delete` becomes the newest state, there are no undoable actions to be redone.","lastModifiedDate":"2021-11-04"},{"lineNumber":317,"author":{"gitId":"Jeromesyl"},"content":"  ![ No action to redo](images/NoRedo.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"Jeromesyl"},"content":"Intern Watcher data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-25"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":331,"author":{"gitId":"Chang-CH"},"content":"Intern Watcher saves data as a JSON file `[JAR file location]/data/internwatcher.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-30"},{"lineNumber":332,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":334,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":335,"author":{"gitId":"Jeromesyl"},"content":"If your changes to the data file makes its format invalid, Intern Watcher will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-10-25"},{"lineNumber":336,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":338,"author":{"gitId":"yunpeng1234"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":339,"author":{"gitId":"yunpeng1234"},"content":"### Specification of Fields","lastModifiedDate":"2021-10-28"},{"lineNumber":340,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":341,"author":{"gitId":"Jeromesyl"},"content":"`Name` : The applicant\u0027s name. Should only include alphanumeric characters and spaces only. Should not be blank.","lastModifiedDate":"2021-11-01"},{"lineNumber":342,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":343,"author":{"gitId":"Jeromesyl"},"content":"`Phone` : The applicant\u0027s phone number. Should only contain digits from 0 to 9, with a minimum length of 3 digits.","lastModifiedDate":"2021-11-01"},{"lineNumber":344,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":345,"author":{"gitId":"Jeromesyl"},"content":"`Email` : The applicant\u0027s email address. Should be in the form of *Local-part*@**Domain**. *Local-part* should contain only alphanumeric characters with only these special characters `+_.-`.","lastModifiedDate":"2021-11-01"},{"lineNumber":346,"author":{"gitId":"Jeromesyl"},"content":"**Domain** can be separated into ***label*** with `.` if necessary. Each ***label*** should only contain alphanumeric characters and separated and is separated by `-` if necessary. Domain is at least 2 characters long and needs to start and end with alphanumeric characters.","lastModifiedDate":"2021-11-07"},{"lineNumber":347,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":348,"author":{"gitId":"Jeromesyl"},"content":"`Grade` : The applicant\u0027s Grade Point Average (GPA). Should be a number in 2 decimal places from 0.00 - 5.00.","lastModifiedDate":"2021-11-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":350,"author":{"gitId":"Jeromesyl"},"content":"`Institution` : The applicant\u0027s school. Should only include alphanumeric characters and space only. Should not be blank.","lastModifiedDate":"2021-11-01"},{"lineNumber":351,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":352,"author":{"gitId":"Jeromesyl"},"content":"`Application_Status` : The applicant\u0027s application status. Case sensitive. Should only be one of these 7 statuses, `ACCEPTED` , `REJECTED`, `INTERVIEWED`, `APPLIED` , `SCHEDULED`, `RECEIVED` and `OFFERED`.","lastModifiedDate":"2021-11-07"},{"lineNumber":353,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":354,"author":{"gitId":"Jeromesyl"},"content":"`Course` : The applicant\u0027s course of study in their school. Should only include alphabet characters and space only. Should not be blank.","lastModifiedDate":"2021-11-01"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"Jeromesyl"},"content":"`Graduation_Year_Month` : The applicant\u0027s estimated date of graduation from their school. Should be of format MM/yyyy and be after the date 01/2020.","lastModifiedDate":"2021-11-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"Jeromesyl"},"content":"`Job` : The job/position that the applicant applied for. Should only include alphabet characters and space only. Should not be blank.","lastModifiedDate":"2021-11-01"},{"lineNumber":359,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":360,"author":{"gitId":"Jeromesyl"},"content":"`Skill`: The applicant\u0027s skillset. Should only include alphanumeric characters, spaces and `+#` symbols only.","lastModifiedDate":"2021-11-01"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":362,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"Jeromesyl"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous InternWatcher home folder.","lastModifiedDate":"2021-10-25"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"Jeromesyl"},"content":"**Q**: The command result shows `Could not save data to file: data\\internwatcher.json. File access denied, ensure save file is not set to read only.`, how do I fix this?\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":370,"author":{"gitId":"Chang-CH"},"content":"**A**: The `internwatcher.json` save file in your `\\data` directory has been set to read only. Open the `data` file, right click on `internwatcher.json`, click properties, and make sure read-only is unchecked. Apply changes if necessary.","lastModifiedDate":"2021-11-07"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":372,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"yunpeng1234"},"content":"**Add** | `add n/NAME p/PHONE e/EMAIL g/GRADE i/INSTITUTION c/COURSE y/GRADUATION_YEAR_MONTH j/JOB [a/APPLICATION_STATUS] [s/SKILL]…+` \u003cbr\u003e e.g. `add n/John p/999 e/a@a.com g/4.00 i/NTU c/CS y/06/2025 j/Software Engineer a/INTERVIEWED s/Python`","lastModifiedDate":"2021-11-06"},{"lineNumber":380,"author":{"gitId":"Jeromesyl"},"content":"**List** | `list`","lastModifiedDate":"2021-11-04"},{"lineNumber":381,"author":{"gitId":"Jeromesyl"},"content":"**View** | `view INDEX [T]` \u003cbr\u003e e.g. `view 2 T`","lastModifiedDate":"2021-11-04"},{"lineNumber":382,"author":{"gitId":"Jeromesyl"},"content":"**Filter** | `filter [g/GRADE] [i/INSTITUTION]…+ [c/COURSE]…+ [y/GRADUATION_YEAR_MONTH] [j/JOB]..+ [a/APPLICATION_STATUS]..+ [s/SKILL]…+` \u003cbr\u003e e.g. `filter s/JAVA y/06/2022 i/NUS a/REJECTED`","lastModifiedDate":"2021-11-07"},{"lineNumber":383,"author":{"gitId":"yunpeng1234"},"content":"**Edit** | `edit ALL a/APPLICATION_STATUS` , \u003cbr\u003e`edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [g/GRADE] [i/INSTITUTION] [c/COURSE] [y/GRADUATION_YEAR_MONTH] [j/JOB] [a/APPLICATION_STATUS] [s/SKILL]…`\u003cbr\u003ee.g. `edit ALL a/REJECTED` , \u003cbr\u003e `edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-11-06"},{"lineNumber":384,"author":{"gitId":"yunpeng1234"},"content":"**Delete** | `delete INDEX`, \u003cbr\u003e `delete ALL`\u003cbr\u003e e.g. `delete 3`, \u003cbr\u003e `delete ALL`","lastModifiedDate":"2021-11-06"},{"lineNumber":385,"author":{"gitId":"Jeromesyl"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g. `find James Jake`","lastModifiedDate":"2021-11-04"},{"lineNumber":386,"author":{"gitId":"yunpeng1234"},"content":"**Undo** | `undo`","lastModifiedDate":"2021-10-25"},{"lineNumber":387,"author":{"gitId":"yunpeng1234"},"content":"**Redo** | `redo`","lastModifiedDate":"2021-10-25"},{"lineNumber":388,"author":{"gitId":"Jeromesyl"},"content":"**Clear** | `clear`","lastModifiedDate":"2021-11-04"},{"lineNumber":389,"author":{"gitId":"nicolej2122"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"yunpeng1234":58,"Jeromesyl":110,"nicolej2122":14,"-":134,"Chang-CH":67,"jackgugz":6}},{"path":"docs/UserGuide2101.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"layout: page","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"title: User Guide","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"![App Logo](images/intern_watcher.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"Intern Watcher (IW) is a **desktop app for Human Resource Managers to manage internship applicants, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, IW can get your applicant management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"You can use Intern Watcher to add, edit and delete the internship applicants. Intern Watcher also allows you to track applicants\u0027 details such as grades and skills, as well as filter applicants by their details.","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"This user guide covers a quick walk through how to use this application, as well as the full descriptions of the features available.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"* Table of Contents","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"{:toc}","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"## Quick start","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"1. Ensure you have Java `11` or above installed in your Computer. You can download it [here](https://www.oracle.com/java/technologies/downloads/#java11).","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"2. Download the latest `*.jar` from [here](https://github.com/AY2122S1-CS2103T-F12-2/tp/releases).","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Intern Watcher.","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"5. Type any command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"6. Here\u0027s an example usage of Intern Watcher:","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"    ","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"   * Let\u0027s start by adding a few applicants to Intern Watcher. `add n/John p/123 e/a@a.com g/4.50 i/NTU c/Computer Science y/06/2025 a/APPLIED` : Adds an applicant named `John` to Intern Watcher.","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"   * Add another applicant to the list: `add n/Jane p/999 e/b@b.com g/4.80 i/NTU c/Computer Science y/06/2025 a/APPLIED`.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"   * Say you only want to interview applicants studying computer science with a GPA greater than or equal to 4.80. ","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"   `filter g/4.80 c/Computer Science` : Lists all applicants satisfying the criteria. Namely, applicant `Jane`.","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"   * Let\u0027s give the filtered applicants the `SCHEDULED` application status to indicate our plans to interview them.","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"   `edit ALL a/SCHEDULED` : Edits all currently displayed applicants(`Jane`) to have the `SCHEDULED` application status.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"   ","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"   * Say we do not wish to keep `John` in our records, since we have no plans to interview him. `find John`: Finds all applicants ","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"   with name containing `John`.","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"   ","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"   * `delete 1`: Deletes the first applicant in our `find` results.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"   * Perhaps we wish to reconsider `John`. `undo` : Undo the last command that you entered, namely `delete`.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"   ","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"   * View the skills `John` indicated. `view 1 T` : Displays the skills of the 1st applicant.","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"   * Perhaps we decide once again that `John` is not a good fit. `redo` : Reverse the last undo command, deletes `John`.","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"   * `exit` : Saves the data we have and exits the application.","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"7. To see more detailed information about each command, refer to [Features](#features).","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"8. To see restrictions and specifications of each field, refer to [Specification of Fields.](#specification-of-fields).","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"## Features","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"**:information_source: Notes about the command formats:**\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"* Words in `UPPER_CASE` are the field parameters to be supplied by you.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"  This excludes special tags for [**edit**](#editing-applicants--edit), [**view**](#viewing-an-applicants-details--view), [**delete**](#deleting-an-applicant--delete) commands. \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"  * e.g. in `add n/NAME`, `NAME` is a field parameter to be replaced. You can enter `add n/John Doe`.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"  * e.g. in `delete ALL`, `ALL` is to be typed the same in full capital letters.","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"* Fields in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"  * e.g in `n/NAME [s/SKILL]`, the `SKILL` parameter is optional. You can enter `n/John Doe s/friend` or `n/John Doe`.","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"* Fields with `…+` notation behind them can be specified zero or more times.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"  * e.g. `[s/SKILL]…+` can be specified as ` ` (i.e. 0 times), `s/Java`, `s/Python s/C` etc.","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"* Fields can be specified in any order.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"  * e.g. if the command format specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"* If a command expects only one instance of a field parameter, but the parameter has been specified multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"  * e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"* Extra parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"  * e.g. if the command is specified as `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"Displays a message explaining how to access the help page.","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"Format: `help`","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"Chang-CH"},"content":"### Adding an applicant: `add`","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"Chang-CH"},"content":"Adds a new applicant to Intern Watcher.","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"Chang-CH"},"content":"Format: `add n/NAME p/PHONE e/EMAIL g/GRADE i/INSTITUTION c/COURSE y/GRADUATION_YEAR_MONTH j/JOB [a/APPLICATION_STATUS] [s/SKILL]…+`","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"Chang-CH"},"content":"* Entries with same `NAME` will not be allowed. For example, `John Doe` and `john doe` are considered the same person.","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"Chang-CH"},"content":"* `NAME`, `APPLICATION_STATUS` and `SKILL` are case-sensitive.","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"Chang-CH"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"Chang-CH"},"content":"An applicant can have any number of skills","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"Chang-CH"},"content":"Examples:","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"Chang-CH"},"content":"* `add n/Jonathan Tan p/86565432 e/jonathan_tan@example.com g/4.50 i/NTU c/Computer Science y/06/2025 j/Software Engineer a/SCHEDULED s/Python s/Java s/C` adds","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"Chang-CH"},"content":" an applicant with the specified information.","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"Chang-CH"},"content":"  ![Add result](images/AddResult.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"Chang-CH"},"content":"### Listing all applicants : `list`","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"Chang-CH"},"content":"Displays the list of all applicants in Intern Watcher.","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"Chang-CH"},"content":"Format: `list`","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"Chang-CH"},"content":"### Viewing an applicant\u0027s details : `view`","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"Chang-CH"},"content":"Displays the specified applicant\u0027s academic records, or skills.","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"Chang-CH"},"content":"Format: `view INDEX [T]`","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"Chang-CH"},"content":"* If only `INDEX` is specified, it will show the specified applicant\u0027s academic records by default.","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"Chang-CH"},"content":"  * `INDEX` refers to the index number of the applicant, shown in the applicant list.","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"Chang-CH"},"content":"* Specifying `T` together with `INDEX` switches between the academic records tab and the skills tab.","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"Chang-CH"},"content":"Examples:","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"Chang-CH"},"content":"* `list` followed by `view 1`. Shows the 1st applicant\u0027s academic records.","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"Chang-CH"},"content":"|\u003cimg src\u003d\"images/ViewOneBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/ViewOneAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"Chang-CH"},"content":"* `view 2 T` Shows the 2nd applicant\u0027s skills, if academic records was previously selected.","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"Chang-CH"},"content":"|\u003cimg src\u003d\"images/ViewTwoTBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/ViewTwoTAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"Chang-CH"},"content":"### Filtering by Fields : `filter`","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"Chang-CH"},"content":"Displays applicants in Intern Watcher that match one or more given fields.","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"Chang-CH"},"content":"Format: `filter [g/GRADE] [i/INSTITUTION]…+ [c/COURSE]…+ [y/GRADUATION_YEAR_MONTH] [j/JOB]…+ [a/STATUS]…+ [s/SKILL]…+`","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"Chang-CH"},"content":"* `filter` will show applicants that matches all fields specified.","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"Chang-CH"},"content":"* `[i/INSTITUTION]…+`, `[c/COURSE]…+` and `[j/JOB]…+` are case-insensitive.","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"Chang-CH"},"content":"* `[a/STATUS]…+` and `[s/SKILL]…+` are case-sensitive.","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"Chang-CH"},"content":"* If `[g/GRADE]` is specified, it will show all applicants with grades higher or equal to the `g/Grade` specified.","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"Chang-CH"},"content":"* Likewise, if `[y/GRADUATION_YEAR_MONTH]` is specified, it will show all applicants with graduation dates that is strictly before the `GRADUATION_YEAR_MONTH` specified.","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"Chang-CH"},"content":"* If `[s/SKILL]…+` is specified, only applicants with all specified `[s/SKILL]…+` will be shown.","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"Chang-CH"},"content":"* For either of `[c/COURSE]…+` or `[j/JOB]…+`, if more than 1 instance of a single field, such as `[j/JOB]…+` is specified, applicants with their field **containing** at least one of the `[j/JOB]…+` specified will be shown.","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"Chang-CH"},"content":"* For either of `[i/INSTITUTION]…+` or `[a/STATUS]…+`, if more than 1 instance of a single field, such as `[i/INSTITUTION]…+` is specified, applicants with their field **matching** at least one of the `[i/INSTITUTION]…+` specified will be shown.","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"Chang-CH"},"content":"Examples:","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"Chang-CH"},"content":"* `filter s/Python s/Java` will show only applicants with skills in both JAVA and PYTHON.","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"Chang-CH"},"content":"|\u003cimg src\u003d\"images/FilterBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/FilterAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"Chang-CH"},"content":"* `filter s/HTML g/4.50 i/NTU` will show applicants whose grade is not less than 4.50, knows HTML and is from NTU.","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"Chang-CH"},"content":"|\u003cimg src\u003d\"images/FilterSpecificBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/FilterSpecificAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"Chang-CH"},"content":"### Editing applicants : `edit`","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"Chang-CH"},"content":"Edits the information of an existing applicant, or the application status of all currently displayed applicants in the applicant list.","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"Chang-CH"},"content":"#### Edit a specific applicant:","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"Chang-CH"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [g/GRADE] [i/INSTITUTION] [c/COURSE] [y/GRADUATION_YEAR_MONTH] [j/JOB] [a/APPLICATION_STATUS] [s/SKILL]…`","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"Chang-CH"},"content":"* If only `INDEX` is specified, the applicant at the specified `INDEX` will be edited.","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"Chang-CH"},"content":"* When editing skills, all existing skills of the applicant will be replaced i.e adding of skills is not cumulative.","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"yunpeng1234"},"content":"* You can remove all the applicant’s skills by typing `s/` without","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"Chang-CH"},"content":"  specifying any skills after it.","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"Chang-CH"},"content":"#### Edit all currently displayed applicants:","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"Chang-CH"},"content":"Format: `edit ALL a/APPLICATION_STATUS`","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"Chang-CH"},"content":"* If `ALL` is specified, all applicants currently displayed in the applicant list will be edited.","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"Chang-CH"},"content":"* Designed to be used together with [filter](#filtering-by-fields--filter).","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"Chang-CH"},"content":"* Currently only the `APPLICATION_STATUS` of applicants can be edited. It is unlikely that the other fields would need multi editing.","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"Chang-CH"},"content":"Examples:","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"Chang-CH"},"content":"*  `edit 1 p/91234567 e/yeoh_alex@example.com` Edits the phone number and email address of the 1st applicant to be `91234567` and `yeoh_alex@example.com` respectively.","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"Chang-CH"},"content":"|\u003cimg src\u003d\"images/EditIndexBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/EditIndexAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":196,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":197,"author":{"gitId":"Chang-CH"},"content":"*  `edit 1 s/` Clears all existing skills of the 1st applicant.","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":199,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-11-04"},{"lineNumber":200,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"Chang-CH"},"content":"|\u003cimg src\u003d\"images/EditSkillBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/EditSkillAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":202,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"Chang-CH"},"content":"*  `filter a/INTERVIEWED` followed by `edit ALL a/ACCEPTED` Updates all applicants with `INTERVIEWED` application status to have the `ACCEPTED` APPLICATION_STATUS.","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"Chang-CH"},"content":"|\u003cimg src\u003d\"images/EditAllStatusBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/EditAllStatusAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"Chang-CH"},"content":"### Deleting an applicant : `delete`","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"Chang-CH"},"content":"Deletes the specified applicant, or all applicants currently displayed in the applicant list.","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"Chang-CH"},"content":"#### Delete a specific applicant:","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"Chang-CH"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"Chang-CH"},"content":"* If `INDEX` is specified, the applicant at the specified `INDEX` will be deleted.","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"Chang-CH"},"content":"#### Delete all currently displayed applicants:","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"Chang-CH"},"content":"Format: `delete ALL`","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"Chang-CH"},"content":"* Designed to be used together with [filter](#filtering-by-fields--filter).","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"Chang-CH"},"content":"* If `ALL` is specified, all applicants currently displayed in the applicant list will be deleted.","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"Chang-CH"},"content":"Examples:","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"Chang-CH"},"content":"* `list` followed by `delete 2` deletes the 2nd applicant in Intern Watcher.","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"Chang-CH"},"content":"|\u003cimg src\u003d\"images/DeleteTwoBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/DeleteTwoAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"Chang-CH"},"content":"* `list` followed by `delete ALL` deletes the all applicants in Intern Watcher. Effect is similar to `clear` when used in conjunction with `list`.","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-11-04"},{"lineNumber":234,"author":{"gitId":"Chang-CH"},"content":"|\u003cimg src\u003d\"images/DeleteALLBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/DeleteALLAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"Chang-CH"},"content":"* `find David` followed by `delete 1` deletes the 1st applicant in the results of the `find` command.","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"Chang-CH"},"content":"|\u003cimg src\u003d\"images/DeleteFindDavidBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/DeleteFindDavidAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"Chang-CH"},"content":"### Locating applicants by name: `find`","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"Chang-CH"},"content":"Displays applicants whose names contain at least one of the given keywords.","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":246,"author":{"gitId":"Chang-CH"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-11-04"},{"lineNumber":247,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":248,"author":{"gitId":"Chang-CH"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`.","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"Chang-CH"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"Chang-CH"},"content":"* Only the NAME field of the applicants are searched.","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"Chang-CH"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`.","lastModifiedDate":"2021-11-04"},{"lineNumber":252,"author":{"gitId":"Chang-CH"},"content":"* Applicants matching at least one keyword will be returned.","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"Chang-CH"},"content":"  * e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":255,"author":{"gitId":"Chang-CH"},"content":"Examples:","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"Chang-CH"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"Chang-CH"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"Chang-CH"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":260,"author":{"gitId":"Chang-CH"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":262,"author":{"gitId":"Chang-CH"},"content":"Clears all applicant entries from Intern Watcher.","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":264,"author":{"gitId":"Chang-CH"},"content":"Format: `clear`","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":266,"author":{"gitId":"Chang-CH"},"content":"### Undoing an action : `undo`","lastModifiedDate":"2021-11-04"},{"lineNumber":267,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":268,"author":{"gitId":"Chang-CH"},"content":"Undo a previous command action.","lastModifiedDate":"2021-11-04"},{"lineNumber":269,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":270,"author":{"gitId":"Chang-CH"},"content":"Format: `undo`","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":272,"author":{"gitId":"Chang-CH"},"content":"* Only undoable command actions can be undone.","lastModifiedDate":"2021-11-04"},{"lineNumber":273,"author":{"gitId":"Chang-CH"},"content":"    * Undoable command actions include: `add`, `edit`, `delete`, `clear`, `redo`.","lastModifiedDate":"2021-11-04"},{"lineNumber":274,"author":{"gitId":"Chang-CH"},"content":"* Consecutive `undo` commands are available until the applicant list returns to its **initial state at launch** of the application.","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"Chang-CH"},"content":"* If the current state of the applicant list is the initial state, the `undo` command will not be available.","lastModifiedDate":"2021-11-04"},{"lineNumber":276,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":278,"author":{"gitId":"Chang-CH"},"content":"Examples:","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"Chang-CH"},"content":"* `undo` (after `delete 2`). The applicant that was removed will be restored in Intern Watcher.","lastModifiedDate":"2021-11-04"},{"lineNumber":280,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-11-04"},{"lineNumber":282,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"Chang-CH"},"content":"|\u003cimg src\u003d\"images/UndoBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/UndoAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"Chang-CH"},"content":"* `undo` (after initial startup of Intern Watcher). As there are no previous states to restore, no undo action will be performed.","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":287,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":288,"author":{"gitId":"Chang-CH"},"content":"### Redoing an action: `redo`","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"Chang-CH"},"content":"Reverses a previous undo command action.","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":292,"author":{"gitId":"Chang-CH"},"content":"Format: `redo`","lastModifiedDate":"2021-11-04"},{"lineNumber":293,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"Chang-CH"},"content":"* `redo` is the reverse of `undo`. Only undoable command actions can be redone.","lastModifiedDate":"2021-11-04"},{"lineNumber":295,"author":{"gitId":"Chang-CH"},"content":"  * Undoable actions include: `add`, `edit`, `delete`, `clear`, `redo`.","lastModifiedDate":"2021-11-04"},{"lineNumber":296,"author":{"gitId":"Chang-CH"},"content":"* Consecutive `redo` commands are available until the applicant list reaches the **newest state**.","lastModifiedDate":"2021-11-04"},{"lineNumber":297,"author":{"gitId":"Chang-CH"},"content":"  *  The newest state is the most recent change in history.","lastModifiedDate":"2021-11-04"},{"lineNumber":298,"author":{"gitId":"Chang-CH"},"content":"* If the current state of the applicant list is the newest state, the redo command will not be available.","lastModifiedDate":"2021-11-04"},{"lineNumber":299,"author":{"gitId":"Chang-CH"},"content":"* If a new undoable action is performed when the applicant list is **not** in its newest state, the current state becomes the newest state.","lastModifiedDate":"2021-11-04"},{"lineNumber":300,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":301,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":302,"author":{"gitId":"Chang-CH"},"content":"Examples:","lastModifiedDate":"2021-11-04"},{"lineNumber":303,"author":{"gitId":"Chang-CH"},"content":"* `clear` followed by `undo` followed by `redo`. The clear command will be redone.","lastModifiedDate":"2021-11-04"},{"lineNumber":304,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":305,"author":{"gitId":"Chang-CH"},"content":"|Command|Effect|","lastModifiedDate":"2021-11-04"},{"lineNumber":306,"author":{"gitId":"Chang-CH"},"content":"|---|---|","lastModifiedDate":"2021-11-04"},{"lineNumber":307,"author":{"gitId":"Chang-CH"},"content":"|\u003cimg src\u003d\"images/RedoClearBefore.png\" alt\u003d\"drawing\" /\u003e|\u003cimg src\u003d\"images/RedoClearAfter.png\" alt\u003d\"drawing\" /\u003e|","lastModifiedDate":"2021-11-04"},{"lineNumber":308,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":309,"author":{"gitId":"Chang-CH"},"content":"* `redo` followed by `delete 2`. As the state after `delete` becomes the newest state, there are no undoable actions to be redone.","lastModifiedDate":"2021-11-04"},{"lineNumber":310,"author":{"gitId":"Chang-CH"},"content":"  ![ No action to redo](images/NoRedo.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":311,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":312,"author":{"gitId":"Chang-CH"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-11-04"},{"lineNumber":313,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":314,"author":{"gitId":"Chang-CH"},"content":"Exits the program.","lastModifiedDate":"2021-11-04"},{"lineNumber":315,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":316,"author":{"gitId":"Chang-CH"},"content":"Format: `exit`","lastModifiedDate":"2021-11-04"},{"lineNumber":317,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":318,"author":{"gitId":"Chang-CH"},"content":"### Saving the data","lastModifiedDate":"2021-11-04"},{"lineNumber":319,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":320,"author":{"gitId":"Chang-CH"},"content":"Intern Watcher data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-11-04"},{"lineNumber":321,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":322,"author":{"gitId":"Chang-CH"},"content":"### Editing the data file","lastModifiedDate":"2021-11-04"},{"lineNumber":323,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":324,"author":{"gitId":"Chang-CH"},"content":"Intern Watcher saves data as a JSON file `[JAR file location]/data/internwatcher.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-11-04"},{"lineNumber":325,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":326,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":327,"author":{"gitId":"Chang-CH"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-11-04"},{"lineNumber":328,"author":{"gitId":"Chang-CH"},"content":"If your changes to the data file makes its format invalid, Intern Watcher will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-11-04"},{"lineNumber":329,"author":{"gitId":"Chang-CH"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":330,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":331,"author":{"gitId":"Chang-CH"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-04"},{"lineNumber":332,"author":{"gitId":"Chang-CH"},"content":"### Specification of Fields","lastModifiedDate":"2021-11-04"},{"lineNumber":333,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":334,"author":{"gitId":"Chang-CH"},"content":"`Name` : The applicant\u0027s name. Should only include alphanumeric characters and spaces only. Should not be blank.","lastModifiedDate":"2021-11-04"},{"lineNumber":335,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":336,"author":{"gitId":"Chang-CH"},"content":"`Phone` : The applicant\u0027s phone number. Should only contain digits from 0 to 9, with a minimum length of 3 digits.","lastModifiedDate":"2021-11-04"},{"lineNumber":337,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":338,"author":{"gitId":"Chang-CH"},"content":"`Email` : The applicant\u0027s email address. Should be in the form of *Local-part*@**Domain**. *Local-part* should contain only alphanumeric characters with only these special characters `+_.-`.","lastModifiedDate":"2021-11-04"},{"lineNumber":339,"author":{"gitId":"Chang-CH"},"content":"**Domain** can be separated into ***label*** with `.` if necessary. Each ***label*** should only contain alphanumeric characters and separated and is separated by `-` if necessary. domain is at least 2 characters long and needs to start and end with alphanumeric characters.","lastModifiedDate":"2021-11-04"},{"lineNumber":340,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":341,"author":{"gitId":"Chang-CH"},"content":"`Grade` : The applicant\u0027s Grade Point Average (GPA). Should be a number in 2 decimal places from 0.00 - 5.00.","lastModifiedDate":"2021-11-04"},{"lineNumber":342,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":343,"author":{"gitId":"Chang-CH"},"content":"`Institution` : The applicant\u0027s school. Should only include alphanumeric characters and space only. Should not be blank.","lastModifiedDate":"2021-11-04"},{"lineNumber":344,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":345,"author":{"gitId":"Chang-CH"},"content":"`Status` : The applicant\u0027s application status. Case sensitive. Should only be one of these 7 statuses, `ACCEPTED` , `REJECTED`, `INTERVIEWED`, `APPLIED` , `SCHEDULED`, `RECEIVED` and `OFFERED`.","lastModifiedDate":"2021-11-04"},{"lineNumber":346,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":347,"author":{"gitId":"Chang-CH"},"content":"`Course` : The applicant\u0027s course of study in their school. Should only include alphabet characters and space only. Should not be blank.","lastModifiedDate":"2021-11-04"},{"lineNumber":348,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":349,"author":{"gitId":"Chang-CH"},"content":"`Graduation_Year_Month` : The applicant\u0027s estimated date of graduation from their school. Should be of format MM/yyyy and be after the date 01/2020.","lastModifiedDate":"2021-11-04"},{"lineNumber":350,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":351,"author":{"gitId":"Chang-CH"},"content":"`Job` : The job/position that the applicant applied for. Should only include alphabet characters and space only. Should not be blank.","lastModifiedDate":"2021-11-04"},{"lineNumber":352,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":353,"author":{"gitId":"Chang-CH"},"content":"`Skill`: The applicant\u0027s skillset. Should only include alphanumeric characters, spaces and `+#` symbols only.","lastModifiedDate":"2021-11-04"},{"lineNumber":354,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":355,"author":{"gitId":"Chang-CH"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-04"},{"lineNumber":356,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":357,"author":{"gitId":"Chang-CH"},"content":"## FAQ","lastModifiedDate":"2021-11-04"},{"lineNumber":358,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":359,"author":{"gitId":"Chang-CH"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":360,"author":{"gitId":"Chang-CH"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous InternWatcher home folder.","lastModifiedDate":"2021-11-04"},{"lineNumber":361,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":362,"author":{"gitId":"Chang-CH"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-04"},{"lineNumber":363,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":364,"author":{"gitId":"Chang-CH"},"content":"## Command summary","lastModifiedDate":"2021-11-04"},{"lineNumber":365,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":366,"author":{"gitId":"Chang-CH"},"content":"Action | Format, Examples","lastModifiedDate":"2021-11-04"},{"lineNumber":367,"author":{"gitId":"Chang-CH"},"content":"--------|------------------","lastModifiedDate":"2021-11-04"},{"lineNumber":368,"author":{"gitId":"Chang-CH"},"content":"**Help** | `help`","lastModifiedDate":"2021-11-04"},{"lineNumber":369,"author":{"gitId":"Chang-CH"},"content":"**Add** | `add n/NAME p/PHONE e/EMAIL g/GRADE i/INSTITUTION c/COURSE y/GRADUATION_YEAR_MONTH j/JOB [a/APPLICATION_STATUS] [s/SKILL]…++` \u003cbr\u003e e.g. `add n/John p/999 e/a@a.com g/4.00 i/NTU c/CS y/06/2025 j/Software Engineer a/INTERVIEWED s/Python`","lastModifiedDate":"2021-11-04"},{"lineNumber":370,"author":{"gitId":"Chang-CH"},"content":"**List** | `list`","lastModifiedDate":"2021-11-04"},{"lineNumber":371,"author":{"gitId":"Chang-CH"},"content":"**View** | `view INDEX [T]` \u003cbr\u003e e.g. `view 2 T`","lastModifiedDate":"2021-11-04"},{"lineNumber":372,"author":{"gitId":"Chang-CH"},"content":"**Filter** | `filter [g/GRADE] [i/INSTITUTION]…+ [c/COURSE]…+ [y/GRADUATION_YEAR_MONTH] [j/JOB] [a/STATUS] [s/SKILL]…+` \u003cbr\u003e e.g. `filter s/JAVA y/06/2022 i/NUS a/REJECTED`","lastModifiedDate":"2021-11-04"},{"lineNumber":373,"author":{"gitId":"Chang-CH"},"content":"**Edit** | `edit ALL a/APPLICATION_STATUS`/`edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [g/GRADE] [i/INSTITUTION] [c/COURSE] [y/GRADUATION_YEAR_MONTH] [j/JOB] [a/APPLICATION_STATUS] [s/SKILL]…`\u003cbr\u003ee.g.`edit 2 n/James Lee e/jameslee@example.com`, `edit ALL a/REJECTED`","lastModifiedDate":"2021-11-04"},{"lineNumber":374,"author":{"gitId":"Chang-CH"},"content":"**Delete** | `delete INDEX`/ `delete ALL`\u003cbr\u003e e.g. `delete 3`, `delete ALL`","lastModifiedDate":"2021-11-04"},{"lineNumber":375,"author":{"gitId":"Chang-CH"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g. `find James Jake`","lastModifiedDate":"2021-11-04"},{"lineNumber":376,"author":{"gitId":"Chang-CH"},"content":"**Undo** | `undo`","lastModifiedDate":"2021-11-04"},{"lineNumber":377,"author":{"gitId":"Chang-CH"},"content":"**Redo** | `redo`","lastModifiedDate":"2021-11-04"},{"lineNumber":378,"author":{"gitId":"Chang-CH"},"content":"**Clear** | `clear`","lastModifiedDate":"2021-11-04"},{"lineNumber":379,"author":{"gitId":"Chang-CH"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"yunpeng1234":1,"Chang-CH":378}},{"path":"docs/_sass/custom/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"html {","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":" * Reset some basic elements","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"  margin: 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"  padding: 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":" * Basic styling","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"body {","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"  color: $text-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"  background-color: $background-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"  font-kerning: normal;","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"  display: flex;","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"  min-height: 100vh;","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"  flex-direction: column;","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"p, blockquote, pre,","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"%vertical-rhythm {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"hr {","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":" * `main` element","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"main {","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":" * Images","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"img {","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"  max-width: 100%;","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"  vertical-align: middle;","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":" * Figures","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"figure \u003e img {","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"  display: block;","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"figcaption {","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":" * Lists","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"ul, ol {","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"li {","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"  \u003e ul,","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"  \u003e ol {","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"Chang-CH"},"content":"    margin-bottom: 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"Chang-CH"},"content":" * Headings","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"Chang-CH"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"Chang-CH"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"Chang-CH"},"content":" * Links","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"Chang-CH"},"content":"a {","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"Chang-CH"},"content":"  color: $link-base-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"Chang-CH"},"content":"  text-decoration: none;","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"Chang-CH"},"content":"  \u0026:visited {","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"Chang-CH"},"content":"    color: $link-visited-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"Chang-CH"},"content":"  \u0026:hover {","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"Chang-CH"},"content":"    color: $text-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"Chang-CH"},"content":"    text-decoration: underline;","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"Chang-CH"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"Chang-CH"},"content":"    text-decoration: none;","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"Chang-CH"},"content":"    .username {","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"Chang-CH"},"content":"      text-decoration: underline;","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"Chang-CH"},"content":" * Blockquotes","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"Chang-CH"},"content":"blockquote {","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"Chang-CH"},"content":"  color: $brand-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"Chang-CH"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"Chang-CH"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"Chang-CH"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"Chang-CH"},"content":"  font-style: italic;","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"Chang-CH"},"content":"  \u003e :last-child {","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"Chang-CH"},"content":"    margin-bottom: 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"Chang-CH"},"content":"  i, em {","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"Chang-CH"},"content":"    font-style: normal;","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"Chang-CH"},"content":" * Code formatting","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"Chang-CH"},"content":"pre,","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"Chang-CH"},"content":"code {","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"Chang-CH"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"Chang-CH"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"Chang-CH"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"Chang-CH"},"content":"  border-radius: 3px;","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"Chang-CH"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"Chang-CH"},"content":"code {","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"Chang-CH"},"content":"  padding: 1px 5px;","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"Chang-CH"},"content":"pre {","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"Chang-CH"},"content":"  padding: 8px 12px;","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"Chang-CH"},"content":"  overflow-x: auto;","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"Chang-CH"},"content":"  \u003e code {","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"Chang-CH"},"content":"    border: 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"Chang-CH"},"content":"    padding-right: 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"Chang-CH"},"content":"    padding-left: 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"Chang-CH"},"content":".highlight {","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"Chang-CH"},"content":"  border-radius: 3px;","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"Chang-CH"},"content":"  background: $code-background-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"Chang-CH"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"Chang-CH"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"Chang-CH"},"content":"    background: $code-background-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":196,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":197,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"Chang-CH"},"content":" * Wrapper","lastModifiedDate":"2021-11-04"},{"lineNumber":199,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":200,"author":{"gitId":"Chang-CH"},"content":".wrapper {","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"Chang-CH"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2021-11-07"},{"lineNumber":202,"author":{"gitId":"Chang-CH"},"content":"  margin-right: auto;","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"Chang-CH"},"content":"  margin-left: auto;","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"Chang-CH"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2021-11-07"},{"lineNumber":205,"author":{"gitId":"Chang-CH"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2021-11-07"},{"lineNumber":206,"author":{"gitId":"Chang-CH"},"content":"  @extend %clearfix;","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"Chang-CH"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"Chang-CH"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2021-11-07"},{"lineNumber":210,"author":{"gitId":"Chang-CH"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2021-11-07"},{"lineNumber":211,"author":{"gitId":"Chang-CH"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2021-11-07"},{"lineNumber":212,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"Chang-CH"},"content":" * Clearfix","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"Chang-CH"},"content":"%clearfix:after {","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"Chang-CH"},"content":"  content: \"\";","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"Chang-CH"},"content":"  display: table;","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"Chang-CH"},"content":"  clear: both;","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"Chang-CH"},"content":" * Icons","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"Chang-CH"},"content":".orange {","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"Chang-CH"},"content":"  color: #f66a0a;","lastModifiedDate":"2021-11-04"},{"lineNumber":234,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"Chang-CH"},"content":".grey {","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"Chang-CH"},"content":"  color: #828282;","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"Chang-CH"},"content":" * Tables","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"Chang-CH"},"content":"table {","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"Chang-CH"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"Chang-CH"},"content":"  width: 100%;","lastModifiedDate":"2021-11-04"},{"lineNumber":246,"author":{"gitId":"Chang-CH"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2021-11-04"},{"lineNumber":247,"author":{"gitId":"Chang-CH"},"content":"  color: $table-text-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":248,"author":{"gitId":"Chang-CH"},"content":"  border-collapse: collapse;","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"Chang-CH"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"Chang-CH"},"content":"  tr {","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"Chang-CH"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2021-11-04"},{"lineNumber":252,"author":{"gitId":"Chang-CH"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":255,"author":{"gitId":"Chang-CH"},"content":"  th, td {","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"Chang-CH"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"Chang-CH"},"content":"  th {","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"Chang-CH"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":260,"author":{"gitId":"Chang-CH"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":262,"author":{"gitId":"Chang-CH"},"content":"  td {","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"Chang-CH"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":264,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":266,"author":{"gitId":"Chang-CH"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2021-11-04"},{"lineNumber":267,"author":{"gitId":"Chang-CH"},"content":"    display: block;","lastModifiedDate":"2021-11-04"},{"lineNumber":268,"author":{"gitId":"Chang-CH"},"content":"    overflow-x: auto;","lastModifiedDate":"2021-11-04"},{"lineNumber":269,"author":{"gitId":"Chang-CH"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2021-11-04"},{"lineNumber":270,"author":{"gitId":"Chang-CH"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":272,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":273,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":274,"author":{"gitId":"Chang-CH"},"content":"@media print {","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"Chang-CH"},"content":"  /**","lastModifiedDate":"2021-11-04"},{"lineNumber":276,"author":{"gitId":"Chang-CH"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"Chang-CH"},"content":"  */","lastModifiedDate":"2021-11-04"},{"lineNumber":278,"author":{"gitId":"Chang-CH"},"content":"  body {","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"Chang-CH"},"content":"    display: block;","lastModifiedDate":"2021-11-04"},{"lineNumber":280,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"Chang-CH"},"content":"  /**","lastModifiedDate":"2021-11-04"},{"lineNumber":282,"author":{"gitId":"Chang-CH"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"Chang-CH"},"content":"  */","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"Chang-CH"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"Chang-CH"},"content":"    display: none;","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":287,"author":{"gitId":"Chang-CH"},"content":"  .site-header {","lastModifiedDate":"2021-11-04"},{"lineNumber":288,"author":{"gitId":"Chang-CH"},"content":"    text-align: center;","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"Chang-CH"},"content":"  .site-header:before {","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"Chang-CH"},"content":"    content: \"Intern Watcher\";","lastModifiedDate":"2021-11-04"},{"lineNumber":292,"author":{"gitId":"Chang-CH"},"content":"    font-size: 32px;","lastModifiedDate":"2021-11-04"},{"lineNumber":293,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":295,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Chang-CH":295}},{"path":"docs/_sass/custom/_layout.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":" * Site header","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":".site-header {","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"  border-top: 5px solid $brand-color-dark;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"  border-bottom: 1px solid $brand-color-light;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"  min-height: $spacing-unit * 1.865;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"  line-height: $base-line-height * $base-font-size * 2.25;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"  // Positioning context for the mobile navigation icon","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"  position: relative;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":".site-title {","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"  @include relative-font-size(1.625);","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"  font-weight: 300;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"  margin-bottom: 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"  float: left;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"  @include media-query($on-palm) {","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"    padding-right: 45px;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"  \u0026,","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"  \u0026:visited {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"    color: $brand-color-dark;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":".site-nav {","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"  position: absolute;","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"  top: 9px;","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"  right: $spacing-unit / 2;","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"  background-color: $background-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"  border-radius: 5px;","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"  text-align: right;","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"  .nav-trigger {","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"      display: none;","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"  .menu-icon {","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"    float: right;","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"    width: 36px;","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"    height: 26px;","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"    line-height: 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"    padding-top: 10px;","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"    text-align: center;","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"    \u003e svg path {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"      fill: $brand-color-dark;","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"  label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"    display: block;","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"    float: right;","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"    width: 36px;","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"    height: 36px;","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"    z-index: 2;","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"    cursor: pointer;","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"  input ~ .trigger {","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"    clear: both;","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"    display: none;","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"  input:checked ~ .trigger {","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"    display: block;","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"    padding-bottom: 5px;","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"  .page-link {","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"    color: $text-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"    line-height: $base-line-height;","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"    display: block;","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"    padding: 5px 10px;","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"    // Gaps between nav items, but not on the last one","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"    \u0026:not(:last-child) {","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"      margin-right: 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"    margin-left: 20px;","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"  @media screen and (min-width: $on-medium) {","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"    position: static;","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"    float: right;","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"    border: none;","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"    background-color: inherit;","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"    label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"Chang-CH"},"content":"      display: none;","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"Chang-CH"},"content":"    .menu-icon {","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"Chang-CH"},"content":"      display: none;","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"Chang-CH"},"content":"    input ~ .trigger {","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"Chang-CH"},"content":"      display: block;","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"Chang-CH"},"content":"    .page-link {","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"      display: inline;","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"Chang-CH"},"content":"      padding: 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"Chang-CH"},"content":"      \u0026:not(:last-child) {","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"Chang-CH"},"content":"        margin-right: 20px;","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"Chang-CH"},"content":"      }","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"Chang-CH"},"content":"      margin-left: auto;","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"Chang-CH"},"content":" * Page content","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"Chang-CH"},"content":".page-content {","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"Chang-CH"},"content":"  padding: $spacing-unit 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"Chang-CH"},"content":"  flex: 1 0 auto;","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"Chang-CH"},"content":".page-heading {","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"Chang-CH"},"content":"  @include relative-font-size(2);","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"Chang-CH"},"content":".post-list-heading {","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"Chang-CH"},"content":"  @include relative-font-size(1.75);","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"Chang-CH"},"content":".post-list {","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"Chang-CH"},"content":"  margin-left: 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"Chang-CH"},"content":"  list-style: none;","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"Chang-CH"},"content":"  \u003e li {","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"Chang-CH"},"content":"    margin-bottom: $spacing-unit;","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"Chang-CH"},"content":".post-meta {","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"Chang-CH"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"Chang-CH"},"content":"  color: $brand-color;","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"Chang-CH"},"content":".post-link {","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"Chang-CH"},"content":"  display: block;","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"Chang-CH"},"content":"  @include relative-font-size(1.5);","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"Chang-CH"},"content":" * Posts","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"Chang-CH"},"content":".post-header {","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"Chang-CH"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"Chang-CH"},"content":".post-title,","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"Chang-CH"},"content":".post-content h1 {","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"Chang-CH"},"content":"  @include relative-font-size(2.625);","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"Chang-CH"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"Chang-CH"},"content":"  line-height: 1.15;","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"Chang-CH"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"Chang-CH"},"content":"    @include relative-font-size(2.625);","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"Chang-CH"},"content":".post-content {","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"Chang-CH"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"Chang-CH"},"content":"  h1, h2, h3 { margin-top: $spacing-unit * 2 }","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"Chang-CH"},"content":"  h4, h5, h6 { margin-top: $spacing-unit }","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"Chang-CH"},"content":"  h2 {","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"Chang-CH"},"content":"    @include relative-font-size(1.75);","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"Chang-CH"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"Chang-CH"},"content":"      @include relative-font-size(2);","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"Chang-CH"},"content":"  h3 {","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"Chang-CH"},"content":"    @include relative-font-size(1.375);","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"Chang-CH"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"Chang-CH"},"content":"      @include relative-font-size(1.625);","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":196,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":197,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"Chang-CH"},"content":"  h4 {","lastModifiedDate":"2021-11-04"},{"lineNumber":199,"author":{"gitId":"Chang-CH"},"content":"    @include relative-font-size(1.25);","lastModifiedDate":"2021-11-04"},{"lineNumber":200,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":202,"author":{"gitId":"Chang-CH"},"content":"  h5 {","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"Chang-CH"},"content":"    @include relative-font-size(1.125);","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"Chang-CH"},"content":"  h6 {","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"Chang-CH"},"content":"    @include relative-font-size(1.0625);","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"Chang-CH"},"content":".social-media-list {","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"Chang-CH"},"content":"  display: table;","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"Chang-CH"},"content":"  margin: 0 auto;","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"Chang-CH"},"content":"  li {","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"Chang-CH"},"content":"    float: left;","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"Chang-CH"},"content":"    margin: 5px 10px 5px 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"Chang-CH"},"content":"    \u0026:last-of-type { margin-right: 0 }","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"Chang-CH"},"content":"    a {","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"Chang-CH"},"content":"      display: block;","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"Chang-CH"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"Chang-CH"},"content":"      border: 1px solid $brand-color-light;","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"Chang-CH"},"content":"      \u0026:hover { border-color: darken($brand-color-light, 10%) }","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"Chang-CH"},"content":" * Pagination navbar","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"Chang-CH"},"content":".pagination {","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"Chang-CH"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2021-11-04"},{"lineNumber":234,"author":{"gitId":"Chang-CH"},"content":"  @extend .social-media-list;","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"Chang-CH"},"content":"  li {","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"Chang-CH"},"content":"    a, div {","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"Chang-CH"},"content":"      min-width: 41px;","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"Chang-CH"},"content":"      text-align: center;","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"Chang-CH"},"content":"      box-sizing: border-box;","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"Chang-CH"},"content":"    div {","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"Chang-CH"},"content":"      display: block;","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"Chang-CH"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"Chang-CH"},"content":"      border: 1px solid transparent;","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":246,"author":{"gitId":"Chang-CH"},"content":"      \u0026.pager-edge {","lastModifiedDate":"2021-11-04"},{"lineNumber":247,"author":{"gitId":"Chang-CH"},"content":"        color: darken($brand-color-light, 5%);","lastModifiedDate":"2021-11-04"},{"lineNumber":248,"author":{"gitId":"Chang-CH"},"content":"        border: 1px dashed;","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"Chang-CH"},"content":"      }","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":252,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":255,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"Chang-CH"},"content":" * Grid helpers","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"Chang-CH"},"content":"@media screen and (min-width: $on-large) {","lastModifiedDate":"2021-11-04"},{"lineNumber":260,"author":{"gitId":"Chang-CH"},"content":"  .one-half {","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"Chang-CH"},"content":"    width: calc(50% - (#{$spacing-unit} / 2));","lastModifiedDate":"2021-11-04"},{"lineNumber":262,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Chang-CH":263}},{"path":"docs/_sass/custom/custom-mixins.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"@mixin alert-variant($background, $border, $color) {","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"  color: $color;","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"  @include gradient-bg($background);","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"  border-color: $border;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"  .alert-link {","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"    color: darken($color, 10%);","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"@mixin gradient-bg($color, $foreground: null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"  @if $enable-gradients {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"    @if $foreground {","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"      background-image: $foreground, linear-gradient(180deg, mix($body-bg, $color, 15%), $color);","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"    } @else {","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"      background-image: linear-gradient(180deg, mix($body-bg, $color, 15%), $color);","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"  } @else {","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"    background-color: $color;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Chang-CH":21}},{"path":"docs/_sass/custom/custom-styles.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"// Placeholder to allow defining custom styles that override everything else.","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"// (Use `_sass/minima/custom-variables.scss` to override variable defaults)","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"h2, h3, h4, h5, h6 {","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"  color: #04b1eb;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"// Bootstrap style alerts","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":".alert {","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"  position: relative;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"  padding: $alert-padding-y $alert-padding-x;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"  margin-bottom: $alert-margin-bottom;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"  border: $alert-border-width solid transparent;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"  order-radius : $alert-border-radius;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"// Headings for larger alerts","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":".alert-heading {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"  // Specified to prevent conflicts of changing $headings-color","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"  color: inherit;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"// Provide class for links that match alerts","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":".alert-link {","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"  font-weight: $alert-link-font-weight;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"// Generate contextual modifier classes for colorizing the alert.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"@each $color, $value in $theme-colors {","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"  .alert-#{$color} {","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"    @include alert-variant(color-level($value, $alert-bg-level), color-level($value, $alert-border-level), color-level($value, $alert-color-level));","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Chang-CH":34}},{"path":"docs/_sass/custom/custom-variables.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"// Placeholder to allow overriding predefined variables smoothly.","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"//Bootstrap\u0027s default","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"$white:    #fff !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"$gray-100: #f8f9fa !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"$gray-200: #e9ecef !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"$gray-300: #dee2e6 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"$gray-400: #ced4da !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"$gray-500: #adb5bd !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"$gray-600: #6c757d !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"$gray-700: #495057 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"$gray-800: #343a40 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"$gray-900: #212529 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"$black:    #000 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"$blue:    #0d6efd !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"$indigo:  #6610f2 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"$purple:  #6f42c1 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"$pink:    #d63384 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"$red:     #dc3545 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"$orange:  #fd7e14 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"$yellow:  #ffc107 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"$green:   #28a745 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"$teal:    #20c997 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"$cyan:    #17a2b8 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"$primary:       $blue !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"$secondary:     $gray-600 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"$success:       $green !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"$info:          $cyan !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"$warning:       $yellow !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"$danger:        $red !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"$light:         $gray-100 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"$dark:          $gray-800 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"$theme-colors: (","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"  \"primary\":    $primary,","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"  \"secondary\":  $secondary,","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"  \"success\":    $success,","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"  \"info\":       $info,","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"  \"warning\":    $warning,","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"  \"danger\":     $danger,","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"  \"light\":      $light,","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"  \"dark\":       $dark","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":") !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"$theme-color-interval: 8% !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"$body-bg:                   $white !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"$body-color:                $gray-900 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"$body-text-align:           null !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"$enable-gradients: true;","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"// Define alert colors, border radius, and padding.","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"$border-radius:               .25rem !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"$border-width:                1px !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"$font-weight-bold:            700 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"$alert-padding-y:                   .75rem !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"$alert-padding-x:                   1.25rem !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"$alert-margin-bottom:               1rem !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"$alert-border-radius:               $border-radius !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"$alert-link-font-weight:            $font-weight-bold !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"$alert-border-width:                $border-width !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"$alert-bg-level:                    -10 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"$alert-border-level:                -9 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"$alert-color-level:                 6 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"// Request a color level","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"// scss-docs-start color-level","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"@function color-level($color: $primary, $level: 0) {","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"  $color-base: if($level \u003e 0, $black, $white);","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"  $level: abs($level);","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"  @return mix($color-base, $color, $level * $theme-color-interval);","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Chang-CH":76}},{"path":"docs/_sass/custom/initialize.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"@charset \"utf-8\";","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"// Define defaults for each variable.","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"$base-font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Segoe UI Symbol\", \"Segoe UI Emoji\", \"Apple Color Emoji\", Roboto, Helvetica, Arial, sans-serif !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"$code-font-family: \"Menlo\", \"Inconsolata\", \"Consolas\", \"Roboto Mono\", \"Ubuntu Mono\", \"Liberation Mono\", \"Courier New\", monospace;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"$base-font-size:   16px !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"$base-font-weight: 400 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"$small-font-size:  $base-font-size * 0.875 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"$base-line-height: 1.5 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"$spacing-unit:     30px !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"$table-text-align: left !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"// Width of the content area","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"$content-width:    800px !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"$on-palm:          600px !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"$on-laptop:        800px !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"$on-medium:        $on-palm !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"$on-large:         $on-laptop !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"// Use media queries like this:","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"// @include media-query($on-palm) {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"//   .wrapper {","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"//     padding-right: $spacing-unit / 2;","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"//     padding-left: $spacing-unit / 2;","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"//   }","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"// }","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"// Notice the following mixin uses max-width, in a deprecated, desktop-first","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"// approach, whereas media queries used elsewhere now use min-width.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"@mixin media-query($device) {","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"  @media screen and (max-width: $device) {","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"    @content;","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"  }","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"@mixin relative-font-size($ratio) {","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"  font-size: #{$ratio}rem;","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"// Import pre-styling-overrides hook and style-partials.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"@import","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"  \"minima/custom-variables\", // Hook to override predefined variables.","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"  \"minima/custom-mixins\",    // Hook to add custom mixins.","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"  \"minima/base\",             // Defines element resets.","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"  \"minima/layout\",           // Defines structure and style based on CSS selectors.","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"  \"minima/custom-styles\"     // Hook to override existing styles.","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":";","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Chang-CH":51}},{"path":"docs/_sass/custom/skins/classic.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"@charset \"utf-8\";","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"$brand-color:           #828282 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"$brand-color-light:     lighten($brand-color, 40%) !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"$brand-color-dark:      darken($brand-color, 25%) !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"$text-color:            #111 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"$background-color:      #f7efec !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"$code-background-color: #dff5fa !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"$link-base-color:       #2a7ae2 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"$link-visited-color:    darken($link-base-color, 15%) !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"$table-text-color:      lighten($text-color, 18%) !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"$table-zebra-color:     lighten($brand-color, 46%) !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"$table-header-bg-color: lighten($brand-color, 43%) !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"$table-header-border:   lighten($brand-color, 36%) !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"$table-border-color:    $brand-color-light !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"// Syntax highlighting styles should be adjusted appropriately for every \"skin\"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"// ----------------------------------------------------------------------------","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":".highlight {","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"  .c     { color: #998; font-style: italic } // Comment","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"  .err   { color: #a61717; background-color: #e3d2d2 } // Error","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"  .k     { font-weight: bold } // Keyword","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"  .o     { font-weight: bold } // Operator","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"  .cm    { color: #998; font-style: italic } // Comment.Multiline","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"  .cp    { color: #999; font-weight: bold } // Comment.Preproc","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"  .c1    { color: #998; font-style: italic } // Comment.Single","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"  .cs    { color: #999; font-weight: bold; font-style: italic } // Comment.Special","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"  .gd    { color: #000; background-color: #fdd } // Generic.Deleted","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"  .gd .x { color: #000; background-color: #faa } // Generic.Deleted.Specific","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"  .ge    { font-style: italic } // Generic.Emph","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"  .gr    { color: #a00 } // Generic.Error","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"  .gh    { color: #999 } // Generic.Heading","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"  .gi    { color: #000; background-color: #dfd } // Generic.Inserted","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"  .gi .x { color: #000; background-color: #afa } // Generic.Inserted.Specific","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"  .go    { color: #888 } // Generic.Output","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"  .gp    { color: #555 } // Generic.Prompt","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"  .gs    { font-weight: bold } // Generic.Strong","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"  .gu    { color: #aaa } // Generic.Subheading","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"  .gt    { color: #a00 } // Generic.Traceback","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"  .kc    { font-weight: bold } // Keyword.Constant","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"  .kd    { font-weight: bold } // Keyword.Declaration","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"  .kp    { font-weight: bold } // Keyword.Pseudo","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"  .kr    { font-weight: bold } // Keyword.Reserved","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"  .kt    { color: #458; font-weight: bold } // Keyword.Type","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"  .m     { color: #099 } // Literal.Number","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"  .s     { color: #d14 } // Literal.String","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"  .na    { color: #008080 } // Name.Attribute","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"  .nb    { color: #0086B3 } // Name.Builtin","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"  .nc    { color: #458; font-weight: bold } // Name.Class","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"  .no    { color: #008080 } // Name.Constant","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"  .ni    { color: #800080 } // Name.Entity","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"  .ne    { color: #900; font-weight: bold } // Name.Exception","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"  .nf    { color: #900; font-weight: bold } // Name.Function","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"  .nn    { color: #555 } // Name.Namespace","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"  .nt    { color: #000080 } // Name.Tag","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"  .nv    { color: #008080 } // Name.Variable","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"  .ow    { font-weight: bold } // Operator.Word","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"  .w     { color: #bbb } // Text.Whitespace","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"  .mf    { color: #099 } // Literal.Number.Float","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"  .mh    { color: #099 } // Literal.Number.Hex","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"  .mi    { color: #099 } // Literal.Number.Integer","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"  .mo    { color: #099 } // Literal.Number.Oct","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"  .sb    { color: #d14 } // Literal.String.Backtick","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"  .sc    { color: #d14 } // Literal.String.Char","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"  .sd    { color: #d14 } // Literal.String.Doc","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"  .s2    { color: #d14 } // Literal.String.Double","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"  .se    { color: #d14 } // Literal.String.Escape","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"  .sh    { color: #d14 } // Literal.String.Heredoc","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"  .si    { color: #d14 } // Literal.String.Interpol","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"  .sx    { color: #d14 } // Literal.String.Other","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"  .sr    { color: #009926 } // Literal.String.Regex","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"  .s1    { color: #d14 } // Literal.String.Single","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"  .ss    { color: #990073 } // Literal.String.Symbol","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"  .bp    { color: #999 } // Name.Builtin.Pseudo","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"  .vc    { color: #008080 } // Name.Variable.Class","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"  .vg    { color: #008080 } // Name.Variable.Global","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"  .vi    { color: #008080 } // Name.Variable.Instance","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"  .il    { color: #099 } // Literal.Number.Integer.Long","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Chang-CH":84}},{"path":"docs/_sass/custom/skins/solarized-dark.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"@charset \"utf-8\";","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"$sol-is-dark: true;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"@import \"minima/skins/solarized\";","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Chang-CH":4}},{"path":"docs/_sass/custom/skins/solarized.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"@charset \"utf-8\";","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"// Solarized skin","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"// Created by Sander Voerman \u003cmailto:sander@savoerman.nl\u003e using the Solarized","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"// color scheme by Ethan Schoonover \u003chttps://ethanschoonover.com/solarized\u003e.","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"// This style sheet implements two options for the minima.skin setting:","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"// \"solarized\" for light mode and \"solarized-dark\" for dark mode.","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"$sol-is-dark: false !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"// Color scheme","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"// ------------","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"// The inline comments show the canonical L*a*b values for each color.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"$sol-base03:   #002b36;  // 15 -12 -12","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"$sol-base02:   #073642;  // 20 -12 -12","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"$sol-base01:   #586e75;  // 45 -07 -07","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"$sol-base00:   #657b83;  // 50 -07 -07","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"$sol-base0:    #839496;  // 60 -06 -03","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"$sol-base1:    #93a1a1;  // 65 -05 -02","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"$sol-base2:    #eee8d5;  // 92 -00  10","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"$sol-base3:    #fdf6e3;  // 97  00  10","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"$sol-yellow:   #b58900;  // 60  10  65","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"$sol-orange:   #cb4b16;  // 50  50  55","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"$sol-red:      #dc322f;  // 50  65  45","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"$sol-magenta:  #d33682;  // 50  65 -05","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"$sol-violet:   #6c71c4;  // 50  15 -45","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"$sol-blue:     #268bd2;  // 55 -10 -45","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"$sol-cyan:     #2aa198;  // 60 -35 -05","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"$sol-green:    #859900;  // 60 -20  65","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"$sol-mono3:    $sol-base3;","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"$sol-mono2:    $sol-base2;","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"$sol-mono1:    $sol-base1;","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"$sol-mono00:   $sol-base00;","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"$sol-mono01:   $sol-base01;","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"@if $sol-is-dark {","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"  $sol-mono3:  $sol-base03;","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"  $sol-mono2:  $sol-base02;","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"  $sol-mono1:  $sol-base01;","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"  $sol-mono00: $sol-base0;","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"  $sol-mono01: $sol-base1;","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"// Minima color variables","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"// ----------------------","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"$brand-color:           $sol-mono1 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"$brand-color-light:     mix($sol-mono1, $sol-mono3) !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"$brand-color-dark:      $sol-mono00 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"$text-color:            $sol-mono01 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"$background-color:      $sol-mono3 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"$code-background-color: $sol-mono2 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"$link-base-color:       $sol-blue !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"$link-visited-color:    mix($sol-blue, $sol-mono00) !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"$table-text-color:      $sol-mono00 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"$table-zebra-color:     mix($sol-mono2, $sol-mono3) !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"$table-header-bg-color: $sol-mono2 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"$table-header-border:   $sol-mono1 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"$table-border-color:    $sol-mono1 !default;","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"// Syntax highlighting styles","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"// --------------------------","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":".highlight {","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"  .c     { color: $sol-mono1; font-style: italic } // Comment","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"  .err   { color: $sol-red } // Error","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"  .k     { color: $sol-mono01; font-weight: bold } // Keyword","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"  .o     { color: $sol-mono01; font-weight: bold } // Operator","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"  .cm    { color: $sol-mono1; font-style: italic } // Comment.Multiline","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"  .cp    { color: $sol-mono1; font-weight: bold } // Comment.Preproc","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"  .c1    { color: $sol-mono1; font-style: italic } // Comment.Single","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"  .cs    { color: $sol-mono1; font-weight: bold; font-style: italic } // Comment.Special","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"  .gd    { color: $sol-red } // Generic.Deleted","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"  .gd .x { color: $sol-red } // Generic.Deleted.Specific","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"  .ge    { color: $sol-mono00; font-style: italic } // Generic.Emph","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"  .gr    { color: $sol-red } // Generic.Error","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"  .gh    { color: $sol-mono1 } // Generic.Heading","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"  .gi    { color: $sol-green } // Generic.Inserted","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"  .gi .x { color: $sol-green } // Generic.Inserted.Specific","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"  .go    { color: $sol-mono00 } // Generic.Output","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"  .gp    { color: $sol-mono00 } // Generic.Prompt","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"  .gs    { color: $sol-mono01; font-weight: bold } // Generic.Strong","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"  .gu    { color: $sol-mono1 } // Generic.Subheading","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"  .gt    { color: $sol-red } // Generic.Traceback","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"  .kc    { color: $sol-mono01; font-weight: bold } // Keyword.Constant","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"  .kd    { color: $sol-mono01; font-weight: bold } // Keyword.Declaration","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"Chang-CH"},"content":"  .kp    { color: $sol-mono01; font-weight: bold } // Keyword.Pseudo","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"Chang-CH"},"content":"  .kr    { color: $sol-mono01; font-weight: bold } // Keyword.Reserved","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"Chang-CH"},"content":"  .kt    { color: $sol-violet; font-weight: bold } // Keyword.Type","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"Chang-CH"},"content":"  .m     { color: $sol-cyan } // Literal.Number","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"Chang-CH"},"content":"  .s     { color: $sol-magenta } // Literal.String","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"Chang-CH"},"content":"  .na    { color: $sol-cyan } // Name.Attribute","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"Chang-CH"},"content":"  .nb    { color: $sol-blue } // Name.Builtin","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"Chang-CH"},"content":"  .nc    { color: $sol-violet; font-weight: bold } // Name.Class","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"Chang-CH"},"content":"  .no    { color: $sol-cyan } // Name.Constant","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"Chang-CH"},"content":"  .ni    { color: $sol-violet } // Name.Entity","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"Chang-CH"},"content":"  .ne    { color: $sol-violet; font-weight: bold } // Name.Exception","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"Chang-CH"},"content":"  .nf    { color: $sol-blue; font-weight: bold } // Name.Function","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"  .nn    { color: $sol-mono00 } // Name.Namespace","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"Chang-CH"},"content":"  .nt    { color: $sol-blue } // Name.Tag","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"Chang-CH"},"content":"  .nv    { color: $sol-cyan } // Name.Variable","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"Chang-CH"},"content":"  .ow    { color: $sol-mono01; font-weight: bold } // Operator.Word","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"Chang-CH"},"content":"  .w     { color: $sol-mono1 } // Text.Whitespace","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"Chang-CH"},"content":"  .mf    { color: $sol-cyan } // Literal.Number.Float","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"Chang-CH"},"content":"  .mh    { color: $sol-cyan } // Literal.Number.Hex","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"Chang-CH"},"content":"  .mi    { color: $sol-cyan } // Literal.Number.Integer","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"Chang-CH"},"content":"  .mo    { color: $sol-cyan } // Literal.Number.Oct","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"Chang-CH"},"content":"  .sb    { color: $sol-magenta } // Literal.String.Backtick","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"Chang-CH"},"content":"  .sc    { color: $sol-magenta } // Literal.String.Char","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"Chang-CH"},"content":"  .sd    { color: $sol-magenta } // Literal.String.Doc","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"Chang-CH"},"content":"  .s2    { color: $sol-magenta } // Literal.String.Double","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"Chang-CH"},"content":"  .se    { color: $sol-magenta } // Literal.String.Escape","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"Chang-CH"},"content":"  .sh    { color: $sol-magenta } // Literal.String.Heredoc","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"Chang-CH"},"content":"  .si    { color: $sol-magenta } // Literal.String.Interpol","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"Chang-CH"},"content":"  .sx    { color: $sol-magenta } // Literal.String.Other","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"Chang-CH"},"content":"  .sr    { color: $sol-green } // Literal.String.Regex","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"Chang-CH"},"content":"  .s1    { color: $sol-magenta } // Literal.String.Single","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"Chang-CH"},"content":"  .ss    { color: $sol-magenta } // Literal.String.Symbol","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"Chang-CH"},"content":"  .bp    { color: $sol-mono1 } // Name.Builtin.Pseudo","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"Chang-CH"},"content":"  .vc    { color: $sol-cyan } // Name.Variable.Class","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"Chang-CH"},"content":"  .vg    { color: $sol-cyan } // Name.Variable.Global","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"Chang-CH"},"content":"  .vi    { color: $sol-cyan } // Name.Variable.Instance","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"Chang-CH"},"content":"  .il    { color: $sol-cyan } // Literal.Number.Integer.Long","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Chang-CH":133}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Chang-CH"},"content":"    content: \"Intern Watcher\";","lastModifiedDate":"2021-10-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"Chang-CH":1}},{"path":"docs/assets/css/style.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# Only the main Sass file needs front matter (the dashes are enough)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@import","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"  \"custom/skins/{{ site.minima.skin | default: \u0027classic\u0027 }}\",","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"  \"custom/initialize\";","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":".icon {","lastModifiedDate":"2020-08-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    height: 21px;","lastModifiedDate":"2020-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    width: 21px","lastModifiedDate":"2020-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-01"}],"authorContributionMap":{"-":10,"Chang-CH":2}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteApplicant(p)","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveInternWatcher(internWatcher)","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yunpeng1234":2,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"InternWatcher *-right-\u003e \"1\" UniqueApplicantList","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"InternWatcher *-right-\u003e \"1\" UniqueSkillList","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"UniqueSkillList -[hidden]down- UniqueApplicantList","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"UniqueSkillList -[hidden]down- UniqueApplicantList","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"UniqueSkillList *-right-\u003e \"*\" Skill","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"UniqueApplicantList -right-\u003e Applicant","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"Applicant -up-\u003e \"*\" Skill","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"Applicant *--\u003e Name","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"Applicant *--\u003e Phone","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"Applicant *---\u003e Email","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"Applicant *---\u003e Course","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"Applicant *---\u003e ApplicationStatus","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"Applicant *---\u003e Job","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"Applicant *---\u003e GraduationYearMonth","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"Applicant *--\u003e Grade","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"Applicant *--\u003e Institution","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yunpeng1234":12,"-":10,"Chang-CH":5}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":"if () then ([command commits InternWatcher])","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":"    :Save current InternWatcher to","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"    watcherStateList;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jeromesyl":3,"-":12}},{"path":"docs/diagrams/DeleteAllSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"@startuml","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"!include style.puml","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"participant \":InternWatcherParser\" as InternWatcherParser LOGIC_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"participant \":DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"end box","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"end box","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"[-\u003e LogicManager : execute(\"delete ALL\")","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"activate LogicManager","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"LogicManager -\u003e InternWatcherParser : parseCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"activate InternWatcherParser","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"create DeleteCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"InternWatcherParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"activate DeleteCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"DeleteCommandParser --\u003e InternWatcherParser","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"InternWatcherParser -\u003e DeleteCommandParser : parse","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"activate DeleteCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"create DeleteCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"activate DeleteCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"deactivate DeleteCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"DeleteCommandParser --\u003e InternWatcherParser : d","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"DeleteCommandParser -[hidden]-\u003e InternWatcherParser","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"InternWatcherParser --\u003e LogicManager : d","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"deactivate InternWatcherParser","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"activate DeleteCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"loop for all applicants displayed","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"DeleteCommand -\u003e DeleteCommand : lastShowList.get(0)","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"activate DeleteCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"DeleteCommand --\u003e DeleteCommand : d","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"deactivate DeleteCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"DeleteCommand -\u003e Model : deleteApplicant(applicantToDelete)","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"activate Model","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"Model --\u003e DeleteCommand : d","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"end","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"DeleteCommand -\u003e Model : commitInternWatcher(commitMessage)","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"Model -\u003e Model : commitState","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"activate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"Model --\u003e Model","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"deactivate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"deactivate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"create CommandResult","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"activate CommandResult","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"deactivate DeleteCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"DeleteCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"destroy DeleteCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"yunpeng1234"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"yunpeng1234"},"content":"@enduml","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"yunpeng1234":85,"Chang-CH":6}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"participant \":InternWatcherParser\" as InternWatcherParser LOGIC_COLOR","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"LogicManager -\u003e InternWatcherParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"activate InternWatcherParser","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"InternWatcherParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"DeleteCommandParser --\u003e InternWatcherParser","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"InternWatcherParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"DeleteCommandParser --\u003e InternWatcherParser : d","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"DeleteCommandParser -[hidden]-\u003e InternWatcherParser","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"InternWatcherParser --\u003e LogicManager : d","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"deactivate InternWatcherParser","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"DeleteCommand -\u003e Model : deleteApplicant(1)","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"DeleteCommand -\u003e Model : commitInternWatcher(commitMessage)","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"activate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"Model -\u003e Model : commitState(commitMessage)","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"Model --\u003e Model","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"deactivate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yunpeng1234":9,"-":58,"Chang-CH":11}},{"path":"docs/diagrams/EditActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"start","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":":User executes edit command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"if () then ([index provided])","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"    :get applicant to edit;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"    :create edited applicant;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"    :update model with edited applicant;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"else ([all flag provided])","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"    :get all displayed applicants;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"    while () is ([has displayed applicant not yet edited])","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"        :create edited applicant;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"        :update model with edited applicant;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"    endwhile ([all displayed applicants edited])","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"endif","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"stop","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Chang-CH":20}},{"path":"docs/diagrams/EditAllSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"!include style.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"participant \":InternWatcherParser\" as InternWatcherParser LOGIC_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"participant \":EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"[-\u003e LogicManager : execute(\"edit ALL a/ ACCEPTED\")","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"activate LogicManager","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"LogicManager -\u003e InternWatcherParser : parseCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"activate InternWatcherParser","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"create EditCommandParser","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"InternWatcherParser -\u003e EditCommandParser","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"activate EditCommandParser","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"EditCommandParser --\u003e InternWatcherParser","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"deactivate EditCommandParser","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"InternWatcherParser -\u003e EditCommandParser : parse","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"activate EditCommandParser","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"create EditCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"activate EditCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"EditCommand --\u003e EditCommandParser : d","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"deactivate EditCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"EditCommandParser --\u003e InternWatcherParser : d","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"deactivate EditCommandParser","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"EditCommandParser -[hidden]-\u003e InternWatcherParser","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"destroy EditCommandParser","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"InternWatcherParser --\u003e LogicManager : d","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"deactivate InternWatcherParser","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"activate EditCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"loop for all applicants displayed","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"EditCommand -\u003e EditCommand : createEditedApplicant(applicant)","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"activate EditCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"EditCommand --\u003e EditCommand : d","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"deactivate EditCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"EditCommand -\u003e Model : setApplicant(applicant, editedApplicant)","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"activate Model","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"Model --\u003e EditCommand : d","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"end","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"EditCommand -\u003e Model : commitInternWatcher(commitMessage)","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"Model -\u003e Model : commitState","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"activate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"Model --\u003e Model","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"deactivate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"deactivate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"create CommandResult","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"activate CommandResult","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"deactivate EditCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"EditCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"destroy EditCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"yunpeng1234":12,"Chang-CH":80}},{"path":"docs/diagrams/FilterSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"participant \":InternWatcherParser\" as InternWatcherParser LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"participant \":FilterCommandParser\" as FilterCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"participant \"d:FilterApplicantDescriptor\" as FilterApplicantDescriptor LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"participant \"f:FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"participant \"p:CombineFiltersPredicate\" as CombineFiltersPredicate LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"participant \":FilteredList\u003cApplicant\u003e\" as filteredApplicants MODEL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"[-\u003e LogicManager : execute(filter)","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"activate LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"LogicManager -\u003e InternWatcherParser : parseCommand(filter)","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"activate InternWatcherParser","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"create FilterCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"InternWatcherParser -\u003e FilterCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"activate FilterCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"create FilterApplicantDescriptor","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"FilterCommandParser -\u003e FilterApplicantDescriptor","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"activate FilterApplicantDescriptor","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"FilterApplicantDescriptor --\u003e FilterCommandParser : d","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"create FilterCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"FilterCommandParser -\u003e FilterCommand  : FilterCommand(d)","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"create CombineFiltersPredicate","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"FilterCommand -\u003e CombineFiltersPredicate","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"activate CombineFiltersPredicate","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"CombineFiltersPredicate --\u003e FilterCommand : p","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"activate FilterCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"FilterCommand --\u003e FilterCommandParser : f","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"FilterCommandParser --\u003e InternWatcherParser : f","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"InternWatcherParser --\u003e LogicManager : f","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"deactivate InternWatcherParser","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"LogicManager -\u003e FilterCommand : execute(model)","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"activate FilterCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"FilterCommand -\u003e Model : updateFilteredApplicantList(p)","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"activate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"Model -\u003e filteredApplicants : setPredicate(p)","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"activate filteredApplicants","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"loop until all filtered","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"filteredApplicants -\u003e  CombineFiltersPredicate : test(applicant)","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"activate CombineFiltersPredicate","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"CombineFiltersPredicate --\u003e filteredApplicants : b","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"deactivate CombineFiltersPredicate","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"end","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"deactivate CombineFiltersPredicate","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"filteredApplicants --\u003e Model","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"deactivate filteredApplicants","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"Model --\u003e FilterCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"deactivate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"FilterCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"jackgugz"},"content":"deactivate FilterCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"jackgugz"},"content":"FilterCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"jackgugz"},"content":"destroy FilterCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"jackgugz"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"jackgugz"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"jackgugz"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"jackgugz":87}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"Class InternWatcherParser","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"LogicManager -right-\u003e\"1\" InternWatcherParser","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"InternWatcherParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"Chang-CH":3}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"Interface ReadOnlyInternWatcher \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"Class VersionedInternWatcher","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"Class InternWatcher","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"Class ReadOnlyInternWatcher","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"Class UniqueApplicantList","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"Class Applicant","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"Class Skill","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"Class Job","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"Class Grade","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"Class GraduationYearMonth","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"Class ApplicationStatus","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"Class Course","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"Class Institution","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"InternWatcher .up.|\u003e ReadOnlyInternWatcher","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"VersionedInternWatcher .up.|\u003e InternWatcher","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"Model .left.\u003e ReadOnlyInternWatcher","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"ModelManager -left-\u003e \"1\" VersionedInternWatcher","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"VersionedInternWatcher *--\u003e \"1\" UniqueApplicantList","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"UniqueApplicantList --\u003e \"~* all\" Applicant","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"Applicant *-\u003e Name","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"Applicant *--\u003e Phone","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"Applicant *-\u003e Email","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"Applicant *---\u003e Course","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"Applicant *--\u003e \"*\" Skill","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"Applicant *--\u003e ApplicationStatus","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"Applicant *---\u003e Job","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"Applicant *--\u003e GraduationYearMonth","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"Applicant *---\u003e Grade","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"Applicant *---\u003e Institution","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"Phone -[hidden]right-\u003e Course","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"Course -[hidden]right-\u003e Email","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"Email -[hidden]right-\u003e Grade","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"Grade -[hidden]right-\u003e GraduationYearMonth","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"GraduationYearMonth -[hidden]right-\u003e Institution","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"Institution -[hidden]right-\u003e Job","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"Job -[hidden]right-\u003e Skill","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"ReadOnlyInternWatcher -[hidden]right-\u003e Model","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"Model -[hidden]right-\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"ModelManager --\u003e\"~* filtered\" Applicant","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yunpeng1234":32,"-":32,"Chang-CH":8}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"Class InternWatcherParser","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"HiddenOutside ..\u003e InternWatcherParser","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"InternWatcherParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"InternWatcherParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":33,"Chang-CH":4}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"package \"InternWatcher Storage\" #F4F6F6{","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"Interface InternWatcherStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"Class JsonInternWatcherStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"Class JsonSerializableInternWatcher","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"Class JsonAdaptedApplicant","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"StorageManager -up-\u003e \"1\" InternWatcherStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"Storage -right-|\u003e InternWatcherStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"JsonInternWatcherStorage .up.|\u003e InternWatcherStorage","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"JsonInternWatcherStorage ..\u003e JsonSerializableInternWatcher","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"JsonSerializableInternWatcher --\u003e \"*\" JsonAdaptedApplicant","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"JsonAdaptedApplicant --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yunpeng1234":11,"-":31}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"Class ApplicantListPanel","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"Class ApplicantCard","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"Class ApplicantDetailPanel","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"MainWindow *-down-\u003e \"1\" ApplicantDetailPanel","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"MainWindow *-down-\u003e \"1\" ApplicantListPanel","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"ApplicantListPanel -down-\u003e \"*\" ApplicantCard","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"ApplicantListPanel --|\u003e UiPart","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"ApplicantCard --|\u003e UiPart","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"ApplicantDetailPanel --|\u003e UiPart","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"ApplicantCard ..\u003e Model","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"ApplicantListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"StatusBarFooter -[hidden]left- ApplicantDetailPanel","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yunpeng1234":12,"-":52}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Jeromesyl"},"content":"    class State1 as \"__iw0:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":"    class State2 as \"__iw1:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"    class State3 as \"__iw2:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Jeromesyl"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jeromesyl":5,"-":16}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":"package States {","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Jeromesyl"},"content":"    class State1 as \"__iw0:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":"    class State2 as \"__iw1:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"    class State3 as \"__iw2:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Jeromesyl"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jeromesyl":5,"-":15}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":"package States {","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Jeromesyl"},"content":"    class State1 as \"__iw0:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":"    class State2 as \"__iw1:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"    class State3 as \"__iw2:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Jeromesyl"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jeromesyl":6,"-":14}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":"package States {","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Jeromesyl"},"content":"    class State1 as \"__iw0:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":"    class State2 as \"__iw1:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"    class State3 as \"__iw2:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"Jeromesyl"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jeromesyl":5,"-":14}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":"package States {","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Jeromesyl"},"content":"    class State1 as \"__iw0:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":"    class State2 as \"__iw1:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"    class State3 as \"__iw2:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"Jeromesyl"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jeromesyl":5,"-":14}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":"package States {","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Jeromesyl"},"content":"    class State1 as \"__iw0:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":"    class State2 as \"__iw1:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"    class State4 as \"__iw3:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Jeromesyl"},"content":"State2 -[hidden]right-\u003e State4","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"Jeromesyl"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Jeromesyl"},"content":"Pointer -up-\u003e State4","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Jeromesyl"},"content":"note right on link: State iw2 deleted.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jeromesyl":8,"-":12}},{"path":"docs/diagrams/UndoRedoState6.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jeromesyl"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Jeromesyl"},"content":"!include style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Jeromesyl"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Jeromesyl"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Jeromesyl"},"content":"title After command \"redo\"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":"package States {","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Jeromesyl"},"content":"    class State1 as \"__iw0:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":"    class State2 as \"__iw1:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"    class State3 as \"__iw2:InternWatcher__\"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Jeromesyl"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Jeromesyl"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Jeromesyl"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Jeromesyl"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Jeromesyl"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Jeromesyl"},"content":"@end","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Jeromesyl":19}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"Jeromesyl"},"content":"participant \":InternWatcherParser\" as InternWatcherParser LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"Jeromesyl"},"content":"participant \":VersionedInternWatcher\" as VersionedInternWatcher MODEL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Jeromesyl"},"content":"LogicManager -\u003e InternWatcherParser : parseCommand(undo)","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Jeromesyl"},"content":"activate InternWatcherParser","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"Jeromesyl"},"content":"InternWatcherParser -\u003e UndoCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"Jeromesyl"},"content":"UndoCommand --\u003e InternWatcherParser","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"Jeromesyl"},"content":"InternWatcherParser --\u003e LogicManager : u","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Jeromesyl"},"content":"deactivate InternWatcherParser","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"Jeromesyl"},"content":"UndoCommand -\u003e Model : undoInternWatcher()","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"Jeromesyl"},"content":"Model -\u003e VersionedInternWatcher : undo()","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Jeromesyl"},"content":"activate VersionedInternWatcher","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Jeromesyl"},"content":"VersionedInternWatcher -\u003e VersionedInternWatcher :resetData(ReadOnlyInternWatcher)","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Jeromesyl"},"content":"VersionedInternWatcher --\u003e Model :","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Jeromesyl"},"content":"deactivate VersionedInternWatcher","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jeromesyl":14,"-":39}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"title: Intern Watcher","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-F12-2/tp/actions)","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-F12-2/tp/branch/master/graph/badge.svg?token\u003dMXUSV2WQVF)](https://codecov.io/gh/AY2122S1-CS2103T-F12-2/tp)","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"**Intern Watcher is a desktop application for managing your internship applicants.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"* If you are interested in using InternWatcher, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"* If you are interested about developing InternWatcher, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":14,"Chang-CH":5}},{"path":"docs/team/chang-ch.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"layout: page","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"title: Chang-CH\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"---","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"### Project: Intern Watcher","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"Intern Watcher (IW) is a desktop app for Human Resource Managers (HRs) to manage internship applicants. The user interacts with it using a Command Line Interface (CLI), and it has a Graphical User Interface (GUI) created with JavaFX. It is written in Java, and has about 17 kLoC. Given below are my contributions to the project.","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"* **New Feature**: Added the ability to edit fields of multiple applicants at once.","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"  * What it does: allows the user to edit all currently displayed applicants in one go.","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"  * Justification: This feature improves the product significantly because a user can handle large volumes of applicants with ease when paired with the filter function.","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. A Selection class was added, with a parser to go with it.","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"   The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"* **New Feature**: Added application status field to applicants, with enum values and colour coding.","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"* **New Feature**: Added institution field to applicants.","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dchang-ch)","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"* **Project management**:","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"  * Managed releases `v1.3` (1 release) on GitHub","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"  * Updated the GUI color scheme (Pull requests [\\#55](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/55),","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"  [\\#60](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/60), [\\#112](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/112), [\\#120](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/120))","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"  * Wrote additional tests for existing features to increase coverage from 71.33% to 72.36% (Pull requests [\\#85](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/85))","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"  * User Guide:","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"    * Added documentation for the features `edit` [\\#159](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/159), [\\#148](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/148), [\\#139](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/139), [\\#96](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/96), [\\#95](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/95)","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"    * Updated screenshots for existing InternWatcher commands [\\#141](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/141), [\\#37](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/37), [\\#139](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/139)","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"    * Refactored AddressBook references [\\#193](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/193), [\\#150](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/150), [\\#65](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/65), [\\#63](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/63)","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"  * Developer Guide:","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"    * Added implementation details for the features `edit` [\\#117](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/117), [\\#207](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/207)","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"* **Community**:","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"  * PRs reviewed (with non-trivial review comments):  [\\#97](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/97), [\\#89](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/89), [\\#73](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/73), [\\#123](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/123), [\\#137](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/137),","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"  * Contributed to forum discussions (examples: [1](https://github.com/nus-cs2103-AY2122S1/forum/issues/310#issuecomment-942177518), [2](https://github.com/nus-cs2103-AY2122S1/forum/issues/141#issuecomment-912311529))","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [ped](https://github.com/Chang-CH/ped/issues))","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"  * Some parts of the selection class I added was adopted by other class mates ([\\#92](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/92))","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"* **Tools**:","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"Chang-CH":43,"jackgugz":1}},{"path":"docs/team/jackgugz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"layout: page","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"title: Gu Geng\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"### Project: Intern Watcher","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"Intern Watcher (IW) is a desktop app for Human Resource Managers (HRs) to manage internship applicants. The user interacts with it using a Command Line Interface (CLI), and it has a Graphical User Interface (GUI) created with JavaFX. It is written in Java, and has about 17 kLoC. Given below are my contributions to the project.","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"* **New Feature**: Added the ability to do mass filtering against a combined collection of criteria at once.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"    * What it does: Allows the user to filter the applicant list with various and multiple criteria specified against different factors: Grade, GraduationYearMonth, Skill, Status, Institution, Course and Job.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"    * Justification: This feature improves the product significantly because a HR can select potential applicants based on different requirements with great flexibility and efficiency.","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"    * Highlights: This enhancement required an in-depth analysis of design alternatives via careful and thorough consideration of the target users\u0027 demands and the most probable use cases. For example, for filter on Grade, only one instead of multiple filters will be accepted and only applicants with grades not less than the specified threshold will be displayed as HRs should be more interested in finding applicants that at least meet the requirement specified in regard to grade. The implementation too was challenging as it required to combine filters of different factors and deal with their respective behaviours and specifications.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"* **New Feature**: Added GraduationYearMonth field to applicants.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"* **New Feature**: Added Job field to applicants.","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003djackgugz\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17)","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"    * Added feature to allow Skill to take in symbols `+#` to accomodate skills such as `C++` and `C#` (Pull request [\\#152](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/152))","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"    * Changed the field `value` (of type `String`) of GraduationYearMonth to type `YearMonth` as it facilitated the comparison between GraudationYearMonth. (Pull request [\\#152](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/152))","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"    * Changed the case-sensititvity of `Name` for `AddCommand` to case-insensitive for more practical dertermination of duplicate applicants. (Pull request [\\#222](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/222))","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"    * Wrote additional and maintain tests for newly added fields (`GraduationYearMonth` and `Job`) and feature (`Filter`) to maintain coverage (Pull requests [\\#24](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/24), [\\#119](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/119))","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"    * User Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"        * Refined documentation for the features `filter` and `add` [\\#144](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/144), [\\#222](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/222)","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"        * Report bugs for User Guide [\\#242](https://github.com/AY2122S1-CS2103T-F12-2/tp/issues/242)","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"    * Developer Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"        * Added implementation details of the `filter` feature including the sequence diagram for a `filter` command. [\\#109](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/109)","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"        * Refined documentation for the features `filter` and `add` [\\#222](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/222)","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"        * Report and fix bugs for Developer Guide [\\#243](https://github.com/AY2122S1-CS2103T-F12-2/tp/issues/243), [\\#262](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/262)","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"    * AboutUs:","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"      * Update and refine details for roles, responsibilities and features [\\#257](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/257)","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"* **Community**:","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#85](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/85), [\\#97](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/97), [\\#115](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/115), [\\#129](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/129), [\\#137](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/137), [\\#205](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/205), [\\#252](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/252), [\\#253](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/253)","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"    * Contributed to forum discussions (examples: [1](https://github.com/nus-cs2103-AY2122S1/forum/issues/54), [2](https://github.com/nus-cs2103-AY2122S1/forum/issues/308), [3](https://github.com/nus-cs2103-AY2122S1/forum/issues/310), [4](https://github.com/nus-cs2103-AY2122S1/forum/issues/141#issuecomment-960573021))","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [ped](https://github.com/jackgugz/ped/issues))","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"    * Morphing the product into a different product by adding the distinguished `filter` feature ([\\#97](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/97))","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"    * Maintain Issue Trackers","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"    * Updating user/developer docs that are not specific to a feature ([\\#42](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/42)):","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"      * update product scope","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"      * update user stories","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"      * update NFRs","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"      * update Glossary","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"* **Contributions to Project Management and Organisation:**:","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"  *  Managed and organised project resources/minutes and facilitated discussions/meetings ([Google Drive](https://drive.google.com/drive/u/0/folders/1jFDuJ2T-VEtskOZSgQ4Ce28nM-mkgGDa))","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"yunpeng1234":1,"jackgugz":55}},{"path":"docs/team/jeromesyl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jeromesyl"},"content":"---","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"Jeromesyl"},"content":"layout: page","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"Jeromesyl"},"content":"title: Jerome Soh\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"Jeromesyl"},"content":"---","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"Jeromesyl"},"content":"### Project: Intern Watcher","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":"Intern Watcher (IW) is a desktop app for Human Resource Managers to manage internship applicants, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, IW can get your applicant management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"Jeromesyl"},"content":"* **New Feature**: Added the ability to undo commands and redo previous undo commands.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Jeromesyl"},"content":"  * What it does: Allows the user to undo a previously executed command, reverting the application to the previous state. Undo commands can be reversed by the Redo command.","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"Jeromesyl"},"content":"  * Justification: It is common for users to make mistakes when entering commands. Hence, a redo/undo feature will be really helpful for users who need to rectify those mistakes, and redo them in case they change their mind.","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"Jeromesyl"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in the future. It was challenging as it required existing commands to be modified and a new class that extends the existing InternWatcher class in order to support the undo/redo functionality. Some analysis was needed for design alternatives, such as the data structure to store a history of commands.","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"Jeromesyl"},"content":"  * Credits: Code for classes `VersionedInternWatcher` referenced and reused from [@eugene3231](https://github.com/AY2021S1-CS2103T-W11-4/tp/blob/master/src/main/java/seedu/address/model/VersionedCliniCal.java).","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"Jeromesyl"},"content":"  ","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"Jeromesyl"},"content":"  ","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"Jeromesyl"},"content":"* **New Feature**: Added `Course` field to applicants. It represents the applicant\u0027s course of study.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"Jeromesyl"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dJeromesyl\u0026tabRepo\u003dAY2122S1-CS2103T-F12-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"Jeromesyl"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"Jeromesyl"},"content":"  * Enhanced `undo` and `redo` features to display the previous command that was changed by undo or redo. ([\\#127](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/127))","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Jeromesyl"},"content":"  * Added a lower bound value of `01/2020` for `GraduationYearMonth` field so that only recent or future applicants are valid. ([\\#205](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/205))","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Jeromesyl"},"content":"  * Wrote additional tests for features and fields (`GraduationMonthYear` field, `Course` field, `undo` and `redo` features) ([\\#205](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/205), [\\#204](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/204), [\\#142](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/142))","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"Jeromesyl"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"Jeromesyl"},"content":"  * User Guide:","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"Jeromesyl"},"content":"    * Added documentation for the features `undo` and `redo` ([\\#124](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/124))","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Jeromesyl"},"content":"    * Did cosmetic tweaks to existing documentation of features `help`, `add`, `view`, `edit`, `delete`, `undo`, `redo`, and Command Summary section. Also updated user stories and use cases section. ([\\#223](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/223/files))","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Jeromesyl"},"content":"    * Updated descriptions of new and existing fields ([\\#208](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/208))","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Jeromesyl"},"content":"  * Developer Guide:","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"Jeromesyl"},"content":"    * Added implementation details of the `undo` and `redo` features, including Sequence and Activity diagrams ([\\#228](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/228), [\\#118](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/118))","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"Jeromesyl"},"content":"* **Community**:","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"Jeromesyl"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#137](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/137))","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Jeromesyl"},"content":"  * Reported bugs and suggestions for other teams in the class ([ped](https://github.com/Jeromesyl/ped/issues))","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"Jeromesyl"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"Jeromesyl"},"content":"  * Updated logo of InternWatcher [\\#213](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/213)","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"Jeromesyl"},"content":"  * Maintained issue trackers","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"Jeromesyl"},"content":"* **Contributions to Project Management and Organisation**:","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Jeromesyl"},"content":"  * Organized and facilitated team meetings and discussions","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Jeromesyl"},"content":"  * Managed team tasks and deliverables","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Jeromesyl":52}},{"path":"docs/team/nicolej2122.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicolej2122"},"content":"---","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"nicolej2122"},"content":"layout: page","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"nicolej2122"},"content":"title: Nicole Joseph\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"nicolej2122"},"content":"---","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"nicolej2122"},"content":"### Project: Intern Watcher","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"nicolej2122"},"content":"Intern Watcher (IW) is a desktop app for Human Resource Managers to manage internship applicants, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, IW can get your applicant management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"nicolej2122"},"content":"* **New Feature**: Added the ability to view applicant details.","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"nicolej2122"},"content":"    * What it does: Allows the user to toggle and view an applicant\u0027s academic and skill details.","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":"    * Justification: Some users may be accustomed to solely using the Command Line Interface (CLI) to execute their commands. The view command allows such users display applicant details using the CLI rather than having to click on the different tabs. This feature enhances the product for these users.","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"nicolej2122"},"content":"* **New Feature**: Added `Skills` field to applicants.","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"nicolej2122"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dnicolej2122\u0026tabRepo\u003dAY2122S1-CS2103T-F12-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"    * Added tests for the new applicant fields [\\#76](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/76)","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"nicolej2122"},"content":"    * Refactored all the variable and method names, and Javadoc comments to match the Intern Watcher projact [\\#56](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/56)","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"nicolej2122"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"    * User Guide:","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"        * Added images that correspond to the sample data provided in the jar file for all the features [\\#231](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/231)","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"        * Added documentation for the view command [\\#147](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/147)","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"        * Fixed several documentation bugs caught during the PE-D([\\#181](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/181)","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"    * Developer Guide:","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"        * Added details on viewing an applicant\u0027s details under manual testing [\\#101](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/101)","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"nicolej2122"},"content":"* **Community**:","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"nicolej2122"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#129](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/129), [\\#205](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/205), [\\#115](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/115)","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"nicolej2122"},"content":"    * Reported bugs and suggestions for other teams in the class ([ped](https://github.com/nicolej2122/ped/issues)","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"nicolej2122"},"content":"* **Contributions to Project Management and Organisation**:","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"nicolej2122"},"content":"    * Contributed to team discussions for various decisions that had to be carried out.","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"nicolej2122"},"content":"    * Managed team tasks and deliverables.","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"nicolej2122":38}},{"path":"docs/team/yunpeng1234.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"layout: page","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"title: Xiao Yunpeng\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"### Project: Intern Watcher","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"Intern Watcher (IW) is a desktop app for Human Resource Managers (HRs) to manage internship applicants. The user interacts with it using a Command Line Interface (CLI), and it has a Graphical User Interface (GUI) created with JavaFX. It is written in Java, and has about 17 kLoC. Given below are my contributions to the project.","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"* **New Feature**: Added the ability to do mass deleting of applicants from the displayed list.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"    * What it does: Allows the user to delete all applicants from the displayed list, be it from `list` or `filter`.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    * Justification: This feature allows HRs to delete a lot of applicants in one go. eg. Deleting all applicants with `REJECTED` statuses.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"* **New Feature**: Added Grade field to applicants.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dyunpeng1234\u0026tabRepo\u003dAY2122S1-CS2103T-F12-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"    * Added basic UI mockup for v1.2 to display additional information.(Pull request [\\#5](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/5))","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"    * Made the UI more robust on the lead up to v1.3. (Pull request [\\#137](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/137))","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"    * Made UI to be more dynamically resizable. (Pull request [\\#33](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/33))","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"    * Made Grade fields more specific by only allowing 2.d.p numbers from 0.00 to 5.00. (Pull request [\\#179](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/179))","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"    * Added test cases for `filter`, `view` and `delete` commands as well as `Grade` and `Selection` classes to maintain coverage (Pull request [\\#107](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/107), [\\#123](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/123), [\\#107](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/107), [\\#89](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/89), [\\#13](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/13))","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"    * User Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"        * Refined documentation for the features `delete` and `view` (Pull request [\\#129](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/129))","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"        * Added screenshots for clarity of commands (Pull request [\\#158](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/158))","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    * Developer Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"        * Added implementation details of the `delete ALL` feature including the sequence diagram for a `delete` command. [\\#109](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/109)","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"        * Refined documentation for the features `delete ALL` (Pull request [\\#154](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/154))","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"        * Refactored AB3 diagrams into InternWatcher ones (Pull request [\\#216](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/216), [\\#259](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/259))","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"* **Community**:","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#13](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/13), [\\#205](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/205), [\\#97](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/97),","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [ped](https://github.com/yunpeng1234/ped/issues))","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"    * Morphing the product into a different product by revamping UI (Pull request [\\#137](https://github.com/AY2122S1-CS2103T-F12-2/tp/pull/137))","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"    * Maintain Issue Trackers","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"* **Contributions to Project Management and Organisation:**:","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"    *  Facilitated discussions/meetings and helped others with their features when needed","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"    *  Created team repo + organisation","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"yunpeng1234":44,"jackgugz":1}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"Chang-CH"},"content":"Create a `RemarkCommandParser` class in the `seedu.intern.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"Chang-CH"},"content":"Create a new `Remark` in `seedu.intern.model.applicant`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-10-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"yunpeng1234"},"content":"Simply add the following to [`seedu.intern.ui.ApplicantCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-11-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"yunpeng1234":1,"-":395,"Chang-CH":5}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"The `address` field in `Person` is actually an instance of the `seedu.intern.model.applicant.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":111,"Chang-CH":1}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.intern.logic.Logic`.","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"A quick look at the `seedu.intern.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":299,"Chang-CH":2}},{"path":"src/main/java/seedu/intern/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.util.FileUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Chang-CH":3,"-":61}},{"path":"src/main/java/seedu/intern/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"Chang-CH":1,"-":24}},{"path":"src/main/java/seedu/intern/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.Config;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.Version;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.util.ConfigUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.util.StringUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.Logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.LogicManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.InternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.storage.InternWatcherStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.storage.JsonInternWatcherStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.storage.Storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.storage.StorageManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.ui.UiManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing InternWatcher ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"        InternWatcherStorage internWatcherStorage \u003d new JsonInternWatcherStorage(userPrefs.getInternWatcherFilePath());","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"nicolej2122"},"content":"        storage \u003d new StorageManager(internWatcherStorage, userPrefsStorage);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s intern book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"     * The data from the sample intern book will be used instead if {@code storage}\u0027s intern book is not found,","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"     * or an empty intern book will be used instead if errors occur when reading {@code storage}\u0027s intern book.","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"        Optional\u003cReadOnlyInternWatcher\u003e internWatcherOptional;","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"nicolej2122"},"content":"        ReadOnlyInternWatcher initialData;","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"            internWatcherOptional \u003d storage.readInternWatcher();","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"            if (!internWatcherOptional.isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"                logger.info(\"Data file not found. Will be starting with a sample InternWatcher\");","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"            initialData \u003d internWatcherOptional.orElseGet(SampleDataUtil::getSampleInternWatcher);","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty InternWatcher\");","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"nicolej2122"},"content":"            initialData \u003d new InternWatcher();","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty InternWatcher\");","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"nicolej2122"},"content":"            initialData \u003d new InternWatcher();","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"yunpeng1234"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty InternWatcher\");","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"Chang-CH"},"content":"        logger.info(\"Starting InternWatcher \" + MainApp.VERSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"Chang-CH"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping InternWatcher ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yunpeng1234":10,"nicolej2122":4,"Chang-CH":29,"-":140}},{"path":"src/main/java/seedu/intern/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Chang-CH":1,"-":62}},{"path":"src/main/java/seedu/intern/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Chang-CH":1,"-":78}},{"path":"src/main/java/seedu/intern/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"    private static final String LOG_FILE \u003d \"internwatcher.log\";","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Chang-CH":2,"-":110}},{"path":"src/main/java/seedu/intern/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"            \"The applicant selection provided is invalid\";","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MESSAGE_APPLICANTS_LISTED_OVERVIEW \u003d \"%1$d applicants listed!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"    public static final String MESSAGE_UNEXPECTED_FLAG \u003d \"Unknown flag provided\";","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yunpeng1234":3,"Chang-CH":2,"-":10}},{"path":"src/main/java/seedu/intern/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Chang-CH":1,"-":115}},{"path":"src/main/java/seedu/intern/commons/core/selection/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.core.selection;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"     * @deprecated  Use {@code Selection} instead.","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"     * Symbolized special flag in previous iterations of Delete ALL.","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"    @Deprecated","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"    public void setSpecialIndex() {","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"        zeroBasedIndex \u003d -1;","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"     * @deprecated Use {@code Selection} instead.","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"     * Creates a special {@code Index} by making it -1.","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"    @Deprecated","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"    public static Index fromSpecial() {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"        Index special \u003d new Index(0);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"        special.setSpecialIndex();","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"        return special;","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"yunpeng1234":13,"Chang-CH":8,"-":53}},{"path":"src/main/java/seedu/intern/commons/core/selection/Selection.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.core.selection;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"public class Selection {","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"    private static final String MESSAGE_MISSING_INDEX \u003d \"Selection does not contain an Index.\";","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"    private static final String MESSAGE_MISSING_FLAG \u003d \"Selection does not contain an ALL Flag.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"    private final Index index;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"    private final Boolean isAllSelected;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"    private Selection(Index index, Boolean isAllSelected) {","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"        assert (index \u003d\u003d null || isAllSelected \u003d\u003d null);","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"        this.isAllSelected \u003d isAllSelected;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    public Index getIndex() {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"        return index;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"    public int getIndexOneBased() {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"        if (this.hasIndex()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"            return this.index.getOneBased();","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"            throw new NullPointerException(MESSAGE_MISSING_INDEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"    public int getIndexZeroBased() {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"        if (this.hasIndex()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"            return this.index.getZeroBased();","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"            throw new NullPointerException(MESSAGE_MISSING_INDEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"     * Returns true if ALL flag has been set by the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"    public boolean checkAllSelected() {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"        if (!hasAllSelectFlag()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"            throw new NullPointerException(MESSAGE_MISSING_FLAG);","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"        // isAllSelected should not be false, as constructors are private.","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"        assert this.isAllSelected;","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"        return isAllSelected;","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"    public boolean hasIndex() {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"        return this.index !\u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"    public boolean hasAllSelectFlag() {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"        return this.isAllSelected !\u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"    public static Selection fromAllFlag() {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"        return new Selection(null, true);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"    public static Selection fromIndex(Index index) {","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"nicolej2122"},"content":"        return new Selection(index, null);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"        if (!(other instanceof Selection)) { // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"        Selection otherSelection \u003d (Selection) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"        if (this.hasIndex() !\u003d otherSelection.hasIndex()","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"                || this.hasAllSelectFlag() !\u003d otherSelection.hasAllSelectFlag()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"        if (this.hasIndex() \u0026\u0026 this.getIndexOneBased() !\u003d otherSelection.getIndexOneBased()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"        } else if (this.hasAllSelectFlag()","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"                \u0026\u0026 this.checkAllSelected() !\u003d otherSelection.checkAllSelected()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"nicolej2122"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"yunpeng1234":25,"nicolej2122":4,"Chang-CH":61}},{"path":"src/main/java/seedu/intern/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Chang-CH":1,"-":10}},{"path":"src/main/java/seedu/intern/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Chang-CH":1,"-":20}},{"path":"src/main/java/seedu/intern/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.MainApp;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Chang-CH":2,"-":40}},{"path":"src/main/java/seedu/intern/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Chang-CH":1,"-":34}},{"path":"src/main/java/seedu/intern/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.Config;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Chang-CH":3,"-":20}},{"path":"src/main/java/seedu/intern/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Chang-CH":1,"-":82}},{"path":"src/main/java/seedu/intern/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Chang-CH":3,"-":140}},{"path":"src/main/java/seedu/intern/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.FLAG_ALL;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"nicolej2122"},"content":"import static seedu.intern.logic.parser.CliSyntax.FLAG_TOGGLE;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"     * Returns true if {@code s} represents an integer","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"    public static boolean isInteger(String s) {","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"     * Returns true if {@code s} is an ALL flag.","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"    public static boolean isAll(String s) {","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"        return s.equals(FLAG_ALL);","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"nicolej2122"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"nicolej2122"},"content":"     * Returns true if {@code s} is a TOGGLE flag.","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"nicolej2122"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"nicolej2122"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"nicolej2122"},"content":"    public static boolean isToggle(String s) {","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"nicolej2122"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"nicolej2122"},"content":"        return s.equals(FLAG_TOGGLE);","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nicolej2122":11,"Chang-CH":28,"-":66}},{"path":"src/main/java/seedu/intern/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the InternWatcher.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"     * @see seedu.intern.model.Model#getInternWatcher()","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"    ReadOnlyInternWatcher getInternWatcher();","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"    /** Returns an unmodifiable view of the filtered list of applicants */","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"    ObservableList\u003cApplicant\u003e getFilteredApplicantList();","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"nicolej2122"},"content":"    /** Returns an unmodifiable view of the applicant to view*/","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"nicolej2122"},"content":"    Applicant getApplicant();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"    /** Returns an unmodifiable view of the toggle setting*/","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"nicolej2122"},"content":"    boolean getIsToggle();","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"     * Returns the user prefs\u0027 intern book file path.","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"    Path getInternWatcherFilePath();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yunpeng1234":5,"nicolej2122":6,"Chang-CH":9,"-":36}},{"path":"src/main/java/seedu/intern/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.logic.parser.InternWatcherParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.storage.Storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"    public static final String FILE_ACCESS_DENIED_ERROR_MESSAGE \u003d \"File access denied, ensure save \"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"            + \"file is not set to read only.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    private final InternWatcherParser internWatcherParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"        internWatcherParser \u003d new InternWatcherParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"        Command command \u003d internWatcherParser.parseCommand(commandText);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"            storage.saveInternWatcher(model.getInternWatcher());","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"        } catch (AccessDeniedException ioe) {","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe.getFile() + \". \"","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"                    + FILE_ACCESS_DENIED_ERROR_MESSAGE, ioe);","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"    public ReadOnlyInternWatcher getInternWatcher() {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"        return model.getInternWatcher();","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"    public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"        return model.getFilteredApplicantList();","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":73,"author":{"gitId":"nicolej2122"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"nicolej2122"},"content":"    public Applicant getApplicant() {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"nicolej2122"},"content":"        return model.getApplicant();","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"nicolej2122"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"nicolej2122"},"content":"    public boolean getIsToggle() {","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"nicolej2122"},"content":"        return model.getIsToggle();","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"    public Path getInternWatcherFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"        return model.getInternWatcherFilePath();","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yunpeng1234":8,"nicolej2122":10,"Chang-CH":20,"-":59}},{"path":"src/main/java/seedu/intern/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADUATIONYEARMONTH;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_INSTITUTION;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":" * Adds an applicant to Intern Watcher.","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a applicant to the intern book. \"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"            + PREFIX_GRADE + \"GRADE \"","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"            + PREFIX_INSTITUTION + \"INSTITUTION \"","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"Jeromesyl"},"content":"            + PREFIX_COURSE + \"COURSE \"","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"            + PREFIX_GRADUATIONYEARMONTH + \"GRADUATION_YEAR_MONTH \"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"            + PREFIX_JOB + \"APPLIED_JOB \"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"nicolej2122"},"content":"            + \"[\" + PREFIX_SKILL + \"SKILL]...\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"            + PREFIX_GRADE + \"4.50 \"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"            + PREFIX_INSTITUTION + \"NTU \"","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"Jeromesyl"},"content":"            + PREFIX_COURSE + \"Computer Science \"","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"            + PREFIX_GRADUATIONYEARMONTH + \"06/2025 \"","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"            + PREFIX_JOB + \"Software Engineer \"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"            + PREFIX_STATUS + \"INTERVIEWED \"","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"            + PREFIX_SKILL + \"Java \"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"            + PREFIX_SKILL + \"Python\";","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New applicant added: %1$s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"This applicant already exists in Intern Watcher\";","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Jeromesyl"},"content":"    public static final String MESSAGE_COMMIT_ADD \u003d \"Add applicant: %1$s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"nicolej2122"},"content":"    private final Applicant toAdd;","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"     * Creates an AddCommand to add the specified {@code Applicant}","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"nicolej2122"},"content":"    public AddCommand(Applicant applicant) {","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"nicolej2122"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"nicolej2122"},"content":"        toAdd \u003d applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"        if (model.hasApplicant(toAdd)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"        model.addApplicant(toAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Jeromesyl"},"content":"        model.commitInternWatcher(String.format(MESSAGE_COMMIT_ADD, toAdd));","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yunpeng1234":7,"Jeromesyl":4,"nicolej2122":7,"Chang-CH":22,"-":40,"jackgugz":4}},{"path":"src/main/java/seedu/intern/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.InternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"nicolej2122"},"content":" * Clears the entries from Intern Watcher.","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Jeromesyl"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Intern Watcher has been cleared!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Jeromesyl"},"content":"    public static final String MESSAGE_COMMIT_CLEAR \u003d \"Clear Intern Watcher\";","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"        model.setInternWatcher(new InternWatcher());","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Jeromesyl"},"content":"        model.commitInternWatcher(MESSAGE_COMMIT_CLEAR);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jeromesyl":3,"nicolej2122":1,"Chang-CH":4,"-":17}},{"path":"src/main/java/seedu/intern/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Chang-CH":3,"-":17}},{"path":"src/main/java/seedu/intern/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"    /** The application should display the given applicant details. */","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"    private final boolean view;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean view) {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"        this.view \u003d view;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"nicolej2122"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"nicolej2122"},"content":"    public boolean isView() {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"nicolej2122"},"content":"        return view;","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"nicolej2122"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"nicolej2122"},"content":"                \u0026\u0026 view \u003d\u003d otherCommandResult.view;","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"nicolej2122"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, view);","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nicolej2122":13,"Chang-CH":1,"-":65}},{"path":"src/main/java/seedu/intern/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.commons.core.selection.Selection;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":" * Deletes an applicant identified using it\u0027s displayed index from Intern Watcher.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"            + \": Deletes the applicant identified by the index number used in the displayed applicant list.\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"            + \"Parameters: INDEX (must be a positive integer) or ALL\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 or\"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"            + COMMAND_WORD + \"ALL\";","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MESSAGE_DELETE_APPLICANT_SUCCESS \u003d \"Deleted applicant: %1$s\";","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MESSAGE_DELETE_ALL_SUCCESS \u003d \" %1$s applicants deleted!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Jeromesyl"},"content":"    public static final String MESSAGE_COMMIT_DELETE \u003d \"Delete applicant: %1$s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Jeromesyl"},"content":"    public static final String MESSAGE_COMMIT_DELETE_ALL \u003d \"Delete %1$s applicants\";","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    private final Selection targetSelection;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"    public DeleteCommand(Selection targetSelection) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"        this.targetSelection \u003d targetSelection;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"        if (targetSelection.hasIndex()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"            if (targetSelection.getIndexZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"        if (targetSelection.hasAllSelectFlag() \u0026\u0026 targetSelection.checkAllSelected()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"            int length \u003d lastShownList.size();","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"            for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"                Applicant applicantToDelete \u003d lastShownList.get(0);","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"                model.deleteApplicant(applicantToDelete);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"Jeromesyl"},"content":"            model.commitInternWatcher(String.format(MESSAGE_COMMIT_DELETE_ALL, String.valueOf(length)));","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_ALL_SUCCESS, String.valueOf(length)));","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"            Applicant applicantToDelete \u003d lastShownList.get(targetSelection.getIndexZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"            model.deleteApplicant(applicantToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Jeromesyl"},"content":"            model.commitInternWatcher(String.format(MESSAGE_COMMIT_DELETE, applicantToDelete));","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_APPLICANT_SUCCESS, applicantToDelete));","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"                \u0026\u0026 targetSelection.equals(((DeleteCommand) other).targetSelection)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yunpeng1234":25,"Jeromesyl":4,"nicolej2122":1,"Chang-CH":8,"-":29}},{"path":"src/main/java/seedu/intern/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADUATIONYEARMONTH;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_INSTITUTION;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.model.Model.PREDICATE_SHOW_ALL_APPLICANTS;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.selection.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.selection.Selection;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.ApplicationStatus;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Course;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Grade;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.GraduationYearMonth;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Institution;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.Job;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"nicolej2122"},"content":" * Edits the details of an existing applicant in Intern Watcher.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"nicolej2122"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the applicant identified \"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"            + \"by the index number in the currently displayed list, or all currently displayed applicants. \"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"            + \"Index Parameters: INDEX (must be a positive integer)\"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"            + \"[\" + PREFIX_GRADE + \"GRADE] \"","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"            + \"[\" + PREFIX_INSTITUTION + \"INSTITUTION] \"","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"Jeromesyl"},"content":"            + \"[\" + PREFIX_COURSE + \"COURSE] \"","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"            + \"[\" + PREFIX_GRADUATIONYEARMONTH + \"GRADUATION_YEAR_MONTH] \"","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"            + \"[\" + PREFIX_JOB + \"APPLIED JOB] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"            + \"[\" + PREFIX_STATUS + \"APPLICATION STATUS] \"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"            + \"[\" + PREFIX_SKILL + \"SKILL]...\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"            + \"Example index: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"            + \"ALL Parameters: ALL (must be uppercase) \"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"            + \"\" + PREFIX_STATUS + \"APPLICATION STATUS \\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"            + \"Example all: \" + COMMAND_WORD + \" ALL \"","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"            + PREFIX_STATUS + \"APPLIED\";","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MESSAGE_EDIT_APPLICANT_SUCCESS \u003d \"Edited Applicant: %1$s\";","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"This applicant already exists in Intern Watcher.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"    public static final String MESSAGE_EDIT_ALL_SUCCESS \u003d \"Successfully edited %d of %d applicants.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"Jeromesyl"},"content":"    public static final String MESSAGE_COMMIT_EDIT \u003d \"Edit Applicant: %1$s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"Jeromesyl"},"content":"    public static final String MESSAGE_COMMIT_EDIT_ALL \u003d \"Edit %d applicants.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"    private final Selection selection;","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"nicolej2122"},"content":"    private final EditApplicantDescriptor editApplicantDescriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"     * @deprecated Use selection constructor instead.","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"nicolej2122"},"content":"     * @param index of the applicant in the filtered applicant list to edit","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"nicolej2122"},"content":"     * @param editApplicantDescriptor details to edit the applicant with","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"    @Deprecated","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"nicolej2122"},"content":"    public EditCommand(Index index, EditApplicantDescriptor editApplicantDescriptor) {","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"        this(Selection.fromIndex(index), editApplicantDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"     * Public constructor for {@code EditCommand}.","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"     * @param selection of the applicant(s) in the filtered applicant list to edit","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"     * @param editApplicantDescriptor details to edit the applicant with","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"    public EditCommand(Selection selection, EditApplicantDescriptor editApplicantDescriptor) {","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"Chang-CH"},"content":"        requireNonNull(selection);","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"nicolej2122"},"content":"        requireNonNull(editApplicantDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"Chang-CH"},"content":"        // editApplicant Descriptor should only contain ApplicationStatus if All flag is present","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"Chang-CH"},"content":"        assert(!selection.hasAllSelectFlag()","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"Chang-CH"},"content":"                || selection.checkAllSelected()","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"Chang-CH"},"content":"                \u0026\u0026 editApplicantDescriptor.getName().isEmpty()","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"Chang-CH"},"content":"                \u0026\u0026 editApplicantDescriptor.getCourse().isEmpty()","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"Chang-CH"},"content":"                \u0026\u0026 editApplicantDescriptor.getEmail().isEmpty()","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"Chang-CH"},"content":"                \u0026\u0026 editApplicantDescriptor.getGrade().isEmpty()","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"Chang-CH"},"content":"                \u0026\u0026 editApplicantDescriptor.getGraduationYearMonth().isEmpty()","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"Chang-CH"},"content":"                \u0026\u0026 editApplicantDescriptor.getInstitution().isEmpty()","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"                \u0026\u0026 editApplicantDescriptor.getSkills().isEmpty()","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"Chang-CH"},"content":"                \u0026\u0026 editApplicantDescriptor.getPhone().isEmpty());","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"Chang-CH"},"content":"        this.selection \u003d selection;","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"nicolej2122"},"content":"        this.editApplicantDescriptor \u003d new EditApplicantDescriptor(editApplicantDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"yunpeng1234"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"Chang-CH"},"content":"        if (selection.hasIndex()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"Chang-CH"},"content":"            if (selection.getIndexZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"yunpeng1234"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"Chang-CH"},"content":"            Applicant applicantToEdit \u003d lastShownList.get(selection.getIndexZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"Chang-CH"},"content":"            Applicant editedApplicant \u003d createEditedApplicant(applicantToEdit, editApplicantDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"Chang-CH"},"content":"            if (!applicantToEdit.isSameApplicant(editedApplicant) \u0026\u0026 model.hasApplicant(editedApplicant)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"yunpeng1234"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"Chang-CH"},"content":"            model.setApplicant(applicantToEdit, editedApplicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"yunpeng1234"},"content":"            model.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"Jeromesyl"},"content":"            model.commitInternWatcher(String.format(MESSAGE_COMMIT_EDIT, editedApplicant));","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"yunpeng1234"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_APPLICANT_SUCCESS, editedApplicant));","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"Chang-CH"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"Chang-CH"},"content":"            if (!selection.checkAllSelected()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"Chang-CH"},"content":"                throw new CommandException(Messages.MESSAGE_UNEXPECTED_FLAG);","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"Chang-CH"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"Chang-CH"},"content":"            int totalApplicants \u003d lastShownList.size();","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"Chang-CH"},"content":"            int addSuccesses \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"Chang-CH"},"content":"            // Create copy of list","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"Chang-CH"},"content":"            ArrayList\u003cApplicant\u003e targetApplicants \u003d new ArrayList\u003c\u003e(lastShownList);","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"Chang-CH"},"content":"            for (Applicant applicantToEdit : targetApplicants) {","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"Chang-CH"},"content":"                Applicant editedApplicant \u003d createEditedApplicant(applicantToEdit, editApplicantDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"Chang-CH"},"content":"                if (!applicantToEdit.isSameApplicant(editedApplicant) \u0026\u0026 model.hasApplicant(editedApplicant)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"Chang-CH"},"content":"                    continue;","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"Chang-CH"},"content":"                }","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"Chang-CH"},"content":"                model.setApplicant(applicantToEdit, editedApplicant);","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"Chang-CH"},"content":"                addSuccesses++;","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"Chang-CH"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"Jeromesyl"},"content":"            model.commitInternWatcher(String.format(MESSAGE_COMMIT_EDIT_ALL, addSuccesses));","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"Chang-CH"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_ALL_SUCCESS, addSuccesses, totalApplicants));","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"yunpeng1234"},"content":"     * Creates and returns a {@code Applicant} with the details of {@code applicantToEdit}","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"yunpeng1234"},"content":"     * edited with {@code editApplicantDescriptor}.","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"Chang-CH"},"content":"    private static Applicant createEditedApplicant(Applicant applicantToEdit,","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"nicolej2122"},"content":"                                                   EditApplicantDescriptor editApplicantDescriptor) {","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"nicolej2122"},"content":"        assert applicantToEdit !\u003d null;","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"nicolej2122"},"content":"        Name updatedName \u003d editApplicantDescriptor.getName().orElse(applicantToEdit.getName());","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"nicolej2122"},"content":"        Phone updatedPhone \u003d editApplicantDescriptor.getPhone().orElse(applicantToEdit.getPhone());","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"nicolej2122"},"content":"        Email updatedEmail \u003d editApplicantDescriptor.getEmail().orElse(applicantToEdit.getEmail());","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"nicolej2122"},"content":"        Grade updatedGrade \u003d editApplicantDescriptor.getGrade().orElse(applicantToEdit.getGrade());","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"nicolej2122"},"content":"        Institution updatedInstitution \u003d editApplicantDescriptor.getInstitution()","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"nicolej2122"},"content":"                .orElse(applicantToEdit.getInstitution());","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"nicolej2122"},"content":"        GraduationYearMonth updatedGraduationYearMonth \u003d editApplicantDescriptor.getGraduationYearMonth()","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"nicolej2122"},"content":"                .orElse(applicantToEdit.getGraduationYearMonth());","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"nicolej2122"},"content":"        Course updatedCourse \u003d editApplicantDescriptor.getCourse().orElse(applicantToEdit.getCourse());","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"jackgugz"},"content":"        Job updatedJob \u003d editApplicantDescriptor.getJob().orElse(applicantToEdit.getJob());","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"nicolej2122"},"content":"        ApplicationStatus updatedStatus \u003d editApplicantDescriptor.getApplicationStatus()","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"nicolej2122"},"content":"                .orElse(applicantToEdit.getApplicationStatus());","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"yunpeng1234"},"content":"        Set\u003cSkill\u003e updatedSkills \u003d editApplicantDescriptor.getSkills().orElse(applicantToEdit.getSkills());","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"nicolej2122"},"content":"        return new Applicant(updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"jackgugz"},"content":"                updatedGrade, updatedInstitution, updatedCourse,","lastModifiedDate":"2021-09-25"},{"lineNumber":187,"author":{"gitId":"jackgugz"},"content":"                updatedGraduationYearMonth, updatedJob, updatedStatus, updatedSkills);","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":204,"author":{"gitId":"Chang-CH"},"content":"        return selection.equals(e.selection)","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"nicolej2122"},"content":"                \u0026\u0026 editApplicantDescriptor.equals(e.editApplicantDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":208,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-09-22"},{"lineNumber":209,"author":{"gitId":"nicolej2122"},"content":"        return editApplicantDescriptor.toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":210,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":211,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"nicolej2122"},"content":"     * Stores the details to edit the applicant with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-08"},{"lineNumber":214,"author":{"gitId":"nicolej2122"},"content":"     * corresponding field value of the applicant.","lastModifiedDate":"2021-10-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"nicolej2122"},"content":"    public static class EditApplicantDescriptor {","lastModifiedDate":"2021-10-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"yunpeng1234"},"content":"        private Grade grade;","lastModifiedDate":"2021-09-22"},{"lineNumber":221,"author":{"gitId":"Chang-CH"},"content":"        private Institution institution;","lastModifiedDate":"2021-09-21"},{"lineNumber":222,"author":{"gitId":"jackgugz"},"content":"        private GraduationYearMonth graduationYearMonth;","lastModifiedDate":"2021-09-25"},{"lineNumber":223,"author":{"gitId":"Jeromesyl"},"content":"        private Course course;","lastModifiedDate":"2021-09-23"},{"lineNumber":224,"author":{"gitId":"jackgugz"},"content":"        private Job job;","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"Chang-CH"},"content":"        private ApplicationStatus status;","lastModifiedDate":"2021-09-21"},{"lineNumber":226,"author":{"gitId":"nicolej2122"},"content":"        private Set\u003cSkill\u003e skills;","lastModifiedDate":"2021-09-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"nicolej2122"},"content":"        public EditApplicantDescriptor() {}","lastModifiedDate":"2021-10-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"yunpeng1234"},"content":"         * A defensive copy of {@code skill} is used internally.","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"nicolej2122"},"content":"        public EditApplicantDescriptor(EditApplicantDescriptor toCopy) {","lastModifiedDate":"2021-10-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":238,"author":{"gitId":"yunpeng1234"},"content":"            setGrade(toCopy.grade);","lastModifiedDate":"2021-09-22"},{"lineNumber":239,"author":{"gitId":"Chang-CH"},"content":"            setInstitution(toCopy.institution);","lastModifiedDate":"2021-09-21"},{"lineNumber":240,"author":{"gitId":"jackgugz"},"content":"            setGraduationYearMonth(toCopy.graduationYearMonth);","lastModifiedDate":"2021-09-25"},{"lineNumber":241,"author":{"gitId":"Jeromesyl"},"content":"            setCourse(toCopy.course);","lastModifiedDate":"2021-09-23"},{"lineNumber":242,"author":{"gitId":"jackgugz"},"content":"            setJob(toCopy.job);","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"Chang-CH"},"content":"            setApplicationStatus(toCopy.status);","lastModifiedDate":"2021-09-21"},{"lineNumber":244,"author":{"gitId":"yunpeng1234"},"content":"            setSkills(toCopy.skills);","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"jackgugz"},"content":"            return CollectionUtil.isAnyNonNull(","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"jackgugz"},"content":"                    name, phone, email, grade, institution, graduationYearMonth, course, job, status, skills);","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":279,"author":{"gitId":"yunpeng1234"},"content":"        public void setGrade(Grade grade) {","lastModifiedDate":"2021-09-22"},{"lineNumber":280,"author":{"gitId":"yunpeng1234"},"content":"            this.grade \u003d grade;","lastModifiedDate":"2021-09-22"},{"lineNumber":281,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":282,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":283,"author":{"gitId":"yunpeng1234"},"content":"        public Optional\u003cGrade\u003e getGrade() {","lastModifiedDate":"2021-09-22"},{"lineNumber":284,"author":{"gitId":"yunpeng1234"},"content":"            return Optional.ofNullable(grade);","lastModifiedDate":"2021-09-22"},{"lineNumber":285,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":286,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":287,"author":{"gitId":"jackgugz"},"content":"        public void setGraduationYearMonth(GraduationYearMonth graduationYearMonth) {","lastModifiedDate":"2021-09-25"},{"lineNumber":288,"author":{"gitId":"jackgugz"},"content":"            this.graduationYearMonth \u003d graduationYearMonth;","lastModifiedDate":"2021-09-25"},{"lineNumber":289,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":290,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":291,"author":{"gitId":"jackgugz"},"content":"        public Optional\u003cGraduationYearMonth\u003e getGraduationYearMonth() {","lastModifiedDate":"2021-09-25"},{"lineNumber":292,"author":{"gitId":"jackgugz"},"content":"            return Optional.ofNullable(graduationYearMonth);","lastModifiedDate":"2021-09-25"},{"lineNumber":293,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":294,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":295,"author":{"gitId":"Chang-CH"},"content":"        public void setInstitution(Institution institution) {","lastModifiedDate":"2021-09-21"},{"lineNumber":296,"author":{"gitId":"Chang-CH"},"content":"            this.institution \u003d institution;","lastModifiedDate":"2021-09-21"},{"lineNumber":297,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":298,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":299,"author":{"gitId":"Chang-CH"},"content":"        public Optional\u003cInstitution\u003e getInstitution() {","lastModifiedDate":"2021-09-21"},{"lineNumber":300,"author":{"gitId":"Chang-CH"},"content":"            return Optional.ofNullable(institution);","lastModifiedDate":"2021-09-21"},{"lineNumber":301,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":302,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":303,"author":{"gitId":"Jeromesyl"},"content":"        public void setCourse(Course course) {","lastModifiedDate":"2021-09-23"},{"lineNumber":304,"author":{"gitId":"Jeromesyl"},"content":"            this.course \u003d course;","lastModifiedDate":"2021-09-23"},{"lineNumber":305,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":306,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":307,"author":{"gitId":"Jeromesyl"},"content":"        public Optional\u003cCourse\u003e getCourse() {","lastModifiedDate":"2021-09-23"},{"lineNumber":308,"author":{"gitId":"Jeromesyl"},"content":"            return Optional.ofNullable(course);","lastModifiedDate":"2021-09-23"},{"lineNumber":309,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":310,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":311,"author":{"gitId":"jackgugz"},"content":"        public void setJob(Job job) {","lastModifiedDate":"2021-10-24"},{"lineNumber":312,"author":{"gitId":"jackgugz"},"content":"            this.job \u003d job;","lastModifiedDate":"2021-10-24"},{"lineNumber":313,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":314,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":315,"author":{"gitId":"jackgugz"},"content":"        public Optional\u003cJob\u003e getJob() {","lastModifiedDate":"2021-10-24"},{"lineNumber":316,"author":{"gitId":"jackgugz"},"content":"            return Optional.ofNullable(job);","lastModifiedDate":"2021-10-24"},{"lineNumber":317,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":318,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":319,"author":{"gitId":"Chang-CH"},"content":"        public void setApplicationStatus(ApplicationStatus status) {","lastModifiedDate":"2021-09-21"},{"lineNumber":320,"author":{"gitId":"Chang-CH"},"content":"            this.status \u003d status;","lastModifiedDate":"2021-09-21"},{"lineNumber":321,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":322,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":323,"author":{"gitId":"Chang-CH"},"content":"        public Optional\u003cApplicationStatus\u003e getApplicationStatus() {","lastModifiedDate":"2021-09-21"},{"lineNumber":324,"author":{"gitId":"Chang-CH"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2021-09-21"},{"lineNumber":325,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":326,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":328,"author":{"gitId":"yunpeng1234"},"content":"         * Sets {@code skill} to this object\u0027s {@code skill}.","lastModifiedDate":"2021-10-12"},{"lineNumber":329,"author":{"gitId":"yunpeng1234"},"content":"         * A defensive copy of {@code skill} is used internally.","lastModifiedDate":"2021-10-12"},{"lineNumber":330,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":331,"author":{"gitId":"yunpeng1234"},"content":"        public void setSkills(Set\u003cSkill\u003e skills) {","lastModifiedDate":"2021-10-12"},{"lineNumber":332,"author":{"gitId":"nicolej2122"},"content":"            this.skills \u003d (skills !\u003d null) ? new HashSet\u003c\u003e(skills) : null;","lastModifiedDate":"2021-09-26"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":336,"author":{"gitId":"yunpeng1234"},"content":"         * Returns an unmodifiable skill set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-12"},{"lineNumber":337,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":338,"author":{"gitId":"yunpeng1234"},"content":"         * Returns {@code Optional#empty()} if {@code skill} is null.","lastModifiedDate":"2021-10-12"},{"lineNumber":339,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":340,"author":{"gitId":"yunpeng1234"},"content":"        public Optional\u003cSet\u003cSkill\u003e\u003e getSkills() {","lastModifiedDate":"2021-10-12"},{"lineNumber":341,"author":{"gitId":"nicolej2122"},"content":"            return (skills !\u003d null) ? Optional.of(Collections.unmodifiableSet(skills)) : Optional.empty();","lastModifiedDate":"2021-09-26"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":349,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":352,"author":{"gitId":"nicolej2122"},"content":"            if (!(other instanceof EditApplicantDescriptor)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":357,"author":{"gitId":"nicolej2122"},"content":"            EditApplicantDescriptor e \u003d (EditApplicantDescriptor) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":359,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":360,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":361,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":362,"author":{"gitId":"yunpeng1234"},"content":"                    \u0026\u0026 getGrade().equals(e.getGrade())","lastModifiedDate":"2021-09-22"},{"lineNumber":363,"author":{"gitId":"Chang-CH"},"content":"                    \u0026\u0026 getInstitution().equals(e.getInstitution())","lastModifiedDate":"2021-09-21"},{"lineNumber":364,"author":{"gitId":"jackgugz"},"content":"                    \u0026\u0026 getGraduationYearMonth().equals(e.getGraduationYearMonth())","lastModifiedDate":"2021-09-25"},{"lineNumber":365,"author":{"gitId":"Jeromesyl"},"content":"                    \u0026\u0026 getCourse().equals(e.getCourse())","lastModifiedDate":"2021-09-23"},{"lineNumber":366,"author":{"gitId":"jackgugz"},"content":"                    \u0026\u0026 getJob().equals(e.getJob())","lastModifiedDate":"2021-10-24"},{"lineNumber":367,"author":{"gitId":"Chang-CH"},"content":"                    \u0026\u0026 getApplicationStatus().equals(e.getApplicationStatus())","lastModifiedDate":"2021-09-21"},{"lineNumber":368,"author":{"gitId":"yunpeng1234"},"content":"                    \u0026\u0026 getSkills().equals(e.getSkills());","lastModifiedDate":"2021-10-12"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":370,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":371,"author":{"gitId":"yunpeng1234"},"content":"        @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":372,"author":{"gitId":"yunpeng1234"},"content":"        public String toString() {","lastModifiedDate":"2021-09-22"},{"lineNumber":373,"author":{"gitId":"yunpeng1234"},"content":"            return \"EditApplicantDescriptor{\"","lastModifiedDate":"2021-11-04"},{"lineNumber":374,"author":{"gitId":"yunpeng1234"},"content":"                    + \"name\u003d\" + name","lastModifiedDate":"2021-09-22"},{"lineNumber":375,"author":{"gitId":"yunpeng1234"},"content":"                    + \", phone\u003d\" + phone","lastModifiedDate":"2021-09-22"},{"lineNumber":376,"author":{"gitId":"yunpeng1234"},"content":"                    + \", email\u003d\" + email","lastModifiedDate":"2021-09-22"},{"lineNumber":377,"author":{"gitId":"yunpeng1234"},"content":"                    + \", grade\u003d\" + grade","lastModifiedDate":"2021-09-22"},{"lineNumber":378,"author":{"gitId":"yunpeng1234"},"content":"                    + \", institution\u003d\" + institution","lastModifiedDate":"2021-09-22"},{"lineNumber":379,"author":{"gitId":"jackgugz"},"content":"                    + \", graduation year month\u003d\" + graduationYearMonth","lastModifiedDate":"2021-09-25"},{"lineNumber":380,"author":{"gitId":"Jeromesyl"},"content":"                    + \", course\u003d\" + course","lastModifiedDate":"2021-09-23"},{"lineNumber":381,"author":{"gitId":"jackgugz"},"content":"                    + \", applied job\u003d\" + job","lastModifiedDate":"2021-10-24"},{"lineNumber":382,"author":{"gitId":"Chang-CH"},"content":"                    + \", status\u003d\" + status","lastModifiedDate":"2021-10-17"},{"lineNumber":383,"author":{"gitId":"yunpeng1234"},"content":"                    + \", skill\u003d\" + skills + \u0027}\u0027;","lastModifiedDate":"2021-10-12"},{"lineNumber":384,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":386,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"yunpeng1234":49,"Jeromesyl":17,"nicolej2122":37,"Chang-CH":116,"-":134,"jackgugz":33}},{"path":"src/main/java/seedu/intern/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting InternWatcher as requested ...\";","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"nicolej2122"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yunpeng1234":1,"nicolej2122":1,"Chang-CH":2,"-":15}},{"path":"src/main/java/seedu/intern/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADUATIONYEARMONTH;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_INSTITUTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.ApplicationStatus;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.CombineFiltersPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.Grade;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.GraduationYearMonth;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.Institution;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":" * Filters and lists all applicants in Inter Watcher whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": \"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"            + \"Lists all applicants in InternWatcher with fields matching the arguments provided \"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"            + \"and displays them as a list. \\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"            + \"Filters of institution, course and job are case-insensitive and \"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"            + \"filters of status and skill are case-sensitive. \\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"            + \"For valid grade filter, display list with applicants with grade not less than the filter. \\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"            + \"For valid graduation filter, display list with applicants with graduation strictly before the filter. \\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"            + \"For valid skill filters, \"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"            + \"display list with applicants with all skills specified in the filters. \\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"            + \"For valid status/institution filters, \"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"            + \"display list with applicants matching at least one of statues/institutions specified in the filters. \\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"            + \"For valid course/job filters, display list with applicants containing \"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"            + \"at least one of the courses/jobs specified among the course/job filters. \\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"            + \"[\" + PREFIX_GRADE + \"GRADE] \"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"            + \"[\" + PREFIX_INSTITUTION + \"INSTITUTION]... \"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"            + \"[\" + PREFIX_COURSE + \"COURSE]... \"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"            + \"[\" + PREFIX_GRADUATIONYEARMONTH + \"GRADUATION_YEAR_MONTH] \"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"            + \"[\" + PREFIX_JOB + \"APPLIED JOB]... \"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS]... \"","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"            + \"[\" + PREFIX_SKILL + \"SKILL]...\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"            + \"Example: \" + COMMAND_WORD + \" g/4.50 i/NUS c/computer science a/APPLIED s/HTML\";","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MESSAGE_NOT_FILTERED \u003d \"At least one field to filter must be provided. \\n%1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"    private final FilterApplicantDescriptor filterApplicantDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"    private final CombineFiltersPredicate predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"     * @param filterApplicantDescriptor details to filter the applicant with","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"    public FilterCommand(FilterApplicantDescriptor filterApplicantDescriptor) {","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"        this.filterApplicantDescriptor \u003d new FilterApplicantDescriptor(filterApplicantDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"        this.predicate \u003d new CombineFiltersPredicate(this.filterApplicantDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"        model.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"                String.format(Messages.MESSAGE_APPLICANTS_LISTED_OVERVIEW, model.getFilteredApplicantList().size()));","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"jackgugz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"jackgugz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"jackgugz"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"                \u0026\u0026 filterApplicantDescriptor.equals(((FilterCommand) other).filterApplicantDescriptor)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"jackgugz"},"content":"     * Stores the details to Filter the applicant with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"jackgugz"},"content":"     * corresponding field value of the applicant.","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"yunpeng1234"},"content":"    public static class FilterApplicantDescriptor {","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"jackgugz"},"content":"        private Grade grade;","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"jackgugz"},"content":"        private Set\u003cInstitution\u003e institutions;","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"jackgugz"},"content":"        private GraduationYearMonth graduationYearMonth;","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"jackgugz"},"content":"        private Set\u003cList\u003cString\u003e\u003e courses;","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"jackgugz"},"content":"        private Set\u003cList\u003cString\u003e\u003e jobs;","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"jackgugz"},"content":"        private Set\u003cApplicationStatus\u003e statuses;","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"jackgugz"},"content":"        private Set\u003cSkill\u003e skills;","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"yunpeng1234"},"content":"        public FilterApplicantDescriptor() {}","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"jackgugz"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"jackgugz"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"jackgugz"},"content":"         * A defensive copy of {@code skill} is used internally.","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"jackgugz"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"yunpeng1234"},"content":"        public FilterApplicantDescriptor(FilterApplicantDescriptor toCopy) {","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"jackgugz"},"content":"            setGrade(toCopy.grade);","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"jackgugz"},"content":"            setInstitutions(toCopy.institutions);","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"jackgugz"},"content":"            setGraduationYearMonth(toCopy.graduationYearMonth);","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"jackgugz"},"content":"            setCourses(toCopy.courses);","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"jackgugz"},"content":"            setJobs(toCopy.jobs);","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"jackgugz"},"content":"            setApplicationStatuses(toCopy.statuses);","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"jackgugz"},"content":"            setSkills(toCopy.skills);","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"jackgugz"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"jackgugz"},"content":"         * Returns true if at least one field is Filtered.","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"jackgugz"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"jackgugz"},"content":"        public boolean isAnyFieldFiltered() {","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"jackgugz"},"content":"            return CollectionUtil.isAnyNonNull(grade, institutions, graduationYearMonth,","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"jackgugz"},"content":"                    courses, statuses, jobs, skills);","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"jackgugz"},"content":"        public void setGrade(Grade grade) {","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"jackgugz"},"content":"            this.grade \u003d grade;","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"jackgugz"},"content":"        public Optional\u003cGrade\u003e getGrade() {","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"jackgugz"},"content":"            return Optional.ofNullable(grade);","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"jackgugz"},"content":"        public void setGraduationYearMonth(GraduationYearMonth graduationYearMonth) {","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"jackgugz"},"content":"            this.graduationYearMonth \u003d graduationYearMonth;","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"jackgugz"},"content":"        public Optional\u003cGraduationYearMonth\u003e getGraduationYearMonth() {","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"jackgugz"},"content":"            return Optional.ofNullable(graduationYearMonth);","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"jackgugz"},"content":"        public void setInstitutions(Set\u003cInstitution\u003e institutions) {","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"jackgugz"},"content":"            this.institutions \u003d (institutions !\u003d null) ? new HashSet\u003c\u003e(institutions) : null;","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"jackgugz"},"content":"        public Optional\u003cSet\u003cInstitution\u003e\u003e getInstitutions() {","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"jackgugz"},"content":"            return (institutions !\u003d null) ? Optional.of(Collections.unmodifiableSet(institutions)) : Optional.empty();","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"jackgugz"},"content":"        public void setJobs(Set\u003cList\u003cString\u003e\u003e jobs) {","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"jackgugz"},"content":"            this.jobs \u003d (jobs !\u003d null) ? new HashSet\u003c\u003e(jobs) : null;","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"jackgugz"},"content":"        public Optional\u003cSet\u003cList\u003cString\u003e\u003e\u003e getJobs() {","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"jackgugz"},"content":"            return (jobs !\u003d null) ? Optional.of(Collections.unmodifiableSet(jobs)) : Optional.empty();","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"jackgugz"},"content":"        public void setCourses(Set\u003cList\u003cString\u003e\u003e courses) {","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"jackgugz"},"content":"            this.courses \u003d (courses !\u003d null) ? new HashSet\u003c\u003e(courses) : null;","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"jackgugz"},"content":"        public Optional\u003cSet\u003cList\u003cString\u003e\u003e\u003e getCourses() {","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"jackgugz"},"content":"            return (courses !\u003d null) ? Optional.of(Collections.unmodifiableSet(courses)) : Optional.empty();","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"jackgugz"},"content":"        public void setApplicationStatuses(Set\u003cApplicationStatus\u003e statuses) {","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"jackgugz"},"content":"            this.statuses \u003d (statuses !\u003d null) ? new HashSet\u003c\u003e(statuses) : null;","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"jackgugz"},"content":"        public Optional\u003cSet\u003cApplicationStatus\u003e\u003e getApplicationStatuses() {","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"jackgugz"},"content":"            return (statuses !\u003d null) ? Optional.of(Collections.unmodifiableSet(statuses)) : Optional.empty();","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"jackgugz"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"jackgugz"},"content":"         * Sets {@code skill} to this object\u0027s {@code skill}.","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"jackgugz"},"content":"         * A defensive copy of {@code skill} is used internally.","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"jackgugz"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"jackgugz"},"content":"        public void setSkills(Set\u003cSkill\u003e skills) {","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"jackgugz"},"content":"            this.skills \u003d (skills !\u003d null) ? new HashSet\u003c\u003e(skills) : null;","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"jackgugz"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"jackgugz"},"content":"         * Returns an unmodifiable skill set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"jackgugz"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"jackgugz"},"content":"         * Returns {@code Optional#empty()} if {@code skill} is null.","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"jackgugz"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"jackgugz"},"content":"        public Optional\u003cSet\u003cSkill\u003e\u003e getSkills() {","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"jackgugz"},"content":"            return (skills !\u003d null) ? Optional.of(Collections.unmodifiableSet(skills)) : Optional.empty();","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"jackgugz"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"jackgugz"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"jackgugz"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"jackgugz"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"jackgugz"},"content":"                return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"jackgugz"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"jackgugz"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"yunpeng1234"},"content":"            if (!(other instanceof FilterApplicantDescriptor)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"jackgugz"},"content":"                return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"jackgugz"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"jackgugz"},"content":"            // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"yunpeng1234"},"content":"            FilterApplicantDescriptor e \u003d (FilterApplicantDescriptor) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"jackgugz"},"content":"            return getGrade().equals(e.getGrade())","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"jackgugz"},"content":"                    \u0026\u0026 getInstitutions().equals(e.getInstitutions())","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"jackgugz"},"content":"                    \u0026\u0026 getGraduationYearMonth().equals(e.getGraduationYearMonth())","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"jackgugz"},"content":"                    \u0026\u0026 getCourses().equals(e.getCourses())","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"jackgugz"},"content":"                    \u0026\u0026 getJobs().equals(e.getJobs())","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"jackgugz"},"content":"                    \u0026\u0026 getApplicationStatuses().equals(e.getApplicationStatuses())","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"jackgugz"},"content":"                    \u0026\u0026 getSkills().equals(e.getSkills());","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"jackgugz"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"jackgugz"},"content":"        public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"yunpeng1234"},"content":"            return \"FilterApplicantDescriptor{\"","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"jackgugz"},"content":"                    + \", grade\u003d\" + grade","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"jackgugz"},"content":"                    + \", institution\u003d\" + institutions","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"jackgugz"},"content":"                    + \", graduation year month\u003d\" + graduationYearMonth","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"jackgugz"},"content":"                    + \", course\u003d\" + courses","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"jackgugz"},"content":"                    + \", applied job\u003d\" + jobs","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"jackgugz"},"content":"                    + \", application status\u003d\" + statuses","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"jackgugz"},"content":"                    + \", skill\u003d\" + skills + \u0027}\u0027;","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yunpeng1234":14,"jackgugz":212}},{"path":"src/main/java/seedu/intern/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":" * Finds and lists all applicants in Inter Watcher whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all applicant whose names contain any of \"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"        model.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"                String.format(Messages.MESSAGE_APPLICANTS_LISTED_OVERVIEW, model.getFilteredApplicantList().size()));","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yunpeng1234":2,"nicolej2122":1,"Chang-CH":5,"-":34}},{"path":"src/main/java/seedu/intern/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"nicolej2122"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nicolej2122":1,"Chang-CH":2,"-":18}},{"path":"src/main/java/seedu/intern/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.model.Model.PREDICATE_SHOW_ALL_APPLICANTS;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"nicolej2122"},"content":" * Lists all applicants in Intern Watcher to the user.","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all applicants\";","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"        model.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yunpeng1234":3,"nicolej2122":1,"Chang-CH":2,"-":18}},{"path":"src/main/java/seedu/intern/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jeromesyl"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Jeromesyl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Jeromesyl"},"content":" * Restores the model to a state before a previous undo action.","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"Jeromesyl"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"Jeromesyl"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undone action has been redone:  \\n%1$s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Jeromesyl"},"content":"    public static final String MESSAGE_NO_REDO \u003d \"No action to redo\";","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Jeromesyl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Jeromesyl"},"content":"            + \": Redo previous undone action. Only actions that change the applicant list can be redone.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Jeromesyl"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"Jeromesyl"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"Jeromesyl"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"Jeromesyl"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"Jeromesyl"},"content":"        if (!model.isRedoAvailable()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"Jeromesyl"},"content":"            throw new CommandException(MESSAGE_NO_REDO);","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"Jeromesyl"},"content":"        String redoneCommand \u003d model.redoInternWatcher();","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Jeromesyl"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, redoneCommand));","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"Jeromesyl"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Jeromesyl":30}},{"path":"src/main/java/seedu/intern/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jeromesyl"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Jeromesyl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Jeromesyl"},"content":" * Reverts the model to a previous state.","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"Jeromesyl"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"Jeromesyl"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Action has been undone: \\n%1$s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Jeromesyl"},"content":"    public static final String MESSAGE_NO_UNDO \u003d \"No action to undo\";","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Jeromesyl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"Jeromesyl"},"content":"            + \": Undo previous action. Only actions that change the applicant list can be undone.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Jeromesyl"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"Jeromesyl"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"Jeromesyl"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"Jeromesyl"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"Jeromesyl"},"content":"        if (!model.isUndoAvailable()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"Jeromesyl"},"content":"            throw new CommandException(MESSAGE_NO_UNDO);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"Jeromesyl"},"content":"        String undoneCommand \u003d model.undoInternWatcher();","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Jeromesyl"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, undoneCommand));","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"Jeromesyl"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Jeromesyl":30}},{"path":"src/main/java/seedu/intern/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolej2122"},"content":"// @@author nicolej2122","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"nicolej2122"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"nicolej2122"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"nicolej2122"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"nicolej2122"},"content":"import seedu.intern.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"nicolej2122"},"content":"import seedu.intern.commons.core.selection.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"nicolej2122"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"nicolej2122"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"nicolej2122"},"content":" * User can view applicant details in Intern Watcher.","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"nicolej2122"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"nicolej2122"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"            + \": Displays the applicant details identified by the index number used in the displayed applicant list.\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"nicolej2122"},"content":"            + \"Parameters: INDEX (must be a positive integer) [T] (case sensitive)\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"nicolej2122"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 T\";","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"    public static final String MESSAGE_VIEW_APPLICANT_SUCCESS \u003d \"Displayed Applicant details: %1$s\";","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"    private final Boolean toggle;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"nicolej2122"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"nicolej2122"},"content":"     * User can view applicant details in Intern Watcher.","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"nicolej2122"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"nicolej2122"},"content":"    public ViewCommand(Index index, Boolean toggle) {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"nicolej2122"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"nicolej2122"},"content":"        this.toggle \u003d toggle;","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"nicolej2122"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"nicolej2122"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"nicolej2122"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"nicolej2122"},"content":"        if (targetIndex !\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"nicolej2122"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"nicolej2122"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"nicolej2122"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"nicolej2122"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"nicolej2122"},"content":"        if (toggle) {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"nicolej2122"},"content":"            Applicant applicantToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"nicolej2122"},"content":"            model.displayApplicant(applicantToView, true);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"nicolej2122"},"content":"            return new CommandResult(String.format(MESSAGE_VIEW_APPLICANT_SUCCESS,","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"nicolej2122"},"content":"                    applicantToView), false, false, true);","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"nicolej2122"},"content":"        } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"nicolej2122"},"content":"            Applicant applicantToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"nicolej2122"},"content":"            model.displayApplicant(applicantToView, false);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"nicolej2122"},"content":"            return new CommandResult(String.format(MESSAGE_VIEW_APPLICANT_SUCCESS,","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"nicolej2122"},"content":"                    applicantToView), false, false, true);","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"nicolej2122"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"nicolej2122"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"nicolej2122"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"nicolej2122"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"nicolej2122"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"nicolej2122"},"content":"                \u0026\u0026 targetIndex.equals(((ViewCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"nicolej2122"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"nicolej2122":68}},{"path":"src/main/java/seedu/intern/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Chang-CH":1,"-":16}},{"path":"src/main/java/seedu/intern/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADUATIONYEARMONTH;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_INSTITUTION;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.AddCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.ApplicationStatus;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Course;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Grade;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.GraduationYearMonth;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Institution;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.Job;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"nicolej2122"},"content":"                        PREFIX_SKILL,","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"                        PREFIX_GRADE,","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"                        PREFIX_INSTITUTION,","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"Jeromesyl"},"content":"                        PREFIX_COURSE,","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"                        PREFIX_GRADUATIONYEARMONTH,","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"                        PREFIX_JOB,","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"                        PREFIX_STATUS);","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"        if (!arePrefixesPresent(argMultimap,","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"                PREFIX_NAME,","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"                PREFIX_PHONE,","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"                PREFIX_EMAIL,","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"                PREFIX_GRADE,","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"                PREFIX_INSTITUTION,","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"                PREFIX_COURSE,","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"                PREFIX_GRADUATIONYEARMONTH,","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"                PREFIX_JOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"        Grade grade \u003d ParserUtil.parseGrade(argMultimap.getValue(PREFIX_GRADE).get());","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"        Institution institution \u003d ParserUtil.parseInstitution(argMultimap.getValue(PREFIX_INSTITUTION).get());","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"        GraduationYearMonth graduationYearMonth \u003d ParserUtil.parseGraduationYearMonth(","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"                argMultimap.getValue(PREFIX_GRADUATIONYEARMONTH).get());","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"Jeromesyl"},"content":"        Course course \u003d ParserUtil.parseCourse(argMultimap.getValue(PREFIX_COURSE).get());","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"        Job job \u003d ParserUtil.parseJob(argMultimap.getValue(PREFIX_JOB).get());","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"        Set\u003cSkill\u003e skillList \u003d ParserUtil.parseSkills(argMultimap.getAllValues(PREFIX_SKILL));","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"nicolej2122"},"content":"        Applicant applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isEmpty()) {","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"nicolej2122"},"content":"            applicant \u003d new Applicant(name, phone, email, grade, institution, course,","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"jackgugz"},"content":"                    graduationYearMonth, job, skillList);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"        } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"            ApplicationStatus status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"nicolej2122"},"content":"            applicant \u003d new Applicant(name, phone, email, grade, institution,","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"jackgugz"},"content":"                    course, graduationYearMonth, job, status, skillList);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"nicolej2122"},"content":"        return new AddCommand(applicant);","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"yunpeng1234":12,"Jeromesyl":2,"nicolej2122":5,"Chang-CH":30,"-":38,"jackgugz":13}},{"path":"src/main/java/seedu/intern/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Chang-CH":1,"-":59}},{"path":"src/main/java/seedu/intern/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Chang-CH":1,"-":147}},{"path":"src/main/java/seedu/intern/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"    public static final String FLAG_ALL \u003d \"ALL\";","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"nicolej2122"},"content":"    public static final String FLAG_TOGGLE \u003d \"T\";","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    public static final Prefix PREFIX_GRADE \u003d new Prefix(\"g/\");","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"    public static final Prefix PREFIX_INSTITUTION \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"    @SuppressWarnings(\"SpellCheckingInspection\")","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"    public static final Prefix PREFIX_GRADUATIONYEARMONTH \u003d new Prefix(\"y/\");","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    public static final Prefix PREFIX_JOB \u003d new Prefix(\"j/\");","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Jeromesyl"},"content":"    public static final Prefix PREFIX_COURSE \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"    public static final Prefix PREFIX_SKILL \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"a/\");","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yunpeng1234":1,"Jeromesyl":1,"nicolej2122":2,"Chang-CH":4,"-":12,"jackgugz":3}},{"path":"src/main/java/seedu/intern/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.commons.core.selection.Selection;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"            Selection selection \u003d ParserUtil.parseSelection(args);","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"            return new DeleteCommand(selection);","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"yunpeng1234":3,"Chang-CH":4,"-":22}},{"path":"src/main/java/seedu/intern/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADUATIONYEARMONTH;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_INSTITUTION;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.selection.Selection;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.EditCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GRADE, PREFIX_STATUS,","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"                        PREFIX_SKILL, PREFIX_INSTITUTION, PREFIX_COURSE, PREFIX_GRADUATIONYEARMONTH, PREFIX_JOB);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"        ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"                PREFIX_NAME,","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"                PREFIX_PHONE,","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"                PREFIX_EMAIL,","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"nicolej2122"},"content":"                PREFIX_SKILL,","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"                PREFIX_GRADE,","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"                PREFIX_INSTITUTION,","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"Jeromesyl"},"content":"                PREFIX_COURSE,","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"                PREFIX_GRADUATIONYEARMONTH,","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"                PREFIX_JOB,","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"                PREFIX_STATUS);","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"        Selection selection;","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"            selection \u003d ParserUtil.parseSelection(argMultimap.getPreamble());","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"        if (selection.hasAllSelectFlag() \u0026\u0026 (argMultimap.getValue(PREFIX_NAME).isPresent()","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"                || argMultimap.getValue(PREFIX_PHONE).isPresent()","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"                || argMultimap.getValue(PREFIX_COURSE).isPresent()","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"                || argMultimap.getValue(PREFIX_EMAIL).isPresent()","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"                || argMultimap.getValue(PREFIX_GRADE).isPresent()","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"                || argMultimap.getValue(PREFIX_GRADUATIONYEARMONTH).isPresent()","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"                || argMultimap.getValue(PREFIX_INSTITUTION).isPresent()","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"                || argMultimap.getValue(PREFIX_JOB).isPresent()","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"                || argMultimap.getValue(PREFIX_SKILL).isPresent()","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"                )) {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"            throw new ParseException(\"ALL FLAG CAN ONLY BE USED WITH:\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"                    + \"[\" + PREFIX_STATUS + \"APPLICATION STATUS]\\n\");","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"nicolej2122"},"content":"        EditApplicantDescriptor editApplicantDescriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"nicolej2122"},"content":"            editApplicantDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"nicolej2122"},"content":"            editApplicantDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"nicolej2122"},"content":"            editApplicantDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"        if (argMultimap.getValue(PREFIX_GRADE).isPresent()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"nicolej2122"},"content":"            editApplicantDescriptor.setGrade(ParserUtil.parseGrade(argMultimap.getValue(PREFIX_GRADE).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"        if (argMultimap.getValue(PREFIX_INSTITUTION).isPresent()) {","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"nicolej2122"},"content":"            editApplicantDescriptor","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"                    .setInstitution(ParserUtil.parseInstitution(argMultimap.getValue(PREFIX_INSTITUTION).get()));","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"jackgugz"},"content":"        if (argMultimap.getValue(PREFIX_GRADUATIONYEARMONTH).isPresent()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"nicolej2122"},"content":"            editApplicantDescriptor","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"jackgugz"},"content":"                    .setGraduationYearMonth(ParserUtil.parseGraduationYearMonth(","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"jackgugz"},"content":"                            argMultimap.getValue(PREFIX_GRADUATIONYEARMONTH).get()));","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"Jeromesyl"},"content":"        if (argMultimap.getValue(PREFIX_COURSE).isPresent()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"nicolej2122"},"content":"            editApplicantDescriptor","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"Jeromesyl"},"content":"                    .setCourse(ParserUtil.parseCourse(argMultimap.getValue(PREFIX_COURSE).get()));","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"jackgugz"},"content":"        if (argMultimap.getValue(PREFIX_JOB).isPresent()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"jackgugz"},"content":"            editApplicantDescriptor","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"jackgugz"},"content":"                    .setJob(ParserUtil.parseJob(argMultimap.getValue(PREFIX_JOB).get()));","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"Chang-CH"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"nicolej2122"},"content":"            editApplicantDescriptor","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"Chang-CH"},"content":"                    .setApplicationStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"yunpeng1234"},"content":"        parseSkillsForEdit(argMultimap.getAllValues(PREFIX_SKILL)).ifPresent(editApplicantDescriptor::setSkills);","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"nicolej2122"},"content":"        if (!editApplicantDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":115,"author":{"gitId":"Chang-CH"},"content":"        return new EditCommand(selection, editApplicantDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":119,"author":{"gitId":"yunpeng1234"},"content":"     * Parses {@code Collection\u003cString\u003e skills} into a {@code Set\u003cskill\u003e} if {@code skills} is non-empty.","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"yunpeng1234"},"content":"     * If {@code skills} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"yunpeng1234"},"content":"     * {@code Set\u003cskill\u003e} containing zero skills.","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":123,"author":{"gitId":"yunpeng1234"},"content":"    private Optional\u003cSet\u003cSkill\u003e\u003e parseSkillsForEdit(Collection\u003cString\u003e skills) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"yunpeng1234"},"content":"        assert skills !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":126,"author":{"gitId":"yunpeng1234"},"content":"        if (skills.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":129,"author":{"gitId":"yunpeng1234"},"content":"        Collection\u003cString\u003e skillSet \u003d skills.size() \u003d\u003d 1 \u0026\u0026 skills.contains(\"\") ? Collections.emptySet() : skills;","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"yunpeng1234"},"content":"        return Optional.of(ParserUtil.parseSkills(skillSet));","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"yunpeng1234":17,"Jeromesyl":4,"nicolej2122":11,"Chang-CH":39,"-":48,"jackgugz":14}},{"path":"src/main/java/seedu/intern/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.commands.FilterCommand.MESSAGE_NOT_FILTERED;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADUATIONYEARMONTH;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_INSTITUTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.logic.commands.FilterCommand.FilterApplicantDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.ApplicationStatus;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.Institution;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"                        PREFIX_SKILL,","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"                        PREFIX_GRADE,","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"                        PREFIX_INSTITUTION,","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"                        PREFIX_COURSE,","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"                        PREFIX_JOB,","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"                        PREFIX_GRADUATIONYEARMONTH,","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"                        PREFIX_STATUS);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor filterApplicantDescriptor \u003d new FilterApplicantDescriptor();","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"        if (argMultimap.getValue(PREFIX_GRADE).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"            filterApplicantDescriptor.setGrade(ParserUtil.parseGrade(argMultimap.getValue(PREFIX_GRADE).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"        parseInstitutionsForEdit(argMultimap.getAllValues(PREFIX_INSTITUTION))","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"                .ifPresent(filterApplicantDescriptor::setInstitutions);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"        if (argMultimap.getValue(PREFIX_GRADUATIONYEARMONTH).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"            filterApplicantDescriptor.setGraduationYearMonth(ParserUtil.parseGraduationYearMonth(","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"                    argMultimap.getValue(PREFIX_GRADUATIONYEARMONTH).get()));","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"        parseCoursesForEdit(argMultimap.getAllValues(PREFIX_COURSE)).ifPresent(filterApplicantDescriptor::setCourses);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"        parseApplicationStatusesForEdit(argMultimap.getAllValues(PREFIX_STATUS))","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"                .ifPresent(filterApplicantDescriptor::setApplicationStatuses);","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"        parseSkillsForEdit(argMultimap.getAllValues(PREFIX_SKILL)).ifPresent(filterApplicantDescriptor::setSkills);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"        parseJobsForEdit(argMultimap.getAllValues(PREFIX_JOB)).ifPresent(filterApplicantDescriptor::setJobs);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"        if (!filterApplicantDescriptor.isAnyFieldFiltered()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"            throw new ParseException(String.format(MESSAGE_NOT_FILTERED, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"        return new FilterCommand(filterApplicantDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"    private Optional\u003cSet\u003cInstitution\u003e\u003e parseInstitutionsForEdit(Collection\u003cString\u003e institutions) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"        assert institutions !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"        if (institutions.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"        Collection\u003cString\u003e institutionSet \u003d institutions.size() \u003d\u003d 1 \u0026\u0026 institutions.contains(\"\")","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"                ? Collections.emptySet() : institutions;","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"        return Optional.of(ParserUtil.parseInstitutions(institutionSet));","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"jackgugz"},"content":"    private Optional\u003cSet\u003cList\u003cString\u003e\u003e\u003e parseJobsForEdit(Collection\u003cString\u003e jobs) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"jackgugz"},"content":"        assert jobs !\u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"jackgugz"},"content":"        if (jobs.isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"jackgugz"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"jackgugz"},"content":"        Collection\u003cString\u003e jobSet \u003d jobs.size() \u003d\u003d 1 \u0026\u0026 jobs.contains(\"\")","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"jackgugz"},"content":"                ? Collections.emptySet() : jobs;","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"jackgugz"},"content":"        return Optional.of(ParserUtil.parseJobFilters(jobSet));","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"jackgugz"},"content":"    private Optional\u003cSet\u003cList\u003cString\u003e\u003e\u003e parseCoursesForEdit(Collection\u003cString\u003e courses) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"jackgugz"},"content":"        assert courses !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"jackgugz"},"content":"        if (courses.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"jackgugz"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"jackgugz"},"content":"        Collection\u003cString\u003e courseSet \u003d courses.size() \u003d\u003d 1 \u0026\u0026 courses.contains(\"\")","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"jackgugz"},"content":"                ? Collections.emptySet() : courses;","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"jackgugz"},"content":"        return Optional.of(ParserUtil.parseCourseFilters(courseSet));","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"jackgugz"},"content":"    private Optional\u003cSet\u003cApplicationStatus\u003e\u003e parseApplicationStatusesForEdit(Collection\u003cString\u003e statuses)","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"jackgugz"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"jackgugz"},"content":"        assert statuses !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"jackgugz"},"content":"        if (statuses.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"jackgugz"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"jackgugz"},"content":"        Collection\u003cString\u003e statusSet \u003d statuses.size() \u003d\u003d 1 \u0026\u0026 statuses.contains(\"\")","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"jackgugz"},"content":"                ? Collections.emptySet() : statuses;","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"jackgugz"},"content":"        return Optional.of(ParserUtil.parseApplicationStatuses(statusSet));","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"jackgugz"},"content":"     * Parses {@code Collection\u003cString\u003e skills} into a {@code Set\u003cskill\u003e} if {@code skills} is non-empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"jackgugz"},"content":"     * If {@code skills} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"jackgugz"},"content":"     * {@code Set\u003cskill\u003e} containing zero skills.","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"jackgugz"},"content":"    private Optional\u003cSet\u003cSkill\u003e\u003e parseSkillsForEdit(Collection\u003cString\u003e skills) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"jackgugz"},"content":"        assert skills !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"jackgugz"},"content":"        if (skills.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"jackgugz"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"jackgugz"},"content":"        Collection\u003cString\u003e skillSet \u003d skills.size() \u003d\u003d 1 \u0026\u0026 skills.contains(\"\") ? Collections.emptySet() : skills;","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"jackgugz"},"content":"        return Optional.of(ParserUtil.parseSkills(skillSet));","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yunpeng1234":11,"jackgugz":119}},{"path":"src/main/java/seedu/intern/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.FindCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Chang-CH":5,"-":28}},{"path":"src/main/java/seedu/intern/logic/parser/InternWatcherParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.AddCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.EditCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.FindCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.ListCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.logic.commands.RedoCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.logic.commands.UndoCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"import seedu.intern.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"public class InternWatcherParser {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"Jeromesyl"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"Jeromesyl"},"content":"            return new UndoCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"Jeromesyl"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"Jeromesyl"},"content":"            return new RedoCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"nicolej2122"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"nicolej2122"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yunpeng1234":1,"Jeromesyl":6,"nicolej2122":3,"Chang-CH":13,"-":53,"jackgugz":3}},{"path":"src/main/java/seedu/intern/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Chang-CH":3,"-":13}},{"path":"src/main/java/seedu/intern/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"nicolej2122"},"content":"import static seedu.intern.logic.parser.CliSyntax.FLAG_TOGGLE;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.selection.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.selection.Selection;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.util.StringUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.ApplicationStatus;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Course;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Grade;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.GraduationYearMonth;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Institution;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.Job;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"    public static final String MESSAGE_INVALID_SELECTION \u003d \"Selection is not a non-zero unsigned integer or ALL.\";","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MESSAGE_INVALID_TAG \u003d \"Selection provided does not end with TOGGLE\";","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"     * @throws ParseException if the specified selection is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"     * Parses {@code selection} into a {@code Selection} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"     * trimmed.","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"     * @throws ParseException if the specified selection is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"    public static Selection parseSelection(String selection) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"        String trimmedSelection \u003d selection.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"        if (StringUtil.isInteger(trimmedSelection) \u0026\u0026 !StringUtil.isNonZeroUnsignedInteger(trimmedSelection)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"nicolej2122"},"content":"        } else if (!StringUtil.isNonZeroUnsignedInteger(trimmedSelection)","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"nicolej2122"},"content":"                \u0026\u0026 !StringUtil.isAll(trimmedSelection)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"            throw new ParseException(MESSAGE_INVALID_SELECTION);","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"        if (StringUtil.isAll(trimmedSelection)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"            return Selection.fromAllFlag();","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"            return Selection.fromIndex(Index.fromOneBased(Integer.parseInt(trimmedSelection)));","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"nicolej2122"},"content":"    //@@author nicolej2122","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"nicolej2122"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"nicolej2122"},"content":"     * Parses {@code selection} into a {@code Pair} with a","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"nicolej2122"},"content":"     * {@code Index} and {@code isExtraCondition} flag and returns it.","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"nicolej2122"},"content":"     * Leading and trailing whitespaces will be","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"nicolej2122"},"content":"     * trimmed.","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"nicolej2122"},"content":"     * @throws ParseException if the specified selection is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"nicolej2122"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"nicolej2122"},"content":"    public static Pair\u003cIndex, Boolean\u003e parseView(String selection) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"nicolej2122"},"content":"        String [] trimmedSelection \u003d selection.trim().split(\" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"nicolej2122"},"content":"        if (trimmedSelection.length \u003e 2) {","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"nicolej2122"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"nicolej2122"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"nicolej2122"},"content":"        if (!StringUtil.isInteger(trimmedSelection[0])) {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"nicolej2122"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"nicolej2122"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"nicolej2122"},"content":"        if (StringUtil.isInteger(trimmedSelection[0]) \u0026\u0026 !StringUtil.isNonZeroUnsignedInteger(trimmedSelection[0])) {","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"nicolej2122"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"nicolej2122"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"nicolej2122"},"content":"        if (trimmedSelection.length \u003d\u003d 2 \u0026\u0026 !StringUtil.isToggle(trimmedSelection[1])) {","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"nicolej2122"},"content":"            throw new ParseException(MESSAGE_INVALID_TAG);","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"nicolej2122"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"nicolej2122"},"content":"        if (trimmedSelection.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"nicolej2122"},"content":"            return new Pair\u003c\u003e(Index.fromOneBased(Integer.parseInt(trimmedSelection[0])),","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"nicolej2122"},"content":"                    trimmedSelection[1].equals(FLAG_TOGGLE));","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"nicolej2122"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"nicolej2122"},"content":"            return new Pair\u003c\u003e(Index.fromOneBased(Integer.parseInt(trimmedSelection[0])),","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"nicolej2122"},"content":"                    false);","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"nicolej2122"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"nicolej2122"},"content":"    //@@author","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":154,"author":{"gitId":"yunpeng1234"},"content":"     * Parses a {@code String grade} into an {@code Grade}.","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"yunpeng1234"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"yunpeng1234"},"content":"     * @throws ParseException if the given {@code grade} is invalid.","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"yunpeng1234"},"content":"    public static Grade parseGrade(String grade) throws ParseException {","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"yunpeng1234"},"content":"        requireNonNull(grade);","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"yunpeng1234"},"content":"        String trimmedGrade \u003d grade.trim();","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"yunpeng1234"},"content":"        if (!Grade.isValidGrade(trimmedGrade)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"yunpeng1234"},"content":"            throw new ParseException(Grade.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"yunpeng1234"},"content":"        return new Grade(trimmedGrade);","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":169,"author":{"gitId":"Chang-CH"},"content":"     * Parses a {@code String institution} into an {@code Institution}.","lastModifiedDate":"2021-09-21"},{"lineNumber":170,"author":{"gitId":"Chang-CH"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-21"},{"lineNumber":171,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":172,"author":{"gitId":"Chang-CH"},"content":"     * @throws ParseException if the given {@code institution} is invalid.","lastModifiedDate":"2021-09-21"},{"lineNumber":173,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":174,"author":{"gitId":"Chang-CH"},"content":"    public static Institution parseInstitution(String institution) throws ParseException {","lastModifiedDate":"2021-09-21"},{"lineNumber":175,"author":{"gitId":"Chang-CH"},"content":"        requireNonNull(institution);","lastModifiedDate":"2021-09-21"},{"lineNumber":176,"author":{"gitId":"Chang-CH"},"content":"        String trimmedInstitution \u003d institution.trim();","lastModifiedDate":"2021-09-21"},{"lineNumber":177,"author":{"gitId":"Chang-CH"},"content":"        if (!Institution.isValidInstitution(trimmedInstitution)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":178,"author":{"gitId":"Chang-CH"},"content":"            throw new ParseException(Institution.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":179,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":180,"author":{"gitId":"Chang-CH"},"content":"        return new Institution(trimmedInstitution);","lastModifiedDate":"2021-09-21"},{"lineNumber":181,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":182,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":183,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"jackgugz"},"content":"     * Parses {@code Collection\u003cString\u003e institutions} into a {@code Set\u003cInstitution\u003e}.","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"jackgugz"},"content":"    public static Set\u003cInstitution\u003e parseInstitutions(Collection\u003cString\u003e institutions) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"jackgugz"},"content":"        requireNonNull(institutions);","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"jackgugz"},"content":"        final Set\u003cInstitution\u003e institutionSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"jackgugz"},"content":"        for (String institution : institutions) {","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"jackgugz"},"content":"            institutionSet.add(parseInstitution(institution));","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"jackgugz"},"content":"        return institutionSet;","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":196,"author":{"gitId":"jackgugz"},"content":"     * Parses a {@code String graduationYearMonth} into an {@code GraduationYearMonth}.","lastModifiedDate":"2021-09-25"},{"lineNumber":197,"author":{"gitId":"jackgugz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-25"},{"lineNumber":198,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":199,"author":{"gitId":"jackgugz"},"content":"     * @throws ParseException if the given {@code graduationYearMonth} is invalid.","lastModifiedDate":"2021-09-25"},{"lineNumber":200,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":201,"author":{"gitId":"jackgugz"},"content":"    public static GraduationYearMonth parseGraduationYearMonth(String graduationYearMonth) throws ParseException {","lastModifiedDate":"2021-09-25"},{"lineNumber":202,"author":{"gitId":"jackgugz"},"content":"        requireNonNull(graduationYearMonth);","lastModifiedDate":"2021-09-25"},{"lineNumber":203,"author":{"gitId":"jackgugz"},"content":"        String trimmedYearMonth \u003d graduationYearMonth.trim();","lastModifiedDate":"2021-09-25"},{"lineNumber":204,"author":{"gitId":"jackgugz"},"content":"        if (!GraduationYearMonth.isValidGraduationYearMonth(trimmedYearMonth)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":205,"author":{"gitId":"jackgugz"},"content":"            throw new ParseException(GraduationYearMonth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-25"},{"lineNumber":206,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":207,"author":{"gitId":"jackgugz"},"content":"        return new GraduationYearMonth(trimmedYearMonth);","lastModifiedDate":"2021-09-25"},{"lineNumber":208,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":209,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":210,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"jackgugz"},"content":"     * Parses a {@code String job} into an {@code Job}.","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"jackgugz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"jackgugz"},"content":"     * @throws ParseException if the given {@code job} is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"jackgugz"},"content":"    public static Job parseJob(String job) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"jackgugz"},"content":"        requireNonNull(job);","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"jackgugz"},"content":"        String trimmedJobName \u003d job.trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"jackgugz"},"content":"        if (!Job.isValidJobName(job)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"jackgugz"},"content":"            throw new ParseException(Job.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"jackgugz"},"content":"        return new Job(trimmedJobName);","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"jackgugz"},"content":"     * Parses {@code Collection\u003cString\u003e jobs} into a {@code Set\u003cJob\u003e}.","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"jackgugz"},"content":"    public static Set\u003cJob\u003e parseJobs(Collection\u003cString\u003e jobs) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"jackgugz"},"content":"        requireNonNull(jobs);","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"jackgugz"},"content":"        final Set\u003cJob\u003e jobSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"jackgugz"},"content":"        for (String job : jobs) {","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"jackgugz"},"content":"            jobSet.add(parseJob(job));","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"jackgugz"},"content":"        return jobSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"jackgugz"},"content":"     * Parses a {@code String jobFilter} into a {@code List\u003cString\u003e}.","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"jackgugz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"jackgugz"},"content":"     * @throws ParseException if the given {@code job} is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"jackgugz"},"content":"    public static List\u003cString\u003e parseJobFilter(String jobFilter) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"jackgugz"},"content":"        requireNonNull(jobFilter);","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"jackgugz"},"content":"        String trimmedJob \u003d jobFilter.trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"jackgugz"},"content":"        if (!Job.isValidJobName(trimmedJob)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"jackgugz"},"content":"            throw new ParseException(Job.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"jackgugz"},"content":"        if (trimmedJob.isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"jackgugz"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"jackgugz"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"jackgugz"},"content":"        String[] jobKeywords \u003d trimmedJob.split(\"\\\\s+\");","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"jackgugz"},"content":"        return Arrays.asList(jobKeywords);","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"jackgugz"},"content":"     * Parses {@code Collection\u003cString\u003e jobFilters} into a {@code Set\u003cList\u003cString\u003e\u003e}.","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"jackgugz"},"content":"    public static Set\u003cList\u003cString\u003e\u003e parseJobFilters(Collection\u003cString\u003e jobs) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"jackgugz"},"content":"        requireNonNull(jobs);","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"jackgugz"},"content":"        final Set\u003cList\u003cString\u003e\u003e jobSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"jackgugz"},"content":"        for (String job : jobs) {","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"jackgugz"},"content":"            jobSet.add(parseJobFilter(job));","lastModifiedDate":"2021-10-24"},{"lineNumber":266,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":267,"author":{"gitId":"jackgugz"},"content":"        return jobSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":268,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":269,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":270,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":271,"author":{"gitId":"Jeromesyl"},"content":"     * Parses a {@code String course} into a {@code Course}.","lastModifiedDate":"2021-09-24"},{"lineNumber":272,"author":{"gitId":"Jeromesyl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-23"},{"lineNumber":273,"author":{"gitId":"Jeromesyl"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":274,"author":{"gitId":"Jeromesyl"},"content":"     * @throws ParseException if the given {@code course} is invalid.","lastModifiedDate":"2021-09-24"},{"lineNumber":275,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":276,"author":{"gitId":"Jeromesyl"},"content":"    public static Course parseCourse(String course) throws ParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":277,"author":{"gitId":"Jeromesyl"},"content":"        requireNonNull(course);","lastModifiedDate":"2021-09-23"},{"lineNumber":278,"author":{"gitId":"Jeromesyl"},"content":"        String trimmedCourse \u003d course.trim();","lastModifiedDate":"2021-09-23"},{"lineNumber":279,"author":{"gitId":"Jeromesyl"},"content":"        if (!Course.isValidCourse(trimmedCourse)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":280,"author":{"gitId":"Jeromesyl"},"content":"            throw new ParseException(Course.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":281,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":282,"author":{"gitId":"Jeromesyl"},"content":"        return new Course(trimmedCourse);","lastModifiedDate":"2021-09-23"},{"lineNumber":283,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":284,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":285,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"jackgugz"},"content":"     * Parses a {@code String courseFilter} into a {@code List\u003cString\u003e}.","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"jackgugz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"jackgugz"},"content":"     * @throws ParseException if the given {@code course} is invalid.","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"jackgugz"},"content":"    public static List\u003cString\u003e parseCourseFilter(String courseFilter) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"jackgugz"},"content":"        requireNonNull(courseFilter);","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"jackgugz"},"content":"        String trimmedCourse \u003d courseFilter.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"jackgugz"},"content":"        if (!Course.isValidCourse(trimmedCourse)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":295,"author":{"gitId":"jackgugz"},"content":"            throw new ParseException(Course.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"jackgugz"},"content":"        if (trimmedCourse.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"jackgugz"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"jackgugz"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"jackgugz"},"content":"        String[] courseKeywords \u003d trimmedCourse.split(\"\\\\s+\");","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":303,"author":{"gitId":"jackgugz"},"content":"        return Arrays.asList(courseKeywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":304,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":305,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"jackgugz"},"content":"     * Parses {@code Collection\u003cString\u003e courseFilters} into a {@code Set\u003cList\u003cString\u003e\u003e}.","lastModifiedDate":"2021-10-19"},{"lineNumber":308,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":309,"author":{"gitId":"jackgugz"},"content":"    public static Set\u003cList\u003cString\u003e\u003e parseCourseFilters(Collection\u003cString\u003e courses) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"jackgugz"},"content":"        requireNonNull(courses);","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"jackgugz"},"content":"        final Set\u003cList\u003cString\u003e\u003e courseSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"jackgugz"},"content":"        for (String course : courses) {","lastModifiedDate":"2021-10-19"},{"lineNumber":313,"author":{"gitId":"jackgugz"},"content":"            courseSet.add(parseCourseFilter(course));","lastModifiedDate":"2021-10-19"},{"lineNumber":314,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":315,"author":{"gitId":"jackgugz"},"content":"        return courseSet;","lastModifiedDate":"2021-10-19"},{"lineNumber":316,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":317,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":318,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":319,"author":{"gitId":"Chang-CH"},"content":"     * Parses a {@code String status} into an {@code ApplicationStatus}.","lastModifiedDate":"2021-09-21"},{"lineNumber":320,"author":{"gitId":"Chang-CH"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-21"},{"lineNumber":321,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":322,"author":{"gitId":"Chang-CH"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2021-09-21"},{"lineNumber":323,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":324,"author":{"gitId":"Chang-CH"},"content":"    public static ApplicationStatus parseStatus(String status) throws ParseException {","lastModifiedDate":"2021-09-21"},{"lineNumber":325,"author":{"gitId":"Chang-CH"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-09-21"},{"lineNumber":326,"author":{"gitId":"Chang-CH"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2021-09-21"},{"lineNumber":327,"author":{"gitId":"Chang-CH"},"content":"        if (!ApplicationStatus.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":328,"author":{"gitId":"Chang-CH"},"content":"            throw new ParseException(ApplicationStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":329,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":330,"author":{"gitId":"Chang-CH"},"content":"        return new ApplicationStatus(trimmedStatus);","lastModifiedDate":"2021-09-21"},{"lineNumber":331,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":332,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":333,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":334,"author":{"gitId":"jackgugz"},"content":"     * Parses {@code Collection\u003cString\u003e skills} into a {@code Set\u003cApplicationStatus\u003e}.","lastModifiedDate":"2021-10-19"},{"lineNumber":335,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":336,"author":{"gitId":"jackgugz"},"content":"    public static Set\u003cApplicationStatus\u003e parseApplicationStatuses(Collection\u003cString\u003e applicationStatuses)","lastModifiedDate":"2021-10-19"},{"lineNumber":337,"author":{"gitId":"jackgugz"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":338,"author":{"gitId":"jackgugz"},"content":"        requireNonNull(applicationStatuses);","lastModifiedDate":"2021-10-19"},{"lineNumber":339,"author":{"gitId":"jackgugz"},"content":"        final Set\u003cApplicationStatus\u003e applicationStatusSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":340,"author":{"gitId":"jackgugz"},"content":"        for (String applicationStatus : applicationStatuses) {","lastModifiedDate":"2021-10-19"},{"lineNumber":341,"author":{"gitId":"jackgugz"},"content":"            applicationStatusSet.add(parseStatus(applicationStatus));","lastModifiedDate":"2021-10-19"},{"lineNumber":342,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":343,"author":{"gitId":"jackgugz"},"content":"        return applicationStatusSet;","lastModifiedDate":"2021-10-19"},{"lineNumber":344,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":345,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":347,"author":{"gitId":"yunpeng1234"},"content":"     * Parses a {@code String skill} into a {@code skill}.","lastModifiedDate":"2021-10-12"},{"lineNumber":348,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":349,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":350,"author":{"gitId":"yunpeng1234"},"content":"     * @throws ParseException if the given {@code skill} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":352,"author":{"gitId":"yunpeng1234"},"content":"    public static Skill parseSkill(String skill) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":353,"author":{"gitId":"yunpeng1234"},"content":"        requireNonNull(skill);","lastModifiedDate":"2021-10-12"},{"lineNumber":354,"author":{"gitId":"yunpeng1234"},"content":"        String trimmedSkill \u003d skill.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":355,"author":{"gitId":"yunpeng1234"},"content":"        if (!Skill.isValidSkillName(trimmedSkill)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":356,"author":{"gitId":"nicolej2122"},"content":"            throw new ParseException(Skill.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":358,"author":{"gitId":"yunpeng1234"},"content":"        return new Skill(trimmedSkill);","lastModifiedDate":"2021-10-12"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":362,"author":{"gitId":"yunpeng1234"},"content":"     * Parses {@code Collection\u003cString\u003e skills} into a {@code Set\u003cskill\u003e}.","lastModifiedDate":"2021-10-12"},{"lineNumber":363,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":364,"author":{"gitId":"yunpeng1234"},"content":"    public static Set\u003cSkill\u003e parseSkills(Collection\u003cString\u003e skills) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":365,"author":{"gitId":"yunpeng1234"},"content":"        requireNonNull(skills);","lastModifiedDate":"2021-10-12"},{"lineNumber":366,"author":{"gitId":"nicolej2122"},"content":"        final Set\u003cSkill\u003e skillSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":367,"author":{"gitId":"yunpeng1234"},"content":"        for (String skillName : skills) {","lastModifiedDate":"2021-10-12"},{"lineNumber":368,"author":{"gitId":"yunpeng1234"},"content":"            skillSet.add(parseSkill(skillName));","lastModifiedDate":"2021-10-12"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":370,"author":{"gitId":"nicolej2122"},"content":"        return skillSet;","lastModifiedDate":"2021-09-26"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":372,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yunpeng1234":29,"Jeromesyl":15,"nicolej2122":41,"Chang-CH":65,"-":84,"jackgugz":138}},{"path":"src/main/java/seedu/intern/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Chang-CH":1,"-":38}},{"path":"src/main/java/seedu/intern/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolej2122"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"nicolej2122"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.selection.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":"import seedu.intern.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"nicolej2122"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"nicolej2122"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"nicolej2122"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"nicolej2122"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"nicolej2122"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"nicolej2122"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"nicolej2122"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"nicolej2122"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"            Pair\u003cIndex, Boolean\u003e parsed \u003d ParserUtil.parseView(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"            return new ViewCommand(parsed.getKey(), parsed.getValue());","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"nicolej2122"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"nicolej2122":26,"Chang-CH":4}},{"path":"src/main/java/seedu/intern/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Chang-CH":2,"-":15}},{"path":"src/main/java/seedu/intern/model/InternWatcher.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.UniqueApplicantList;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":" * Wraps all data at the intern-watcher level","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":" * Duplicates are not allowed (by .isSameApplicant comparison)","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"nicolej2122"},"content":"public class InternWatcher implements ReadOnlyInternWatcher {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"    private final UniqueApplicantList applicants;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"        applicants \u003d new UniqueApplicantList();","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"    public InternWatcher() {}","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"     * Creates an InternWatcher using the Applicants in the {@code toBeCopied}","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"nicolej2122"},"content":"    public InternWatcher(ReadOnlyInternWatcher toBeCopied) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"     * Replaces the contents of the applicant list with {@code Applicants}.","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"     * {@code Applicants} must not contain duplicate applicants.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"    public void setApplicants(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"        this.applicants.setApplicants(applicants);","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"     * Resets the existing data of this {@code InternWatcher} with {@code newData}.","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"nicolej2122"},"content":"    public void resetData(ReadOnlyInternWatcher newData) {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"        setApplicants(newData.getApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"    //// applicant-level operations","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"     * Returns true if a applicant with the same identity as {@code applicant} exists in the intern watcher.","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"    public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"nicolej2122"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"        return applicants.contains(applicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"     * Adds a applicant to the intern watcher.","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"     * The applicant must not already exist in the intern watcher.","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"    public void addApplicant(Applicant p) {","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"        applicants.add(p);","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"     * Replaces the given applicant {@code target} in the list with {@code editedApplicant}.","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"     * {@code target} must exist in the intern watcher.","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing applicant in the","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"     * intern watcher.","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"nicolej2122"},"content":"        requireNonNull(editedApplicant);","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"        applicants.setApplicant(target, editedApplicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"     * Removes {@code key} from this {@code InternWatcher}.","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"     * {@code key} must exist in the intern watcher.","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"yunpeng1234"},"content":"    public void removeApplicant(Applicant key) {","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"yunpeng1234"},"content":"        applicants.remove(key);","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"yunpeng1234"},"content":"        return applicants.asUnmodifiableObservableList().size() + \" applicants\";","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"yunpeng1234"},"content":"    public ObservableList\u003cApplicant\u003e getApplicantList() {","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"yunpeng1234"},"content":"        return applicants.asUnmodifiableObservableList();","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"nicolej2122"},"content":"                || (other instanceof InternWatcher // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"yunpeng1234"},"content":"                \u0026\u0026 applicants.equals(((InternWatcher) other).applicants));","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"yunpeng1234"},"content":"        return applicants.hashCode();","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yunpeng1234":23,"nicolej2122":7,"Chang-CH":14,"-":77}},{"path":"src/main/java/seedu/intern/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"    Predicate\u003cApplicant\u003e PREDICATE_SHOW_ALL_APPLICANTS \u003d unused -\u003e true;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"     * Returns the user prefs\u0027 intern watcher file path.","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"    Path getInternWatcherFilePath();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"     * Sets the user prefs\u0027 intern watcher file path.","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"    void setInternWatcherFilePath(Path internWatcherFilePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"     * Replaces intern watcher data with the data in {@code InternWatcher}.","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"    void setInternWatcher(ReadOnlyInternWatcher internWatcher);","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"    /** Returns the InternWatcher */","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"    ReadOnlyInternWatcher getInternWatcher();","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"     * Returns true if a applicant with the same identity as {@code applicant} exists in the","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"     * intern watcher.","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"    boolean hasApplicant(Applicant applicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"nicolej2122"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"nicolej2122"},"content":"     * Displays given applicant","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"nicolej2122"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"nicolej2122"},"content":"    void displayApplicant(Applicant applicant, boolean isToggle);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"     * Deletes the given applicant.","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"     * The applicant must exist in the intern watcher.","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"    void deleteApplicant(Applicant target);","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"     * Adds the given applicant.","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"     * {@code applicant} must not already exist in the intern watcher.","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"    void addApplicant(Applicant applicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"     * Replaces the given applicant {@code target} with {@code editedApplicant}.","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"     * {@code target} must exist in the intern watcher.","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing applicant in the","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"     * intern watcher.","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"    void setApplicant(Applicant target, Applicant editedApplicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"    /** Returns an unmodifiable view of the filtered applicant list */","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"    ObservableList\u003cApplicant\u003e getFilteredApplicantList();","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"nicolej2122"},"content":"    /** Returns an unmodifiable view of the applicant to display */","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"nicolej2122"},"content":"    Applicant getApplicant();","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"nicolej2122"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"nicolej2122"},"content":"     * Updates the selected applicant.","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"nicolej2122"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"nicolej2122"},"content":"    void updateApplicant(Applicant newApplicant);","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"Chang-CH"},"content":"     * Updates the filter of the filtered applicant list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"Chang-CH"},"content":"    void updateFilteredApplicantList(Predicate\u003cApplicant\u003e predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"Jeromesyl"},"content":"     * Saves the current InternWatcher state to its history.","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"Jeromesyl"},"content":"    void commitInternWatcher(String commitMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"Jeromesyl"},"content":"     * Restores the InternWatcher to a previous state from its history.","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"Jeromesyl"},"content":"     * @return Command that was undone.","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"Jeromesyl"},"content":"    String undoInternWatcher() throws CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"Jeromesyl"},"content":"     * Restores the InternWatcher to a previously undone state from its history.","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"Jeromesyl"},"content":"     * @return Command that was redone.","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"Jeromesyl"},"content":"    String redoInternWatcher() throws CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"Jeromesyl"},"content":"     * Returns true if the model has a previous state to revert to.","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"Jeromesyl"},"content":"     * @return if an undo action is possible.","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"Jeromesyl"},"content":"    boolean isUndoAvailable();","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"Jeromesyl"},"content":"     * Returns true if the model has a previous undone state to restore to.","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"Jeromesyl"},"content":"     * @return if a redo action is possible.","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"Jeromesyl"},"content":"    boolean isRedoAvailable();","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"nicolej2122"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"nicolej2122"},"content":"     * Returns the toggle flag","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"nicolej2122"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"nicolej2122"},"content":"    boolean getIsToggle();","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yunpeng1234":4,"Jeromesyl":31,"nicolej2122":17,"Chang-CH":26,"-":59}},{"path":"src/main/java/seedu/intern/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":" * Represents the in-memory model of the intern book data.","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"Jeromesyl"},"content":"    private final VersionedInternWatcher internWatcher;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"nicolej2122"},"content":"    private final FilteredList\u003cApplicant\u003e filteredApplicants;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"    private Applicant applicant;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"    private boolean isToggle;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"     * Initializes a ModelManager with the given internWatcher and userPrefs.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"    public ModelManager(ReadOnlyInternWatcher internWatcher, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"        requireAllNonNull(internWatcher, userPrefs);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"        logger.fine(\"Initializing with intern book: \" + internWatcher + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"Jeromesyl"},"content":"        this.internWatcher \u003d new VersionedInternWatcher(internWatcher);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"        filteredApplicants \u003d new FilteredList\u003c\u003e(this.internWatcher.getApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"nicolej2122"},"content":"        this(new InternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"    public Path getInternWatcherFilePath() {","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"        return userPrefs.getInternWatcherFilePath();","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"    public void setInternWatcherFilePath(Path internWatcherFilePath) {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"        requireNonNull(internWatcherFilePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"        userPrefs.setInternWatcherFilePath(internWatcherFilePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d InternWatcher \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"    public void setInternWatcher(ReadOnlyInternWatcher internWatcher) {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"        this.internWatcher.resetData(internWatcher);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"    public ReadOnlyInternWatcher getInternWatcher() {","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"nicolej2122"},"content":"        return internWatcher;","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"    public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"nicolej2122"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"yunpeng1234"},"content":"        return internWatcher.hasApplicant(applicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"Chang-CH"},"content":"    public void deleteApplicant(Applicant target) {","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"yunpeng1234"},"content":"        internWatcher.removeApplicant(target);","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"Chang-CH"},"content":"    public void addApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"yunpeng1234"},"content":"        internWatcher.addApplicant(applicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"yunpeng1234"},"content":"        updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"Chang-CH"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"nicolej2122"},"content":"        requireAllNonNull(target, editedApplicant);","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"yunpeng1234"},"content":"        internWatcher.setApplicant(target, editedApplicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"yunpeng1234"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Applicant List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"yunpeng1234"},"content":"     * Returns an unmodifiable view of the list of {@code Applicant} backed by the internal list of","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"yunpeng1234"},"content":"     * {@code versionedInternWatcher}","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":124,"author":{"gitId":"yunpeng1234"},"content":"    public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"nicolej2122"},"content":"        return filteredApplicants;","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"Chang-CH"},"content":"    public void updateFilteredApplicantList(Predicate\u003cApplicant\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"nicolej2122"},"content":"        filteredApplicants.setPredicate(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"nicolej2122"},"content":"        return internWatcher.equals(other.internWatcher)","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"nicolej2122"},"content":"                \u0026\u0026 filteredApplicants.equals(other.filteredApplicants);","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"Jeromesyl"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undo/Redo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"Jeromesyl"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"Jeromesyl"},"content":"    public void commitInternWatcher(String commitMessage) {","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"Jeromesyl"},"content":"        internWatcher.commitState(commitMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"Jeromesyl"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"Jeromesyl"},"content":"    public String undoInternWatcher() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"Jeromesyl"},"content":"        return internWatcher.undo();","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"Jeromesyl"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"Jeromesyl"},"content":"    public String redoInternWatcher() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"Jeromesyl"},"content":"        return internWatcher.redo();","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"Jeromesyl"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"Jeromesyl"},"content":"    public boolean isUndoAvailable() {","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"Jeromesyl"},"content":"        return internWatcher.canUndo();","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"Jeromesyl"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"Jeromesyl"},"content":"    public boolean isRedoAvailable() {","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"Jeromesyl"},"content":"        return internWatcher.canRedo();","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"nicolej2122"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d View \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"nicolej2122"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"nicolej2122"},"content":"    public void displayApplicant(Applicant applicant, boolean isToggle) {","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"nicolej2122"},"content":"        updateApplicant(applicant);","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"nicolej2122"},"content":"        updateGetIsToggle(isToggle);","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"nicolej2122"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"nicolej2122"},"content":"    public boolean getIsToggle() {","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"nicolej2122"},"content":"        return isToggle;","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"nicolej2122"},"content":"    private void updateGetIsToggle(boolean isToggle) {","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"nicolej2122"},"content":"        this.isToggle \u003d isToggle;","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"nicolej2122"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"nicolej2122"},"content":"    public Applicant getApplicant() {","lastModifiedDate":"2021-10-23"},{"lineNumber":198,"author":{"gitId":"nicolej2122"},"content":"        return applicant;","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"nicolej2122"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"nicolej2122"},"content":"    public void updateApplicant(Applicant newApplicant) {","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"nicolej2122"},"content":"        applicant \u003d newApplicant;","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yunpeng1234":21,"Jeromesyl":30,"nicolej2122":37,"Chang-CH":13,"-":105}},{"path":"src/main/java/seedu/intern/model/ReadOnlyInternWatcher.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":" * Unmodifiable view of an intern book","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"nicolej2122"},"content":"public interface ReadOnlyInternWatcher {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"     * Returns an unmodifiable view of the applicants list.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"     * This list will not contain any duplicate applicants.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    ObservableList\u003cApplicant\u003e getApplicantList();","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yunpeng1234":3,"nicolej2122":1,"Chang-CH":3,"-":10}},{"path":"src/main/java/seedu/intern/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    Path getInternWatcherFilePath();","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"yunpeng1234":1,"Chang-CH":2,"-":13}},{"path":"src/main/java/seedu/intern/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"    private Path internWatcherFilePath \u003d Paths.get(\"data\" , \"internwatcher.json\");","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"        setInternWatcherFilePath(newUserPrefs.getInternWatcherFilePath());","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"    public Path getInternWatcherFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"        return internWatcherFilePath;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"    public void setInternWatcherFilePath(Path internWatcherFilePath) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"        requireNonNull(internWatcherFilePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"        this.internWatcherFilePath \u003d internWatcherFilePath;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"                \u0026\u0026 internWatcherFilePath.equals(o.internWatcherFilePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"        return Objects.hash(guiSettings, internWatcherFilePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"        sb.append(\"\\nLocal data file location : \" + internWatcherFilePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yunpeng1234":10,"Chang-CH":2,"-":75}},{"path":"src/main/java/seedu/intern/model/VersionedInternWatcher.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jeromesyl"},"content":"package seedu.intern.model;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Jeromesyl"},"content":"import static seedu.intern.logic.commands.RedoCommand.MESSAGE_NO_REDO;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Jeromesyl"},"content":"import static seedu.intern.logic.commands.UndoCommand.MESSAGE_NO_UNDO;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Jeromesyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Jeromesyl"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"//Solution adapted from","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"Jeromesyl"},"content":"//https://github.com/AY2021S1-CS2103T-W11-4/tp/blob/master/src/main/java/seedu/address/model/VersionedCliniCal.java","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"Jeromesyl"},"content":"//Reused code by @eugene3231 with minor modifications.","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"Jeromesyl"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Jeromesyl"},"content":" * {@code InternWatcher} that keeps track of a list of its previous states.","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Jeromesyl"},"content":" *","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"Jeromesyl"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Jeromesyl"},"content":"public class VersionedInternWatcher extends InternWatcher {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Jeromesyl"},"content":"    private List\u003cReadOnlyInternWatcher\u003e watcherStateList;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Jeromesyl"},"content":"    private List\u003cString\u003e commandHistory;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Jeromesyl"},"content":"    private int currStatePointer;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Jeromesyl"},"content":"     * Initialises a VersionedInternWatcher with the initial state.","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Jeromesyl"},"content":"     * @param initialState","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Jeromesyl"},"content":"    public VersionedInternWatcher(ReadOnlyInternWatcher initialState) {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Jeromesyl"},"content":"        super(initialState);","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"Jeromesyl"},"content":"        this.currStatePointer \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"Jeromesyl"},"content":"        this.watcherStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"Jeromesyl"},"content":"        this.commandHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Jeromesyl"},"content":"        this.watcherStateList.add(new InternWatcher(initialState));","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Jeromesyl"},"content":"        this.commandHistory.add(\"Initial State\");","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Jeromesyl"},"content":"     * Saves a copy of the current InternWatcher state to the watcherStateList.","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Jeromesyl"},"content":"    public void commitState(String commitMessage) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Jeromesyl"},"content":"        int listSize \u003d watcherStateList.size();","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Jeromesyl"},"content":"        watcherStateList.subList(currStatePointer + 1, listSize).clear();","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"Jeromesyl"},"content":"        commandHistory.subList(currStatePointer + 1, listSize).clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Jeromesyl"},"content":"        watcherStateList.add(new InternWatcher(this));","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"Jeromesyl"},"content":"        commandHistory.add(commitMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Jeromesyl"},"content":"        currStatePointer++;","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Jeromesyl"},"content":"     * Restores the InternWatcher to a previous state in the watcherStateList.","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Jeromesyl"},"content":"    public String undo() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Jeromesyl"},"content":"        if (!canUndo()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Jeromesyl"},"content":"            throw new CommandException(MESSAGE_NO_UNDO);","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"Jeromesyl"},"content":"        currStatePointer--;","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"Jeromesyl"},"content":"        resetData(watcherStateList.get(currStatePointer));","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"Jeromesyl"},"content":"        return commandHistory.get(currStatePointer + 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Jeromesyl"},"content":"     * Restores the InternWatcher to a previously undone state in the watcherStateList.","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Jeromesyl"},"content":"    public String redo() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Jeromesyl"},"content":"        if (!canRedo()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Jeromesyl"},"content":"            throw new CommandException(MESSAGE_NO_REDO);","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Jeromesyl"},"content":"        currStatePointer++;","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"Jeromesyl"},"content":"        resetData(watcherStateList.get(currStatePointer));","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"Jeromesyl"},"content":"        return commandHistory.get(currStatePointer);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"Jeromesyl"},"content":"     * Return true if there is a previous state to restore in the watcherStateList.","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"Jeromesyl"},"content":"     * @return if undo is possible.","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"Jeromesyl"},"content":"    public boolean canUndo() {","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"Jeromesyl"},"content":"        return currStatePointer \u003e 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Jeromesyl"},"content":"     * Return true if there is a previously undone state to restore in the watcherStateList.","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"Jeromesyl"},"content":"     * @return if redo is possible.","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"Jeromesyl"},"content":"    public boolean canRedo() {","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"Jeromesyl"},"content":"        return currStatePointer \u003c watcherStateList.size() - 1;","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"Jeromesyl"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"Jeromesyl":88}},{"path":"src/main/java/seedu/intern/model/applicant/Applicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"nicolej2122"},"content":" * Represents an applicant in Intern Watcher.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":" * Guarantees: details are present and not null,","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"nicolej2122"},"content":" * field values are validated, immutable.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"public class Applicant {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"    private static final String[] DEFAULT_ACADEMICS \u003d { \"\", \"\", \"\", \"\" };","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"    private final Grade grade;","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"    private final Institution institution;","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"    private final GraduationYearMonth graduationYearMonth;","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"Jeromesyl"},"content":"    private final Course course;","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"    private final Job job;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"    private final ApplicationStatus status;","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"nicolej2122"},"content":"    private final Set\u003cSkill\u003e skills \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"    public Applicant(Name name, Phone phone, Email email, Grade grade,","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"nicolej2122"},"content":"                     Institution institution, Course course, GraduationYearMonth graduationYearMonth,","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"                     Job job, Set\u003cSkill\u003e skills) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"        this(name, phone, email, grade, institution, course, graduationYearMonth, job,","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"nicolej2122"},"content":"                new ApplicationStatus(ApplicationStatus.DEFAULT_STATUS), skills);","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"     * Overloaded constructor for creating candidates with default status","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"nicolej2122"},"content":"    public Applicant(Name name, Phone phone, Email email, Grade grade,","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"                     Institution institution, Course course, GraduationYearMonth graduationYearMonth,","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"                     Job job, ApplicationStatus status, Set\u003cSkill\u003e skills) {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"        requireAllNonNull(name, phone, email, grade, status, institution, course, graduationYearMonth, job, skills);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"        this.institution \u003d institution;","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"        this.graduationYearMonth \u003d graduationYearMonth;","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"        this.job \u003d job;","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"Jeromesyl"},"content":"        this.course \u003d course;","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"nicolej2122"},"content":"        this.skills.addAll(skills);","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"    public Grade getGrade() {","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"        return grade;","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"    public Institution getInstitution() {","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"        return institution;","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"Jeromesyl"},"content":"    public Course getCourse() {","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"Jeromesyl"},"content":"        return course;","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"    public ApplicationStatus getApplicationStatus() {","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"        return status;","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"jackgugz"},"content":"    public GraduationYearMonth getGraduationYearMonth() {","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"jackgugz"},"content":"        return graduationYearMonth;","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"jackgugz"},"content":"    public Job getJob() {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"jackgugz"},"content":"        return job;","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"yunpeng1234"},"content":"    public String[] getAcademics() {","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"Chang-CH"},"content":"        return new String[]{institution.toString(), course.toString(), graduationYearMonth.toString(),","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"Chang-CH"},"content":"                grade.toString()};","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"Chang-CH"},"content":"    public static String[] getDefaultAcademics() {","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"        return DEFAULT_ACADEMICS;","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":112,"author":{"gitId":"yunpeng1234"},"content":"     * Returns an immutable skill set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"Chang-CH"},"content":"    public Set\u003cSkill\u003e getSkills() {","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"nicolej2122"},"content":"        return Collections.unmodifiableSet(skills);","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"Chang-CH"},"content":"     * Returns true if both applicants have the same name.","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"yunpeng1234"},"content":"     * This defines a weaker notion of equality between two applicants.","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"Chang-CH"},"content":"    public boolean isSameApplicant(Applicant otherApplicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"nicolej2122"},"content":"        if (otherApplicant \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"nicolej2122"},"content":"        return otherApplicant !\u003d null","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"nicolej2122"},"content":"                \u0026\u0026 otherApplicant.getName().equals(getName());","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"Chang-CH"},"content":"     * Returns true if both applicants have the same identity and data fields.","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"yunpeng1234"},"content":"     * This defines a stronger notion of equality between two applicants.","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"nicolej2122"},"content":"        if (!(other instanceof Applicant)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"nicolej2122"},"content":"        Applicant otherApplicant \u003d (Applicant) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"nicolej2122"},"content":"        return otherApplicant.getName().equals(getName())","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"nicolej2122"},"content":"                \u0026\u0026 otherApplicant.getPhone().equals(getPhone())","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"nicolej2122"},"content":"                \u0026\u0026 otherApplicant.getEmail().equals(getEmail())","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"nicolej2122"},"content":"                \u0026\u0026 otherApplicant.getGrade().equals(getGrade())","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"nicolej2122"},"content":"                \u0026\u0026 otherApplicant.getInstitution().equals(getInstitution())","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"nicolej2122"},"content":"                \u0026\u0026 otherApplicant.getGraduationYearMonth().equals(getGraduationYearMonth())","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"jackgugz"},"content":"                \u0026\u0026 otherApplicant.getJob().equals(getJob())","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"nicolej2122"},"content":"                \u0026\u0026 otherApplicant.getCourse().equals(getCourse())","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"nicolej2122"},"content":"                \u0026\u0026 otherApplicant.getApplicationStatus().equals(getApplicationStatus())","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"Chang-CH"},"content":"                \u0026\u0026 otherApplicant.getSkills().equals(getSkills());","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"Chang-CH"},"content":"        return Objects.hash(name, phone, email, grade, institution, course,","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"jackgugz"},"content":"                graduationYearMonth, job, status, skills);","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"Chang-CH"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2021-09-21"},{"lineNumber":171,"author":{"gitId":"Chang-CH"},"content":"                .append(getApplicationStatus())","lastModifiedDate":"2021-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"yunpeng1234"},"content":"                .append(\"; Grade: \")","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"yunpeng1234"},"content":"                .append(getGrade())","lastModifiedDate":"2021-09-22"},{"lineNumber":178,"author":{"gitId":"Chang-CH"},"content":"                .append(\"; Institution: \")","lastModifiedDate":"2021-09-21"},{"lineNumber":179,"author":{"gitId":"jackgugz"},"content":"                .append(getInstitution())","lastModifiedDate":"2021-09-25"},{"lineNumber":180,"author":{"gitId":"Jeromesyl"},"content":"                .append(\"; Course: \")","lastModifiedDate":"2021-09-23"},{"lineNumber":181,"author":{"gitId":"jackgugz"},"content":"                .append(getCourse())","lastModifiedDate":"2021-09-25"},{"lineNumber":182,"author":{"gitId":"jackgugz"},"content":"                .append(\"; Graduation Year Month: \")","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"jackgugz"},"content":"                .append(getGraduationYearMonth())","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"jackgugz"},"content":"                .append(\"; Applied Job: \")","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"jackgugz"},"content":"                .append(getJob());","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":187,"author":{"gitId":"Chang-CH"},"content":"        Set\u003cSkill\u003e skills \u003d getSkills();","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"nicolej2122"},"content":"        if (!skills.isEmpty()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"yunpeng1234"},"content":"            builder.append(\"; Skills: \");","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"nicolej2122"},"content":"            skills.forEach(builder::append);","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yunpeng1234":16,"Jeromesyl":8,"nicolej2122":26,"Chang-CH":37,"-":82,"jackgugz":26}},{"path":"src/main/java/seedu/intern/model/applicant/ApplicationStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":" * Represents an applicant\u0027s application status in Intern Watcher.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"public class ApplicationStatus {","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"    public enum Status {","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"        APPLIED(\"#980000\"), RECEIVED(\"#984200\"), SCHEDULED(\"#986900\"),","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"        INTERVIEWED(\"#a77f03\"), OFFERED(\"#0c8900\"), ACCEPTED(\"#004b83\"), REJECTED(\"#c4c4c4\");","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"        private final String colour;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"        private Status(String colour) {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"            this.colour \u003d colour;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"        private Status() {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"            this.colour \u003d \"#000000\";","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"    public static final Status DEFAULT_STATUS \u003d Status.APPLIED;","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Status only supports the current statuses:\"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"            + Status.APPLIED.name() + \", \" + Status.RECEIVED.name() + \", \" + Status.SCHEDULED.name() + \", \"","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"            + Status.INTERVIEWED.name() + \", \" + Status.OFFERED.name() + \", \" + Status.ACCEPTED.name() + \", \"","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"            + Status.REJECTED.name();","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"    public static final String VALIDATION_REGEX \u003d Status.APPLIED.name() + \"|\" + Status.RECEIVED.name() + \"|\"","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"            + Status.SCHEDULED.name() + \"|\" + Status.INTERVIEWED.name() + \"|\" + Status.OFFERED.name() + \"|\"","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"            + Status.ACCEPTED.name() + \"|\" + Status.REJECTED.name();","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"    public final Status value;","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"     * Constructs a {@code ApplicationStatus}.","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"     * @param status A valid status string.","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"    public ApplicationStatus(String status) {","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"        value \u003d Status.valueOf(status);","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"     * Constructs a {@code ApplicationStatus}.","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"     * @param status A valid status.","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"    public ApplicationStatus(Status status) {","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"        value \u003d status;","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"     * Constructs a {@code ApplicationStatus}.","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"    public ApplicationStatus() {","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"        value \u003d DEFAULT_STATUS;","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"     * Returns true if a given string is a valid status.","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"     * Returns the colour each application status should be set to.","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"    public String getColour() {","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"        return value.colour;","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"    public String toString() {","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"        return value.name();","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"                || (other instanceof ApplicationStatus // instanceof handles nulls","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"                \u0026\u0026 value \u003d\u003d ((ApplicationStatus) other).value); // state check","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"nicolej2122":1,"Chang-CH":95}},{"path":"src/main/java/seedu/intern/model/applicant/CombineFiltersPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.commons.util.StringUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.logic.commands.FilterCommand.FilterApplicantDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":" * Tests that a {@code Applicant}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"public class CombineFiltersPredicate implements Predicate\u003cApplicant\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"    private final FilterApplicantDescriptor filterApplicantDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    private boolean result;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"     * Constructor for a CombineFilterPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"     * @param filterApplicantDescriptor a FilterApplicantDescriptor that has details of the filters","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"    public CombineFiltersPredicate(FilterCommand.FilterApplicantDescriptor filterApplicantDescriptor) {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"        this.filterApplicantDescriptor \u003d filterApplicantDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"        result \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"    public boolean test(Applicant applicant) {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"        result \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"        Optional\u003cGrade\u003e grade \u003d filterApplicantDescriptor.getGrade();","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"        Optional\u003cSet\u003cInstitution\u003e\u003e institutions \u003d filterApplicantDescriptor.getInstitutions();","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"        Optional\u003cGraduationYearMonth\u003e graduationYearMonth \u003d filterApplicantDescriptor.getGraduationYearMonth();","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"        Optional\u003cSet\u003cList\u003cString\u003e\u003e\u003e courses \u003d filterApplicantDescriptor.getCourses();","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"        Optional\u003cSet\u003cList\u003cString\u003e\u003e\u003e jobs \u003d filterApplicantDescriptor.getJobs();","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"        Optional\u003cSet\u003cApplicationStatus\u003e\u003e statuses \u003d filterApplicantDescriptor.getApplicationStatuses();","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"        Optional\u003cSet\u003cSkill\u003e\u003e skills \u003d filterApplicantDescriptor.getSkills();","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"        grade.ifPresent(gradeContent -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"                setResult(result \u0026\u0026 Float.compare(Float.parseFloat(applicant.getGrade().value),","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"                                Float.parseFloat(gradeContent.value)) \u003e\u003d 0));","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"        institutions.ifPresent(institutionsContent -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"                setResult(result \u0026\u0026 institutionsContent.stream().anyMatch(institution -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"                        StringUtil.containsWordIgnoreCase(applicant.getInstitution().value, institution.value))));","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"        graduationYearMonth.ifPresent(graduationContent -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"                setResult(result \u0026\u0026 applicant.getGraduationYearMonth().isBefore(graduationContent)));","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"        courses.ifPresent(coursesContent -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"                setResult(result \u0026\u0026 coursesContent.stream().anyMatch(courseFilter -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"                        courseFilter.stream().allMatch(courseKeyword -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"                                StringUtil.containsWordIgnoreCase(applicant.getCourse().value, courseKeyword)))));","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"        jobs.ifPresent(jobsContent -\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"                setResult(result \u0026\u0026 jobsContent.stream().anyMatch(jobFilter -\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"                        jobFilter.stream().allMatch(jobKeyword -\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"                                StringUtil.containsWordIgnoreCase(applicant.getJob().jobName, jobKeyword)))));","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"        statuses.ifPresent(statusesContent -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"                setResult(result \u0026\u0026 statusesContent.stream().anyMatch(status -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"                        StringUtil.containsWordIgnoreCase(applicant.getApplicationStatus().value.name(),","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"                                status.value.name()))));","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"        skills.ifPresent(skillsContent -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"                setResult(result \u0026\u0026 applicant.getSkills().containsAll(skillsContent)));","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"        return result;","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"                || (other instanceof CombineFiltersPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"                \u0026\u0026 filterApplicantDescriptor.equals(((CombineFiltersPredicate) other)","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"                .filterApplicantDescriptor)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"    private void setResult(boolean newResult) {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"        result \u003d newResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yunpeng1234":14,"jackgugz":64}},{"path":"src/main/java/seedu/intern/model/applicant/Course.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"Jeromesyl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"Jeromesyl"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":" * Represents an applicant\u0027s course in Intern Watcher.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCourse(String)}","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Jeromesyl"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":"public class Course {","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"Jeromesyl"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"Jeromesyl"},"content":"            \"Course Names should only contain alphabet characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"Jeromesyl"},"content":"    /*","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"Jeromesyl"},"content":"     * The first character of the course must not be a whitespace,","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"Jeromesyl"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"Jeromesyl"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z][a-zA-Z ]*\";","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"Jeromesyl"},"content":"    public final String value;","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"Jeromesyl"},"content":"     * Constructs a {@code Course}.","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"Jeromesyl"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"Jeromesyl"},"content":"     * @param course A valid Course name.","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"Jeromesyl"},"content":"    public Course(String course) {","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"Jeromesyl"},"content":"        requireNonNull(course);","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"Jeromesyl"},"content":"        checkArgument(isValidCourse(course), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"Jeromesyl"},"content":"        value \u003d course;","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"Jeromesyl"},"content":"     * Returns true if a given string is a valid course name.","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"Jeromesyl"},"content":"    public static boolean isValidCourse(String test) {","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"Jeromesyl"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"Jeromesyl"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"Jeromesyl"},"content":"    public String toString() {","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"Jeromesyl"},"content":"        return value;","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"Jeromesyl"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"Jeromesyl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"Jeromesyl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"Jeromesyl"},"content":"                || (other instanceof Course // instanceof handles nulls","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"Jeromesyl"},"content":"                \u0026\u0026 value.equals(((Course) other).value)); // state check","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"Jeromesyl"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"Jeromesyl"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"Jeromesyl"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"Jeromesyl"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"Jeromesyl":55,"nicolej2122":1,"Chang-CH":2}},{"path":"src/main/java/seedu/intern/model/applicant/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":" * Represents an applicant\u0027s email in Intern Watcher.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"     * @param email A valid email intern.","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nicolej2122":1,"Chang-CH":3,"-":67}},{"path":"src/main/java/seedu/intern/model/applicant/Grade.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":" * Represents an applicant\u0027s grade in the Intern Watcher.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGrade(String)}","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"public class Grade {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"            \"Grade should be 2dp, from 0.00 to 5.00 inclusive\";","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-5]+(\\\\.[0-9][0-9])\";","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"    public final String value;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"     * Constructs a {@code Grade}.","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"     * @param grade A valid grade.","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"    public Grade(String grade) {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"        requireNonNull(grade);","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"        checkArgument(isValidGrade(grade), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"        value \u003d grade;","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"     * Returns true if a given string is a valid grade name.","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"    public static boolean isValidGrade(String test) {","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 isValidGradeRange(test);","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"    public static boolean isValidGradeRange(String test) {","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"        return Float.parseFloat(test) \u003c\u003d 5.00 \u0026\u0026 Float.parseFloat(test) \u003e\u003d 0;","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"        return value;","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"                || (other instanceof Grade // instanceof handles nulls","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"                \u0026\u0026 value.equals(((Grade) other).value)); // state check","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"yunpeng1234":54,"nicolej2122":1,"Chang-CH":2}},{"path":"src/main/java/seedu/intern/model/applicant/GraduationYearMonth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolej2122"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"nicolej2122"},"content":"import static seedu.intern.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":" * Represents an applicant\u0027s GraduationYearMonth in Intern Watcher.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGraduationYearMonth(String)}","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"public class GraduationYearMonth {","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"Jeromesyl"},"content":"            \"Expected Graduation Year Month should be valid, eg. after 01/2020, and be of format MM/yyyy\";","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9]{2}/[0-9]{4}\";","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MM/yyyy\");","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"    public final YearMonth yearMonth;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"     * Constructs a {@code GraduationYearMonth}.","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"     * @param graduationYearMonth A valid grade.","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"    public GraduationYearMonth(String graduationYearMonth) {","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"        requireNonNull(graduationYearMonth);","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"        checkArgument(isValidGraduationYearMonth(graduationYearMonth), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"        yearMonth \u003d YearMonth.parse(graduationYearMonth, DATE_TIME_FORMATTER);","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"     * Returns true if a given string is a valid grade name.","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"    public static boolean isValidGraduationYearMonth(String test) {","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"Jeromesyl"},"content":"        int monthHolder;","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"Jeromesyl"},"content":"        int yearHolder;","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"nicolej2122"},"content":"        if (test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Jeromesyl"},"content":"            monthHolder \u003d Integer.parseInt(test.split(\"/\")[0]);","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"Jeromesyl"},"content":"            yearHolder \u003d Integer.parseInt(test.split(\"/\")[1]);","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"nicolej2122"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"nicolej2122"},"content":"            return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"nicolej2122"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Jeromesyl"},"content":"        // month in between 1-12 inclusive and year lower bound of 2020","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"Jeromesyl"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 monthHolder \u003e\u003d 1 \u0026\u0026 monthHolder \u003c\u003d 12 \u0026\u0026 yearHolder \u003e\u003d 2020;","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"    public String toString() {","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"        return yearMonth.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"                || (other instanceof GraduationYearMonth // instanceof handles nulls","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"                \u0026\u0026 yearMonth.equals(((GraduationYearMonth) other).yearMonth)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"        return yearMonth.hashCode();","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"     * Returns true should this YearMonth is before the specified year-month.","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"     * @param other specified YearMonth for comparison","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"     * @return if this happens earlier than other","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"    public boolean isBefore(GraduationYearMonth other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"        return yearMonth.isBefore(other.yearMonth);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Jeromesyl":7,"nicolej2122":8,"jackgugz":63}},{"path":"src/main/java/seedu/intern/model/applicant/Institution.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":" * Represents an applicant\u0027s institution in Intern Watcher.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidInstitution(String)}","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"public class Institution {","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"            \"Institution Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"    /*","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"     * The first character of the intern must not be a whitespace,","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"    public final String value;","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"     * Constructs a {@code Institute}.","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"     * @param institute A valid institution name.","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"    public Institution(String institute) {","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"        requireNonNull(institute);","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"        checkArgument(isValidInstitution(institute), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"        value \u003d institute;","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"     * Returns true if a given string is a valid institution name.","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"    public static boolean isValidInstitution(String test) {","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"    public String toString() {","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"        return value;","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"                || (other instanceof Institution // instanceof handles nulls","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"                \u0026\u0026 value.equals(((Institution) other).value)); // state check","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"nicolej2122":1,"Chang-CH":57}},{"path":"src/main/java/seedu/intern/model/applicant/Job.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":" * Represents a Job in Intern Watcher.","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidJobName(String)}","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"public class Job {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"            \"Job Names should only contain alphabet characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Jeromesyl"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z][a-zA-Z ]*\";","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"    public final String jobName;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"     * Constructs a {@code Job}.","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"     * @param jobName A valid job name.","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"    public Job(String jobName) {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"        requireNonNull(jobName);","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"        checkArgument(isValidJobName(jobName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"        this.jobName \u003d jobName;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"     * Returns true if a given string is a valid job name.","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"    public static boolean isValidJobName(String test) {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"                || (other instanceof Job // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"                \u0026\u0026 jobName.equals(((Job) other).jobName)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"        return jobName.hashCode();","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"    public String toString() {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"        return jobName;","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Jeromesyl":1,"jackgugz":54}},{"path":"src/main/java/seedu/intern/model/applicant/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":" * Represents an applicant\u0027s name in Intern Watcher.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"     * The first character of the intern must not be a whitespace,","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"                \u0026\u0026 fullName.equalsIgnoreCase(((Name) other).fullName)); // state check","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nicolej2122":1,"Chang-CH":3,"-":54,"jackgugz":1}},{"path":"src/main/java/seedu/intern/model/applicant/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.util.StringUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"nicolej2122"},"content":" * Tests that a {@code Applicant}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"nicolej2122"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cApplicant\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"nicolej2122"},"content":"    public boolean test(Applicant applicant) {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(applicant.getName().fullName, keyword));","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"nicolej2122":4,"Chang-CH":2,"-":25}},{"path":"src/main/java/seedu/intern/model/applicant/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":" * Represents an applicant\u0027s phone number in Intern Watcher.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nicolej2122":1,"Chang-CH":2,"-":50}},{"path":"src/main/java/seedu/intern/model/applicant/UniqueApplicantList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.exceptions.ApplicantNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.exceptions.DuplicateApplicantException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":" * A list of applicants that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":" * A applicant is considered unique by comparing using {@code Applicant#isSameApplicant(Applicant)}. As such, adding and","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":" * updating of applicants uses Applicant#isSameApplicant(Applicant) for equality so as to ensure that the applicant","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":" * being added or updated is unique in terms of identity in the UniqueApplicantList. However, the removal of a","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":" * applicant uses Applicant#equals(Object) so as to ensure that the applicant with exactly the same fields will be","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":" * removed.","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":" * @see Applicant#isSameApplicant(Applicant)","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"public class UniqueApplicantList implements Iterable\u003cApplicant\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"    private final ObservableList\u003cApplicant\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"    private final ObservableList\u003cApplicant\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"     * Returns true if the list contains an equivalent applicant as the given argument.","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"nicolej2122"},"content":"    public boolean contains(Applicant toCheck) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"        return internalList.stream().anyMatch(toCheck::isSameApplicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"nicolej2122"},"content":"     * Adds an applicant to the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"nicolej2122"},"content":"     * The applicant must not already exist in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"nicolej2122"},"content":"    public void add(Applicant toAdd) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"            throw new DuplicateApplicantException();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"nicolej2122"},"content":"     * Replaces the applicant {@code target} in the list with {@code editedApplicant}.","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"nicolej2122"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing applicant in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"nicolej2122"},"content":"        requireAllNonNull(target, editedApplicant);","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"            throw new ApplicantNotFoundException();","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"        if (!target.isSameApplicant(editedApplicant) \u0026\u0026 contains(editedApplicant)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"            throw new DuplicateApplicantException();","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"nicolej2122"},"content":"        internalList.set(index, editedApplicant);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"nicolej2122"},"content":"     * Removes the equivalent applicant from the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"nicolej2122"},"content":"     * The applicant must exist in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"nicolej2122"},"content":"    public void remove(Applicant toRemove) {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"            throw new ApplicantNotFoundException();","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"    public void setApplicants(UniqueApplicantList replacement) {","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"nicolej2122"},"content":"     * Replaces the contents of this list with {@code applicants}.","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"nicolej2122"},"content":"     * {@code applicants} must not contain duplicate applicants.","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"    public void setApplicants(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"nicolej2122"},"content":"        requireAllNonNull(applicants);","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"        if (!applicantsAreUnique(applicants)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"            throw new DuplicateApplicantException();","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"nicolej2122"},"content":"        internalList.setAll(applicants);","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"nicolej2122"},"content":"    public ObservableList\u003cApplicant\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"nicolej2122"},"content":"    public Iterator\u003cApplicant\u003e iterator() {","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"nicolej2122"},"content":"                || (other instanceof UniqueApplicantList // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"nicolej2122"},"content":"                        \u0026\u0026 internalList.equals(((UniqueApplicantList) other).internalList));","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"nicolej2122"},"content":"     * Returns true if {@code applicants} contains only unique applicants.","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"Chang-CH"},"content":"    private boolean applicantsAreUnique(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"nicolej2122"},"content":"        for (int i \u003d 0; i \u003c applicants.size() - 1; i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"nicolej2122"},"content":"            for (int j \u003d i + 1; j \u003c applicants.size(); j++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"Chang-CH"},"content":"                if (applicants.get(i).isSameApplicant(applicants.get(j))) {","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nicolej2122":25,"Chang-CH":25,"-":88}},{"path":"src/main/java/seedu/intern/model/applicant/exceptions/ApplicantNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":" * Signals that the operation is unable to find the specified applicant.","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"public class ApplicantNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Chang-CH":6}},{"path":"src/main/java/seedu/intern/model/applicant/exceptions/DuplicateApplicantException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":" * Signals that the operation will result in duplicate Applicants (Applicants are considered duplicates if they have","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" * the same identity).","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"public class DuplicateApplicantException extends RuntimeException {","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"    public DuplicateApplicantException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"        super(\"Operation would result in duplicate applicants\");","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"yunpeng1234":3,"Chang-CH":3,"-":5}},{"path":"src/main/java/seedu/intern/model/skills/Skill.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.skills;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":" * Represents a Skill in Intern Watcher.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidSkillName(String)}","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":"public class Skill {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Skill names should only contain alphabet characters, \"","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"            + \"spaces and \u0027+#\u0027 symbols, and it should not be blank\";","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+[\\\\p{Alnum} ]*[+#]*\";","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"    public final String skillName;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"nicolej2122"},"content":"     * Constructs a {@code Skill}.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"     * @param skillName A valid skill name.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    public Skill(String skillName) {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"        requireNonNull(skillName);","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"        checkArgument(isValidSkillName(skillName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"        this.skillName \u003d skillName;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"     * Returns true if a given string is a valid skill name.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"    public static boolean isValidSkillName(String test) {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"                || (other instanceof Skill // instanceof handles nulls","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"                \u0026\u0026 skillName.equals(((Skill) other).skillName)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"        return skillName.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"        return \u0027[\u0027 + skillName + \u0027]\u0027;","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yunpeng1234":1,"nicolej2122":5,"Chang-CH":13,"-":34,"jackgugz":2}},{"path":"src/main/java/seedu/intern/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.InternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Course;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Grade;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.GraduationYearMonth;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Institution;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.Job;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":" * Contains utility methods for populating {@code InternWatcher} with sample data.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"    public static Applicant[] getSampleApplicants() {","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"        return new Applicant[] {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"            new Applicant(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"                    new Grade(\"4.50\"), new Institution(\"NTU\"), new Course(\"Computer Science\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"                    new GraduationYearMonth(\"06/2020\"), new Job(\"Software Engineer\"), getSkillSet(\"HTML\")),","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"            new Applicant(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"                    new Grade(\"4.60\"), new Institution(\"SUTD\"), new Course(\"Computer Science\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"                    new GraduationYearMonth(\"06/2020\"), new Job(\"Hardware Engineer\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"                    getSkillSet(\"HTML\", \"CSS\")),","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"nicolej2122"},"content":"            new Applicant(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"                    new Grade(\"4.70\"), new Institution(\"YALE\"), new Course(\"Computer Science\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"                    new GraduationYearMonth(\"06/2020\"), new Job(\"Front Desk\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"                    getSkillSet(\"Java\")),","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"nicolej2122"},"content":"            new Applicant(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"                    new Grade(\"4.80\"), new Institution(\"NTU\"), new Course(\"Computer Science\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"                    new GraduationYearMonth(\"06/2020\"), new Job(\"Finance Manger\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"                    getSkillSet(\"Python\")),","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"nicolej2122"},"content":"            new Applicant(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"                    new Grade(\"4.90\"), new Institution(\"SUSS\"), new Course(\"Computer Science\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"                    new GraduationYearMonth(\"06/2020\"), new Job(\"Engineer Trainee\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"                    getSkillSet(\"CSS\")),","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"nicolej2122"},"content":"            new Applicant(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"                    new Grade(\"5.00\"), new Institution(\"SMU\"), new Course(\"Computer Science\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"                    new GraduationYearMonth(\"06/2020\"), new Job(\"Account\"), getSkillSet(\"Office\"))","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"    public static ReadOnlyInternWatcher getSampleInternWatcher() {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"nicolej2122"},"content":"        InternWatcher sampleAb \u003d new InternWatcher();","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"        for (Applicant sampleApplicant : getSampleApplicants()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"            sampleAb.addApplicant(sampleApplicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a skill set containing the list of strings given.","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"    public static Set\u003cSkill\u003e getSkillSet(String... strings) {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"nicolej2122"},"content":"                .map(Skill::new)","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"yunpeng1234":8,"nicolej2122":9,"Chang-CH":12,"-":24,"jackgugz":16}},{"path":"src/main/java/seedu/intern/storage/InternWatcherStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"nicolej2122"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"nicolej2122"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"nicolej2122"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.InternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"nicolej2122"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"nicolej2122"},"content":" * Represents a storage for {@link InternWatcher}.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"nicolej2122"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":"public interface InternWatcherStorage {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"nicolej2122"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"nicolej2122"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"nicolej2122"},"content":"    Path getInternWatcherFilePath();","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"nicolej2122"},"content":"     * Returns InternWatcher data as a {@link ReadOnlyInternWatcher}.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"nicolej2122"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"nicolej2122"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"    Optional\u003cReadOnlyInternWatcher\u003e readInternWatcher() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"     * @see #getInternWatcherFilePath()","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"nicolej2122"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"nicolej2122"},"content":"    Optional\u003cReadOnlyInternWatcher\u003e readInternWatcher(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"nicolej2122"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"nicolej2122"},"content":"     * Saves the given {@link ReadOnlyInternWatcher} to the storage.","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"nicolej2122"},"content":"     * @param internWatcher cannot be null.","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"nicolej2122"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"nicolej2122"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"    void saveInternWatcher(ReadOnlyInternWatcher internWatcher) throws IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"nicolej2122"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"nicolej2122"},"content":"     * @see #saveInternWatcher(ReadOnlyInternWatcher)","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"nicolej2122"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"nicolej2122"},"content":"    void saveInternWatcher(ReadOnlyInternWatcher internWatcher, Path filePath) throws IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"nicolej2122"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"nicolej2122":42,"Chang-CH":4}},{"path":"src/main/java/seedu/intern/storage/JsonAdaptedApplicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.ApplicationStatus;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Course;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Grade;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.GraduationYearMonth;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Institution;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.Job;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":" * Jackson-friendly version of {@link Applicant}.","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"class JsonAdaptedApplicant {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Applicant\u0027s %s field is missing!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"    private final String grade;","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"    private final String institution;","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"    private final String graduationYearMonth;","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"Jeromesyl"},"content":"    private final String course;","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"    private final String job;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"    private final String status;","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"    private final List\u003cJsonAdaptedSkill\u003e skills \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"     * Constructs a {@code JsonAdaptedApplicant} with the given applicant details.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"nicolej2122"},"content":"    public JsonAdaptedApplicant(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"                                @JsonProperty(\"email\") String email, @JsonProperty(\"grade\") String grade,","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"                                @JsonProperty(\"institution\") String institution, @JsonProperty(\"course\") String course,","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"nicolej2122"},"content":"                                @JsonProperty(\"graduationYearMonth\") String graduationYearMonth,","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"                                @JsonProperty(\"job\") String job,","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"nicolej2122"},"content":"                                @JsonProperty(\"status\") String status,","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"                                @JsonProperty(\"skills\") List\u003cJsonAdaptedSkill\u003e skills) {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"        this.institution \u003d institution;","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"Jeromesyl"},"content":"        this.course \u003d course;","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"        this.graduationYearMonth \u003d graduationYearMonth;","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"        this.job \u003d job;","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"        if (skills !\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"            this.skills.addAll(skills);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"     * Converts a given {@code Applicant} into this class for Jackson use.","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"nicolej2122"},"content":"    public JsonAdaptedApplicant(Applicant source) {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"        grade \u003d source.getGrade().value;","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"        institution \u003d source.getInstitution().value;","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"Jeromesyl"},"content":"        course \u003d source.getCourse().value;","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"        graduationYearMonth \u003d source.getGraduationYearMonth().toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"        job \u003d source.getJob().jobName;","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"        status \u003d source.getApplicationStatus().value.toString();","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"        skills.addAll(source.getSkills().stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"nicolej2122"},"content":"                .map(JsonAdaptedSkill::new)","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"     * Converts this Jackson-friendly adapted applicant object into the model\u0027s {@code Applicant} object.","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted applicant.","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"nicolej2122"},"content":"    public Applicant toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"yunpeng1234"},"content":"        final List\u003cSkill\u003e applicantSkills \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"        for (JsonAdaptedSkill tag : skills) {","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"yunpeng1234"},"content":"            applicantSkills.add(tag.toModelType());","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"yunpeng1234"},"content":"        if (grade \u003d\u003d null) {","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"yunpeng1234"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Grade.class.getSimpleName()));","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"yunpeng1234"},"content":"        if (!Grade.isValidGrade(grade)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"yunpeng1234"},"content":"            throw new IllegalValueException(Grade.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"yunpeng1234"},"content":"        final Grade modelGrade \u003d new Grade(grade);","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"Chang-CH"},"content":"        if (institution \u003d\u003d null) {","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"Chang-CH"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"Chang-CH"},"content":"                    Institution.class.getSimpleName()));","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"Chang-CH"},"content":"        if (!Institution.isValidInstitution(institution)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"Chang-CH"},"content":"            throw new IllegalValueException(Institution.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"Chang-CH"},"content":"        final Institution modelInstitution \u003d new Institution(institution);","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"jackgugz"},"content":"        if (graduationYearMonth \u003d\u003d null) {","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"jackgugz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"jackgugz"},"content":"                    GraduationYearMonth.class.getSimpleName()));","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"jackgugz"},"content":"        if (!GraduationYearMonth.isValidGraduationYearMonth(graduationYearMonth)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"jackgugz"},"content":"            throw new IllegalValueException(GraduationYearMonth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"jackgugz"},"content":"        final GraduationYearMonth modelYearMonth \u003d new GraduationYearMonth(graduationYearMonth);","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"Jeromesyl"},"content":"        if (course \u003d\u003d null) {","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"Jeromesyl"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"Jeromesyl"},"content":"                    Course.class.getSimpleName()));","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"Jeromesyl"},"content":"        if (!Course.isValidCourse(course)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"Jeromesyl"},"content":"            throw new IllegalValueException(Course.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"Jeromesyl"},"content":"        final Course modelCourse \u003d new Course(course);","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"jackgugz"},"content":"        if (job \u003d\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"jackgugz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"jackgugz"},"content":"                    Job.class.getSimpleName()));","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"jackgugz"},"content":"        if (!Job.isValidJobName(job)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"jackgugz"},"content":"            throw new IllegalValueException(Job.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"jackgugz"},"content":"        final Job modelJob \u003d new Job(job);","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"jackgugz"},"content":"        final ApplicationStatus modelStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"Chang-CH"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2021-09-21"},{"lineNumber":168,"author":{"gitId":"Chang-CH"},"content":"            modelStatus \u003d new ApplicationStatus();","lastModifiedDate":"2021-09-21"},{"lineNumber":169,"author":{"gitId":"Chang-CH"},"content":"        } else if (!ApplicationStatus.isValidStatus(status)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":170,"author":{"gitId":"Chang-CH"},"content":"            throw new IllegalValueException(ApplicationStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-21"},{"lineNumber":171,"author":{"gitId":"Chang-CH"},"content":"        } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":172,"author":{"gitId":"Chang-CH"},"content":"            modelStatus \u003d new ApplicationStatus(status);","lastModifiedDate":"2021-09-21"},{"lineNumber":173,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":174,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":175,"author":{"gitId":"yunpeng1234"},"content":"        final Set\u003cSkill\u003e modelSkills \u003d new HashSet\u003c\u003e(applicantSkills);","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"nicolej2122"},"content":"        return new Applicant(modelName, modelPhone, modelEmail, modelGrade,","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"jackgugz"},"content":"                modelInstitution, modelCourse, modelYearMonth , modelJob, modelStatus, modelSkills);","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yunpeng1234":19,"Jeromesyl":12,"nicolej2122":9,"Chang-CH":45,"-":68,"jackgugz":29}},{"path":"src/main/java/seedu/intern/storage/JsonAdaptedSkill.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":" * Jackson-friendly version of {@link Skill}.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"nicolej2122"},"content":"class JsonAdaptedSkill {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":"    private final String skillName;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code skillName}.","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"    public JsonAdaptedSkill(String skillName) {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"        this.skillName \u003d skillName;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"    public JsonAdaptedSkill(Skill source) {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"        skillName \u003d source.skillName;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"nicolej2122"},"content":"    public String getSkillName() {","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"nicolej2122"},"content":"        return skillName;","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"nicolej2122"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Skill} object.","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted skill.","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"nicolej2122"},"content":"    public Skill toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"        if (!Skill.isValidSkillName(skillName)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"nicolej2122"},"content":"            throw new IllegalValueException(Skill.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"nicolej2122"},"content":"        return new Skill(skillName);","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nicolej2122":14,"Chang-CH":5,"-":29}},{"path":"src/main/java/seedu/intern/storage/JsonInternWatcherStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.util.FileUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.util.JsonUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":" * A class to access InternWatcher data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"public class JsonInternWatcherStorage implements InternWatcherStorage {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"nicolej2122"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonInternWatcherStorage.class);","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"    public JsonInternWatcherStorage(Path filePath) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"    public Path getInternWatcherFilePath() {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"nicolej2122"},"content":"    public Optional\u003cReadOnlyInternWatcher\u003e readInternWatcher() throws DataConversionException {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"nicolej2122"},"content":"        return readInternWatcher(filePath);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"nicolej2122"},"content":"     * Similar to {@link #readInternWatcher()}.","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"nicolej2122"},"content":"    public Optional\u003cReadOnlyInternWatcher\u003e readInternWatcher(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"nicolej2122"},"content":"        Optional\u003cJsonSerializableInternWatcher\u003e jsonInternWatcher \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"nicolej2122"},"content":"                filePath, JsonSerializableInternWatcher.class);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"nicolej2122"},"content":"        if (!jsonInternWatcher.isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"nicolej2122"},"content":"            return Optional.of(jsonInternWatcher.get().toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"nicolej2122"},"content":"    public void saveInternWatcher(ReadOnlyInternWatcher internWatcher) throws IOException {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"nicolej2122"},"content":"        saveInternWatcher(internWatcher, filePath);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"nicolej2122"},"content":"     * Similar to {@link #saveInternWatcher(ReadOnlyInternWatcher)}.","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"nicolej2122"},"content":"    public void saveInternWatcher(ReadOnlyInternWatcher internWatcher, Path filePath) throws IOException {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"nicolej2122"},"content":"        requireNonNull(internWatcher);","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"nicolej2122"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableInternWatcher(internWatcher), filePath);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yunpeng1234":1,"nicolej2122":18,"Chang-CH":7,"-":54}},{"path":"src/main/java/seedu/intern/storage/JsonSerializableInternWatcher.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.InternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":" * An Immutable InternWatcher that is serializable to JSON format.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"@JsonRootName(value \u003d \"internwatcher\")","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"class JsonSerializableInternWatcher {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"Applicants list contains duplicate applicant(s).\";","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"    private final List\u003cJsonAdaptedApplicant\u003e applicants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"     * Constructs a {@code JsonSerializableInternWatcher} with the given applicants.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"    public JsonSerializableInternWatcher(@JsonProperty(\"applicants\") List\u003cJsonAdaptedApplicant\u003e applicants) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"        this.applicants.addAll(applicants);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"     * Converts a given {@code ReadOnlyInternWatcher} into this class for Jackson use.","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableInternWatcher}.","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"    public JsonSerializableInternWatcher(ReadOnlyInternWatcher source) {","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"        applicants.addAll(source.getApplicantList().stream().map(JsonAdaptedApplicant::new)","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"     * Converts this intern watcher into the model\u0027s {@code InternWatcher} object.","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"nicolej2122"},"content":"    public InternWatcher toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"nicolej2122"},"content":"        InternWatcher internWatcher \u003d new InternWatcher();","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"        for (JsonAdaptedApplicant jsonAdaptedApplicant : applicants) {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"nicolej2122"},"content":"            Applicant applicant \u003d jsonAdaptedApplicant.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"            if (internWatcher.hasApplicant(applicant)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"            internWatcher.addApplicant(applicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"nicolej2122"},"content":"        return internWatcher;","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yunpeng1234":9,"nicolej2122":6,"Chang-CH":12,"-":34}},{"path":"src/main/java/seedu/intern/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.util.JsonUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Chang-CH":5,"-":42}},{"path":"src/main/java/seedu/intern/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"nicolej2122"},"content":"public interface Storage extends InternWatcherStorage, UserPrefsStorage {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"nicolej2122"},"content":"    Path getInternWatcherFilePath();","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"    Optional\u003cReadOnlyInternWatcher\u003e readInternWatcher() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"    void saveInternWatcher(ReadOnlyInternWatcher internWatcher) throws IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nicolej2122":4,"Chang-CH":5,"-":23}},{"path":"src/main/java/seedu/intern/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":" * Manages storage of InternWatcher data in local storage.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"    private InternWatcherStorage internWatcherStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"     * Creates a {@code StorageManager} with the given {@code InternWatcherStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"    public StorageManager(InternWatcherStorage internWatcherStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"        this.internWatcherStorage \u003d internWatcherStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d InternWatcher methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"nicolej2122"},"content":"    public Path getInternWatcherFilePath() {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"nicolej2122"},"content":"        return internWatcherStorage.getInternWatcherFilePath();","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"nicolej2122"},"content":"    public Optional\u003cReadOnlyInternWatcher\u003e readInternWatcher() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"nicolej2122"},"content":"        return readInternWatcher(internWatcherStorage.getInternWatcherFilePath());","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"nicolej2122"},"content":"    public Optional\u003cReadOnlyInternWatcher\u003e readInternWatcher(Path filePath)","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"nicolej2122"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"nicolej2122"},"content":"        return internWatcherStorage.readInternWatcher(filePath);","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"nicolej2122"},"content":"    public void saveInternWatcher(ReadOnlyInternWatcher internWatcher) throws IOException {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"nicolej2122"},"content":"        saveInternWatcher(internWatcher, internWatcherStorage.getInternWatcherFilePath());","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"nicolej2122"},"content":"    public void saveInternWatcher(ReadOnlyInternWatcher internWatcher, Path filePath) throws IOException {","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"nicolej2122"},"content":"        internWatcherStorage.saveInternWatcher(internWatcher, filePath);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yunpeng1234":3,"nicolej2122":14,"Chang-CH":6,"-":57}},{"path":"src/main/java/seedu/intern/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":" * Represents a storage for {@link seedu.intern.model.UserPrefs}.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"     * Saves the given {@link seedu.intern.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Chang-CH":6,"-":30}},{"path":"src/main/java/seedu/intern/ui/ApplicantCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":" * An UI component that displays information of a {@code Applicant}.","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"public class ApplicantCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    private static final String FXML \u003d \"ApplicantListCard.fxml\";","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"    public final Applicant applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"    private Label job;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"    private Label status;","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"     * Creates a {@code ApplicantCode} with the given {@code Applicant} and index to display.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"    public ApplicantCard(Applicant applicant, int displayedIndex) {","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"nicolej2122"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"        this.cardPane.setStyle(setColour(displayedIndex));","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"        name.setText(applicant.getName().fullName);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"        phone.setText(applicant.getPhone().value);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"        email.setText(applicant.getEmail().value);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"        job.setText(applicant.getJob().jobName);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"        status.setText(applicant.getApplicationStatus().value.toString());","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"        status.setStyle(String.format(\"-fx-background-color: %s;\", applicant.getApplicationStatus().getColour()));","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"    public String setColour(int index) {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"        if (index % 2 \u003d\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"            return \"-fx-background-color: #decbc6;\";","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"            return \"-fx-background-color: #c9ada7;\";","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"        if (!(other instanceof ApplicantCard)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"        ApplicantCard card \u003d (ApplicantCard) other;","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"nicolej2122"},"content":"                \u0026\u0026 applicant.equals(card.applicant);","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yunpeng1234":17,"nicolej2122":3,"Chang-CH":8,"-":53,"jackgugz":3}},{"path":"src/main/java/seedu/intern/ui/ApplicantDetailPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"//@@author yunpeng1234","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"package seedu.intern.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.control.SingleSelectionModel;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":" * Panel containing the details of a Applicant","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"public class ApplicantDetailPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"    private static final String FXML \u003d \"ApplicantDetail.fxml\";","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"    private TabPane tabPane;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"    private Tab skill;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    private Tab academic;","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    private Label institution;","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"    private Label course;","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"    private Label yearOfGrad;","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"    private Label grade;","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"    private FlowPane skills;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"     * Creates a {@code ApplicantDetailPanel}.","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"    public ApplicantDetailPanel() {","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"        super(FXML);","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"        setAcademicTab(Applicant.getDefaultAcademics());","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"        setSkillTab(null);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the detail panel to display the {@code Applicant} specified.","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"     * @param applicant Applicant to be displayed","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"     * @param isToggle flag to indicate whether tab should be toggled","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"    public void showApplicant(Applicant applicant, boolean isToggle) {","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"        SingleSelectionModel\u003cTab\u003e selectionModel \u003d tabPane.getSelectionModel();","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"        if (isToggle) {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"            if (selectionModel.getSelectedItem().equals(academic)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"                selectionModel.select(skill);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"            } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"                selectionModel.select(academic);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"        } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"            selectionModel.select(academic);","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"        if (applicant !\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"            setSkillTab(applicant.getSkills());","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"            setAcademicTab(applicant.getAcademics());","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"            setAcademicTab(Applicant.getDefaultAcademics());","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"            setSkillTab(null);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the Academic Tab as per the String array provided.","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"     * The array must contain 4 elements, containing,","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"     * @param text String array containing:","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"     *             First Index: Institution","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"     *             Second Index: Course","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"     *             Thrid Index: Year of Graduation","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"     *             Fourth Index: Grade","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"yunpeng1234"},"content":"    private void setAcademicTab(String[] text) {","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"yunpeng1234"},"content":"        //TODO: Might be better to get the Applicant and populate dynamically instead of having a string array produced.","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"yunpeng1234"},"content":"        institution.setText(text[0]);","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"yunpeng1234"},"content":"        course.setText(text[1]);","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"yunpeng1234"},"content":"        yearOfGrad.setText(text[2]);","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"yunpeng1234"},"content":"        grade.setText(text[3]);","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the Skills Tab as per the set provided.","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"yunpeng1234"},"content":"     * The set can contain any number of skills.","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"yunpeng1234"},"content":"     * @param skillSet Set of skills to be displayed","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"yunpeng1234"},"content":"    private void setSkillTab(Set\u003cSkill\u003e skillSet) {","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"yunpeng1234"},"content":"        skills.getChildren().clear();","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"yunpeng1234"},"content":"        if (skillSet \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"yunpeng1234"},"content":"            return;","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"yunpeng1234"},"content":"        skillSet.stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"yunpeng1234"},"content":"                .sorted(Comparator.comparing(skill -\u003e skill.skillName))","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"yunpeng1234"},"content":"                .forEach(skill -\u003e skills.getChildren().add(new Label(skill.skillName)));","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"yunpeng1234":116}},{"path":"src/main/java/seedu/intern/ui/ApplicantListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":" * Panel containing the list of applicants.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"public class ApplicantListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    private static final String FXML \u003d \"ApplicantListPanel.fxml\";","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ApplicantListPanel.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"    private ListView\u003cApplicant\u003e applicantListView;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"     * Creates a {@code ApplicantListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"    public ApplicantListPanel(ObservableList\u003cApplicant\u003e applicantList) {","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"        applicantListView.setItems(applicantList);","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"        applicantListView.setCellFactory((listView) -\u003e new ApplicantListViewCell());","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Applicant} using a {@code ApplicantCard}.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"    class ApplicantListViewCell extends ListCell\u003cApplicant\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"nicolej2122"},"content":"        protected void updateItem(Applicant applicant, boolean empty) {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"            super.updateItem(applicant, empty);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"nicolej2122"},"content":"            if (empty || applicant \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"                setGraphic(new ApplicantCard(applicant, getIndex() + 1).getRoot());","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"     * Selects the provided applicant.","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"     * @param applicant applicant to select.","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"    public void selectApplicant(Applicant applicant) {","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"        applicantListView.getSelectionModel().select(applicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"     * Adds a listener that will be called when a different {@code ApplicantCard} is selected.","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"     * @param listener listener to be added to the ListView","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"    public void addSelectedListener(ChangeListener\u003cApplicant\u003e listener) {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"        applicantListView.getSelectionModel().selectedItemProperty().addListener(listener);","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yunpeng1234":15,"nicolej2122":3,"Chang-CH":18,"-":30}},{"path":"src/main/java/seedu/intern/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"         * @see seedu.intern.logic.Logic#execute(String)","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Chang-CH":5,"-":80}},{"path":"src/main/java/seedu/intern/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-f12-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Chang-CH":3,"-":99}},{"path":"src/main/java/seedu/intern/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yunpeng1234":1,"Chang-CH":1,"-":27}},{"path":"src/main/java/seedu/intern/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Chang-CH":1,"-":27}},{"path":"src/main/java/seedu/intern/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Chang-CH":1,"-":12}},{"path":"src/main/java/seedu/intern/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.MainApp;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.util.StringUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.Logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Jeromesyl"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/intern_watcher.png\";","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Jeromesyl":1,"Chang-CH":5,"-":83}},{"path":"src/main/java/seedu/intern/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.MainApp;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Chang-CH":2,"-":86}},{"path":"src/main/resources/view/ApplicantDetail.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"\u003cStackPane alignment\u003d\"TOP_LEFT\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"nicolej2122"},"content":"      \u003cTabPane fx:id\u003d\"tabPane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"200\" minWidth\u003d\"200\" prefHeight\u003d\"300.0\" prefWidth\u003d\"600.0\" styleClass\u003d\"tab-pane\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"        \u003ctabs\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"          \u003cTab fx:id\u003d\"academic\" text\u003d\"Academic\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"              \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"                        \u003cLabel fx:id\u003d\"institution\" layoutX\u003d\"95.0\"  layoutY\u003d\"5.0\" text\u003d\"Label\" styleClass\u003d\"label-details\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"                        \u003cLabel fx:id\u003d\"course\" layoutX\u003d\"95.0\"  layoutY\u003d\"76.0\" text\u003d\"Label\" styleClass\u003d\"label-details\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"                        \u003cLabel fx:id\u003d\"yearOfGrad\" layoutX\u003d\"95.0\"  layoutY\u003d\"154.0\" text\u003d\"Label\" styleClass\u003d\"label-details\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"                        \u003cLabel fx:id\u003d\"grade\" layoutX\u003d\"95.0\"  layoutY\u003d\"231.0\" text\u003d\"Label\" styleClass\u003d\"label-details\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"                        \u003cLabel styleClass\u003d\"label-details\" layoutY\u003d\"5.0\" text\u003d\"Institution:\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"                        \u003cLabel styleClass\u003d\"label-details\"  layoutY\u003d\"76.0\" text\u003d\"Course:\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"                        \u003cLabel styleClass\u003d\"label-details\"  layoutY\u003d\"154.0\" text\u003d\"Graduation:\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"                        \u003cLabel styleClass\u003d\"label-details\"  layoutY\u003d\"231.0\" text\u003d\"Grade:\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"            \u003cTab fx:id\u003d\"skill\" text\u003d\"Skill\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"              \u003ccontent\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"                         \u003cFlowPane fx:id\u003d\"skills\" layoutX\u003d\"20\" layoutY\u003d\"20\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"              \u003c/content\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"            \u003c/Tab\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"        \u003c/tabs\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"      \u003c/TabPane\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"yunpeng1234":46,"nicolej2122":1}},{"path":"src/main/resources/view/ApplicantListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"      \u003cLabel fx:id\u003d\"job\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$job\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"      \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":34,"jackgugz":2}},{"path":"src/main/resources/view/ApplicantListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"  \u003cListView fx:id\u003d\"applicantListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yunpeng1234":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: derive(#f2e9e4, 20%);","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"    background-color: #c9ada7; /* Used in the default.html file */","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"    -fx-tab-min-width: 54;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"    -fx-effect: null;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":".tab-pane .tab {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: derive(#decbc6, 30%);","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":".tab-pane .tab:selected {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: #decbc6;","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":".tab .tab-label {","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":".tab:selected .tab-label {","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #4a4e69;","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"    -fx-base: #f2e9e4;","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"    -fx-control-inner-background: #f2e9e4;","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: #f2e9e4;","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: #4a4e69;","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: derive(#f2e9e4, 20%);","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":119,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: derive(#f2e9e4, 20%);","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: derive(#f2e9e4, 20%);","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"Chang-CH"},"content":"    -fx-base: #f2e9e4;","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-color: derive(#f2e9e4, 20%);","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-color: derive(#f2e9e4, 20%);","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":144,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: #9a8c98;","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":148,"author":{"gitId":"yunpeng1234"},"content":".list-cell:filled:empty {","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-color: derive(#f2e9e4, 20%)","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"Chang-CH"},"content":"    -fx-border-color: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":170,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":174,"author":{"gitId":"Chang-CH"},"content":"     -fx-background-color: derive(#f2e9e4, 20%);","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":178,"author":{"gitId":"Chang-CH"},"content":"     -fx-background-color: derive(#f2e9e4, 20%);","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"Chang-CH"},"content":"     -fx-border-color: derive(#f2e9e4, 10%);","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: derive(#f2e9e4, 30%);","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":188,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"yunpeng1234"},"content":"    -fx-border-radius: 20;","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":193,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: derive(#f2e9e4, 30%);","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"Chang-CH"},"content":"    -fx-border-color: derive(#f2e9e4, 25%);","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: derive(#f2e9e4, 30%);","lastModifiedDate":"2021-10-25"},{"lineNumber":219,"author":{"gitId":"Chang-CH"},"content":"    -fx-border-color: derive(#f2e9e4, 30%);","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":224,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: derive(#f2e9e4, 30%);","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: derive(#f2e9e4, 50%);","lastModifiedDate":"2021-10-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: derive(#f2e9e4, 20%);","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":242,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: #f2e9e4;","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: #decbc6;","lastModifiedDate":"2021-10-25"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"Chang-CH"},"content":"  -fx-background-color: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":273,"author":{"gitId":"Chang-CH"},"content":"  -fx-text-fill: #f2e9e4;","lastModifiedDate":"2021-10-25"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"Chang-CH"},"content":"    -fx-border-color: #22223b, #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: #f2e9e4;","lastModifiedDate":"2021-10-25"},{"lineNumber":287,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: #4a4e69;","lastModifiedDate":"2021-10-25"},{"lineNumber":292,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: derive(#4a4e69, 30%);","lastModifiedDate":"2021-10-25"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: #f2e9e4;","lastModifiedDate":"2021-10-25"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: #f2e9e4;","lastModifiedDate":"2021-10-25"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: derive(#f2e9e4, 25%);","lastModifiedDate":"2021-10-25"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"Chang-CH"},"content":"    -fx-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":321,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: derive(#f2e9e4, 20%);","lastModifiedDate":"2021-10-25"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: derive(#f2e9e4, 50%);","lastModifiedDate":"2021-10-25"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"yunpeng1234"},"content":"    -fx-border-radius: 20;","lastModifiedDate":"2021-10-25"},{"lineNumber":352,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-10-25"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"yunpeng1234"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-10-25"},{"lineNumber":364,"author":{"gitId":"yunpeng1234"},"content":"    -fx-border-radius: 20;","lastModifiedDate":"2021-10-25"},{"lineNumber":365,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: transparent #c9ada7 transparent #c9ada7;","lastModifiedDate":"2021-10-25"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"Chang-CH"},"content":"    -fx-border-color: #c9ada7 #c9ada7 #22223b #c9ada7;","lastModifiedDate":"2021-10-25"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":373,"author":{"gitId":"Chang-CH"},"content":"    -fx-prompt-text-fill: #4a4e69;","lastModifiedDate":"2021-10-25"},{"lineNumber":374,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"yunpeng1234"},"content":"#filterField, #applicantListPanel, #applicantWebpage {","lastModifiedDate":"2021-11-04"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":381,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-10-25"},{"lineNumber":382,"author":{"gitId":"yunpeng1234"},"content":"    -fx-border-radius: 20;","lastModifiedDate":"2021-10-25"},{"lineNumber":383,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-color: c9ada7;","lastModifiedDate":"2021-10-26"},{"lineNumber":384,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":386,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":387,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":392,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":393,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":394,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-10-25"},{"lineNumber":395,"author":{"gitId":"Chang-CH"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-25"},{"lineNumber":396,"author":{"gitId":"Chang-CH"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-25"},{"lineNumber":397,"author":{"gitId":"Chang-CH"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-25"},{"lineNumber":398,"author":{"gitId":"Chang-CH"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-25"},{"lineNumber":399,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":400,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":401,"author":{"gitId":"yunpeng1234"},"content":"#status .label {","lastModifiedDate":"2021-10-26"},{"lineNumber":402,"author":{"gitId":"yunpeng1234"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-26"},{"lineNumber":403,"author":{"gitId":"yunpeng1234"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-26"},{"lineNumber":404,"author":{"gitId":"yunpeng1234"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2021-10-26"},{"lineNumber":405,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2021-10-26"},{"lineNumber":406,"author":{"gitId":"yunpeng1234"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-26"},{"lineNumber":407,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":408,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":409,"author":{"gitId":"Chang-CH"},"content":"#status .label {","lastModifiedDate":"2021-10-25"},{"lineNumber":410,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":416,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":417,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":418,"author":{"gitId":"Chang-CH"},"content":"#status {","lastModifiedDate":"2021-10-24"},{"lineNumber":419,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2021-10-24"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-10-24"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-24"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-24"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-24"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-24"},{"lineNumber":425,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":426,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":427,"author":{"gitId":"yunpeng1234"},"content":"#skills {","lastModifiedDate":"2021-10-07"},{"lineNumber":428,"author":{"gitId":"yunpeng1234"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-10-07"},{"lineNumber":429,"author":{"gitId":"yunpeng1234"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-07"},{"lineNumber":430,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":431,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":432,"author":{"gitId":"yunpeng1234"},"content":"#skills .label {","lastModifiedDate":"2021-10-07"},{"lineNumber":433,"author":{"gitId":"yunpeng1234"},"content":"    -fx-label-padding: 0 5 0 5;","lastModifiedDate":"2021-10-26"},{"lineNumber":434,"author":{"gitId":"yunpeng1234"},"content":"    -fx-min-height: 30;","lastModifiedDate":"2021-10-25"},{"lineNumber":435,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":436,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-color: #ADD8e6;","lastModifiedDate":"2021-10-25"},{"lineNumber":437,"author":{"gitId":"yunpeng1234"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-07"},{"lineNumber":438,"author":{"gitId":"yunpeng1234"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-07"},{"lineNumber":439,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2021-10-25"},{"lineNumber":440,"author":{"gitId":"yunpeng1234"},"content":"    -fx-font-size: 15;","lastModifiedDate":"2021-10-25"},{"lineNumber":441,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":442,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":443,"author":{"gitId":"yunpeng1234"},"content":".tab-pane {","lastModifiedDate":"2021-09-21"},{"lineNumber":444,"author":{"gitId":"yunpeng1234"},"content":"    -fx-tab-min-width: 54;","lastModifiedDate":"2021-09-21"},{"lineNumber":445,"author":{"gitId":"Chang-CH"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-25"},{"lineNumber":446,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-09-21"},{"lineNumber":447,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":448,"author":{"gitId":"yunpeng1234"},"content":"#placeholder {","lastModifiedDate":"2021-10-25"},{"lineNumber":449,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-10-25"},{"lineNumber":450,"author":{"gitId":"yunpeng1234"},"content":"    -fx-border-radius: 20;","lastModifiedDate":"2021-10-25"},{"lineNumber":451,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":452,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":453,"author":{"gitId":"yunpeng1234"},"content":".text-area .scroll-pane {","lastModifiedDate":"2021-10-25"},{"lineNumber":454,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-25"},{"lineNumber":455,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":456,"author":{"gitId":"yunpeng1234"},"content":".text-area .scroll-pane .viewport{","lastModifiedDate":"2021-10-25"},{"lineNumber":457,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-25"},{"lineNumber":458,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":459,"author":{"gitId":"yunpeng1234"},"content":".text-area .scroll-pane .content{","lastModifiedDate":"2021-10-25"},{"lineNumber":460,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-25"},{"lineNumber":461,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":462,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":463,"author":{"gitId":"yunpeng1234"},"content":".scroll-bar{","lastModifiedDate":"2021-10-26"},{"lineNumber":464,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-color: c9ada7;","lastModifiedDate":"2021-10-26"},{"lineNumber":465,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-radius: 2em;","lastModifiedDate":"2021-10-26"},{"lineNumber":466,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":467,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":468,"author":{"gitId":"yunpeng1234"},"content":".scroll-bar:horizontal .track,","lastModifiedDate":"2021-10-26"},{"lineNumber":469,"author":{"gitId":"yunpeng1234"},"content":".scroll-bar:vertical .track {","lastModifiedDate":"2021-10-26"},{"lineNumber":470,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-color: transparent;","lastModifiedDate":"2021-10-26"},{"lineNumber":471,"author":{"gitId":"yunpeng1234"},"content":" -fx-border-color:transparent;","lastModifiedDate":"2021-10-26"},{"lineNumber":472,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-radius: 2em;","lastModifiedDate":"2021-10-26"},{"lineNumber":473,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":474,"author":{"gitId":"yunpeng1234"},"content":".scroll-bar:vertical .track-background,","lastModifiedDate":"2021-10-26"},{"lineNumber":475,"author":{"gitId":"yunpeng1234"},"content":".scroll-bar:horizontal .track-background {","lastModifiedDate":"2021-10-26"},{"lineNumber":476,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-color: transparent;","lastModifiedDate":"2021-10-26"},{"lineNumber":477,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-insets: 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":478,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-radius: 2em;","lastModifiedDate":"2021-10-26"},{"lineNumber":479,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":480,"author":{"gitId":"yunpeng1234"},"content":".scroll-bar:horizontal .thumb {","lastModifiedDate":"2021-10-26"},{"lineNumber":481,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-color: derive(#f2e9e4, 10%);","lastModifiedDate":"2021-10-26"},{"lineNumber":482,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-radius: 2em;","lastModifiedDate":"2021-10-26"},{"lineNumber":483,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":484,"author":{"gitId":"yunpeng1234"},"content":".scroll-bar:vertical .thumb {","lastModifiedDate":"2021-10-26"},{"lineNumber":485,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-color: derive(#f2e9e4, 10%);","lastModifiedDate":"2021-10-26"},{"lineNumber":486,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-radius: 2em;","lastModifiedDate":"2021-10-26"},{"lineNumber":487,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":488,"author":{"gitId":"yunpeng1234"},"content":".scroll-bar:horizontal .thumb:hover,","lastModifiedDate":"2021-10-26"},{"lineNumber":489,"author":{"gitId":"yunpeng1234"},"content":".scroll-bar:vertical .thumb:hover {","lastModifiedDate":"2021-10-26"},{"lineNumber":490,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-color: derive(#f2e9e4, 20%);","lastModifiedDate":"2021-10-26"},{"lineNumber":491,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":492,"author":{"gitId":"yunpeng1234"},"content":".scroll-bar:horizontal .thumb:pressed,","lastModifiedDate":"2021-10-26"},{"lineNumber":493,"author":{"gitId":"yunpeng1234"},"content":".scroll-bar:vertical .thumb:pressed {","lastModifiedDate":"2021-10-26"},{"lineNumber":494,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-color: derive(#f2e9e4, 40%);","lastModifiedDate":"2021-10-26"},{"lineNumber":495,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":496,"author":{"gitId":"yunpeng1234"},"content":".scroll-bar:vertical .increment-button, .scroll-bar:vertical .decrement-button {","lastModifiedDate":"2021-10-26"},{"lineNumber":497,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-color:transparent;","lastModifiedDate":"2021-10-26"},{"lineNumber":498,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-radius: 2em;","lastModifiedDate":"2021-10-26"},{"lineNumber":499,"author":{"gitId":"yunpeng1234"},"content":" -fx-padding: 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":500,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":501,"author":{"gitId":"yunpeng1234"},"content":".scroll-bar:horizontal .increment-button, .scroll-bar:horizontal .decrement-button {","lastModifiedDate":"2021-10-26"},{"lineNumber":502,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-color:transparent;","lastModifiedDate":"2021-10-26"},{"lineNumber":503,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-radius: 2em;","lastModifiedDate":"2021-10-26"},{"lineNumber":504,"author":{"gitId":"yunpeng1234"},"content":" -fx-padding: 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":505,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":506,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":507,"author":{"gitId":"yunpeng1234"},"content":".scroll-bar:vertical:focused,","lastModifiedDate":"2021-10-26"},{"lineNumber":508,"author":{"gitId":"yunpeng1234"},"content":".scroll-bar:horizontal:focused {","lastModifiedDate":"2021-10-26"},{"lineNumber":509,"author":{"gitId":"yunpeng1234"},"content":" -fx-background-color: transparent,rgb(96,96,96),rgb(96,96,96);","lastModifiedDate":"2021-10-26"},{"lineNumber":510,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":511,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":512,"author":{"gitId":"yunpeng1234"},"content":".label-details {","lastModifiedDate":"2021-10-28"},{"lineNumber":513,"author":{"gitId":"yunpeng1234"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-28"},{"lineNumber":514,"author":{"gitId":"yunpeng1234"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-28"},{"lineNumber":515,"author":{"gitId":"yunpeng1234"},"content":"    -fx-text-fill: #22223b;","lastModifiedDate":"2021-10-28"},{"lineNumber":516,"author":{"gitId":"yunpeng1234"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":517,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"yunpeng1234":115,"-":297,"Chang-CH":105}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"    -fx-background: derive(#f2e9e4, 20%);","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yunpeng1234":1,"-":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"\u003cfx:root minHeight\u003d\"600.0\" minWidth\u003d\"600.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Intern Watcher App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"Jeromesyl"},"content":"    \u003cImage url\u003d\"@/images/intern_watcher.png\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"200.0\" minHeight\u003d\"150.0\" prefHeight\u003d\"1000.0\" prefWidth\u003d\"1000.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"        \u003cStackPane prefHeight\u003d\"1000\" prefWidth\u003d\"600.0\" maxHeight\u003d\"1000.0\" minHeight\u003d\"300.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"          \u003cHBox prefHeight\u003d\"300\" prefWidth\u003d\"600.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"             \u003cchildren\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"               \u003cStackPane minWidth\u003d\"300\" prefHeight\u003d\"300\" prefWidth\u003d\"1000.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"                 \u003cVBox fx:id\u003d\"applicantList\" minWidth\u003d\"300\" prefHeight\u003d\"100.0\" prefWidth\u003d\"300\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                   \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"                     \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                   \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"                   \u003cStackPane fx:id\u003d\"applicantListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                 \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"               \u003c/StackPane\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"               \u003cStackPane fx:id\u003d\"applicantDetailPlaceholder\" minWidth\u003d\"300\" prefHeight\u003d\"100.0\" prefWidth\u003d\"1000.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"                 \u003cpadding\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"                   \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"                 \u003c/padding\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"               \u003c/StackPane\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"             \u003c/children\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" minHeight\u003d\"20.0\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yunpeng1234":24,"Jeromesyl":1,"-":46,"Chang-CH":1}},{"path":"src/test/java/seedu/intern/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Chang-CH":1,"-":57}},{"path":"src/test/java/seedu/intern/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Chang-CH":1,"-":26}},{"path":"src/test/java/seedu/intern/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Chang-CH":2,"-":133}},{"path":"src/test/java/seedu/intern/commons/core/selection/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.core.selection;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"        final Index fifthApplicantIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"        assertTrue(fifthApplicantIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"        assertTrue(fifthApplicantIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"        assertTrue(fifthApplicantIndex.equals(fifthApplicantIndex));","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"        assertFalse(fifthApplicantIndex.equals(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"        assertFalse(fifthApplicantIndex.equals(5.0f));","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"        assertFalse(fifthApplicantIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"yunpeng1234":7,"Chang-CH":2,"-":51}},{"path":"src/test/java/seedu/intern/commons/core/selection/SelectionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package seedu.intern.commons.core.selection;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"public class SelectionTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"    public void createAllSelection() {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"        Selection selection \u003d Selection.fromAllFlag();","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"        // check no Index","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"        assertFalse(selection.hasIndex());","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(NullPointerException.class, selection::getIndexOneBased);","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(NullPointerException.class, selection::getIndexZeroBased);","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"        // check All flag present","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"        assertTrue(selection.hasAllSelectFlag());","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"        assertTrue(selection.checkAllSelected());","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"    public void createOneBasedSelection() {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"        // invalid selection","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Selection.fromIndex(Index.fromOneBased(0)));","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"        // check equality using the same base","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(1, Selection.fromIndex(Index.fromOneBased(1)).getIndexOneBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(5, Selection.fromIndex(Index.fromOneBased(5)).getIndexOneBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"        // convert from one-based selection to zero-based selection","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(0, Selection.fromIndex(Index.fromOneBased(1)).getIndexZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(4, Selection.fromIndex(Index.fromOneBased(5)).getIndexZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"        // Check All flag not present","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"        assertFalse(Selection.fromIndex(Index.fromOneBased(1)).hasAllSelectFlag());","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(NullPointerException.class, () -\u003e Selection.fromIndex(Index.fromOneBased(1)).checkAllSelected());","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"    public void createZeroBasedSelection() {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"        // invalid selection","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Selection.fromIndex(Index.fromOneBased(-1)));","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"        // check equality using the same base","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(0, Selection.fromIndex(Index.fromZeroBased(0)).getIndexZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(5, Selection.fromIndex(Index.fromZeroBased(5)).getIndexZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"        // convert from zero-based selection to one-based selection","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(1, Selection.fromIndex(Index.fromZeroBased(0)).getIndexOneBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(6, Selection.fromIndex(Index.fromZeroBased(5)).getIndexOneBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"        // Check All flag","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"        assertFalse(Selection.fromIndex(Index.fromZeroBased(0)).hasAllSelectFlag());","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(NullPointerException.class, () -\u003e Selection.fromIndex(Index.fromZeroBased(0)).checkAllSelected());","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"    public void equals() {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"        final Selection fifthApplicantSelection \u003d Selection.fromIndex(Index.fromOneBased(5));","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"        final Selection allApplicantSelection \u003d Selection.fromAllFlag();","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Selection.fromIndex(Index.fromOneBased(5)), fifthApplicantSelection);","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Selection.fromIndex(Index.fromZeroBased(4)), fifthApplicantSelection);","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(fifthApplicantSelection, fifthApplicantSelection);","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"        assertNotEquals(fifthApplicantSelection, null);","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"        assertFalse(fifthApplicantSelection.equals(5.0f));","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"        // different selection -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"        assertNotEquals(Selection.fromIndex(Index.fromZeroBased(1)), fifthApplicantSelection);","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"        assertEquals(Selection.fromAllFlag(), allApplicantSelection);","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"        assertEquals(allApplicantSelection, allApplicantSelection);","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"        assertNotEquals(allApplicantSelection, null);","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"        assertNotEquals(allApplicantSelection, Boolean.TRUE);","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yunpeng1234":60,"Chang-CH":35}},{"path":"src/test/java/seedu/intern/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"Jeromesyl"},"content":"        assertNotNull(AppUtil.getImage(\"/images/intern_watcher.png\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Jeromesyl":1,"Chang-CH":2,"-":33}},{"path":"src/test/java/seedu/intern/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"Chang-CH":3,"-":105}},{"path":"src/test/java/seedu/intern/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.Config;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Chang-CH":4,"-":112}},{"path":"src/test/java/seedu/intern/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Chang-CH":2,"-":21}},{"path":"src/test/java/seedu/intern/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.SerializableTestClass;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.TestUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Chang-CH":3,"-":42}},{"path":"src/test/java/seedu/intern/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Chang-CH":2,"-":141}},{"path":"src/test/java/seedu/intern/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.COURSE_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.GRADE_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.GRADUATION_YEARMONTH_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INSTITUTION_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.JOB_DESC_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.AddCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.ListCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.storage.JsonInternWatcherStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.storage.StorageManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"        JsonInternWatcherStorage internWatcherStorage \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"                new JsonInternWatcherStorage(temporaryFolder.resolve(\"internWatcher.json\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"        StorageManager storage \u003d new StorageManager(internWatcherStorage, userPrefsStorage);","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"        // Setup LogicManager with JsonInternWatcherIoExceptionThrowingStub","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"        JsonInternWatcherStorage internWatcherStorage \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"                new JsonInternWatcherIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionInternWatcher.json\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"        StorageManager storage \u003d new StorageManager(internWatcherStorage, userPrefsStorage);","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"jackgugz"},"content":"                + GRADE_DESC_AMY + INSTITUTION_DESC_AMY + JOB_DESC_AMY","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"jackgugz"},"content":"                + COURSE_DESC_AMY + GRADUATION_YEARMONTH_DESC_AMY;","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"        Applicant expectedApplicant \u003d new ApplicantBuilder(AMY).withSkills().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"        expectedModel.addApplicant(expectedApplicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"yunpeng1234"},"content":"    public void getFilteredApplicantList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredApplicantList().remove(0));","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"Chang-CH"},"content":"        Model expectedModel \u003d new ModelManager(model.getInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"nicolej2122"},"content":"    private static class JsonInternWatcherIoExceptionThrowingStub extends JsonInternWatcherStorage {","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"nicolej2122"},"content":"        private JsonInternWatcherIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"nicolej2122"},"content":"        public void saveInternWatcher(ReadOnlyInternWatcher internWatcher, Path filePath) throws IOException {","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yunpeng1234":12,"nicolej2122":3,"Chang-CH":27,"-":122,"jackgugz":3}},{"path":"src/test/java/seedu/intern/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.getTypicalInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"        model \u003d new ModelManager(getTypicalInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_newApplicant_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"        Applicant validApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"        Model expectedModel \u003d new ModelManager(model.getInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"        expectedModel.addApplicant(validApplicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"nicolej2122"},"content":"        assertCommandSuccess(new AddCommand(validApplicant), model,","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"nicolej2122"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validApplicant), expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_duplicateApplicant_throwsCommandException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"        Applicant applicantInList \u003d model.getInternWatcher().getApplicantList().get(0);","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandFailure(new AddCommand(applicantInList), model, AddCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"yunpeng1234":4,"nicolej2122":4,"Chang-CH":11,"-":26}},{"path":"src/test/java/seedu/intern/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.InternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.model.VersionedInternWatcher;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"    public void constructor_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_applicantAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"        ModelStubAcceptingApplicantAdded modelStub \u003d new ModelStubAcceptingApplicantAdded();","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"nicolej2122"},"content":"        Applicant validApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"        CommandResult commandResult \u003d new AddCommand(validApplicant).execute(modelStub);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"nicolej2122"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validApplicant), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Arrays.asList(validApplicant), modelStub.applicantsAdded);","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_duplicateApplicant_throwsCommandException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"nicolej2122"},"content":"        Applicant validApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"nicolej2122"},"content":"        AddCommand addCommand \u003d new AddCommand(validApplicant);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"        ModelStub modelStub \u003d new ModelStubWithApplicant(validApplicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_APPLICANT, () -\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"nicolej2122"},"content":"        Applicant alice \u003d new ApplicantBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"nicolej2122"},"content":"        Applicant bob \u003d new ApplicantBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"Chang-CH"},"content":"        public Path getInternWatcherFilePath() {","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"yunpeng1234"},"content":"        public void setInternWatcherFilePath(Path internWatcherFilePath) {","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"Chang-CH"},"content":"        public void addApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"Chang-CH"},"content":"        public void setInternWatcher(ReadOnlyInternWatcher newData) {","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"Chang-CH"},"content":"        public ReadOnlyInternWatcher getInternWatcher() {","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"Chang-CH"},"content":"        public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"nicolej2122"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"nicolej2122"},"content":"        public void displayApplicant(Applicant applicant, boolean toggle) {","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"nicolej2122"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"nicolej2122"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"Chang-CH"},"content":"        public void deleteApplicant(Applicant target) {","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"Chang-CH"},"content":"        public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"yunpeng1234"},"content":"        public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"nicolej2122"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"nicolej2122"},"content":"        public Applicant getApplicant() {","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"nicolej2122"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"nicolej2122"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"nicolej2122"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"nicolej2122"},"content":"        public void updateApplicant(Applicant newApplicant) {","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"nicolej2122"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"nicolej2122"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"Chang-CH"},"content":"        public void updateFilteredApplicantList(Predicate\u003cApplicant\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"Jeromesyl"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"Jeromesyl"},"content":"        public void commitInternWatcher(String commitMessage) {","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"Jeromesyl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"Jeromesyl"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"Jeromesyl"},"content":"        public String undoInternWatcher() {","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"Jeromesyl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"Jeromesyl"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"Jeromesyl"},"content":"        public String redoInternWatcher() {","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"Jeromesyl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"Jeromesyl"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"Jeromesyl"},"content":"        public boolean isUndoAvailable() {","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"Jeromesyl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"Jeromesyl"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"Jeromesyl"},"content":"        public boolean isRedoAvailable() {","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"Jeromesyl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"nicolej2122"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"nicolej2122"},"content":"        public boolean getIsToggle() {","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"nicolej2122"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"nicolej2122"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"Chang-CH"},"content":"     * A Model stub that contains a single applicant.","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"yunpeng1234"},"content":"    private class ModelStubWithApplicant extends ModelStub {","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"nicolej2122"},"content":"        private final Applicant applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"yunpeng1234"},"content":"        ModelStubWithApplicant(Applicant applicant) {","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"nicolej2122"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"nicolej2122"},"content":"            this.applicant \u003d applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"Chang-CH"},"content":"        public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"nicolej2122"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"Chang-CH"},"content":"            return this.applicant.isSameApplicant(applicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"Chang-CH"},"content":"     * A Model stub that always accept the applicant being added.","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"yunpeng1234"},"content":"    private class ModelStubAcceptingApplicantAdded extends ModelStub {","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"yunpeng1234"},"content":"        final ArrayList\u003cApplicant\u003e applicantsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"Jeromesyl"},"content":"        final VersionedInternWatcher internWatcher \u003d new VersionedInternWatcher(getInternWatcher());","lastModifiedDate":"2021-10-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"Chang-CH"},"content":"        public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":226,"author":{"gitId":"nicolej2122"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2021-10-08"},{"lineNumber":227,"author":{"gitId":"yunpeng1234"},"content":"            return applicantsAdded.stream().anyMatch(applicant::isSameApplicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"Chang-CH"},"content":"        public void addApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":232,"author":{"gitId":"nicolej2122"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2021-10-08"},{"lineNumber":233,"author":{"gitId":"yunpeng1234"},"content":"            applicantsAdded.add(applicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"Jeromesyl"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"Jeromesyl"},"content":"        public void commitInternWatcher(String commitMessage) {","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"Jeromesyl"},"content":"            requireNonNull(commitMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":239,"author":{"gitId":"Jeromesyl"},"content":"            internWatcher.commitState(commitMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":240,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":241,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"Chang-CH"},"content":"        public ReadOnlyInternWatcher getInternWatcher() {","lastModifiedDate":"2021-10-11"},{"lineNumber":244,"author":{"gitId":"nicolej2122"},"content":"            return new InternWatcher();","lastModifiedDate":"2021-10-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"yunpeng1234":16,"Jeromesyl":33,"nicolej2122":34,"Chang-CH":26,"-":139}},{"path":"src/test/java/seedu/intern/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.getTypicalInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.InternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_emptyInternWatcher_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_nonEmptyInternWatcher_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"        Model model \u003d new ModelManager(getTypicalInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"        expectedModel.setInternWatcher(new InternWatcher());","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"yunpeng1234":2,"nicolej2122":2,"Chang-CH":8,"-":20}},{"path":"src/test/java/seedu/intern/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"nicolej2122"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"nicolej2122"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"nicolej2122":5,"Chang-CH":1,"-":48}},{"path":"src/test/java/seedu/intern/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADUATIONYEARMONTH;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_INSTITUTION;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.selection.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.selection.Selection;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.InternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"    public static final String VALID_GRADE_AMY \u003d \"4.50\";","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"    public static final String VALID_GRADE_BOB \u003d \"4.60\";","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"    public static final String VALID_STATUS_AMY \u003d \"INTERVIEWED\";","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"    public static final String VALID_STATUS_BOB \u003d \"REJECTED\";","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"    public static final String VALID_INSTITUTION_AMY \u003d \"NUS\";","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"    public static final String VALID_INSTITUTION_BOB \u003d \"NUSS\";","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"    @SuppressWarnings(\"SpellCheckingInspection\")","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"    public static final String VALID_GRADUATION_YEARMONTH_AMY \u003d \"06/2023\";","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"    @SuppressWarnings(\"SpellCheckingInspection\")","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"    public static final String VALID_GRADUATION_YEARMONTH_BOB \u003d \"09/2021\";","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"    public static final String VALID_JOB_AMY \u003d \"Software Engineer\";","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"    public static final String VALID_JOB_BOB \u003d \"Hardware Engineer\";","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"Jeromesyl"},"content":"    public static final String VALID_COURSE_AMY \u003d \"Computer Science\";","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"Jeromesyl"},"content":"    public static final String VALID_COURSE_BOB \u003d \"Computer Science\";","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"    public static final String VALID_SKILL_JAVA \u003d \"JAVA\";","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"    public static final String VALID_SKILL_PYTHON \u003d \"PYTHON\";","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"    public static final String GRADE_DESC_AMY \u003d \" \" + PREFIX_GRADE + VALID_GRADE_AMY;","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"    public static final String GRADE_DESC_BOB \u003d \" \" + PREFIX_GRADE + VALID_GRADE_BOB;","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"    public static final String INSTITUTION_DESC_AMY \u003d \" \" + PREFIX_INSTITUTION + VALID_INSTITUTION_AMY;","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"    public static final String INSTITUTION_DESC_BOB \u003d \" \" + PREFIX_INSTITUTION + VALID_INSTITUTION_BOB;","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"    @SuppressWarnings(\"SpellCheckingInspection\")","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"    public static final String GRADUATION_YEARMONTH_DESC_AMY \u003d \" \"","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"            + PREFIX_GRADUATIONYEARMONTH + VALID_GRADUATION_YEARMONTH_AMY;","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"    @SuppressWarnings(\"SpellCheckingInspection\")","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"    public static final String GRADUATION_YEARMONTH_DESC_BOB \u003d \" \"","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"            + PREFIX_GRADUATIONYEARMONTH + VALID_GRADUATION_YEARMONTH_BOB;","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"    public static final String JOB_DESC_AMY \u003d \" \" + PREFIX_JOB + VALID_JOB_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"    public static final String JOB_DESC_BOB \u003d \" \" + PREFIX_JOB + VALID_JOB_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"    public static final String STATUS_DESC_AMY \u003d \" \" + PREFIX_STATUS + VALID_STATUS_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"    public static final String STATUS_DESC_BOB \u003d \" \" + PREFIX_STATUS + VALID_STATUS_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"Jeromesyl"},"content":"    public static final String COURSE_DESC_AMY \u003d \" \" + PREFIX_COURSE + VALID_COURSE_AMY;","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"Jeromesyl"},"content":"    public static final String COURSE_DESC_BOB \u003d \" \" + PREFIX_COURSE + VALID_COURSE_BOB;","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"    public static final String SKILL_DESC_PYTHON \u003d \" \" + PREFIX_SKILL + VALID_SKILL_PYTHON;","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"    public static final String SKILL_DESC_JAVA \u003d \" \" + PREFIX_SKILL + VALID_SKILL_JAVA;","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"    public static final String INVALID_GRADE_DESC \u003d \" \" + PREFIX_GRADE + \"5.000\"; //3dp not allowed for grades","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"    public static final String INVALID_SKILL_DESC \u003d \" \" + PREFIX_SKILL + \"java*\"; // \u0027*\u0027 not allowed in SKILLs","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"    public static final String INVALID_INSTITUTION_DESC \u003d \" \" + PREFIX_INSTITUTION + \"NU$\"; // \u0027$\u0027 not allowed","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_STATUS + \"somestring\"; // value must be in enum","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"jackgugz"},"content":"    @SuppressWarnings(\"SpellCheckingInspection\")","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"jackgugz"},"content":"    public static final String INVALID_GRADUATION_YEARMONTH_DESC \u003d \" \" + PREFIX_GRADUATIONYEARMONTH","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"jackgugz"},"content":"            + \"13/2021\"; // invalid month not allowed","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"jackgugz"},"content":"    public static final String INVALID_JOB_DESC \u003d \" \" + PREFIX_JOB + \"Software $ngineer\"; // \u0027$\u0027 not allowed","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"jackgugz"},"content":"    public static final String INVALID_COURSE_DESC \u003d \" \" + PREFIX_COURSE + \"Computer $cience\"; // \u0027$\u0027 not allowed","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"nicolej2122"},"content":"    public static final EditCommand.EditApplicantDescriptor DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"nicolej2122"},"content":"    public static final EditCommand.EditApplicantDescriptor DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"nicolej2122"},"content":"        DESC_AMY \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"Chang-CH"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withApplicationStatus(VALID_STATUS_AMY)","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"Jeromesyl"},"content":"                .withGrade(VALID_GRADE_AMY).withInstitution(VALID_INSTITUTION_AMY).withCourse(VALID_COURSE_AMY)","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"jackgugz"},"content":"                .withGraduationYearMonth(VALID_GRADUATION_YEARMONTH_AMY).withSkills(VALID_SKILL_PYTHON)","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"jackgugz"},"content":"                .withJob(VALID_JOB_AMY).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"nicolej2122"},"content":"        DESC_BOB \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"Chang-CH"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withApplicationStatus(VALID_STATUS_BOB)","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"Jeromesyl"},"content":"                .withGrade(VALID_GRADE_BOB).withInstitution(VALID_INSTITUTION_BOB).withCourse(VALID_COURSE_BOB)","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"jackgugz"},"content":"                .withGraduationYearMonth(VALID_GRADUATION_YEARMONTH_BOB).withJob(VALID_JOB_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"yunpeng1234"},"content":"                .withSkills(VALID_SKILL_JAVA, VALID_SKILL_PYTHON).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"Chang-CH"},"content":"     * - the intern book, filtered applicant list and selected applicant in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"Chang-CH"},"content":"        InternWatcher expectedInternWatcher \u003d new InternWatcher(actualModel.getInternWatcher());","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"yunpeng1234"},"content":"        List\u003cApplicant\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":154,"author":{"gitId":"Chang-CH"},"content":"        assertEquals(expectedInternWatcher, actualModel.getInternWatcher());","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"Chang-CH"},"content":"     * Updates {@code model}\u0027s filtered list to show only the applicant at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"Chang-CH"},"content":"     * {@code model}\u0027s intern book.","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"yunpeng1234"},"content":"    public static void showApplicantAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"yunpeng1234"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredApplicantList().size());","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"yunpeng1234"},"content":"        Applicant applicant \u003d model.getFilteredApplicantList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"nicolej2122"},"content":"        final String[] splitName \u003d applicant.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"Chang-CH"},"content":"        model.updateFilteredApplicantList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(1, model.getFilteredApplicantList().size());","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"Chang-CH"},"content":"     * Updates {@code model}\u0027s filtered list to show only the applicant at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"Chang-CH"},"content":"     * {@code model}\u0027s intern book.","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"Chang-CH"},"content":"    public static void showSelectedApplicant(Model model, Selection targetSelection) {","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"yunpeng1234"},"content":"        assertTrue(targetSelection.getIndexZeroBased() \u003c model.getFilteredApplicantList().size());","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"yunpeng1234"},"content":"        Applicant applicant \u003d model.getFilteredApplicantList().get(targetSelection.getIndexZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"Chang-CH"},"content":"        final String[] splitName \u003d applicant.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"Chang-CH"},"content":"        model.updateFilteredApplicantList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(1, model.getFilteredApplicantList().size());","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yunpeng1234":20,"Jeromesyl":6,"nicolej2122":5,"Chang-CH":48,"-":83,"jackgugz":23}},{"path":"src/test/java/seedu/intern/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.showApplicantAtIndex;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.getTypicalInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalSelections.SELECTION_ALL;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalSelections.SELECTION_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalSelections.SELECTION_SECOND_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.selection.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.commons.core.selection.Selection;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"    private Model model \u003d new ModelManager(getTypicalInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"        Applicant applicantToDelete \u003d model.getFilteredApplicantList()","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"                .get(SELECTION_FIRST_APPLICANT.getIndexZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(SELECTION_FIRST_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_APPLICANT_SUCCESS, applicantToDelete);","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"        expectedModel.deleteApplicant(applicantToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_validAllUnfilteredList_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(SELECTION_ALL);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_ALL_SUCCESS,","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"                model.getFilteredApplicantList().size());","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_validAllFilteredList_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"        showApplicantAtIndex(model, SELECTION_FIRST_APPLICANT.getIndex());","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"        Applicant applicantToDelete \u003d model.getFilteredApplicantList()","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"                .get(SELECTION_FIRST_APPLICANT.getIndexZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(SELECTION_ALL);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_ALL_SUCCESS,","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"                model.getFilteredApplicantList().size());","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"        Model expectedModel \u003d new ModelManager(model.getInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"        expectedModel.deleteApplicant(applicantToDelete);","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"        showNoApplicant(expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredApplicantList().size() + 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Selection.fromIndex(outOfBoundIndex));","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"        showApplicantAtIndex(model, SELECTION_FIRST_APPLICANT.getIndex());","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"        Applicant applicantToDelete \u003d model.getFilteredApplicantList()","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"yunpeng1234"},"content":"                .get(SELECTION_FIRST_APPLICANT.getIndexZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"yunpeng1234"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(SELECTION_FIRST_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_APPLICANT_SUCCESS, applicantToDelete);","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"        Model expectedModel \u003d new ModelManager(model.getInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"Chang-CH"},"content":"        expectedModel.deleteApplicant(applicantToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"yunpeng1234"},"content":"        showNoApplicant(expectedModel);","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"yunpeng1234"},"content":"        showApplicantAtIndex(model, SELECTION_FIRST_APPLICANT.getIndex());","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"yunpeng1234"},"content":"        Selection outOfBoundIndex \u003d SELECTION_SECOND_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"Chang-CH"},"content":"        // ensures that outOfBoundIndex is still in bounds of intern book list","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"yunpeng1234"},"content":"        assertTrue(outOfBoundIndex.getIndexZeroBased() \u003c model.getInternWatcher().getApplicantList().size());","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"yunpeng1234"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(SELECTION_FIRST_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"yunpeng1234"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(SELECTION_SECOND_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"yunpeng1234"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(SELECTION_FIRST_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"Chang-CH"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"yunpeng1234"},"content":"    private void showNoApplicant(Model model) {","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"Chang-CH"},"content":"        model.updateFilteredApplicantList(p -\u003e false);","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"yunpeng1234"},"content":"        assertTrue(model.getFilteredApplicantList().isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yunpeng1234":60,"nicolej2122":1,"Chang-CH":17,"-":67}},{"path":"src/test/java/seedu/intern/logic/commands/EditApplicantDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_SKILL_JAVA;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"public class EditApplicantDescriptorTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"nicolej2122"},"content":"        EditApplicantDescriptor descriptorWithSameValues \u003d new EditApplicantDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"nicolej2122"},"content":"        EditApplicantDescriptor editedAmy \u003d new EditApplicantDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"nicolej2122"},"content":"        editedAmy \u003d new EditApplicantDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"nicolej2122"},"content":"        editedAmy \u003d new EditApplicantDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"        // different skills -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"        editedAmy \u003d new EditApplicantDescriptorBuilder(DESC_AMY).withSkills(VALID_SKILL_JAVA).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yunpeng1234":3,"nicolej2122":6,"Chang-CH":8,"-":37}},{"path":"src/test/java/seedu/intern/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_SKILL_JAVA;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.showApplicantAtIndex;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.showSelectedApplicant;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.getTypicalInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalSelections.SELECTION_ALL;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalSelections.SELECTION_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalSelections.SELECTION_SECOND_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.selection.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.selection.Selection;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.InternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.TypicalApplicants;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":42,"author":{"gitId":"nicolej2122"},"content":"    private Model model \u003d new ModelManager(getTypicalInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"    public void execute_validAllSelectInvalidDescriptorUnfilteredList_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(AssertionError.class, () -\u003e new EditCommand(SELECTION_ALL, descriptor));","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"nicolej2122"},"content":"        Applicant editedApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"nicolej2122"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(editedApplicant).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"        EditCommand editCommand \u003d new EditCommand(SELECTION_FIRST_APPLICANT, descriptor);","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_APPLICANT_SUCCESS, editedApplicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"        Model expectedModel \u003d new ModelManager(new InternWatcher(model.getInternWatcher()), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"        expectedModel.setApplicant(model.getFilteredApplicantList().get(0), editedApplicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"    public void execute_validAllSelectUnfilteredList_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"                .withApplicationStatus(VALID_STATUS_BOB).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"        EditCommand editCommand \u003d new EditCommand(SELECTION_ALL, descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ALL_SUCCESS,","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"                model.getFilteredApplicantList().size(), model.getFilteredApplicantList().size());","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"        for (Applicant applicant : TypicalApplicants.getTypicalApplicants()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"            ApplicantBuilder applicantBuilder \u003d new ApplicantBuilder(applicant).withApplicationStatus(VALID_STATUS_BOB);","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"            expectedModel.addApplicant(applicantBuilder.build());","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"    public void execute_validAllSelectEmptyUnfilteredList_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"        ModelManager emptyModel \u003d new ModelManager();","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"                .withApplicationStatus(VALID_STATUS_BOB).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"        EditCommand editCommand \u003d new EditCommand(SELECTION_ALL, descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ALL_SUCCESS, 0, 0);","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"        assertCommandSuccess(editCommand, emptyModel, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"Chang-CH"},"content":"    public void execute_validAllSelectSingleFilteredList_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"Chang-CH"},"content":"        Model expectedModel \u003d new ModelManager(new InternWatcher(model.getInternWatcher()), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"yunpeng1234"},"content":"        showApplicantAtIndex(model, SELECTION_FIRST_APPLICANT.getIndex());","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"yunpeng1234"},"content":"        showApplicantAtIndex(expectedModel, SELECTION_FIRST_APPLICANT.getIndex());","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"yunpeng1234"},"content":"        Applicant applicantToEdit \u003d model.getFilteredApplicantList().get(SELECTION_FIRST_APPLICANT.getIndexZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"Chang-CH"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"Chang-CH"},"content":"                .withApplicationStatus(VALID_STATUS_AMY).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"Chang-CH"},"content":"        EditCommand editCommand \u003d new EditCommand(SELECTION_ALL, descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ALL_SUCCESS,","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"yunpeng1234"},"content":"                model.getFilteredApplicantList().size(), model.getFilteredApplicantList().size());","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"Chang-CH"},"content":"        Applicant editedApplicant \u003d new ApplicantBuilder(applicantToEdit)","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"Chang-CH"},"content":"                .withApplicationStatus(VALID_STATUS_AMY).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"Chang-CH"},"content":"        expectedModel.setApplicant(applicantToEdit, editedApplicant);","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"Chang-CH"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"yunpeng1234"},"content":"        Selection indexLastApplicant \u003d Selection.fromIndex(Index.fromOneBased(model.getFilteredApplicantList().size()));","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"yunpeng1234"},"content":"        Applicant lastApplicant \u003d model.getFilteredApplicantList().get(indexLastApplicant.getIndexZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"yunpeng1234"},"content":"        ApplicantBuilder applicantInList \u003d new ApplicantBuilder(lastApplicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"yunpeng1234"},"content":"        Applicant editedApplicant \u003d applicantInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"yunpeng1234"},"content":"                .withSkills(VALID_SKILL_JAVA).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"nicolej2122"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"yunpeng1234"},"content":"                .withPhone(VALID_PHONE_BOB).withSkills(VALID_SKILL_JAVA).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"yunpeng1234"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastApplicant, descriptor);","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_APPLICANT_SUCCESS, editedApplicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"Chang-CH"},"content":"        Model expectedModel \u003d new ModelManager(new InternWatcher(model.getInternWatcher()), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"Chang-CH"},"content":"        expectedModel.setApplicant(lastApplicant, editedApplicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"Chang-CH"},"content":"    public void execute_noFieldSpecifiedIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"yunpeng1234"},"content":"        EditCommand editCommand \u003d new EditCommand(SELECTION_FIRST_APPLICANT, new EditApplicantDescriptor());","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"yunpeng1234"},"content":"        Applicant editedApplicant \u003d model.getFilteredApplicantList().get(SELECTION_FIRST_APPLICANT.getIndexZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_APPLICANT_SUCCESS, editedApplicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"Chang-CH"},"content":"        Model expectedModel \u003d new ModelManager(new InternWatcher(model.getInternWatcher()), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"Chang-CH"},"content":"    public void execute_noFieldSpecifiedAllFlagUnfilteredList_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"Chang-CH"},"content":"        EditCommand editCommand \u003d new EditCommand(SELECTION_ALL, new EditApplicantDescriptor());","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"Chang-CH"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ALL_SUCCESS,","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"yunpeng1234"},"content":"                model.getFilteredApplicantList().size(),","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"yunpeng1234"},"content":"                model.getFilteredApplicantList().size());","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"Chang-CH"},"content":"        Model expectedModel \u003d new ModelManager(new InternWatcher(model.getInternWatcher()), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"Chang-CH"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"yunpeng1234"},"content":"        showSelectedApplicant(model, SELECTION_FIRST_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":169,"author":{"gitId":"yunpeng1234"},"content":"        Applicant applicantInFilteredList \u003d model.getFilteredApplicantList()","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"yunpeng1234"},"content":"                .get(SELECTION_FIRST_APPLICANT.getIndexZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"nicolej2122"},"content":"        Applicant editedApplicant \u003d new ApplicantBuilder(applicantInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"yunpeng1234"},"content":"        EditCommand editCommand \u003d new EditCommand(SELECTION_FIRST_APPLICANT,","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"nicolej2122"},"content":"                new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":175,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_APPLICANT_SUCCESS, editedApplicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":177,"author":{"gitId":"Chang-CH"},"content":"        Model expectedModel \u003d new ModelManager(new InternWatcher(model.getInternWatcher()), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"yunpeng1234"},"content":"        expectedModel.setApplicant(model.getFilteredApplicantList().get(0), editedApplicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":184,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_duplicateApplicantUnfilteredList_failure() {","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"yunpeng1234"},"content":"        Applicant firstApplicant \u003d model.getFilteredApplicantList().get(SELECTION_FIRST_APPLICANT.getIndexZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"nicolej2122"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(firstApplicant).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"yunpeng1234"},"content":"        EditCommand editCommand \u003d new EditCommand(SELECTION_SECOND_APPLICANT, descriptor);","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":189,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_duplicateApplicantFilteredList_failure() {","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"yunpeng1234"},"content":"        showSelectedApplicant(model, SELECTION_FIRST_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":196,"author":{"gitId":"Chang-CH"},"content":"        // edit applicant in filtered list into a duplicate in intern book","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"yunpeng1234"},"content":"        Applicant applicantInList \u003d model.getInternWatcher().getApplicantList()","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"yunpeng1234"},"content":"                .get(SELECTION_SECOND_APPLICANT.getIndexZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":199,"author":{"gitId":"yunpeng1234"},"content":"        EditCommand editCommand \u003d new EditCommand(SELECTION_FIRST_APPLICANT,","lastModifiedDate":"2021-11-04"},{"lineNumber":200,"author":{"gitId":"nicolej2122"},"content":"                new EditApplicantDescriptorBuilder(applicantInList).build());","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":202,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":206,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_invalidApplicantSelectionUnfilteredList_failure() {","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"Chang-CH"},"content":"        Selection outOfBoundSelection \u003d Selection","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"yunpeng1234"},"content":"                .fromIndex(Index.fromOneBased(model.getFilteredApplicantList().size() + 1));","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"nicolej2122"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":210,"author":{"gitId":"Chang-CH"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundSelection, descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":212,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":217,"author":{"gitId":"Chang-CH"},"content":"     * but smaller than size of intern book","lastModifiedDate":"2021-10-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":220,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_invalidApplicantSelectionFilteredList_failure() {","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"yunpeng1234"},"content":"        showSelectedApplicant(model, SELECTION_FIRST_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"yunpeng1234"},"content":"        Selection outOfBoundSelection \u003d SELECTION_SECOND_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"Chang-CH"},"content":"        // ensures that outOfBoundSelection is still in bounds of intern book list","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"yunpeng1234"},"content":"        assertTrue(outOfBoundSelection.getIndexZeroBased() \u003c model.getInternWatcher().getApplicantList().size());","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":226,"author":{"gitId":"Chang-CH"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundSelection,","lastModifiedDate":"2021-10-25"},{"lineNumber":227,"author":{"gitId":"nicolej2122"},"content":"                new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":229,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":234,"author":{"gitId":"yunpeng1234"},"content":"        final EditCommand standardCommand \u003d new EditCommand(SELECTION_FIRST_APPLICANT, DESC_AMY);","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":237,"author":{"gitId":"nicolej2122"},"content":"        EditApplicantDescriptor copyDescriptor \u003d new EditApplicantDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-08"},{"lineNumber":238,"author":{"gitId":"yunpeng1234"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(SELECTION_FIRST_APPLICANT, copyDescriptor);","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":251,"author":{"gitId":"yunpeng1234"},"content":"        assertFalse(standardCommand.equals(new EditCommand(SELECTION_SECOND_APPLICANT, DESC_AMY)));","lastModifiedDate":"2021-11-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":254,"author":{"gitId":"yunpeng1234"},"content":"        assertFalse(standardCommand.equals(new EditCommand(SELECTION_FIRST_APPLICANT, DESC_BOB)));","lastModifiedDate":"2021-11-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"yunpeng1234":59,"nicolej2122":11,"Chang-CH":98,"-":89}},{"path":"src/test/java/seedu/intern/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"nicolej2122":1,"Chang-CH":5,"-":14}},{"path":"src/test/java/seedu/intern/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_APPLICANTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalApplicants.BENSON;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalApplicants.DANIEL;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalApplicants.ELLE;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalApplicants.FIONA;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalApplicants.GEORGE;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalApplicants.getTypicalInternWatcher;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.logic.commands.FilterCommand.FilterApplicantDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.model.ModelManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.model.applicant.CombineFiltersPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.testutil.FilterApplicantDescriptorBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"public class FilterCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    private Model model \u003d new ModelManager(getTypicalInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_gradeOnly_multipleApplicantsFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor filterCondition \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"                .withGrade(\"4.80\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"        CombineFiltersPredicate predicate \u003d new CombineFiltersPredicate(filterCondition);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"        FilterCommand command \u003d new FilterCommand(filterCondition);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Arrays.asList(DANIEL, ELLE, FIONA), model.getFilteredApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_skillOnly_multipleApplicantsFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor filterCondition \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"                .withSkills(\"python\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"        CombineFiltersPredicate predicate \u003d new CombineFiltersPredicate(filterCondition);","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"        FilterCommand command \u003d new FilterCommand(filterCondition);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_gradYearMonthOnly_multipleApplicantsFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor filterCondition \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"                .withGraduationYearMonth(\"06/2022\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"        CombineFiltersPredicate predicate \u003d new CombineFiltersPredicate(filterCondition);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"        FilterCommand command \u003d new FilterCommand(filterCondition);","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Arrays.asList(ALICE, FIONA), model.getFilteredApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_courseOnly_multipleApplicantsFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor filterCondition \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"                .withCourses(\"Computer\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"        CombineFiltersPredicate predicate \u003d new CombineFiltersPredicate(filterCondition);","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"        FilterCommand command \u003d new FilterCommand(filterCondition);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getFilteredApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_statusOnly_multipleApplicantsFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor filterCondition \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"                .withApplicationStatus(\"REJECTED\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"        CombineFiltersPredicate predicate \u003d new CombineFiltersPredicate(filterCondition);","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"        FilterCommand command \u003d new FilterCommand(filterCondition);","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Arrays.asList(ALICE, GEORGE), model.getFilteredApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"jackgugz"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_jobOnly_multipleApplicantsFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"jackgugz"},"content":"        FilterApplicantDescriptor filterCondition \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"jackgugz"},"content":"                .withJobs(\"software engineer\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"jackgugz"},"content":"        CombineFiltersPredicate predicate \u003d new CombineFiltersPredicate(filterCondition);","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"jackgugz"},"content":"        FilterCommand command \u003d new FilterCommand(filterCondition);","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"jackgugz"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"jackgugz"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Arrays.asList(ALICE, GEORGE), model.getFilteredApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"jackgugz"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_jobAndCourse_multipleApplicantsFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"jackgugz"},"content":"        FilterApplicantDescriptor filterCondition \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"jackgugz"},"content":"                .withJobs(\"software engineer\").withCourses(\"Social Work\", \"Computer Science\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"jackgugz"},"content":"        CombineFiltersPredicate predicate \u003d new CombineFiltersPredicate(filterCondition);","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"jackgugz"},"content":"        FilterCommand command \u003d new FilterCommand(filterCondition);","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"jackgugz"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"jackgugz"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Arrays.asList(ALICE, GEORGE), model.getFilteredApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"jackgugz"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_jobAndCourse_oneApplicantsFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"jackgugz"},"content":"        FilterApplicantDescriptor filterCondition \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"jackgugz"},"content":"                .withJobs(\"software engineer\").withCourses(\"Computer Science\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"jackgugz"},"content":"        CombineFiltersPredicate predicate \u003d new CombineFiltersPredicate(filterCondition);","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"jackgugz"},"content":"        FilterCommand command \u003d new FilterCommand(filterCondition);","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"jackgugz"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"jackgugz"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"jackgugz"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_jobAndCourse_noApplicantsFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"jackgugz"},"content":"        FilterApplicantDescriptor filterCondition \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"jackgugz"},"content":"                .withJobs(\"software engineer\").withCourses(\"accountant\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"jackgugz"},"content":"        CombineFiltersPredicate predicate \u003d new CombineFiltersPredicate(filterCondition);","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"jackgugz"},"content":"        FilterCommand command \u003d new FilterCommand(filterCondition);","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"jackgugz"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"jackgugz"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Arrays.asList(), model.getFilteredApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_allFields_oneApplicantFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor filterCondition \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"yunpeng1234"},"content":"                .withGrade(\"4.80\")","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"yunpeng1234"},"content":"                .withInstitution(\"SUTD\")","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"yunpeng1234"},"content":"                .withApplicationStatus(\"ACCEPTED\")","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"yunpeng1234"},"content":"                .withCourses(\"PHILOSOPHY\")","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"yunpeng1234"},"content":"                .withGraduationYearMonth(\"06/2025\")","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"jackgugz"},"content":"                .withJobs(\"Helper\")","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"yunpeng1234"},"content":"        CombineFiltersPredicate predicate \u003d new CombineFiltersPredicate(filterCondition);","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"yunpeng1234"},"content":"        FilterCommand command \u003d new FilterCommand(filterCondition);","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"yunpeng1234"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Arrays.asList(ELLE), model.getFilteredApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_allFields_noApplicantFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor filterCondition \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"yunpeng1234"},"content":"                .withGrade(\"5.00\")","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"yunpeng1234"},"content":"                .withInstitution(\"SUTD\")","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"yunpeng1234"},"content":"                .withApplicationStatus(\"ACCEPTED\")","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"yunpeng1234"},"content":"                .withCourses(\"PHILOSOPHY\")","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"yunpeng1234"},"content":"                .withGraduationYearMonth(\"06/2025\")","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"jackgugz"},"content":"                .withJobs(\"Helper\")","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"yunpeng1234"},"content":"        CombineFiltersPredicate predicate \u003d new CombineFiltersPredicate(filterCondition);","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"yunpeng1234"},"content":"        FilterCommand command \u003d new FilterCommand(filterCondition);","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"yunpeng1234"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"yunpeng1234"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Arrays.asList(), model.getFilteredApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"yunpeng1234":137,"jackgugz":39}},{"path":"src/test/java/seedu/intern/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_APPLICANTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.CARL;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.ELLE;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.FIONA;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.getTypicalInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"    private Model model \u003d new ModelManager(getTypicalInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_zeroKeywords_noApplicantFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"    public void execute_multipleKeywords_multipleApplicantsFound() {","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"yunpeng1234":7,"nicolej2122":2,"Chang-CH":13,"-":61}},{"path":"src/test/java/seedu/intern/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"nicolej2122":1,"Chang-CH":5,"-":14}},{"path":"src/test/java/seedu/intern/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.showApplicantAtIndex;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.getTypicalInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"        model \u003d new ModelManager(getTypicalInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"        expectedModel \u003d new ModelManager(model.getInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"        showApplicantAtIndex(model, INDEX_FIRST_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"yunpeng1234":3,"nicolej2122":1,"Chang-CH":7,"-":28}},{"path":"src/test/java/seedu/intern/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jeromesyl"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Jeromesyl"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Jeromesyl"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Jeromesyl"},"content":"import static seedu.intern.testutil.TypicalApplicants.getTypicalInternWatcher;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalSelections.SELECTION_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.model.InternWatcher;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.model.ModelManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Jeromesyl"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Jeromesyl"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RedoCommand.","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Jeromesyl"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Jeromesyl"},"content":"public class RedoCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Jeromesyl"},"content":"    private Model model \u003d new ModelManager(getTypicalInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Jeromesyl"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Jeromesyl"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Jeromesyl"},"content":"    public void execute_redoAdd_success() throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Jeromesyl"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Jeromesyl"},"content":"        String commitText \u003d String.format(AddCommand.MESSAGE_COMMIT_ADD, applicant);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Jeromesyl"},"content":"        model.addApplicant(applicant);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Jeromesyl"},"content":"        model.commitInternWatcher(commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Jeromesyl"},"content":"        model.undoInternWatcher();","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Jeromesyl"},"content":"        expectedModel.addApplicant(applicant);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Jeromesyl"},"content":"        String expectedMessage \u003d String.format(RedoCommand.MESSAGE_SUCCESS, commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Jeromesyl"},"content":"        assertCommandSuccess(new RedoCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"Jeromesyl"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Jeromesyl"},"content":"    public void execute_redoDelete_success() throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"        Applicant applicantToDelete \u003d model.getFilteredApplicantList()","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"                .get(SELECTION_FIRST_APPLICANT.getIndexZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Jeromesyl"},"content":"        String commitText \u003d String.format(DeleteCommand.MESSAGE_COMMIT_DELETE, applicantToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Jeromesyl"},"content":"        model.deleteApplicant(applicantToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Jeromesyl"},"content":"        model.commitInternWatcher(commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Jeromesyl"},"content":"        model.undoInternWatcher();","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Jeromesyl"},"content":"        expectedModel.deleteApplicant(applicantToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Jeromesyl"},"content":"        String expectedMessage \u003d String.format(RedoCommand.MESSAGE_SUCCESS, commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Jeromesyl"},"content":"        assertCommandSuccess(new RedoCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Jeromesyl"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Jeromesyl"},"content":"    public void execute_redoDeleteAll_success() throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Jeromesyl"},"content":"        int length \u003d lastShownList.size();","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Jeromesyl"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Jeromesyl"},"content":"            Applicant applicantToDelete \u003d lastShownList.get(0);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Jeromesyl"},"content":"            model.deleteApplicant(applicantToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Jeromesyl"},"content":"            expectedModel.deleteApplicant(applicantToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Jeromesyl"},"content":"        String commitText \u003d String.format(DeleteCommand.MESSAGE_COMMIT_DELETE_ALL, String.valueOf(length));","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Jeromesyl"},"content":"        model.commitInternWatcher(commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Jeromesyl"},"content":"        model.undoInternWatcher();","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Jeromesyl"},"content":"        String expectedMessage \u003d String.format(RedoCommand.MESSAGE_SUCCESS, commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"Jeromesyl"},"content":"        assertCommandSuccess(new RedoCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"Jeromesyl"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Jeromesyl"},"content":"    public void execute_redoEdit_success() throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Jeromesyl"},"content":"        Applicant editedApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"Jeromesyl"},"content":"        String commitText \u003d String.format(EditCommand.MESSAGE_COMMIT_EDIT, editedApplicant);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"        model.setApplicant(model.getFilteredApplicantList().get(0), editedApplicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"Jeromesyl"},"content":"        model.commitInternWatcher(commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Jeromesyl"},"content":"        model.undoInternWatcher();","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"        expectedModel.setApplicant(model.getFilteredApplicantList().get(0), editedApplicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"Jeromesyl"},"content":"        String expectedMessage \u003d String.format(RedoCommand.MESSAGE_SUCCESS, commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"Jeromesyl"},"content":"        assertCommandSuccess(new RedoCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"Jeromesyl"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"Jeromesyl"},"content":"    public void execute_redoClear_success() throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"Jeromesyl"},"content":"        String commitText \u003d ClearCommand.MESSAGE_COMMIT_CLEAR;","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"Jeromesyl"},"content":"        model.setInternWatcher(new InternWatcher());","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"Jeromesyl"},"content":"        model.commitInternWatcher(commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"Jeromesyl"},"content":"        model.undoInternWatcher();","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"Jeromesyl"},"content":"        expectedModel.setInternWatcher(new InternWatcher());","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"Jeromesyl"},"content":"        String expectedMessage \u003d String.format(RedoCommand.MESSAGE_SUCCESS, commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"Jeromesyl"},"content":"        assertCommandSuccess(new RedoCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"Jeromesyl"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"Jeromesyl"},"content":"    public void execute_noRedo_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"Jeromesyl"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"Jeromesyl"},"content":"        assertThrows(CommandException.class, RedoCommand.MESSAGE_NO_REDO, () -\u003e redoCommand.execute(model));","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"Jeromesyl"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"yunpeng1234":8,"Jeromesyl":106}},{"path":"src/test/java/seedu/intern/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jeromesyl"},"content":"package seedu.intern.logic.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Jeromesyl"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Jeromesyl"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Jeromesyl"},"content":"import static seedu.intern.testutil.TypicalApplicants.getTypicalInternWatcher;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalSelections.SELECTION_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Jeromesyl"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Jeromesyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.model.InternWatcher;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.model.ModelManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Jeromesyl"},"content":"import seedu.intern.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Jeromesyl"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Jeromesyl"},"content":" * Contains integration tests (interaction with the Model) and unit tests for UndoCommand.","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Jeromesyl"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Jeromesyl"},"content":"public class UndoCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Jeromesyl"},"content":"    private Model model \u003d new ModelManager(getTypicalInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Jeromesyl"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalInternWatcher(), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Jeromesyl"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Jeromesyl"},"content":"    public void execute_undoAdd_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Jeromesyl"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Jeromesyl"},"content":"        String commitText \u003d String.format(AddCommand.MESSAGE_COMMIT_ADD, applicant);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Jeromesyl"},"content":"        model.addApplicant(applicant);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Jeromesyl"},"content":"        model.commitInternWatcher(commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Jeromesyl"},"content":"        String expectedMessage \u003d String.format(UndoCommand.MESSAGE_SUCCESS, commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Jeromesyl"},"content":"        assertCommandSuccess(new UndoCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Jeromesyl"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Jeromesyl"},"content":"    public void execute_undoDelete_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"        Applicant applicantToDelete \u003d model.getFilteredApplicantList()","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"                .get(SELECTION_FIRST_APPLICANT.getIndexZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Jeromesyl"},"content":"        String commitText \u003d String.format(DeleteCommand.MESSAGE_COMMIT_DELETE, applicantToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Jeromesyl"},"content":"        model.deleteApplicant(applicantToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Jeromesyl"},"content":"        model.commitInternWatcher(commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Jeromesyl"},"content":"        String expectedMessage \u003d String.format(UndoCommand.MESSAGE_SUCCESS, commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Jeromesyl"},"content":"        assertCommandSuccess(new UndoCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Jeromesyl"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Jeromesyl"},"content":"    public void execute_undoDeleteAll_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Jeromesyl"},"content":"        int length \u003d lastShownList.size();","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Jeromesyl"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Jeromesyl"},"content":"            Applicant applicantToDelete \u003d lastShownList.get(0);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Jeromesyl"},"content":"            model.deleteApplicant(applicantToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Jeromesyl"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Jeromesyl"},"content":"        String commitText \u003d String.format(DeleteCommand.MESSAGE_COMMIT_DELETE_ALL, String.valueOf(length));","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Jeromesyl"},"content":"        model.commitInternWatcher(commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Jeromesyl"},"content":"        String expectedMessage \u003d String.format(UndoCommand.MESSAGE_SUCCESS, commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Jeromesyl"},"content":"        assertCommandSuccess(new UndoCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Jeromesyl"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Jeromesyl"},"content":"    public void execute_undoEdit_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Jeromesyl"},"content":"        Applicant editedApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Jeromesyl"},"content":"        String commitText \u003d String.format(EditCommand.MESSAGE_COMMIT_EDIT, editedApplicant);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"        model.setApplicant(model.getFilteredApplicantList().get(0), editedApplicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"Jeromesyl"},"content":"        model.commitInternWatcher(commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Jeromesyl"},"content":"        String expectedMessage \u003d String.format(UndoCommand.MESSAGE_SUCCESS, commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Jeromesyl"},"content":"        assertCommandSuccess(new UndoCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Jeromesyl"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Jeromesyl"},"content":"    public void execute_undoClear_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Jeromesyl"},"content":"        String commitText \u003d ClearCommand.MESSAGE_COMMIT_CLEAR;","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"Jeromesyl"},"content":"        model.setInternWatcher(new InternWatcher());","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"Jeromesyl"},"content":"        model.commitInternWatcher(commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"Jeromesyl"},"content":"        String expectedMessage \u003d String.format(UndoCommand.MESSAGE_SUCCESS, commitText);","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"Jeromesyl"},"content":"        assertCommandSuccess(new UndoCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"Jeromesyl"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"Jeromesyl"},"content":"    public void execute_noUndo_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"Jeromesyl"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"Jeromesyl"},"content":"        assertThrows(CommandException.class, UndoCommand.MESSAGE_NO_UNDO, () -\u003e undoCommand.execute(model));","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"Jeromesyl"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"yunpeng1234":7,"Jeromesyl":93}},{"path":"src/test/java/seedu/intern/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.COURSE_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.COURSE_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.GRADE_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.GRADE_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.GRADUATION_YEARMONTH_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.GRADUATION_YEARMONTH_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INSTITUTION_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INSTITUTION_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INVALID_COURSE_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INVALID_GRADE_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INVALID_GRADUATION_YEARMONTH_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INVALID_INSTITUTION_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INVALID_JOB_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INVALID_SKILL_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.JOB_DESC_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.JOB_DESC_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.SKILL_DESC_JAVA;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.SKILL_DESC_PYTHON;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_GRADE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_GRADUATION_YEARMONTH_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_INSTITUTION_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_SKILL_JAVA;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_SKILL_PYTHON;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.AddCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Course;","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Grade;","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.GraduationYearMonth;","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Institution;","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.Job;","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"        Applicant expectedApplicant \u003d new ApplicantBuilder(BOB).withSkills(VALID_SKILL_PYTHON).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"                        + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"                        + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_PYTHON,","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"nicolej2122"},"content":"                new AddCommand(expectedApplicant));","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"                        + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"                        + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_PYTHON,","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"nicolej2122"},"content":"                new AddCommand(expectedApplicant));","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"jackgugz"},"content":"                        + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"                        + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_PYTHON,","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"nicolej2122"},"content":"                new AddCommand(expectedApplicant));","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"jackgugz"},"content":"                        + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"yunpeng1234"},"content":"                        + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_PYTHON,","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"nicolej2122"},"content":"                new AddCommand(expectedApplicant));","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"yunpeng1234"},"content":"        // multiple grade - last grade accepted","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"jackgugz"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"                        + GRADE_DESC_AMY + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"jackgugz"},"content":"                        + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_PYTHON + JOB_DESC_BOB,","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"nicolej2122"},"content":"                new AddCommand(expectedApplicant));","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"Chang-CH"},"content":"        // multiple institutions - last institution accepted","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"Chang-CH"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"jackgugz"},"content":"                + GRADE_DESC_BOB + INSTITUTION_DESC_AMY + INSTITUTION_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"yunpeng1234"},"content":"                + COURSE_DESC_BOB + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_PYTHON,","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"nicolej2122"},"content":"                new AddCommand(expectedApplicant));","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"jackgugz"},"content":"        // multiple graduation_year_month - last graduation_year_month accepted","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"jackgugz"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"jackgugz"},"content":"                        + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"yunpeng1234"},"content":"                        + GRADUATION_YEARMONTH_DESC_AMY + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_PYTHON,","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"nicolej2122"},"content":"                new AddCommand(expectedApplicant));","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"Jeromesyl"},"content":"        // multiple courses - last course accepted","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"Chang-CH"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"jackgugz"},"content":"                + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_AMY + COURSE_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"jackgugz"},"content":"                + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_PYTHON,","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"jackgugz"},"content":"                new AddCommand(expectedApplicant));","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"jackgugz"},"content":"        // multiple jobs - last job accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"jackgugz"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"jackgugz"},"content":"                        + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + JOB_DESC_AMY + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"yunpeng1234"},"content":"                        + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_PYTHON,","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"nicolej2122"},"content":"                new AddCommand(expectedApplicant));","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"yunpeng1234"},"content":"        // multiple SKILLs - all accepted","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"yunpeng1234"},"content":"        Applicant expectedApplicantMultipleSkills \u003d new ApplicantBuilder(BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"yunpeng1234"},"content":"                .withSkills(VALID_SKILL_PYTHON, VALID_SKILL_JAVA)","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":127,"author":{"gitId":"Chang-CH"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"jackgugz"},"content":"                        + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"yunpeng1234"},"content":"                        + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_JAVA + SKILL_DESC_PYTHON,","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"yunpeng1234"},"content":"                new AddCommand(expectedApplicantMultipleSkills));","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"yunpeng1234"},"content":"        // zero SKILLs","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"yunpeng1234"},"content":"        Applicant expectedApplicant \u003d new ApplicantBuilder(AMY).withSkills().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"Chang-CH"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"jackgugz"},"content":"                + GRADE_DESC_AMY + INSTITUTION_DESC_AMY + COURSE_DESC_AMY + JOB_DESC_AMY","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"nicolej2122"},"content":"                + GRADUATION_YEARMONTH_DESC_AMY, new AddCommand(expectedApplicant));","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"Chang-CH"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"Chang-CH"},"content":"                + EMAIL_DESC_BOB + GRADE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"jackgugz"},"content":"                + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + GRADUATION_YEARMONTH_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"Chang-CH"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB","lastModifiedDate":"2021-09-21"},{"lineNumber":153,"author":{"gitId":"Chang-CH"},"content":"                + EMAIL_DESC_BOB + GRADE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"jackgugz"},"content":"                + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + GRADUATION_YEARMONTH_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"Chang-CH"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"Chang-CH"},"content":"                + VALID_EMAIL_BOB + GRADE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"jackgugz"},"content":"                + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + GRADUATION_YEARMONTH_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"yunpeng1234"},"content":"        // missing grade prefix","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"yunpeng1234"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"Chang-CH"},"content":"                + EMAIL_DESC_BOB + VALID_GRADE_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"jackgugz"},"content":"                + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + GRADUATION_YEARMONTH_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"Chang-CH"},"content":"        // missing institution prefix","lastModifiedDate":"2021-09-21"},{"lineNumber":167,"author":{"gitId":"Chang-CH"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-09-21"},{"lineNumber":168,"author":{"gitId":"Chang-CH"},"content":"                + EMAIL_DESC_BOB + GRADE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"jackgugz"},"content":"                + VALID_INSTITUTION_BOB + COURSE_DESC_BOB + GRADUATION_YEARMONTH_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-09-25"},{"lineNumber":170,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":171,"author":{"gitId":"Jeromesyl"},"content":"        // missing course prefix","lastModifiedDate":"2021-09-24"},{"lineNumber":172,"author":{"gitId":"Jeromesyl"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-09-24"},{"lineNumber":173,"author":{"gitId":"Chang-CH"},"content":"                + EMAIL_DESC_BOB + GRADE_DESC_BOB + INSTITUTION_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"jackgugz"},"content":"                + VALID_COURSE_BOB + GRADUATION_YEARMONTH_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-09-25"},{"lineNumber":175,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":176,"author":{"gitId":"jackgugz"},"content":"        // missing graduation_year_month prefix","lastModifiedDate":"2021-09-25"},{"lineNumber":177,"author":{"gitId":"jackgugz"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-09-25"},{"lineNumber":178,"author":{"gitId":"Chang-CH"},"content":"                + EMAIL_DESC_BOB + GRADE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"jackgugz"},"content":"                + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + VALID_GRADUATION_YEARMONTH_BOB, expectedMessage);","lastModifiedDate":"2021-09-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"Chang-CH"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB","lastModifiedDate":"2021-09-21"},{"lineNumber":183,"author":{"gitId":"Chang-CH"},"content":"                + VALID_EMAIL_BOB + VALID_GRADE_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"jackgugz"},"content":"                + VALID_INSTITUTION_BOB + VALID_COURSE_BOB + VALID_GRADUATION_YEARMONTH_BOB, expectedMessage);","lastModifiedDate":"2021-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"Chang-CH"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"jackgugz"},"content":"                + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB","lastModifiedDate":"2021-09-25"},{"lineNumber":192,"author":{"gitId":"jackgugz"},"content":"                + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_JAVA + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"yunpeng1234"},"content":"                + SKILL_DESC_PYTHON, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"Chang-CH"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"jackgugz"},"content":"                + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB","lastModifiedDate":"2021-09-25"},{"lineNumber":198,"author":{"gitId":"jackgugz"},"content":"                + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_JAVA + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"yunpeng1234"},"content":"                + SKILL_DESC_PYTHON, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"Chang-CH"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"jackgugz"},"content":"                + GRADE_DESC_BOB + GRADE_DESC_BOB + INSTITUTION_DESC_BOB","lastModifiedDate":"2021-09-25"},{"lineNumber":204,"author":{"gitId":"jackgugz"},"content":"                + COURSE_DESC_BOB + GRADUATION_YEARMONTH_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"yunpeng1234"},"content":"                + SKILL_DESC_JAVA + SKILL_DESC_PYTHON, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"Chang-CH"},"content":"        // invalid institution","lastModifiedDate":"2021-09-22"},{"lineNumber":208,"author":{"gitId":"jackgugz"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"jackgugz"},"content":"                + GRADE_DESC_BOB + INVALID_INSTITUTION_DESC + COURSE_DESC_BOB + GRADUATION_YEARMONTH_DESC_BOB","lastModifiedDate":"2021-09-25"},{"lineNumber":210,"author":{"gitId":"yunpeng1234"},"content":"                + SKILL_DESC_PYTHON, Institution.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":212,"author":{"gitId":"yunpeng1234"},"content":"        // invalid SKILL","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"Chang-CH"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"jackgugz"},"content":"                + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"yunpeng1234"},"content":"                + GRADUATION_YEARMONTH_DESC_BOB + INVALID_SKILL_DESC","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"yunpeng1234"},"content":"                + VALID_SKILL_PYTHON, Skill.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":218,"author":{"gitId":"jackgugz"},"content":"        // invalid course","lastModifiedDate":"2021-09-25"},{"lineNumber":219,"author":{"gitId":"jackgugz"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"jackgugz"},"content":"                + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + INVALID_COURSE_DESC + GRADUATION_YEARMONTH_DESC_BOB","lastModifiedDate":"2021-09-25"},{"lineNumber":221,"author":{"gitId":"yunpeng1234"},"content":"                + SKILL_DESC_PYTHON, Course.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":223,"author":{"gitId":"jackgugz"},"content":"        // invalid graduation year month","lastModifiedDate":"2021-09-25"},{"lineNumber":224,"author":{"gitId":"jackgugz"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"jackgugz"},"content":"                + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + INVALID_GRADUATION_YEARMONTH_DESC","lastModifiedDate":"2021-09-25"},{"lineNumber":226,"author":{"gitId":"yunpeng1234"},"content":"                + SKILL_DESC_PYTHON, GraduationYearMonth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":228,"author":{"gitId":"yunpeng1234"},"content":"        // invalid grade","lastModifiedDate":"2021-09-22"},{"lineNumber":229,"author":{"gitId":"Chang-CH"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":230,"author":{"gitId":"jackgugz"},"content":"                + INVALID_GRADE_DESC + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"yunpeng1234"},"content":"                + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_JAVA","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"yunpeng1234"},"content":"                + VALID_SKILL_PYTHON, Grade.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":234,"author":{"gitId":"jackgugz"},"content":"        // invalid job","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"jackgugz"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"jackgugz"},"content":"                + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + INVALID_JOB_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"jackgugz"},"content":"                + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_JAVA","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"jackgugz"},"content":"                + VALID_SKILL_PYTHON, Job.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":241,"author":{"gitId":"Chang-CH"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":242,"author":{"gitId":"jackgugz"},"content":"                + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"jackgugz"},"content":"                + GRADUATION_YEARMONTH_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":247,"author":{"gitId":"jackgugz"},"content":"                + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"yunpeng1234"},"content":"                + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_JAVA + SKILL_DESC_PYTHON,","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"yunpeng1234":39,"Jeromesyl":5,"nicolej2122":9,"Chang-CH":77,"-":59,"jackgugz":62}},{"path":"src/test/java/seedu/intern/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Chang-CH":1,"-":149}},{"path":"src/test/java/seedu/intern/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Chang-CH":3,"-":35}},{"path":"src/test/java/seedu/intern/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalSelections.SELECTION_ALL;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalSelections.SELECTION_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"    public void parse_validArgsInt_returnsDeleteCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(SELECTION_FIRST_APPLICANT));","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"    public void parse_validArgsAll_returnsDeleteCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, \"ALL\", new DeleteCommand(SELECTION_ALL));","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"yunpeng1234":9,"Chang-CH":5,"-":24}},{"path":"src/test/java/seedu/intern/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INVALID_SKILL_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.SKILL_DESC_JAVA;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.SKILL_DESC_PYTHON;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.STATUS_DESC_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_SKILL_JAVA;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_SKILL_PYTHON;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.FLAG_ALL;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalIndexes.INDEX_SECOND_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalIndexes.INDEX_THIRD_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalSelections.SELECTION_ALL;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalSelections.SELECTION_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.selection.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.selection.Selection;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.EditCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"    private static final String SKILL_EMPTY \u003d \" \" + PREFIX_SKILL;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"    public void parse_allSelectMultipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"        String userInput \u003d FLAG_ALL + STATUS_DESC_BOB + STATUS_DESC_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"                .withApplicationStatus(VALID_STATUS_AMY)","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"                .build();","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"        EditCommand expectedCommand \u003d new EditCommand(Selection.fromAllFlag(), descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"    public void parse_validArgsInt_returnsEditCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"                .withApplicationStatus(VALID_STATUS_AMY)","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"                .build();","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"                \"1 \" + STATUS_DESC_AMY,","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"                new EditCommand(SELECTION_FIRST_APPLICANT, descriptor));","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"    public void parse_validArgsAll_returnsEditCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"                .withApplicationStatus(VALID_STATUS_AMY)","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"                .build();","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"                FLAG_ALL + STATUS_DESC_AMY,","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"                new EditCommand(SELECTION_ALL, descriptor));","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"    public void parse_invalidArgsAll_returnsEditCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"        // lowercase should not be accepted","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"                \"all\" + STATUS_DESC_AMY,","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"Chang-CH"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"Chang-CH"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"Chang-CH"},"content":"                \"a \" + STATUS_DESC_AMY,","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"Chang-CH"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":127,"author":{"gitId":"Chang-CH"},"content":"        assertParseFailure(parser, \"1 z/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"yunpeng1234"},"content":"        assertParseFailure(parser, \"1\" + INVALID_SKILL_DESC, Skill.MESSAGE_CONSTRAINTS); // invalid SKILL","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"yunpeng1234"},"content":"        // while parsing {@code PREFIX_SKILL} alone will reset the SKILLs of the {@code Applicant} being edited,","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"yunpeng1234"},"content":"        // parsing it together with a valid SKILL results in error","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"yunpeng1234"},"content":"        assertParseFailure(parser, \"1\" + SKILL_DESC_PYTHON + SKILL_DESC_JAVA + SKILL_EMPTY, Skill.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"yunpeng1234"},"content":"        assertParseFailure(parser, \"1\" + SKILL_DESC_PYTHON + SKILL_EMPTY + SKILL_DESC_JAVA, Skill.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"yunpeng1234"},"content":"        assertParseFailure(parser, \"1\" + SKILL_EMPTY + SKILL_DESC_PYTHON + SKILL_DESC_JAVA, Skill.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"Chang-CH"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":157,"author":{"gitId":"yunpeng1234"},"content":"        Index targetIndex \u003d INDEX_SECOND_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"yunpeng1234"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + SKILL_DESC_JAVA","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"yunpeng1234"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + SKILL_DESC_PYTHON;","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"nicolej2122"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"Chang-CH"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"yunpeng1234"},"content":"                .withSkills(VALID_SKILL_JAVA, VALID_SKILL_PYTHON).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"Chang-CH"},"content":"        EditCommand expectedCommand \u003d new EditCommand(Selection.fromIndex(targetIndex), descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":171,"author":{"gitId":"yunpeng1234"},"content":"        Index targetIndex \u003d INDEX_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"nicolej2122"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"Chang-CH"},"content":"        EditCommand expectedCommand \u003d new EditCommand(Selection.fromIndex(targetIndex), descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"yunpeng1234"},"content":"        Index targetIndex \u003d INDEX_THIRD_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"nicolej2122"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"Chang-CH"},"content":"        EditCommand expectedCommand \u003d new EditCommand(Selection.fromIndex(targetIndex), descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":192,"author":{"gitId":"nicolej2122"},"content":"        descriptor \u003d new EditApplicantDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"Chang-CH"},"content":"        expectedCommand \u003d new EditCommand(Selection.fromIndex(targetIndex), descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"nicolej2122"},"content":"        descriptor \u003d new EditApplicantDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"Chang-CH"},"content":"        expectedCommand \u003d new EditCommand(Selection.fromIndex(targetIndex), descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"yunpeng1234"},"content":"        // SKILLs","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"yunpeng1234"},"content":"        userInput \u003d targetIndex.getOneBased() + SKILL_DESC_PYTHON;","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"yunpeng1234"},"content":"        descriptor \u003d new EditApplicantDescriptorBuilder().withSkills(VALID_SKILL_PYTHON).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"Chang-CH"},"content":"        expectedCommand \u003d new EditCommand(Selection.fromIndex(targetIndex), descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":211,"author":{"gitId":"yunpeng1234"},"content":"        Index targetIndex \u003d INDEX_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"Chang-CH"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":213,"author":{"gitId":"yunpeng1234"},"content":"                + SKILL_DESC_PYTHON + PHONE_DESC_AMY + EMAIL_DESC_AMY + SKILL_DESC_PYTHON","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"yunpeng1234"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + SKILL_DESC_JAVA;","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"nicolej2122"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":217,"author":{"gitId":"yunpeng1234"},"content":"                .withEmail(VALID_EMAIL_BOB).withSkills(VALID_SKILL_PYTHON, VALID_SKILL_JAVA)","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"Chang-CH"},"content":"        EditCommand expectedCommand \u003d new EditCommand(Selection.fromIndex(targetIndex), descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"yunpeng1234"},"content":"        Index targetIndex \u003d INDEX_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":229,"author":{"gitId":"nicolej2122"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":230,"author":{"gitId":"Chang-CH"},"content":"        EditCommand expectedCommand \u003d new EditCommand(Selection.fromIndex(targetIndex), descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"Chang-CH"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2021-10-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":236,"author":{"gitId":"nicolej2122"},"content":"        descriptor \u003d new EditApplicantDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":237,"author":{"gitId":"Chang-CH"},"content":"                .build();","lastModifiedDate":"2021-10-07"},{"lineNumber":238,"author":{"gitId":"Chang-CH"},"content":"        expectedCommand \u003d new EditCommand(Selection.fromIndex(targetIndex), descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"yunpeng1234"},"content":"    public void parse_resetSkills_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"yunpeng1234"},"content":"        Index targetIndex \u003d INDEX_THIRD_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"yunpeng1234"},"content":"        String userInput \u003d targetIndex.getOneBased() + SKILL_EMPTY;","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"yunpeng1234"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withSkills().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"Chang-CH"},"content":"        EditCommand expectedCommand \u003d new EditCommand(Selection.fromIndex(targetIndex), descriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"yunpeng1234":35,"nicolej2122":8,"Chang-CH":95,"-":114}},{"path":"src/test/java/seedu/intern/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.COURSE_DESC_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.COURSE_DESC_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.GRADE_DESC_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.GRADUATION_YEARMONTH_DESC_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INSTITUTION_DESC_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.INSTITUTION_DESC_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.JOB_DESC_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.JOB_DESC_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.SKILL_DESC_JAVA;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.SKILL_DESC_PYTHON;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.STATUS_DESC_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_COURSE_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_GRADE_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_GRADUATION_YEARMONTH_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_INSTITUTION_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_INSTITUTION_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_JOB_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_JOB_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_SKILL_JAVA;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_SKILL_PYTHON;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.FilterCommand.MESSAGE_NOT_FILTERED;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.logic.commands.FilterCommand.FilterApplicantDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.testutil.FilterApplicantDescriptorBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_NOT_FILTERED, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"    public void parse_validArgsAll_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"                .withGrade(VALID_GRADE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"                .withInstitution(VALID_INSTITUTION_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"                .withApplicationStatus(VALID_STATUS_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"                .withCourses(VALID_COURSE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"                .withGraduationYearMonth(VALID_GRADUATION_YEARMONTH_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"                .withJobs(VALID_JOB_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"                .withSkills(VALID_SKILL_PYTHON)","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"                        + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_PYTHON + STATUS_DESC_BOB + JOB_DESC_BOB,","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"    public void parse_validArgsMinusGrade_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"                .withInstitution(VALID_INSTITUTION_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"                .withApplicationStatus(VALID_STATUS_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"                .withCourses(VALID_COURSE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"                .withGraduationYearMonth(VALID_GRADUATION_YEARMONTH_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"                .withJobs(VALID_JOB_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"                .withSkills(VALID_SKILL_PYTHON)","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + INSTITUTION_DESC_BOB + COURSE_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"                        + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_PYTHON + STATUS_DESC_BOB,","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"jackgugz"},"content":"    public void parse_validArgsMinusInstitution_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"                .withGrade(VALID_GRADE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"                .withApplicationStatus(VALID_STATUS_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"yunpeng1234"},"content":"                .withCourses(VALID_COURSE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"yunpeng1234"},"content":"                .withGraduationYearMonth(VALID_GRADUATION_YEARMONTH_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"jackgugz"},"content":"                .withJobs(VALID_JOB_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"yunpeng1234"},"content":"                .withSkills(VALID_SKILL_PYTHON)","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"jackgugz"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GRADE_DESC_BOB + COURSE_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"yunpeng1234"},"content":"                        + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_PYTHON + STATUS_DESC_BOB,","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"jackgugz"},"content":"    public void parse_validArgsMinusApplicationStatus_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"yunpeng1234"},"content":"                .withGrade(VALID_GRADE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"yunpeng1234"},"content":"                .withInstitution(VALID_INSTITUTION_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"yunpeng1234"},"content":"                .withCourses(VALID_COURSE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"yunpeng1234"},"content":"                .withGraduationYearMonth(VALID_GRADUATION_YEARMONTH_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"jackgugz"},"content":"                .withJobs(VALID_JOB_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"yunpeng1234"},"content":"                .withSkills(VALID_SKILL_PYTHON)","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"jackgugz"},"content":"                        + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_PYTHON + JOB_DESC_BOB,","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"jackgugz"},"content":"    public void parse_validArgsMinusCourses_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"yunpeng1234"},"content":"                .withGrade(VALID_GRADE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"yunpeng1234"},"content":"                .withInstitution(VALID_INSTITUTION_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"yunpeng1234"},"content":"                .withApplicationStatus(VALID_STATUS_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"yunpeng1234"},"content":"                .withGraduationYearMonth(VALID_GRADUATION_YEARMONTH_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"jackgugz"},"content":"                .withJobs(VALID_JOB_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"yunpeng1234"},"content":"                .withSkills(VALID_SKILL_PYTHON)","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"jackgugz"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + JOB_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"yunpeng1234"},"content":"                        + GRADUATION_YEARMONTH_DESC_BOB + SKILL_DESC_PYTHON + STATUS_DESC_BOB,","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"jackgugz"},"content":"    public void parse_validArgsMinusGradYearMonth_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"yunpeng1234"},"content":"                .withGrade(VALID_GRADE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"yunpeng1234"},"content":"                .withInstitution(VALID_INSTITUTION_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"yunpeng1234"},"content":"                .withApplicationStatus(VALID_STATUS_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"yunpeng1234"},"content":"                .withCourses(VALID_COURSE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"jackgugz"},"content":"                .withJobs(VALID_JOB_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"yunpeng1234"},"content":"                .withSkills(VALID_SKILL_PYTHON)","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"jackgugz"},"content":"                        + SKILL_DESC_PYTHON + STATUS_DESC_BOB + JOB_DESC_BOB,","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"jackgugz"},"content":"    public void parse_validArgsMinusSkills_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"yunpeng1234"},"content":"                .withGrade(VALID_GRADE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"yunpeng1234"},"content":"                .withInstitution(VALID_INSTITUTION_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"yunpeng1234"},"content":"                .withApplicationStatus(VALID_STATUS_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"yunpeng1234"},"content":"                .withCourses(VALID_COURSE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"yunpeng1234"},"content":"                .withGraduationYearMonth(VALID_GRADUATION_YEARMONTH_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"jackgugz"},"content":"                .withJobs(VALID_JOB_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"jackgugz"},"content":"                        + GRADUATION_YEARMONTH_DESC_BOB + STATUS_DESC_BOB + JOB_DESC_BOB,","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"jackgugz"},"content":"    public void parse_validArgsMinusJob_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"jackgugz"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"jackgugz"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"jackgugz"},"content":"                .withGrade(VALID_GRADE_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"jackgugz"},"content":"                .withInstitution(VALID_INSTITUTION_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"jackgugz"},"content":"                .withApplicationStatus(VALID_STATUS_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"jackgugz"},"content":"                .withCourses(VALID_COURSE_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"jackgugz"},"content":"                .withGraduationYearMonth(VALID_GRADUATION_YEARMONTH_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"jackgugz"},"content":"                .withSkills(VALID_SKILL_PYTHON)","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"jackgugz"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"jackgugz"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GRADE_DESC_BOB + INSTITUTION_DESC_BOB + COURSE_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"jackgugz"},"content":"                        + GRADUATION_YEARMONTH_DESC_BOB + STATUS_DESC_BOB + SKILL_DESC_PYTHON,","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"jackgugz"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"jackgugz"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"jackgugz"},"content":"    public void parse_validGrade_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"yunpeng1234"},"content":"                .withGrade(VALID_GRADE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GRADE_DESC_BOB,","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"jackgugz"},"content":"    public void parse_validInstitution_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"yunpeng1234"},"content":"                .withInstitution(VALID_INSTITUTION_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + INSTITUTION_DESC_BOB,","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"jackgugz"},"content":"    public void parse_validApplicationStatus_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"yunpeng1234"},"content":"                .withApplicationStatus(VALID_STATUS_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + STATUS_DESC_BOB,","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"jackgugz"},"content":"    public void parse_validCourses_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"yunpeng1234"},"content":"                .withCourses(VALID_COURSE_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + COURSE_DESC_BOB,","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"jackgugz"},"content":"    public void parse_validGradYearMonth_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"yunpeng1234"},"content":"                .withGraduationYearMonth(VALID_GRADUATION_YEARMONTH_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GRADUATION_YEARMONTH_DESC_BOB,","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"jackgugz"},"content":"    public void parse_validSkill_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"yunpeng1234"},"content":"                .withSkills(VALID_SKILL_PYTHON)","lastModifiedDate":"2021-10-21"},{"lineNumber":258,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + SKILL_DESC_PYTHON,","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":263,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"jackgugz"},"content":"    public void parse_validMultiInstitution_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":267,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"yunpeng1234"},"content":"                .withInstitution(VALID_INSTITUTION_BOB, VALID_INSTITUTION_AMY)","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":272,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":273,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + INSTITUTION_DESC_BOB + INSTITUTION_DESC_AMY,","lastModifiedDate":"2021-10-21"},{"lineNumber":274,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":276,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"jackgugz"},"content":"    public void parse_validMultiApplicationStatus_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":279,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":281,"author":{"gitId":"yunpeng1234"},"content":"                .withApplicationStatus(VALID_STATUS_BOB, VALID_STATUS_AMY)","lastModifiedDate":"2021-10-21"},{"lineNumber":282,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":283,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":285,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + STATUS_DESC_BOB + STATUS_DESC_AMY,","lastModifiedDate":"2021-10-21"},{"lineNumber":286,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":287,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":289,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":290,"author":{"gitId":"jackgugz"},"content":"    public void parse_validMultiCourses_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":291,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":292,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":293,"author":{"gitId":"yunpeng1234"},"content":"                .withCourses(VALID_COURSE_BOB, VALID_COURSE_AMY)","lastModifiedDate":"2021-10-21"},{"lineNumber":294,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":296,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":297,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + COURSE_DESC_BOB + COURSE_DESC_AMY,","lastModifiedDate":"2021-10-21"},{"lineNumber":298,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":300,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":301,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"jackgugz"},"content":"    public void parse_validMultiSkill_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":303,"author":{"gitId":"yunpeng1234"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"yunpeng1234"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"yunpeng1234"},"content":"                .withSkills(VALID_SKILL_PYTHON, VALID_SKILL_JAVA)","lastModifiedDate":"2021-10-21"},{"lineNumber":306,"author":{"gitId":"yunpeng1234"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":308,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + SKILL_DESC_PYTHON + SKILL_DESC_JAVA,","lastModifiedDate":"2021-10-21"},{"lineNumber":310,"author":{"gitId":"yunpeng1234"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-21"},{"lineNumber":311,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":313,"author":{"gitId":"jackgugz"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":314,"author":{"gitId":"jackgugz"},"content":"    public void parse_validMultiJob_returnsFilterCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":315,"author":{"gitId":"jackgugz"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-24"},{"lineNumber":316,"author":{"gitId":"jackgugz"},"content":"        FilterApplicantDescriptor expected \u003d new FilterApplicantDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":317,"author":{"gitId":"jackgugz"},"content":"                .withJobs(VALID_JOB_BOB, VALID_JOB_AMY)","lastModifiedDate":"2021-10-24"},{"lineNumber":318,"author":{"gitId":"jackgugz"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":319,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":320,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":321,"author":{"gitId":"jackgugz"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + JOB_DESC_AMY + JOB_DESC_BOB,","lastModifiedDate":"2021-10-24"},{"lineNumber":322,"author":{"gitId":"jackgugz"},"content":"                new FilterCommand(expected));","lastModifiedDate":"2021-10-24"},{"lineNumber":323,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":324,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"yunpeng1234":258,"jackgugz":66}},{"path":"src/test/java/seedu/intern/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.FindCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Chang-CH":6,"-":28}},{"path":"src/test/java/seedu/intern/logic/parser/InternWatcherParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalSelections.SELECTION_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.AddCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.EditCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.FindCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.ListCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.ApplicantUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"nicolej2122"},"content":"public class InternWatcherParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"    private final InternWatcherParser parser \u003d new InternWatcherParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"nicolej2122"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ApplicantUtil.getAddCommand(applicant));","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"nicolej2122"},"content":"        assertEquals(new AddCommand(applicant), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + SELECTION_FIRST_APPLICANT.getIndexOneBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(new DeleteCommand(SELECTION_FIRST_APPLICANT), command);","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"nicolej2122"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"nicolej2122"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(applicant).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"                + INDEX_FIRST_APPLICANT.getOneBased() + \" \"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"                + ApplicantUtil.getEditApplicantDescriptorDetails(descriptor));","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_APPLICANT, descriptor), command);","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"yunpeng1234":8,"nicolej2122":6,"Chang-CH":19,"-":70}},{"path":"src/test/java/seedu/intern/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalSelections.SELECTION_ALL;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalSelections.SELECTION_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"    private static final String INVALID_SKILL \u003d \"#friend\";","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"    private static final String VALID_SKILL_1 \u003d \"python\";","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"    private static final String VALID_SKILL_2 \u003d \"java\";","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(INDEX_FIRST_APPLICANT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(INDEX_FIRST_APPLICANT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"    public void parseDelete_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"            -\u003e ParserUtil.parseSelection(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"    public void parseDelete_validInput_success() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"        // No whitespaces","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(SELECTION_FIRST_APPLICANT, ParserUtil.parseSelection(\"1\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(SELECTION_FIRST_APPLICANT, ParserUtil.parseSelection(\"  1  \"));","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"        // All keyword","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(SELECTION_ALL, ParserUtil.parseSelection(\"ALL\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"yunpeng1234"},"content":"    public void parseSkill_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSkill(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"yunpeng1234"},"content":"    public void parseSkill_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSkill(INVALID_SKILL));","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"yunpeng1234"},"content":"    public void parseSkill_validValueWithoutWhitespace_returnsSkill() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"yunpeng1234"},"content":"        Skill expectedSkill \u003d new Skill(VALID_SKILL_1);","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(expectedSkill, ParserUtil.parseSkill(VALID_SKILL_1));","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"yunpeng1234"},"content":"    public void parseSkill_validValueWithWhitespace_returnsTrimmedSkill() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"yunpeng1234"},"content":"        String skillWithWhitespace \u003d WHITESPACE + VALID_SKILL_1 + WHITESPACE;","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"yunpeng1234"},"content":"        Skill expectedSkill \u003d new Skill(VALID_SKILL_1);","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(expectedSkill, ParserUtil.parseSkill(skillWithWhitespace));","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"yunpeng1234"},"content":"    public void parseskills_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSkills(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"yunpeng1234"},"content":"    public void parseskills_collectionWithInvalidSkills_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSkills(Arrays.asList(VALID_SKILL_1, INVALID_SKILL)));","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"yunpeng1234"},"content":"    public void parseskills_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"yunpeng1234"},"content":"        assertTrue(ParserUtil.parseSkills(Collections.emptyList()).isEmpty());","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"yunpeng1234"},"content":"    public void parseSkills_collectionWithValidSkills_returnsSkillSet() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"yunpeng1234"},"content":"        Set\u003cSkill\u003e actualSkillSet \u003d ParserUtil.parseSkills(Arrays.asList(VALID_SKILL_1, VALID_SKILL_2));","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"yunpeng1234"},"content":"        Set\u003cSkill\u003e expectedSkillSet \u003d new HashSet\u003cSkill\u003e(Arrays.asList(new Skill(VALID_SKILL_1),","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"yunpeng1234"},"content":"                                                        new Skill(VALID_SKILL_2)));","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"nicolej2122"},"content":"        assertEquals(expectedSkillSet, actualSkillSet);","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"yunpeng1234":45,"nicolej2122":1,"Chang-CH":8,"-":137}},{"path":"src/test/java/seedu/intern/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package seedu.intern.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalIndexes.INDEX_SECOND_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"    public void parse_validArgNoTag_returnsViewCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, \"1\", new ViewCommand(INDEX_FIRST_APPLICANT, false));","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"    public void parse_validArgWithTag_returnsViewCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, \"1 T\", new ViewCommand(INDEX_FIRST_APPLICANT, true));","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"    public void parse_validArgsNoTagTwo_returnsViewCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, \"2\", new ViewCommand(INDEX_SECOND_APPLICANT, false));","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    public void parse_validArgsWithTagTwo_returnsViewCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"        assertParseSuccess(parser, \"2 T\", new ViewCommand(INDEX_SECOND_APPLICANT, true));","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"    public void parse_invalidArgsTwo_throwsParseException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"nicolej2122"},"content":"        assertParseFailure(parser, \"T\",","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"    public void parse_invalidArgsNoInput_throwsParseException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"    public void parse_invalidArgsLongSpace_throwsParseException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"        assertParseFailure(parser, \"        \",","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"    public void parse_invalidArgsShortSpaceWithValidInput_throwsParseException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"nicolej2122"},"content":"        assertParseFailure(parser, \"1  T\",","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"    public void parse_invalidArgsLongSpaceWithValidInput_throwsParseException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"nicolej2122"},"content":"        assertParseFailure(parser, \"1      T\",","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"yunpeng1234":67,"nicolej2122":3}},{"path":"src/test/java/seedu/intern/model/InternWatcherTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_SKILL_JAVA;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.getTypicalInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"nicolej2122"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"nicolej2122"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"nicolej2122"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"nicolej2122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"nicolej2122"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"nicolej2122"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.exceptions.DuplicateApplicantException;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"nicolej2122"},"content":"public class InternWatcherTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"    private final InternWatcher internWatcher \u003d new InternWatcher();","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"    public void constructor() {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(Collections.emptyList(), internWatcher.getApplicantList());","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"nicolej2122"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e internWatcher.resetData(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"    public void resetData_withValidReadOnlyInternWatcher_replacesData() {","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"nicolej2122"},"content":"        InternWatcher newData \u003d getTypicalInternWatcher();","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"nicolej2122"},"content":"        internWatcher.resetData(newData);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"nicolej2122"},"content":"        assertEquals(newData, internWatcher);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"    public void resetData_withDuplicateApplicants_throwsDuplicateApplicantException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"        // Two applicants with the same identity fields","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withSkills(VALID_SKILL_JAVA)","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"nicolej2122"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"nicolej2122"},"content":"        List\u003cApplicant\u003e newApplicants \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"nicolej2122"},"content":"        InternWatcherStub newData \u003d new InternWatcherStub(newApplicants);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e internWatcher.resetData(newData));","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"    public void hasApplicant_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e internWatcher.hasApplicant(null));","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"    public void hasApplicant_applicantNotInInternWatcher_returnsFalse() {","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"        assertFalse(internWatcher.hasApplicant(ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"    public void hasApplicant_applicantInInternWatcher_returnsTrue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"        internWatcher.addApplicant(ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"        assertTrue(internWatcher.hasApplicant(ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"    public void hasApplicant_applicantWithSameIdentityFieldsInInternWatcher_returnsTrue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"        internWatcher.addApplicant(ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withSkills(VALID_SKILL_JAVA)","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"nicolej2122"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"        assertTrue(internWatcher.hasApplicant(editedAlice));","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"    public void getApplicantList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e internWatcher.getApplicantList().remove(0));","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"nicolej2122"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"     * A stub ReadOnlyInternWatcher whose applicants list can violate interface constraints.","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"nicolej2122"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"nicolej2122"},"content":"    private static class InternWatcherStub implements ReadOnlyInternWatcher {","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"nicolej2122"},"content":"        private final ObservableList\u003cApplicant\u003e applicants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"nicolej2122"},"content":"        InternWatcherStub(Collection\u003cApplicant\u003e applicants) {","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"nicolej2122"},"content":"            this.applicants.setAll(applicants);","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"nicolej2122"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"nicolej2122"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"yunpeng1234"},"content":"        public ObservableList\u003cApplicant\u003e getApplicantList() {","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"nicolej2122"},"content":"            return applicants;","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"nicolej2122"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"nicolej2122"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"yunpeng1234":21,"nicolej2122":72,"Chang-CH":8}},{"path":"src/test/java/seedu/intern/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.model.Model.PREDICATE_SHOW_ALL_APPLICANTS;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.BENSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.InternWatcherBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"        assertEquals(new InternWatcher(), new InternWatcher(modelManager.getInternWatcher()));","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"        userPrefs.setInternWatcherFilePath(Paths.get(\"intern/book/file/path\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"        userPrefs.setInternWatcherFilePath(Paths.get(\"new/intern/book/file/path\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"    public void setInternWatcherFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setInternWatcherFilePath(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"    public void setInternWatcherFilePath_validPath_setsInternWatcherFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"        Path path \u003d Paths.get(\"intern/book/file/path\");","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"        modelManager.setInternWatcherFilePath(path);","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"        assertEquals(path, modelManager.getInternWatcherFilePath());","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"    public void hasApplicant_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasApplicant(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"    public void hasApplicant_applicantNotInInternWatcher_returnsFalse() {","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"        assertFalse(modelManager.hasApplicant(ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"    public void hasApplicant_applicantInInternWatcher_returnsTrue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"        modelManager.addApplicant(ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"        assertTrue(modelManager.hasApplicant(ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"yunpeng1234"},"content":"    public void getFilteredApplicantList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredApplicantList().remove(0));","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"nicolej2122"},"content":"        InternWatcher internWatcher \u003d new InternWatcherBuilder().withApplicant(ALICE).withApplicant(BENSON).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"nicolej2122"},"content":"        InternWatcher differentInternWatcher \u003d new InternWatcher();","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"nicolej2122"},"content":"        modelManager \u003d new ModelManager(internWatcher, userPrefs);","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"nicolej2122"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(internWatcher, userPrefs);","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"yunpeng1234"},"content":"        // different internWatcher -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentInternWatcher, userPrefs)));","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"Chang-CH"},"content":"        modelManager.updateFilteredApplicantList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(modelManager.equals(new ModelManager(internWatcher, userPrefs)));","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"yunpeng1234"},"content":"        modelManager.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"yunpeng1234"},"content":"        differentUserPrefs.setInternWatcherFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(modelManager.equals(new ModelManager(internWatcher, differentUserPrefs)));","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"yunpeng1234":13,"nicolej2122":7,"Chang-CH":17,"-":95}},{"path":"src/test/java/seedu/intern/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"    public void setInternWatcherFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setInternWatcherFilePath(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"yunpeng1234":2,"Chang-CH":2,"-":17}},{"path":"src/test/java/seedu/intern/model/applicant/ApplicantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_GRADE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_GRADUATION_YEARMONTH_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_INSTITUTION_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_SKILL_JAVA;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"public class ApplicantTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"nicolej2122"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e applicant.getSkills().remove(0));","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    public void isSameApplicant() {","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"        assertTrue(ALICE.isSameApplicant(ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"        assertFalse(ALICE.isSameApplicant(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"nicolej2122"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"                .withSkills(VALID_SKILL_JAVA).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"        assertTrue(ALICE.isSameApplicant(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"nicolej2122"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"        assertFalse(ALICE.isSameApplicant(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"nicolej2122"},"content":"        Applicant editedBob \u003d new ApplicantBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"        assertTrue(BOB.isSameApplicant(editedBob));","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"nicolej2122"},"content":"        editedBob \u003d new ApplicantBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"        assertFalse(BOB.isSameApplicant(editedBob));","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"nicolej2122"},"content":"        Applicant aliceCopy \u003d new ApplicantBuilder(ALICE).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"nicolej2122"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"nicolej2122"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"nicolej2122"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"        // different grade -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"nicolej2122"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withGrade(VALID_GRADE_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"        // different institution -\u003e returns false","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"nicolej2122"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withInstitution(VALID_INSTITUTION_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"jackgugz"},"content":"        // different graduation year month -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"nicolej2122"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withGraduationYearMonth(VALID_GRADUATION_YEARMONTH_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"jackgugz"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"yunpeng1234"},"content":"        // different skills -\u003e returns false","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"yunpeng1234"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withSkills(VALID_SKILL_JAVA).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yunpeng1234":8,"nicolej2122":13,"Chang-CH":21,"-":54,"jackgugz":5}},{"path":"src/test/java/seedu/intern/model/applicant/ApplicationStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolej2122"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"nicolej2122"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"nicolej2122"},"content":"public class ApplicationStatusTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nicolej2122"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ApplicationStatus((String) null));","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"    public void constructor_invalidApplicationStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"nicolej2122"},"content":"        String invalidApplicationStatus \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ApplicationStatus(invalidApplicationStatus));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"nicolej2122"},"content":"    public void isValidStatus() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"nicolej2122"},"content":"        // null name","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e ApplicationStatus.isValidStatus(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"        // invalid name","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(ApplicationStatus.isValidStatus(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(ApplicationStatus.isValidStatus(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(ApplicationStatus.isValidStatus(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(ApplicationStatus.isValidStatus(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(ApplicationStatus.isValidStatus(\"denied\")); // non keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(ApplicationStatus.isValidStatus(\"Accepted\")); //Alphabets not capitalised","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"nicolej2122"},"content":"        // valid name","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(ApplicationStatus.isValidStatus(\"ACCEPTED\")); // keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(ApplicationStatus.isValidStatus(\"REJECTED\")); // keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(ApplicationStatus.isValidStatus(\"APPLIED\")); // keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(ApplicationStatus.isValidStatus(\"SCHEDULED\")); // keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"nicolej2122"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nicolej2122":41}},{"path":"src/test/java/seedu/intern/model/applicant/CourseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolej2122"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"nicolej2122"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"nicolej2122"},"content":"public class CourseTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nicolej2122"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Course(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"    public void isValidCourse() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"nicolej2122"},"content":"        // null course","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e Course.isValidCourse(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"        // invalid course","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Course.isValidCourse(\"^21Business Analytics\")); // contains non-alphabetic characters","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Course.isValidCourse(\"*\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Jeromesyl"},"content":"        assertFalse(Course.isValidCourse(\"\")); // empty string","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"        // valid course","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(Course.isValidCourse(\"CS\")); // alphabets only","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(Course.isValidCourse(\"Computer Science\")); // spaces in between characters","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(Course.isValidCourse(\"Business Analytics\")); // with capital letters","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(Course.isValidCourse(\"Double Degree in Computer Science and Mathematics\")); // long names","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nicolej2122"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Jeromesyl":1,"nicolej2122":31}},{"path":"src/test/java/seedu/intern/model/applicant/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Chang-CH":2,"-":66}},{"path":"src/test/java/seedu/intern/model/applicant/GradeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolej2122"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"nicolej2122"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"nicolej2122"},"content":"public class GradeTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nicolej2122"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Grade(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"    public void constructor_invalidGrade_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"nicolej2122"},"content":"        String invalidGrade \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Grade(invalidGrade));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"nicolej2122"},"content":"    public void isValidGrade() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"nicolej2122"},"content":"        // null email","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e Grade.isValidGrade(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"        // blank grade","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Grade.isValidGrade(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Grade.isValidGrade(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"nicolej2122"},"content":"        // invalid parts","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Grade.isValidGrade(\"A\")); // letter grade","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Grade.isValidGrade(\"8.9\")); // grade above 5.0","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Grade.isValidGrade(\"3 .00\")); // spaces before decimal point","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Grade.isValidGrade(\"3. 0\")); // spaces after decimal point","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Grade.isValidGrade(\" 2.9\")); // leading space","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Grade.isValidGrade(\"4.8 \")); // trailing space","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Grade.isValidGrade(\"4..9\")); // double \u0027.\u0027 symbol","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Grade.isValidGrade(\"-4.9\")); // negative number","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"        assertFalse(Grade.isValidGrade(\"5.02\")); // out of range","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"        assertFalse(Grade.isValidGrade(\"5\")); // no 2 d.p","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"        assertFalse(Grade.isValidGrade(\"0\")); // no 2 d.p","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"        assertFalse(Grade.isValidGrade(\"4.9\")); // no 2 d.p","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"nicolej2122"},"content":"        // valid grade","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"        assertTrue(Grade.isValidGrade(\"3.00\")); //Decimal number within 0.00 - 5.00","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(Grade.isValidGrade(\"4.27\")); // period in local part","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"nicolej2122"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"yunpeng1234":5,"nicolej2122":43}},{"path":"src/test/java/seedu/intern/model/applicant/GraduationYearMonthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolej2122"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"nicolej2122"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"nicolej2122"},"content":"public class GraduationYearMonthTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nicolej2122"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GraduationYearMonth(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"    public void constructor_invalidGraduationYearMonth_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"nicolej2122"},"content":"        String invalidGraduationYearMonth \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GraduationYearMonth(invalidGraduationYearMonth));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"nicolej2122"},"content":"    public void isValidGraduationYearMonth() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"nicolej2122"},"content":"        // null graduation year and month","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e GraduationYearMonth.isValidGraduationYearMonth(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"        // invalid graduation year and month","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(GraduationYearMonth.isValidGraduationYearMonth(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(GraduationYearMonth.isValidGraduationYearMonth(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(GraduationYearMonth.isValidGraduationYearMonth(\"91\")); // not in MM/yyyy format","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(GraduationYearMonth.isValidGraduationYearMonth(\"May 2023\")); // non-numeric","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(GraduationYearMonth.isValidGraduationYearMonth(\"09/\")); // missing year","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(GraduationYearMonth.isValidGraduationYearMonth(\"/2022\")); // missing year","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(GraduationYearMonth.isValidGraduationYearMonth(\"09-2024\")); // hyphen between numbers","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Jeromesyl"},"content":"        assertFalse(GraduationYearMonth.isValidGraduationYearMonth(\"00/2024\")); // invalid month","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"Jeromesyl"},"content":"        assertFalse(GraduationYearMonth.isValidGraduationYearMonth(\"01/1500\")); // year is below lower boundary","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Jeromesyl"},"content":"        // valid graduation year and month","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(GraduationYearMonth.isValidGraduationYearMonth(\"05/2021\")); // exactly 3 numbers","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(GraduationYearMonth.isValidGraduationYearMonth(\"12/2024\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(GraduationYearMonth.isValidGraduationYearMonth(\"10/2025\")); // long phone numbers","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"nicolej2122"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Jeromesyl":3,"nicolej2122":40}},{"path":"src/test/java/seedu/intern/model/applicant/InstitutionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolej2122"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"nicolej2122"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"nicolej2122"},"content":"public class InstitutionTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nicolej2122"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Institution(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"    public void constructor_invalidInstitution_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"nicolej2122"},"content":"        String invalidInstitution \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Institution(invalidInstitution));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"nicolej2122"},"content":"    public void isValidInstitution() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"nicolej2122"},"content":"        // null name","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e Institution.isValidInstitution(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"        // invalid name","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Institution.isValidInstitution(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Institution.isValidInstitution(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Institution.isValidInstitution(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(Institution.isValidInstitution(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nicolej2122"},"content":"        // valid name","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(Institution.isValidInstitution(\"NUS\")); // alphabets only","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(Institution.isValidInstitution(\"Nanyang Institute of Technology\")); // long names","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(Institution.isValidInstitution(\"NUS2021\")); // alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"nicolej2122"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nicolej2122":38}},{"path":"src/test/java/seedu/intern/model/applicant/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(predicate.test(new ApplicantBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"        // Keywords match phone, email and intern, but does not match name","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(predicate.test(new ApplicantBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"nicolej2122":7,"Chang-CH":5,"-":63}},{"path":"src/test/java/seedu/intern/model/applicant/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Chang-CH":2,"-":38}},{"path":"src/test/java/seedu/intern/model/applicant/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Chang-CH":2,"-":38}},{"path":"src/test/java/seedu/intern/model/applicant/UniqueApplicantListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"nicolej2122"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_SKILL_JAVA;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"nicolej2122"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"nicolej2122"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"nicolej2122"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"nicolej2122"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.exceptions.ApplicantNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.exceptions.DuplicateApplicantException;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"public class UniqueApplicantListTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"nicolej2122"},"content":"    private final UniqueApplicantList uniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"    public void contains_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.contains(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"    public void contains_applicantNotInList_returnsFalse() {","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(uniqueApplicantList.contains(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"    public void contains_applicantInList_returnsTrue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"nicolej2122"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(uniqueApplicantList.contains(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"    public void contains_applicantWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"nicolej2122"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withSkills(VALID_SKILL_JAVA)","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"nicolej2122"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"nicolej2122"},"content":"        assertTrue(uniqueApplicantList.contains(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"    public void add_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.add(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"    public void add_duplicateApplicant_throwsDuplicateApplicantException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"nicolej2122"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e uniqueApplicantList.add(ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"    public void setApplicant_nullTargetApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicant(null, ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"    public void setApplicant_nullEditedApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicant(ALICE, null));","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"    public void setApplicant_targetApplicantNotInList_throwsApplicantNotFoundException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(ApplicantNotFoundException.class, () -\u003e uniqueApplicantList.setApplicant(ALICE, ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"    public void setApplicant_editedApplicantIsSameApplicant_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"nicolej2122"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"        uniqueApplicantList.setApplicant(ALICE, ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"nicolej2122"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"nicolej2122"},"content":"        expectedUniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"nicolej2122"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"    public void setApplicant_editedApplicantHasSameIdentity_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"nicolej2122"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withSkills(VALID_SKILL_JAVA)","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"nicolej2122"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"        uniqueApplicantList.setApplicant(ALICE, editedAlice);","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"nicolej2122"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"nicolej2122"},"content":"        expectedUniqueApplicantList.add(editedAlice);","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"nicolej2122"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"yunpeng1234"},"content":"    public void setApplicant_editedApplicantHasDifferentIdentity_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"nicolej2122"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"Chang-CH"},"content":"        uniqueApplicantList.setApplicant(ALICE, BOB);","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"nicolej2122"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"nicolej2122"},"content":"        expectedUniqueApplicantList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"nicolej2122"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"yunpeng1234"},"content":"    public void setApplicant_editedApplicantHasNonUniqueIdentity_throwsDuplicateApplicantException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"nicolej2122"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"nicolej2122"},"content":"        uniqueApplicantList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e uniqueApplicantList.setApplicant(ALICE, BOB));","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"yunpeng1234"},"content":"    public void remove_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.remove(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"yunpeng1234"},"content":"    public void remove_applicantDoesNotExist_throwsApplicantNotFoundException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(ApplicantNotFoundException.class, () -\u003e uniqueApplicantList.remove(ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"yunpeng1234"},"content":"    public void remove_existingApplicant_removesApplicant() {","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"nicolej2122"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"nicolej2122"},"content":"        uniqueApplicantList.remove(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"nicolej2122"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"nicolej2122"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"yunpeng1234"},"content":"    public void setApplicants_nullUniqueApplicantList_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicants((UniqueApplicantList) null));","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"yunpeng1234"},"content":"    public void setApplicants_uniqueApplicantList_replacesOwnListWithProvidedUniqueApplicantList() {","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"nicolej2122"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"nicolej2122"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"nicolej2122"},"content":"        expectedUniqueApplicantList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"Chang-CH"},"content":"        uniqueApplicantList.setApplicants(expectedUniqueApplicantList);","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"nicolej2122"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"yunpeng1234"},"content":"    public void setApplicants_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicants((List\u003cApplicant\u003e) null));","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"yunpeng1234"},"content":"    public void setApplicants_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"nicolej2122"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"nicolej2122"},"content":"        List\u003cApplicant\u003e applicantList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"Chang-CH"},"content":"        uniqueApplicantList.setApplicants(applicantList);","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"nicolej2122"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"nicolej2122"},"content":"        expectedUniqueApplicantList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"nicolej2122"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"yunpeng1234"},"content":"    public void setApplicants_listWithDuplicateApplicants_throwsDuplicateApplicantException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"nicolej2122"},"content":"        List\u003cApplicant\u003e listWithDuplicateApplicants \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(DuplicateApplicantException.class, ()","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"Chang-CH"},"content":"            -\u003e uniqueApplicantList.setApplicants(listWithDuplicateApplicants));","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"nicolej2122"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"nicolej2122"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"nicolej2122"},"content":"            -\u003e uniqueApplicantList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"nicolej2122"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"yunpeng1234":24,"nicolej2122":124,"Chang-CH":22}},{"path":"src/test/java/seedu/intern/model/skills/SkillTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicolej2122"},"content":"package seedu.intern.model.skills;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"nicolej2122"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"nicolej2122"},"content":"public class SkillTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Skill(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"nicolej2122"},"content":"        String invalidSkillName \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Skill(invalidSkillName));","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"    public void isValidSkillName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e Skill.isValidSkillName(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"nicolej2122":8,"-":18}},{"path":"src/test/java/seedu/intern/model/skills/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.model.skills;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Skill(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Skill(invalidTagName));","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"        assertThrows(NullPointerException.class, () -\u003e Skill.isValidSkillName(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"nicolej2122":2,"Chang-CH":3,"-":21}},{"path":"src/test/java/seedu/intern/storage/JsonAdaptedApplicantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.storage.JsonAdaptedApplicant.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.TypicalApplicants.BENSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.ApplicationStatus;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Course;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Grade;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.GraduationYearMonth;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Institution;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.Job;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"public class JsonAdaptedApplicantTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    private static final String INVALID_SKILL \u003d \"#friend\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"    private static final String INVALID_INSTITUTION \u003d \"NU$@\";","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"    private static final String INVALID_GRADUATION_YEAR_MONTH \u003d \"13/2021\";","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"Jeromesyl"},"content":"    private static final String INVALID_COURSE \u003d \"C0mpter $cience\";","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"    private static final String INVALID_JOB \u003d \"S0ftware $nginnering\";","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"    private static final String INVALID_STATUS \u003d \"OOP\";","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"    private static final String INVALID_GRADE \u003d \"4.500\";","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"    private static final String VALID_GRADE \u003d BENSON.getGrade().toString();","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"    private static final String VALID_INSTITUTION \u003d BENSON.getInstitution().toString();","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"    private static final String VALID_GRADUATION_YEAR_MONTH \u003d BENSON.getGraduationYearMonth().toString();","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"Jeromesyl"},"content":"    private static final String VALID_COURSE \u003d BENSON.getCourse().toString();","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"    private static final String VALID_JOB \u003d BENSON.getJob().toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"    private static final String VALID_STATUS \u003d BENSON.getApplicationStatus().toString();","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"    private static final List\u003cJsonAdaptedSkill\u003e VALID_SKILLS \u003d BENSON.getSkills().stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"nicolej2122"},"content":"            .map(JsonAdaptedSkill::new)","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"    public void toModelType_validApplicantDetails_returnsApplicant() throws Exception {","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(BENSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(BENSON, applicant.toModelType());","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"                VALID_GRADE, VALID_INSTITUTION, VALID_COURSE,","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"                VALID_GRADUATION_YEAR_MONTH, VALID_JOB, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(null,","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_GRADE, VALID_INSTITUTION, VALID_COURSE,","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"                VALID_GRADUATION_YEAR_MONTH, VALID_JOB, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"nicolej2122"},"content":"                new JsonAdaptedApplicant(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"                        VALID_GRADUATION_YEAR_MONTH, VALID_GRADE,","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"                        VALID_INSTITUTION, VALID_COURSE, VALID_JOB, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME,","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"                null, VALID_EMAIL, VALID_GRADE, VALID_INSTITUTION, VALID_COURSE,","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"jackgugz"},"content":"                VALID_GRADUATION_YEAR_MONTH, VALID_JOB, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"nicolej2122"},"content":"                new JsonAdaptedApplicant(VALID_NAME,","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"Chang-CH"},"content":"                        VALID_PHONE, INVALID_EMAIL, VALID_GRADE, VALID_INSTITUTION, VALID_COURSE,","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"jackgugz"},"content":"                        VALID_GRADUATION_YEAR_MONTH, VALID_JOB, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME,","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"                VALID_PHONE, null, VALID_GRADE, VALID_INSTITUTION, VALID_COURSE,","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"jackgugz"},"content":"                VALID_GRADUATION_YEAR_MONTH, VALID_JOB, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"yunpeng1234"},"content":"    public void toModelType_invalidGrade_throwsIllegalValueException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"nicolej2122"},"content":"                new JsonAdaptedApplicant(VALID_NAME,","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"Chang-CH"},"content":"                        VALID_PHONE, VALID_EMAIL, INVALID_GRADE, VALID_INSTITUTION, VALID_COURSE,","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"jackgugz"},"content":"                        VALID_GRADUATION_YEAR_MONTH, VALID_JOB, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d Grade.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"yunpeng1234"},"content":"    public void toModelType_nullGrade_throwsIllegalValueException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME,","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"Chang-CH"},"content":"                VALID_PHONE, VALID_EMAIL, null, VALID_INSTITUTION, VALID_COURSE,","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"jackgugz"},"content":"                VALID_GRADUATION_YEAR_MONTH, VALID_JOB, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Grade.class.getSimpleName());","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"Chang-CH"},"content":"    public void toModelType_invalidInstitution_throwsIllegalValueException() {","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"yunpeng1234"},"content":"                VALID_GRADE, INVALID_INSTITUTION, VALID_COURSE,","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"jackgugz"},"content":"                VALID_GRADUATION_YEAR_MONTH, VALID_JOB, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"Chang-CH"},"content":"        String expectedMessage \u003d Institution.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"Chang-CH"},"content":"    public void toModelType_nullInstitution_throwsIllegalValueException() {","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME,","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"Chang-CH"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_GRADE, null, VALID_COURSE,","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"jackgugz"},"content":"                VALID_GRADUATION_YEAR_MONTH, VALID_JOB, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"yunpeng1234"},"content":"                Institution.class.getSimpleName());","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":153,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"jackgugz"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"jackgugz"},"content":"    public void toModelType_invalidGraduationYearMonth_throwsIllegalValueException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"yunpeng1234"},"content":"                VALID_GRADE, VALID_INSTITUTION, VALID_COURSE,","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"jackgugz"},"content":"                INVALID_GRADUATION_YEAR_MONTH, VALID_JOB, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"jackgugz"},"content":"        String expectedMessage \u003d GraduationYearMonth.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"Jeromesyl"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"Jeromesyl"},"content":"    public void toModelType_invalidCourse_throwsIllegalValueException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"yunpeng1234"},"content":"                VALID_GRADE, VALID_INSTITUTION, INVALID_COURSE,","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"jackgugz"},"content":"                VALID_GRADUATION_YEAR_MONTH, VALID_JOB, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":170,"author":{"gitId":"Jeromesyl"},"content":"        String expectedMessage \u003d Course.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-24"},{"lineNumber":171,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":173,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":174,"author":{"gitId":"jackgugz"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":175,"author":{"gitId":"jackgugz"},"content":"    public void toModelType_nullGraduationYearMonth_throwsIllegalValueException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":176,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME,","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"Chang-CH"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_GRADE, VALID_INSTITUTION, VALID_COURSE,","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"jackgugz"},"content":"                null, VALID_JOB, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"yunpeng1234"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"yunpeng1234"},"content":"                GraduationYearMonth.class.getSimpleName());","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":184,"author":{"gitId":"Jeromesyl"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":185,"author":{"gitId":"Jeromesyl"},"content":"    public void toModelType_nullCourse_throwsIllegalValueException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":186,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME,","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"Chang-CH"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_GRADE, VALID_INSTITUTION,","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"jackgugz"},"content":"                null, VALID_GRADUATION_YEAR_MONTH, VALID_JOB, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"Jeromesyl"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Course.class.getSimpleName());","lastModifiedDate":"2021-09-24"},{"lineNumber":190,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":192,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":193,"author":{"gitId":"jackgugz"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"jackgugz"},"content":"    public void toModelType_invalidJob_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-11-04"},{"lineNumber":196,"author":{"gitId":"jackgugz"},"content":"                VALID_GRADE, VALID_INSTITUTION, VALID_COURSE,","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"jackgugz"},"content":"                VALID_GRADUATION_YEAR_MONTH, INVALID_JOB, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"jackgugz"},"content":"        String expectedMessage \u003d Job.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"jackgugz"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"jackgugz"},"content":"    public void toModelType_nullJob_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME,","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"jackgugz"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_GRADE, VALID_INSTITUTION, VALID_COURSE,","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"jackgugz"},"content":"                VALID_GRADUATION_YEAR_MONTH, null, VALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"jackgugz"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"jackgugz"},"content":"                Job.class.getSimpleName());","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":214,"author":{"gitId":"Chang-CH"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2021-09-21"},{"lineNumber":215,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"yunpeng1234"},"content":"                VALID_GRADE, VALID_INSTITUTION, VALID_COURSE,","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"jackgugz"},"content":"                VALID_GRADUATION_YEAR_MONTH, VALID_JOB, INVALID_STATUS, VALID_SKILLS);","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"Chang-CH"},"content":"        String expectedMessage \u003d ApplicationStatus.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-21"},{"lineNumber":219,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":221,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":223,"author":{"gitId":"yunpeng1234"},"content":"    public void toModelType_invalidSkills_throwsIllegalValueException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"yunpeng1234"},"content":"        List\u003cJsonAdaptedSkill\u003e invalidSkills \u003d new ArrayList\u003c\u003e(VALID_SKILLS);","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"yunpeng1234"},"content":"        invalidSkills.add(new JsonAdaptedSkill(INVALID_SKILL));","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"yunpeng1234"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"yunpeng1234"},"content":"                VALID_GRADE, VALID_INSTITUTION, VALID_COURSE,","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"jackgugz"},"content":"                VALID_GRADUATION_YEAR_MONTH, VALID_JOB, VALID_STATUS, invalidSkills);","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":230,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, applicant::toModelType);","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yunpeng1234":70,"Jeromesyl":11,"nicolej2122":5,"Chang-CH":42,"-":56,"jackgugz":49}},{"path":"src/test/java/seedu/intern/storage/JsonInternWatcherStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.InternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.ReadOnlyInternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"public class JsonInternWatcherStorageTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonInternWatcherStorageTest\");","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"nicolej2122"},"content":"    public void readInternWatcher_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"        assertThrows(NullPointerException.class, () -\u003e readInternWatcher(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"    private java.util.Optional\u003cReadOnlyInternWatcher\u003e readInternWatcher(String filePath) throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"        return new JsonInternWatcherStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"                .readInternWatcher(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"nicolej2122"},"content":"        assertFalse(readInternWatcher(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(DataConversionException.class, () -\u003e readInternWatcher(\"notJsonFormatInternWatcher.json\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"    public void readInternWatcher_invalidApplicantInternWatcher_throwDataConversionException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"                readInternWatcher(\"invalidApplicantInternWatcher.json\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"    public void readInternWatcher_invalidAndValidApplicantInternWatcher_throwDataConversionException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"                readInternWatcher(\"invalidAndValidApplicantInternWatcher.json\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"    public void saveInternWatcher_nullInternWatcher_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveInternWatcher(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"     * Saves {@code onternWatcher} at the specified {@code filePath}.","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"nicolej2122"},"content":"     * */","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"    private void saveInternWatcher(ReadOnlyInternWatcher internWatcher, String filePath) {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"nicolej2122"},"content":"            new JsonInternWatcherStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"                    .saveInternWatcher(internWatcher, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"    public void saveInternWatcher_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveInternWatcher(new InternWatcher(), null));","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yunpeng1234":15,"nicolej2122":9,"Chang-CH":5,"-":53}},{"path":"src/test/java/seedu/intern/storage/JsonSerializableInternWatcherTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.util.JsonUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.InternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.testutil.TypicalApplicants;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"nicolej2122"},"content":"public class JsonSerializableInternWatcherTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\",","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"            \"data\", \"JsonSerializableInternWatcherTest\");","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"    private static final Path TYPICAL_APPLICANTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalApplicantsInternWatcher.json\");","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"    private static final Path INVALID_APPLICANT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidApplicantInternWatcher.json\");","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"    private static final Path DUPLICATE_APPLICANT_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"            .resolve(\"duplicateApplicantInternWatcher.json\");","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"    public void toModelType_typicalApplicantsFile_success() throws Exception {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"        JsonSerializableInternWatcher dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_APPLICANTS_FILE,","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"                JsonSerializableInternWatcher.class).get();","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"        InternWatcher internWatcherFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"        InternWatcher typicalApplicantsInternWatcher \u003d TypicalApplicants.getTypicalInternWatcher();","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(internWatcherFromFile, typicalApplicantsInternWatcher);","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"    public void toModelType_invalidApplicantFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"        JsonSerializableInternWatcher dataFromFile \u003d JsonUtil.readJsonFile(INVALID_APPLICANT_FILE,","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"nicolej2122"},"content":"                JsonSerializableInternWatcher.class).get();","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"    public void toModelType_duplicateApplicants_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"        JsonSerializableInternWatcher dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_APPLICANT_FILE,","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"nicolej2122"},"content":"                JsonSerializableInternWatcher.class).get();","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableInternWatcher.MESSAGE_DUPLICATE_APPLICANT,","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yunpeng1234":13,"nicolej2122":5,"Chang-CH":6,"-":23,"jackgugz":2}},{"path":"src/test/java/seedu/intern/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"        userPrefs.setInternWatcherFilePath(Paths.get(\"internwatcher.json\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"yunpeng1234":1,"Chang-CH":5,"-":117}},{"path":"src/test/java/seedu/intern/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"        JsonInternWatcherStorage internWatcherStorage \u003d new JsonInternWatcherStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"        storageManager \u003d new StorageManager(internWatcherStorage, userPrefsStorage);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"    public void getinternWatcherFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"nicolej2122"},"content":"        assertNotNull(storageManager.getInternWatcherFilePath());","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yunpeng1234":3,"nicolej2122":1,"Chang-CH":3,"-":45}},{"path":"src/test/java/seedu/intern/testutil/ApplicantBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.ApplicationStatus;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Course;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Grade;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.GraduationYearMonth;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Institution;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.Job;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":" * A utility class to help with building Applicant objects.","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"nicolej2122"},"content":"public class ApplicantBuilder {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"    public static final String DEFAULT_GRADE \u003d \"4.50\";","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"    public static final String DEFAULT_INSTITUTION \u003d \"NTU\";","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"    public static final String DEFAULT_JOB \u003d \"Software Engineer\";","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"    @SuppressWarnings(\"SpellCheckingInspection\")","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"    public static final String DEFAULT_GRADUATIONYEARMONTH \u003d \"06/2024\";","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"Jeromesyl"},"content":"    public static final String DEFAULT_COURSE \u003d \"Computer Science\";","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"    private Grade grade;","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"    private ApplicationStatus status;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"    private Institution institution;","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"    private GraduationYearMonth graduationYearMonth;","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"Jeromesyl"},"content":"    private Course course;","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"    private Job job;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"nicolej2122"},"content":"    private Set\u003cSkill\u003e skills;","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"     * Creates a {@code ApplicantBuilder} with the default details.","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"nicolej2122"},"content":"    public ApplicantBuilder() {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"        grade \u003d new Grade(DEFAULT_GRADE);","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"        institution \u003d new Institution(DEFAULT_INSTITUTION);","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"        graduationYearMonth \u003d new GraduationYearMonth(DEFAULT_GRADUATIONYEARMONTH);","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"        status \u003d new ApplicationStatus(ApplicationStatus.DEFAULT_STATUS);","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"Jeromesyl"},"content":"        course \u003d new Course(DEFAULT_COURSE);","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"        job \u003d new Job(DEFAULT_JOB);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"nicolej2122"},"content":"        skills \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"     * Initializes the ApplicantBuilder with the data of {@code ApplicantToCopy}.","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"nicolej2122"},"content":"    public ApplicantBuilder(Applicant applicantToCopy) {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"nicolej2122"},"content":"        name \u003d applicantToCopy.getName();","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"nicolej2122"},"content":"        phone \u003d applicantToCopy.getPhone();","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"nicolej2122"},"content":"        email \u003d applicantToCopy.getEmail();","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"nicolej2122"},"content":"        grade \u003d applicantToCopy.getGrade();","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"nicolej2122"},"content":"        institution \u003d applicantToCopy.getInstitution();","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"nicolej2122"},"content":"        graduationYearMonth \u003d applicantToCopy.getGraduationYearMonth();","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"nicolej2122"},"content":"        course \u003d applicantToCopy.getCourse();","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"        job \u003d applicantToCopy.getJob();","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"        status \u003d applicantToCopy.getApplicationStatus();","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"        skills \u003d new HashSet\u003c\u003e(applicantToCopy.getSkills());","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"     * Sets the {@code Name} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"nicolej2122"},"content":"    public ApplicantBuilder withName(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"     * Parses the {@code skills} into a {@code Set\u003cSkill\u003e} and set it to the {@code Applicant} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"    public ApplicantBuilder withSkills(String ... skills) {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"        this.skills \u003d SampleDataUtil.getSkillSet(skills);","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"     * Sets the {@code Phone} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"nicolej2122"},"content":"    public ApplicantBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"Chang-CH"},"content":"     * Sets the {@code Email} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"nicolej2122"},"content":"    public ApplicantBuilder withEmail(String email) {","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"Chang-CH"},"content":"     * Sets the {@code Grade} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"nicolej2122"},"content":"    public ApplicantBuilder withGrade(String grade) {","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"yunpeng1234"},"content":"        this.grade \u003d new Grade(grade);","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"yunpeng1234"},"content":"        return this;","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"Chang-CH"},"content":"     * Sets the {@code Institution} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"nicolej2122"},"content":"    public ApplicantBuilder withInstitution(String institution) {","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"Chang-CH"},"content":"        this.institution \u003d new Institution(institution);","lastModifiedDate":"2021-09-21"},{"lineNumber":122,"author":{"gitId":"Chang-CH"},"content":"        return this;","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"Chang-CH"},"content":"     * Sets the {@code GraduationYearMonth} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"nicolej2122"},"content":"    public ApplicantBuilder withGraduationYearMonth(String graduationYearMonth) {","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"jackgugz"},"content":"        this.graduationYearMonth \u003d new GraduationYearMonth(graduationYearMonth);","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"jackgugz"},"content":"        return this;","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"jackgugz"},"content":"     * Sets the {@code Job} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"jackgugz"},"content":"    public ApplicantBuilder withJob(String job) {","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"jackgugz"},"content":"        this.job \u003d new Job(job);","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"jackgugz"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"Chang-CH"},"content":"     * Sets the {@code ApplicationStatus} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"Chang-CH"},"content":"    public ApplicantBuilder withApplicationStatus(String applicationStatus) {","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"Chang-CH"},"content":"        this.status \u003d new ApplicationStatus(applicationStatus);","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"Chang-CH"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"Chang-CH"},"content":"     * Sets the {@code Course} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"nicolej2122"},"content":"    public ApplicantBuilder withCourse(String course) {","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"Jeromesyl"},"content":"        this.course \u003d new Course(course);","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"Jeromesyl"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"Jeromesyl"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"nicolej2122"},"content":"    public Applicant build() {","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"jackgugz"},"content":"        return new Applicant(name, phone, email, grade, institution, course, graduationYearMonth, job, status, skills);","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"yunpeng1234":10,"Jeromesyl":10,"nicolej2122":20,"Chang-CH":45,"-":52,"jackgugz":24}},{"path":"src/test/java/seedu/intern/testutil/ApplicantUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_GRADUATIONYEARMONTH;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_INSTITUTION;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_SKILL;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.AddCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":" * A utility class for Applicant.","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"nicolej2122"},"content":"public class ApplicantUtil {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"     * Returns an add command string for adding the {@code applicant}.","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"    public static String getAddCommand(Applicant applicant) {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getApplicantDetails(applicant);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"     * Returns the part of command string for the given {@code applicant}\u0027s details.","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"nicolej2122"},"content":"    public static String getApplicantDetails(Applicant applicant) {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"nicolej2122"},"content":"        sb.append(PREFIX_NAME + applicant.getName().fullName + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"        sb.append(PREFIX_PHONE + applicant.getPhone().value + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"nicolej2122"},"content":"        sb.append(PREFIX_EMAIL + applicant.getEmail().value + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"nicolej2122"},"content":"        sb.append(PREFIX_GRADE + applicant.getGrade().value + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"nicolej2122"},"content":"        sb.append(PREFIX_INSTITUTION + applicant.getInstitution().value + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"nicolej2122"},"content":"        sb.append(PREFIX_COURSE + applicant.getCourse().value + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"        sb.append(PREFIX_GRADUATIONYEARMONTH + applicant.getGraduationYearMonth().toString() + \" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"        sb.append(PREFIX_JOB + applicant.getJob().jobName + \" \");","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"        applicant.getSkills().stream().forEach(","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"            s -\u003e sb.append(PREFIX_SKILL + s.skillName + \" \")","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the part of command string for the given {@code EditApplicantDescriptor}\u0027s details.","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"nicolej2122"},"content":"    public static String getEditApplicantDescriptorDetails(EditApplicantDescriptor descriptor) {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.getGrade().ifPresent(grade -\u003e sb.append(PREFIX_GRADE).append(grade.value).append(\" \"));","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"        descriptor.getApplicationStatus()","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"                .ifPresent(status -\u003e sb.append(PREFIX_STATUS).append(status.value).append(\" \"));","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"        descriptor.getInstitution().ifPresent(institution -\u003e sb.append(PREFIX_INSTITUTION)","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"                .append(institution.value).append(\" \"));","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"Jeromesyl"},"content":"        descriptor.getCourse().ifPresent(course -\u003e sb.append(PREFIX_COURSE).append(course.value).append(\" \"));","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"        descriptor.getGraduationYearMonth().ifPresent(graduationYearMonth -\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"                sb.append(PREFIX_GRADUATIONYEARMONTH).append(graduationYearMonth.toString()).append(\" \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"        descriptor.getJob().ifPresent(job -\u003e sb.append(PREFIX_JOB).append(job.jobName).append(\" \"));","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"        if (descriptor.getSkills().isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"            Set\u003cSkill\u003e skills \u003d descriptor.getSkills().get();","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"nicolej2122"},"content":"            if (skills.isEmpty()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"nicolej2122"},"content":"                sb.append(PREFIX_SKILL);","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"                skills.forEach(s -\u003e sb.append(PREFIX_SKILL).append(s.skillName).append(\" \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"yunpeng1234":5,"Jeromesyl":1,"nicolej2122":13,"Chang-CH":23,"-":31,"jackgugz":6}},{"path":"src/test/java/seedu/intern/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"Chang-CH":1,"-":33}},{"path":"src/test/java/seedu/intern/testutil/EditApplicantDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.ApplicationStatus;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Course;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Email;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Grade;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.GraduationYearMonth;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Institution;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.Job;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":" * A utility class to help with building EditApplicantDescriptor objects.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"nicolej2122"},"content":"public class EditApplicantDescriptorBuilder {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"    private EditApplicantDescriptor descriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"nicolej2122"},"content":"    public EditApplicantDescriptorBuilder() {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"        descriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"nicolej2122"},"content":"    public EditApplicantDescriptorBuilder(EditApplicantDescriptor descriptor) {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"nicolej2122"},"content":"        this.descriptor \u003d new EditApplicantDescriptor(descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"     * Returns an {@code EditApplicantDescriptor} with fields containing {@code applicant}\u0027s details","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"nicolej2122"},"content":"    public EditApplicantDescriptorBuilder(Applicant applicant) {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"nicolej2122"},"content":"        descriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"nicolej2122"},"content":"        descriptor.setName(applicant.getName());","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"nicolej2122"},"content":"        descriptor.setPhone(applicant.getPhone());","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"nicolej2122"},"content":"        descriptor.setEmail(applicant.getEmail());","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"nicolej2122"},"content":"        descriptor.setGrade(applicant.getGrade());","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"nicolej2122"},"content":"        descriptor.setInstitution(applicant.getInstitution());","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"        descriptor.setApplicationStatus(applicant.getApplicationStatus());","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"nicolej2122"},"content":"        descriptor.setGraduationYearMonth(applicant.getGraduationYearMonth());","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"nicolej2122"},"content":"        descriptor.setCourse(applicant.getCourse());","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.setSkills(applicant.getSkills());","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the {@code Name} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"nicolej2122"},"content":"    public EditApplicantDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the {@code Phone} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"nicolej2122"},"content":"    public EditApplicantDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the {@code Email} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"nicolej2122"},"content":"    public EditApplicantDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the {@code Grade} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"nicolej2122"},"content":"    public EditApplicantDescriptorBuilder withGrade(String grade) {","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.setGrade(new Grade(grade));","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"        return this;","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the {@code Institution} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"nicolej2122"},"content":"    public EditApplicantDescriptorBuilder withInstitution(String institution) {","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"        descriptor.setInstitution(new Institution(institution));","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"        return this;","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the {@code ApplicationStatus} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"    public EditApplicantDescriptorBuilder withApplicationStatus(String status) {","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"        descriptor.setApplicationStatus(new ApplicationStatus(status));","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"Chang-CH"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the {@code GraduationYearMonth} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"nicolej2122"},"content":"    public EditApplicantDescriptorBuilder withGraduationYearMonth(String graduationYearMonth) {","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"jackgugz"},"content":"        descriptor.setGraduationYearMonth(new GraduationYearMonth(graduationYearMonth));","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"jackgugz"},"content":"        return this;","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"Jeromesyl"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the {@code Course} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"Jeromesyl"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"nicolej2122"},"content":"    public EditApplicantDescriptorBuilder withCourse(String course) {","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"Jeromesyl"},"content":"        descriptor.setCourse(new Course(course));","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"Jeromesyl"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"Jeromesyl"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the {@code Job} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"jackgugz"},"content":"    public EditApplicantDescriptorBuilder withJob(String job) {","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"jackgugz"},"content":"        descriptor.setJob(new Job(job));","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"jackgugz"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":122,"author":{"gitId":"yunpeng1234"},"content":"     * Parses the {@code skills} into a {@code Set\u003cSkill\u003e} and set it to the {@code EditApplicantDescriptor}","lastModifiedDate":"2021-11-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":125,"author":{"gitId":"yunpeng1234"},"content":"    public EditApplicantDescriptorBuilder withSkills(String... skills) {","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"yunpeng1234"},"content":"        Set\u003cSkill\u003e skillSet \u003d Stream.of(skills).map(Skill::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.setSkills(skillSet);","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":131,"author":{"gitId":"nicolej2122"},"content":"    public EditApplicantDescriptor build() {","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":134,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yunpeng1234":24,"Jeromesyl":5,"nicolej2122":23,"Chang-CH":26,"-":45,"jackgugz":13}},{"path":"src/test/java/seedu/intern/testutil/FilterApplicantDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package seedu.intern.testutil;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.logic.commands.FilterCommand.FilterApplicantDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.model.applicant.ApplicationStatus;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.model.applicant.Grade;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.model.applicant.GraduationYearMonth;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.model.applicant.Institution;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"import seedu.intern.model.applicant.Job;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.model.skills.Skill;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":" * A utility class to help with building EditApplicantDescriptor objects.","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"public class FilterApplicantDescriptorBuilder {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"    private FilterApplicantDescriptor descriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"    public FilterApplicantDescriptorBuilder() {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"        descriptor \u003d new FilterApplicantDescriptor();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"    public FilterApplicantDescriptorBuilder(FilterApplicantDescriptor descriptor) {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"        this.descriptor \u003d new FilterApplicantDescriptor(descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"     * Returns an {@code EditApplicantDescriptor} with fields containing {@code applicant}\u0027s details","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"    public FilterApplicantDescriptorBuilder(Applicant applicant) {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(applicant.getCourse().toString().split(\" \"));","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"        Set\u003cList\u003cString\u003e\u003e courses \u003d new HashSet\u003cList\u003cString\u003e\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"        Set\u003cApplicationStatus\u003e statuses \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"        Set\u003cInstitution\u003e institutions \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"        Set\u003cJob\u003e jobs \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"        courses.add(keywords);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"        statuses.add(applicant.getApplicationStatus());","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"        institutions.add(applicant.getInstitution());","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"        jobs.add(applicant.getJob());","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"        descriptor \u003d new FilterApplicantDescriptor();","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.setGrade(applicant.getGrade());","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.setInstitutions(institutions);","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.setApplicationStatuses(statuses);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.setGraduationYearMonth(applicant.getGraduationYearMonth());","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.setCourses(courses);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.setSkills(applicant.getSkills());","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the {@code Grade} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"    public FilterApplicantDescriptorBuilder withGrade(String grade) {","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.setGrade(new Grade(grade));","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the {@code Institution} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"    public FilterApplicantDescriptorBuilder withInstitution(String... institutions) {","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"        Set\u003cInstitution\u003e institutionSet \u003d Stream.of(institutions).map(Institution::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.setInstitutions(institutionSet);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the {@code ApplicationStatus} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"    public FilterApplicantDescriptorBuilder withApplicationStatus(String... statuses) {","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"        Set\u003cApplicationStatus\u003e statusSet \u003d Stream.of(statuses).map(ApplicationStatus::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.setApplicationStatuses(statusSet);","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the {@code GraduationYearMonth} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"    public FilterApplicantDescriptorBuilder withGraduationYearMonth(String graduationYearMonth) {","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.setGraduationYearMonth(new GraduationYearMonth(graduationYearMonth));","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"yunpeng1234"},"content":"     * Sets the {@code Course} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"yunpeng1234"},"content":"    public FilterApplicantDescriptorBuilder withCourses(String... courses) {","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"yunpeng1234"},"content":"        Set\u003cList\u003cString\u003e\u003e courseSet \u003d Stream.of(courses).map((x) -\u003e Arrays.asList(x.split(\" \")))","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"yunpeng1234"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.setCourses(courseSet);","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"yunpeng1234"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"yunpeng1234"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditApplicantDescriptor}","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"yunpeng1234"},"content":"     * that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"yunpeng1234"},"content":"    public FilterApplicantDescriptorBuilder withSkills(String... skills) {","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"yunpeng1234"},"content":"        Set\u003cSkill\u003e skillSet \u003d Stream.of(skills).map(Skill::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"yunpeng1234"},"content":"        descriptor.setSkills(skillSet);","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"yunpeng1234"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"yunpeng1234"},"content":"     * Parses the {@code jobs} into a {@code Set\u003cTag\u003e} and set it to the {@code EditApplicantDescriptor}","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"jackgugz"},"content":"     * that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"jackgugz"},"content":"    public FilterApplicantDescriptorBuilder withJobs(String... jobs) {","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"jackgugz"},"content":"        Set\u003cList\u003cString\u003e\u003e jobSet \u003d Stream.of(jobs).map((x) -\u003e Arrays.asList(x.split(\" \")))","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"jackgugz"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"jackgugz"},"content":"        descriptor.setJobs(jobSet);","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"jackgugz"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"yunpeng1234"},"content":"    public FilterApplicantDescriptor build() {","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"yunpeng1234"},"content":"        return descriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"yunpeng1234":111,"jackgugz":13}},{"path":"src/test/java/seedu/intern/testutil/InternWatcherBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.InternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"nicolej2122"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":" * A utility class to help with building InternWatcher objects.","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"nicolej2122"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":" *     {@code InternWatcher ab \u003d new InternWatcherBuilder().withApplicant(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"nicolej2122"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"nicolej2122"},"content":"public class InternWatcherBuilder {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"nicolej2122"},"content":"    private InternWatcher internWatcher;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"nicolej2122"},"content":"    public InternWatcherBuilder() {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"nicolej2122"},"content":"        internWatcher \u003d new InternWatcher();","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"nicolej2122"},"content":"    public InternWatcherBuilder(InternWatcher internWatcher) {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"nicolej2122"},"content":"        this.internWatcher \u003d internWatcher;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"nicolej2122"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"     * Adds a new {@code Applicant} to the {@code InternWatcher} that we are building.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"nicolej2122"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"nicolej2122"},"content":"    public InternWatcherBuilder withApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"        internWatcher.addApplicant(applicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"nicolej2122"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"nicolej2122"},"content":"    public InternWatcher build() {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"nicolej2122"},"content":"        return internWatcher;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"nicolej2122"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"nicolej2122"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"yunpeng1234":4,"nicolej2122":27,"Chang-CH":3}},{"path":"src/test/java/seedu/intern/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Chang-CH":1,"-":71}},{"path":"src/test/java/seedu/intern/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.selection.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"     * Returns the middle selection of the applicant in the {@code model}\u0027s applicant list.","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"        return Index.fromOneBased(model.getFilteredApplicantList().size() / 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"     * Returns the last selection of the applicant in the {@code model}\u0027s applicant list.","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"        return Index.fromOneBased(model.getFilteredApplicantList().size());","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"     * Returns the applicant in the {@code model}\u0027s applicant list at {@code selection}.","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"    public static Applicant getApplicant(Model model, Index index) {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"        return model.getFilteredApplicantList().get(index.getZeroBased());","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yunpeng1234":4,"Chang-CH":7,"-":44}},{"path":"src/test/java/seedu/intern/testutil/TypicalApplicants.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_GRADE_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_GRADE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_GRADUATION_YEARMONTH_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_GRADUATION_YEARMONTH_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_INSTITUTION_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_INSTITUTION_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_JOB_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_JOB_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_SKILL_JAVA;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.logic.commands.CommandTestUtil.VALID_SKILL_PYTHON;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.InternWatcher;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.model.applicant.Applicant;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":" * A utility class containing a list of {@code Applicant} objects to be used in tests.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"nicolej2122"},"content":"public class TypicalApplicants {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"nicolej2122"},"content":"    public static final Applicant ALICE \u003d new ApplicantBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"            .withEmail(\"alice@example.com\").withPhone(\"94351253\").withGrade(\"4.50\").withJob(\"Software Engineer\")","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"            .withInstitution(\"NUS\").withCourse(\"Computer Science\").withApplicationStatus(\"REJECTED\")","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"            .withGraduationYearMonth(\"12/2020\").withSkills(\"python\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"    public static final Applicant BENSON \u003d new ApplicantBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"            .withGrade(\"4.60\").withInstitution(\"NTU\").withCourse(\"Computer Engineering\").withEmail(\"johnd@example.com\")","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"            .withPhone(\"98765432\").withGraduationYearMonth(\"06/2025\").withSkills(\"java\", \"python\")","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"            .withApplicationStatus(\"INTERVIEWED\").withJob(\"Hardware Engineer\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"nicolej2122"},"content":"    public static final Applicant CARL \u003d new ApplicantBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"            .withGrade(\"4.70\").withInstitution(\"NTU\").withCourse(\"Business and Accounting\")","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"            .withApplicationStatus(\"ACCEPTED\").withEmail(\"heinz@example.com\").withGraduationYearMonth(\"12/2023\")","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"            .withSkills(\"java\").withJob(\"Accountant\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"nicolej2122"},"content":"    public static final Applicant DANIEL \u003d new ApplicantBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"            .withGrade(\"4.80\").withInstitution(\"SMU\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"            .withSkills(\"python\").withCourse(\"Accountancy\").withGraduationYearMonth(\"01/2027\")","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"            .withApplicationStatus(\"INTERVIEWED\").withJob(\"Finance Manager\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"nicolej2122"},"content":"    public static final Applicant ELLE \u003d new ApplicantBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"            .withGrade(\"4.90\").withInstitution(\"SUTD\").withEmail(\"werner@example.com\").withSkills(\"C\").withJob(\"Helper\")","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"            .withGraduationYearMonth(\"12/2024\").withApplicationStatus(\"ACCEPTED\").withCourse(\"Philosophy\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"nicolej2122"},"content":"    public static final Applicant FIONA \u003d new ApplicantBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"            .withGrade(\"5.00\").withInstitution(\"PATHLIGHT\").withEmail(\"lydia@example.com\").withSkills(\"C\")","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"            .withGraduationYearMonth(\"12/2021\").withCourse(\"Life Science\")","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"            .withApplicationStatus(\"INTERVIEWED\").withJob(\"Researcher\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"nicolej2122"},"content":"    public static final Applicant GEORGE \u003d new ApplicantBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"            .withGrade(\"4.40\").withInstitution(\"SUSS\").withApplicationStatus(\"ACCEPTED\").withEmail(\"anna@example.com\")","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"            .withGraduationYearMonth(\"03/2023\").withCourse(\"Social Work\").withSkills(\"C\")","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"            .withApplicationStatus(\"REJECTED\").withJob(\"Software Engineer\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"nicolej2122"},"content":"    public static final Applicant HOON \u003d new ApplicantBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"            .withGrade(\"4.20\").withInstitution(\"SUTD\").withEmail(\"stefan@example.com\").withCourse(\"Computer Science\")","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"            .withGraduationYearMonth(\"12/2020\").withJob(\"Software Engineer\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"nicolej2122"},"content":"    public static final Applicant IDA \u003d new ApplicantBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"            .withGrade(\"4.30\").withInstitution(\"NUS\").withEmail(\"hans@example.com\").withCourse(\"Computer Science\")","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"            .withGraduationYearMonth(\"12/2020\").withJob(\"Software Engineer\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"    // Manually added - Applicant\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"nicolej2122"},"content":"    public static final Applicant AMY \u003d new ApplicantBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"            .withEmail(VALID_EMAIL_AMY).withSkills(VALID_SKILL_JAVA)","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"            .withGrade(VALID_GRADE_AMY).withInstitution(VALID_INSTITUTION_AMY).withJob(VALID_JOB_AMY)","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"            .withGraduationYearMonth(VALID_GRADUATION_YEARMONTH_AMY).build();","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"nicolej2122"},"content":"    public static final Applicant BOB \u003d new ApplicantBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"            .withEmail(VALID_EMAIL_BOB).withSkills(VALID_SKILL_PYTHON, VALID_SKILL_JAVA)","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"            .withGrade(VALID_GRADE_BOB).withInstitution(VALID_INSTITUTION_BOB).withJob(VALID_JOB_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"            .withGraduationYearMonth(VALID_GRADUATION_YEARMONTH_BOB).build();","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":81,"author":{"gitId":"nicolej2122"},"content":"    private TypicalApplicants() {} // prevents instantiation","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"     * Returns an {@code InternWatcher} with all the typical applicants.","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"nicolej2122"},"content":"    public static InternWatcher getTypicalInternWatcher() {","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"nicolej2122"},"content":"        InternWatcher ab \u003d new InternWatcher();","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"nicolej2122"},"content":"        for (Applicant applicant : getTypicalApplicants()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"            ab.addApplicant(applicant);","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":94,"author":{"gitId":"nicolej2122"},"content":"    public static List\u003cApplicant\u003e getTypicalApplicants() {","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"yunpeng1234":17,"nicolej2122":16,"Chang-CH":21,"-":25,"jackgugz":18}},{"path":"src/test/java/seedu/intern/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.commons.core.selection.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"    public static final Index INDEX_FIRST_APPLICANT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    public static final Index INDEX_SECOND_APPLICANT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"    public static final Index INDEX_THIRD_APPLICANT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"yunpeng1234":3,"Chang-CH":2,"-":7}},{"path":"src/test/java/seedu/intern/testutil/TypicalSelections.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package seedu.intern.testutil;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalIndexes.INDEX_FIRST_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalIndexes.INDEX_SECOND_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import static seedu.intern.testutil.TypicalIndexes.INDEX_THIRD_APPLICANT;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import seedu.intern.commons.core.selection.Selection;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"public class TypicalSelections {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    public static final Selection SELECTION_FIRST_APPLICANT \u003d Selection.fromIndex(INDEX_FIRST_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"    public static final Selection SELECTION_SECOND_APPLICANT \u003d Selection.fromIndex(INDEX_SECOND_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    public static final Selection SELECTION_THIRD_APPLICANT \u003d Selection.fromIndex(INDEX_THIRD_APPLICANT);","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"    public static final Selection SELECTION_ALL \u003d Selection.fromAllFlag();","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yunpeng1234":13,"Chang-CH":1}},{"path":"src/test/java/seedu/intern/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Chang-CH":1,"-":34}},{"path":"src/test/java/seedu/intern/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package seedu.intern.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import static seedu.intern.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import seedu.intern.MainApp;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Chang-CH":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"\u003c?import seedu.intern.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"Chang-CH":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"\u003cfx:root type\u003d\"seedu.intern.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"Chang-CH":1}}]
