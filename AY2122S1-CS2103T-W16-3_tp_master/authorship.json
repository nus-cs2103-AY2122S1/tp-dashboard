[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Preshita01"},"content":"# TutorAid","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W16-3/tp/actions)","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"## Overview","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"* Private tutors often have many students and have difficulty keeping track of each of the students and their details.","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"* TutorAid provides value through the organisation of such data.","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"* TutorAid can also help these tutors with the tedious task of tracking every student\u0027s study progress and any upcoming milestones.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"## Acknowledgements","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"Preshita01":8,"dt-td":1,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"mainClassName \u003d \u0027tutoraid.Main\u0027","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"    archiveName \u003d \u0027tutoraid.jar\u0027","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wpinrui":2,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"### Ivan Wong","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"\u003cimg src\u003d\"images/wpinrui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"[[github](https://github.com/wpinrui)]","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"[[portfolio](team/wpinrui.md)]","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"* Responsibilities: Deliverables and Deadlines","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"### Yeo Jun Wei","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"\u003cimg src\u003d\"images/junwei3112.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"[[github](https://github.com/JunWei3112)]","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"[[portfolio](team/junwei3112.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"* Role: Developer","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"### Hoang Le Tri Cuong","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"\u003cimg src\u003d\"images/ernestcuong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"[[github](https://github.com/ErnestCuong)]","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"[[portfolio](team/ernestcuong.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"dt-td"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"dt-td"},"content":"### Pandi Preshita","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"dt-td"},"content":"\u003cimg src\u003d\"images/preshita01.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"dt-td"},"content":"[[github](http://github.com/preshita01)]","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"dt-td"},"content":"[[portfolio](team/preshita01.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"dt-td"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"dt-td"},"content":"### Dickson","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"dt-td"},"content":"\u003cimg src\u003d\"images/dt-td.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"dt-td"},"content":"[[github](http://github.com/dt-td)]","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"dt-td"},"content":"[[portfolio](team/dt-td.md)]","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"dt-td"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"wpinrui":6,"dt-td":21,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"## Table of Contents","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"1. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"2. [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"3. [Design](#design)","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"4. [Architecture](#architecture)","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"   - [UI component](#ui-component)","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"   - [Logic component](#logic-component)","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"   - [Model component](#model-component)","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"   - [Storage component](#storage-component)","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"   - [Common classes](#common-classes)","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"5. [Implementation](#implementation)","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"   - [[Proposed] Undo/redo feature](#proposed-undoredo-feature)","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"   - [[Proposed] Data archiving](#proposed-data-archiving)","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"6. [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"7. [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"   - [Product Scope](#product-scope)","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"   - [User stories](#user-stories)","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"   - [Use cases](#use-cases)","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"   - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"   - [Glossary](#glossary)","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"8. [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"   - [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"   - [Deleting a person](#deleting-a-person)","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"   - [Saving data](#saving-data)","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":34,"author":{"gitId":"Preshita01"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Preshita01"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S1-CS2103T-W16-3/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Preshita01"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-W16-3/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103T-W16-3/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"wpinrui"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"Preshita01"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-W16-3/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"Preshita01"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103T-W16-3/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S1-CS2103T-W16-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"Preshita01"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-W16-3/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"wpinrui"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned from `Logic`.","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"Preshita01"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-W16-3/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"Preshita01"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-W16-3/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"Preshita01"},"content":"A private tutor that:","lastModifiedDate":"2021-09-27"},{"lineNumber":282,"author":{"gitId":"Preshita01"},"content":"* has a need to manage a significant number of students\u0027 details","lastModifiedDate":"2021-09-27"},{"lineNumber":283,"author":{"gitId":"Preshita01"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2021-09-27"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"Preshita01"},"content":"**Value proposition**: manage students\u0027 details faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-27"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                          | I want to …​                                                               | So that I can…​                                                                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"Preshita01"},"content":"| -------- | ------------------------------------------------------------------- | ----------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-09-27"},{"lineNumber":297,"author":{"gitId":"Preshita01"},"content":"| `* * *`  | tutor                                                               | add student contacts with ease                                                | keep up with a changing list of students                                                                 |","lastModifiedDate":"2021-10-06"},{"lineNumber":298,"author":{"gitId":"Preshita01"},"content":"| `* * *`  | tutor                                                               | delete student contacts with ease                                             | keep up with a changing list of students                                                                 |","lastModifiedDate":"2021-10-06"},{"lineNumber":299,"author":{"gitId":"Preshita01"},"content":"| `* * *`  | tutor                                                               | view my students’ parents\u0027 contacts                                           | update them on their children’s progress                                                                 |","lastModifiedDate":"2021-10-06"},{"lineNumber":300,"author":{"gitId":"Preshita01"},"content":"| `* * *`  | tutor who teaches students with differing academic strengths        | update the progress of my students                                            | ensure that each student is being appropriately challenged                                               |","lastModifiedDate":"2021-09-27"},{"lineNumber":301,"author":{"gitId":"Preshita01"},"content":"| `* * *`  | caring tutor                                                        | track my students\u0027 submissions and grades                                     | study how they have doing                                                                                |","lastModifiedDate":"2021-09-27"},{"lineNumber":302,"author":{"gitId":"Preshita01"},"content":"| `* * *`  | tutor                                                               | check which student has not paid                                              | remind the student to make the payment soon                                                              |","lastModifiedDate":"2021-09-27"},{"lineNumber":303,"author":{"gitId":"Preshita01"},"content":"| `* * *`  | tutor with many students to keep track of                           | record feedback of each student in the app after each class                   | recall any important details or information when giving feedback to parents on their child\u0027s performance |","lastModifiedDate":"2021-09-27"},{"lineNumber":304,"author":{"gitId":"Preshita01"},"content":"| `* *`    | tutor                                                               | set up a to-do list for every session                                         | record what I need to cover for every session                                                            |","lastModifiedDate":"2021-09-27"},{"lineNumber":305,"author":{"gitId":"Preshita01"},"content":"| `* *`    | tutor with many classes to keep track of                            | check my tasks for the day                                                    | refresh my memory of what needs to be done for each class                                                |","lastModifiedDate":"2021-09-27"},{"lineNumber":306,"author":{"gitId":"Preshita01"},"content":"| `* *`    | new user                                                            | to be able to easily access and refer to the command guide                    | quickly and easily add details to the database without having prior experience of doing so               |","lastModifiedDate":"2021-09-27"},{"lineNumber":307,"author":{"gitId":"Preshita01"},"content":"| `* *`    | tutor with a different schedule every day                           | easily access my schedule for the day and week ahead                          | manage my time well                                                                                      |","lastModifiedDate":"2021-09-27"},{"lineNumber":308,"author":{"gitId":"Preshita01"},"content":"| `* *`    | tutor with many students in each class                              | to view which students are in my current class                                | know who is absent and contact them                                                                      |","lastModifiedDate":"2021-09-27"},{"lineNumber":309,"author":{"gitId":"Preshita01"},"content":"| `* *`    | tutor                                                               | check if my students have any upcoming milestones                             | prepare the relevant materials for my students (e.g. past year papers / cheat sheets)                    |","lastModifiedDate":"2021-09-27"},{"lineNumber":310,"author":{"gitId":"Preshita01"},"content":"| `* *`    | private tutor who may provide ad-hoc lessons to some of my students | track the number of lessons I provide for each student                        | ensure that I receive the correct payment from each student at the end of each month                     |","lastModifiedDate":"2021-09-27"},{"lineNumber":311,"author":{"gitId":"Preshita01"},"content":"| `* *`    | tutor                                                               | add the topics to be covered for the next few weeks for each class            | plan the lessons for future weeks ahead of time                                                          |","lastModifiedDate":"2021-09-27"},{"lineNumber":312,"author":{"gitId":"Preshita01"},"content":"| `* *`    | tutor who allows the enrollment of new students throughout the year | set the student capacity for each class                                       | check which of the classes new students are able to join                                                 |","lastModifiedDate":"2021-09-27"},{"lineNumber":313,"author":{"gitId":"Preshita01"},"content":"| `* *`    | tutor who prices lessons for different classes at different rates   | record an individual price for each class                                     | track how much each of my students need to pay at the each month                                         |","lastModifiedDate":"2021-09-27"},{"lineNumber":314,"author":{"gitId":"Preshita01"},"content":"| `* *`    | tutor                                                               | edit the students in each class                                               | record any changes in the classes that each of my students attend                                        |","lastModifiedDate":"2021-09-27"},{"lineNumber":315,"author":{"gitId":"Preshita01"},"content":"| `* *`    | forgetful tutor                                                     | check for the TutorAid commands fast                                          | conveniently operate the app                                                                             |","lastModifiedDate":"2021-09-27"},{"lineNumber":316,"author":{"gitId":"Preshita01"},"content":"| `* *`    | tutor                                                               | able to view when I have last updated the progress for each student           | ensure that I consistently update progress for all students                                              |","lastModifiedDate":"2021-09-27"},{"lineNumber":317,"author":{"gitId":"Preshita01"},"content":"| `* *`    | tutor                                                               | add students into multiple classes in TutorAid                                | record students who are taking more than 1 of my classes                                                 |","lastModifiedDate":"2021-09-27"},{"lineNumber":318,"author":{"gitId":"Preshita01"},"content":"| `*`      | expert user                                                         | bulk-edit my students’ details                                                | easily transit into the next school year                                                                 |","lastModifiedDate":"2021-09-27"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"dt-td"},"content":"(For all use cases below, the **System** is the `TutorAid` and the **Actor** is the `tutor`, unless specified otherwise)","lastModifiedDate":"2021-09-28"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"wpinrui"},"content":"**Use Case 1: Add a student**","lastModifiedDate":"2021-09-28"},{"lineNumber":326,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":327,"author":{"gitId":"wpinrui"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":328,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":329,"author":{"gitId":"wpinrui"},"content":"1. Tutor collates information related to the student to be added","lastModifiedDate":"2021-09-28"},{"lineNumber":330,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":331,"author":{"gitId":"wpinrui"},"content":"2. Tutor adds the student by passing the student\u0027s name and other details to TutorAid","lastModifiedDate":"2021-09-28"},{"lineNumber":332,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":333,"author":{"gitId":"wpinrui"},"content":"3. TutorAid adds the student and displays a message indicating that this has been done","lastModifiedDate":"2021-09-28"},{"lineNumber":334,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":335,"author":{"gitId":"wpinrui"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":336,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":337,"author":{"gitId":"wpinrui"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":338,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":339,"author":{"gitId":"wpinrui"},"content":"* 1a. Tutor enters the `add` command without using the correct format","lastModifiedDate":"2021-09-28"},{"lineNumber":340,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":341,"author":{"gitId":"wpinrui"},"content":"  * 1a1. TutorAid displays an error message and requests the tutor to re-enter the command","lastModifiedDate":"2021-09-28"},{"lineNumber":342,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":343,"author":{"gitId":"wpinrui"},"content":"  * 1a2. Tutor re-enters the command, along with the necessary arguments","lastModifiedDate":"2021-09-28"},{"lineNumber":344,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":345,"author":{"gitId":"wpinrui"},"content":"    Steps 1a1-1a2 are repeated until the data entered is correct.","lastModifiedDate":"2021-09-28"},{"lineNumber":346,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":347,"author":{"gitId":"wpinrui"},"content":"    Use case resumes from step 3.","lastModifiedDate":"2021-09-28"},{"lineNumber":348,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":349,"author":{"gitId":"dt-td"},"content":"* 2a. Tutor realises that they added the student\u0027s details wrongly","lastModifiedDate":"2021-10-05"},{"lineNumber":350,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":351,"author":{"gitId":"wpinrui"},"content":"  * 2a1. Tutor \u003cu\u003edeletes the student (UC02)\u003c/u\u003e who was just added","lastModifiedDate":"2021-09-28"},{"lineNumber":352,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":353,"author":{"gitId":"wpinrui"},"content":"    Use case resumes from step 2","lastModifiedDate":"2021-09-28"},{"lineNumber":354,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":355,"author":{"gitId":"dt-td"},"content":"**Use Case 2: Delete a student**","lastModifiedDate":"2021-09-28"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":357,"author":{"gitId":"dt-td"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":358,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":359,"author":{"gitId":"JunWei3112"},"content":"1. Tutor requests to view the list of his/her students","lastModifiedDate":"2021-10-05"},{"lineNumber":360,"author":{"gitId":"JunWei3112"},"content":"2. TutorAid shows the list of students, including each student\u0027s index number","lastModifiedDate":"2021-10-05"},{"lineNumber":361,"author":{"gitId":"JunWei3112"},"content":"3. Tutor identifies the contact of the student that is to be deleted and takes note of the index number","lastModifiedDate":"2021-10-05"},{"lineNumber":362,"author":{"gitId":"JunWei3112"},"content":"4. Tutor requests to delete the specified student from the list","lastModifiedDate":"2021-10-05"},{"lineNumber":363,"author":{"gitId":"JunWei3112"},"content":"5. TutorAid successfully deletes the contact of the student corresponding to the given index number, and displays a ","lastModifiedDate":"2021-10-05"},{"lineNumber":364,"author":{"gitId":"JunWei3112"},"content":"   message to indicate this","lastModifiedDate":"2021-10-05"},{"lineNumber":365,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":366,"author":{"gitId":"dt-td"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":367,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":368,"author":{"gitId":"dt-td"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":369,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":370,"author":{"gitId":"JunWei3112"},"content":"* 1a. TutorAid detects an error in the list command.","lastModifiedDate":"2021-10-07"},{"lineNumber":371,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":372,"author":{"gitId":"dt-td"},"content":"    * 1a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":373,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":374,"author":{"gitId":"dt-td"},"content":"    * 1a2. User re-enters the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":375,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":376,"author":{"gitId":"JunWei3112"},"content":"      Steps 1a1-1a2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-05"},{"lineNumber":377,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":378,"author":{"gitId":"dt-td"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":379,"author":{"gitId":"dt-td"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":380,"author":{"gitId":"JunWei3112"},"content":"* 4a. TutorAid detects an error in the command to delete a student.","lastModifiedDate":"2021-10-07"},{"lineNumber":381,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":382,"author":{"gitId":"JunWei3112"},"content":"    * 4a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":383,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":384,"author":{"gitId":"JunWei3112"},"content":"    * 4a2. Tutor re-enters the command.","lastModifiedDate":"2021-10-07"},{"lineNumber":385,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":386,"author":{"gitId":"JunWei3112"},"content":"      Steps 4a1-4a2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-05"},{"lineNumber":387,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":388,"author":{"gitId":"JunWei3112"},"content":"      Use case resumes from step 5.","lastModifiedDate":"2021-10-05"},{"lineNumber":389,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":390,"author":{"gitId":"dt-td"},"content":"**Use Case 3: Updating a student’s detail record**","lastModifiedDate":"2021-09-28"},{"lineNumber":391,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":392,"author":{"gitId":"dt-td"},"content":"Preconditions: The student\u0027s details have been previously added to TutorAid.","lastModifiedDate":"2021-09-28"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":394,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":396,"author":{"gitId":"wpinrui"},"content":"1. Tutor \u003cu\u003edeletes the student (UC02)\u003c/u\u003e whose details are to be updated.","lastModifiedDate":"2021-10-05"},{"lineNumber":397,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":398,"author":{"gitId":"wpinrui"},"content":"2. Tutor requests to add the student back into the list, and provides the updated details of the student","lastModifiedDate":"2021-10-05"},{"lineNumber":399,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":400,"author":{"gitId":"wpinrui"},"content":"3. TutorAid adds the updated student to the list","lastModifiedDate":"2021-10-05"},{"lineNumber":401,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":402,"author":{"gitId":"wpinrui"},"content":"4. TutorAid displays a message indicating the student has been successfully added","lastModifiedDate":"2021-10-05"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-10-05"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":406,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-10-05"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":408,"author":{"gitId":"wpinrui"},"content":"* 2a. The given syntax is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":409,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":410,"author":{"gitId":"dt-td"},"content":"    * 2a1. TutorAid shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":411,"author":{"gitId":"wpinrui"},"content":"    * 2a2. Tutor re-enters the student details.","lastModifiedDate":"2021-10-05"},{"lineNumber":412,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":413,"author":{"gitId":"wpinrui"},"content":"      Steps 2a1 - 2a2 are repeated until a valid syntax is given.","lastModifiedDate":"2021-10-05"},{"lineNumber":414,"author":{"gitId":"dt-td"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2021-09-28"},{"lineNumber":415,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":416,"author":{"gitId":"ErnestCuong"},"content":"**Use case 4: Update a student\u0027s progress**","lastModifiedDate":"2021-09-28"},{"lineNumber":417,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":418,"author":{"gitId":"dt-td"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":419,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":420,"author":{"gitId":"ErnestCuong"},"content":"1. Tutor views the list of his/her students","lastModifiedDate":"2021-09-28"},{"lineNumber":421,"author":{"gitId":"ErnestCuong"},"content":"2. TutorAid displays the list of students","lastModifiedDate":"2021-09-28"},{"lineNumber":422,"author":{"gitId":"ErnestCuong"},"content":"3. Tutor identifies the student index to update their progress","lastModifiedDate":"2021-09-28"},{"lineNumber":423,"author":{"gitId":"ErnestCuong"},"content":"4. Tutor updates progress for that student","lastModifiedDate":"2021-09-28"},{"lineNumber":424,"author":{"gitId":"ErnestCuong"},"content":"5. TutorAid registers the new progress for the student at the specified index number","lastModifiedDate":"2021-09-28"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"ErnestCuong"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":427,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":428,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"ErnestCuong"},"content":"* 1a. Invalid list command syntax","lastModifiedDate":"2021-09-27"},{"lineNumber":431,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":432,"author":{"gitId":"ErnestCuong"},"content":"    * 1a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-27"},{"lineNumber":433,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":434,"author":{"gitId":"ErnestCuong"},"content":"    * 1a2. Tutor re-enters the command.","lastModifiedDate":"2021-09-27"},{"lineNumber":435,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":436,"author":{"gitId":"ErnestCuong"},"content":"      Steps 1a1-1a2 are repeated until the syntax entered is correct. Use case resumes from step 2.","lastModifiedDate":"2021-09-27"},{"lineNumber":437,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":438,"author":{"gitId":"ErnestCuong"},"content":"* 1b. The list is empty. Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":439,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":440,"author":{"gitId":"Preshita01"},"content":"* 4a. Invalid progress commands syntax","lastModifiedDate":"2021-10-06"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"ErnestCuong"},"content":"    * 4a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-27"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"ErnestCuong"},"content":"    * 4a2. Tutor re-enters the command","lastModifiedDate":"2021-09-27"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"ErnestCuong"},"content":"      Steps 3a1 - 3a2 are repeated until a valid syntax is given. Use case resumes from step 5","lastModifiedDate":"2021-09-27"},{"lineNumber":447,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":448,"author":{"gitId":"dt-td"},"content":"**Use case 5: Updating payment for student**","lastModifiedDate":"2021-09-28"},{"lineNumber":449,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":450,"author":{"gitId":"dt-td"},"content":"Preconditions: There is at least one student added to TutorAid.","lastModifiedDate":"2021-09-28"},{"lineNumber":451,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":452,"author":{"gitId":"dt-td"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":453,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":454,"author":{"gitId":"ErnestCuong"},"content":"1. Tutor requests to view the list of his/her students","lastModifiedDate":"2021-10-07"},{"lineNumber":455,"author":{"gitId":"ErnestCuong"},"content":"2. TutorAid shows the list of students, including each student\u0027s index number","lastModifiedDate":"2021-10-07"},{"lineNumber":456,"author":{"gitId":"ErnestCuong"},"content":"3. Tutor identifies the student index to update his/her payment status","lastModifiedDate":"2021-10-07"},{"lineNumber":457,"author":{"gitId":"ErnestCuong"},"content":"4. Tutor requests to update payment status for the student","lastModifiedDate":"2021-10-07"},{"lineNumber":458,"author":{"gitId":"ErnestCuong"},"content":"5. TutorAid successfully updates the payment status for the student corresponding to the given index number, and","lastModifiedDate":"2021-10-07"},{"lineNumber":459,"author":{"gitId":"ErnestCuong"},"content":"   displays a message to indicate this","lastModifiedDate":"2021-10-07"},{"lineNumber":460,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":461,"author":{"gitId":"dt-td"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":462,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":463,"author":{"gitId":"dt-td"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":464,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":465,"author":{"gitId":"ErnestCuong"},"content":"* 1a. TutorAid detects an error in the list command","lastModifiedDate":"2021-10-07"},{"lineNumber":466,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":467,"author":{"gitId":"dt-td"},"content":"    * 1a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":468,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":469,"author":{"gitId":"ErnestCuong"},"content":"    * 1a2. Tutor re-enters the command.","lastModifiedDate":"2021-10-07"},{"lineNumber":470,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":471,"author":{"gitId":"ErnestCuong"},"content":"      Steps 1a1-1a2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-07"},{"lineNumber":472,"author":{"gitId":"ErnestCuong"},"content":"      ","lastModifiedDate":"2021-10-07"},{"lineNumber":473,"author":{"gitId":"dt-td"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":474,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":475,"author":{"gitId":"ErnestCuong"},"content":"* 4a. TutorAid detects a wrongly formatted command to update payment status of a student","lastModifiedDate":"2021-10-07"},{"lineNumber":476,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":477,"author":{"gitId":"ErnestCuong"},"content":"    * 4a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-10-07"},{"lineNumber":478,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":479,"author":{"gitId":"ErnestCuong"},"content":"    * 4a2. Tutor re-enters the command with a revised format.","lastModifiedDate":"2021-10-07"},{"lineNumber":480,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":481,"author":{"gitId":"ErnestCuong"},"content":"      Steps 4a1-4a2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-07"},{"lineNumber":482,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":483,"author":{"gitId":"ErnestCuong"},"content":"      Use case resumes from step 5.","lastModifiedDate":"2021-10-07"},{"lineNumber":484,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":485,"author":{"gitId":"ErnestCuong"},"content":"* 4b. TutorAid detects an invalid student index number","lastModifiedDate":"2021-10-07"},{"lineNumber":486,"author":{"gitId":"ErnestCuong"},"content":"      (e.g. a negative index number, a non-integer index number, a non-existent index number)","lastModifiedDate":"2021-10-07"},{"lineNumber":487,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":488,"author":{"gitId":"ErnestCuong"},"content":"    * 4b1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-10-07"},{"lineNumber":489,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":490,"author":{"gitId":"ErnestCuong"},"content":"    * 4b2. User re-enters the command with another student index number.","lastModifiedDate":"2021-10-07"},{"lineNumber":491,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":492,"author":{"gitId":"ErnestCuong"},"content":"      Steps 4b1-4b2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-07"},{"lineNumber":493,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":494,"author":{"gitId":"ErnestCuong"},"content":"      Use case resumes from step 5.","lastModifiedDate":"2021-10-07"},{"lineNumber":495,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":496,"author":{"gitId":"dt-td"},"content":"**Use case 6: View a student\u0027s details**","lastModifiedDate":"2021-09-28"},{"lineNumber":497,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":498,"author":{"gitId":"dt-td"},"content":"Precondition: The student\u0027s details have been added to TutorAid.","lastModifiedDate":"2021-09-28"},{"lineNumber":499,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":500,"author":{"gitId":"dt-td"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":501,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":502,"author":{"gitId":"dt-td"},"content":"1. Tutor requests a list of students","lastModifiedDate":"2021-09-28"},{"lineNumber":503,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":504,"author":{"gitId":"dt-td"},"content":"2. TutorAid shows the list of students","lastModifiedDate":"2021-09-28"},{"lineNumber":505,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":506,"author":{"gitId":"dt-td"},"content":"3. Tutor finds the specific student in the list and requests to view the student\u0027s details","lastModifiedDate":"2021-09-28"},{"lineNumber":507,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":508,"author":{"gitId":"dt-td"},"content":"4. TutorAid shows the student\u0027s details","lastModifiedDate":"2021-09-28"},{"lineNumber":509,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":510,"author":{"gitId":"dt-td"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":511,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":512,"author":{"gitId":"dt-td"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":513,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":514,"author":{"gitId":"dt-td"},"content":"* 3a. The given index is invalid","lastModifiedDate":"2021-09-28"},{"lineNumber":515,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":516,"author":{"gitId":"dt-td"},"content":"    * 3a1. TutorAid shows an error message","lastModifiedDate":"2021-09-28"},{"lineNumber":517,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":518,"author":{"gitId":"dt-td"},"content":"      Use case resumes at step 3","lastModifiedDate":"2021-09-28"},{"lineNumber":519,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":520,"author":{"gitId":"ErnestCuong"},"content":"**Use case 7: Add a todo list for a session**","lastModifiedDate":"2021-09-28"},{"lineNumber":521,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":522,"author":{"gitId":"ErnestCuong"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":523,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":524,"author":{"gitId":"ErnestCuong"},"content":"1. Tutor views his schedule","lastModifiedDate":"2021-09-28"},{"lineNumber":525,"author":{"gitId":"ErnestCuong"},"content":"2. TutorAid displays the schedule","lastModifiedDate":"2021-09-28"},{"lineNumber":526,"author":{"gitId":"Preshita01"},"content":"3. Tutor identifies the session to add a todo list for","lastModifiedDate":"2021-10-06"},{"lineNumber":527,"author":{"gitId":"ErnestCuong"},"content":"4. Tutor adds a todo task to that session","lastModifiedDate":"2021-09-28"},{"lineNumber":528,"author":{"gitId":"ErnestCuong"},"content":"5. TutorAid registers the task to the session","lastModifiedDate":"2021-09-28"},{"lineNumber":529,"author":{"gitId":"ErnestCuong"},"content":"6. Tutor repeats from step 4 until he/she finishes adding all the tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":530,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":531,"author":{"gitId":"ErnestCuong"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":532,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":533,"author":{"gitId":"ErnestCuong"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":534,"author":{"gitId":"ErnestCuong"},"content":"* 1a. Invalid view schedule command syntax","lastModifiedDate":"2021-09-28"},{"lineNumber":535,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":536,"author":{"gitId":"ErnestCuong"},"content":"    * 1a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":537,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":538,"author":{"gitId":"ErnestCuong"},"content":"    * 1a2. Tutor re-enters the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":539,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":540,"author":{"gitId":"ErnestCuong"},"content":"      Steps 1a1-1a2 are repeated until the syntax entered is correct. Use case resumes from step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":541,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":542,"author":{"gitId":"ErnestCuong"},"content":"* 4a. Invalid add task command syntax","lastModifiedDate":"2021-09-28"},{"lineNumber":543,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":544,"author":{"gitId":"ErnestCuong"},"content":"    * 4a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":545,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":546,"author":{"gitId":"ErnestCuong"},"content":"    * 4a2. Tutor re-enters the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":547,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":548,"author":{"gitId":"ErnestCuong"},"content":"      Steps 4a1-4a2 are repeated until the syntax entered is correct. Use case resumes from step 5.","lastModifiedDate":"2021-09-28"},{"lineNumber":549,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":550,"author":{"gitId":"ErnestCuong"},"content":"* 4b. The session does not exist.","lastModifiedDate":"2021-09-28"},{"lineNumber":551,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":552,"author":{"gitId":"ErnestCuong"},"content":"    * 4b2. TutorAid displays an error message that the session does not exist.","lastModifiedDate":"2021-09-28"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":554,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":556,"author":{"gitId":"dt-td"},"content":"**Use Case 8: View schedule for the upcoming week**","lastModifiedDate":"2021-09-28"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":558,"author":{"gitId":"dt-td"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":560,"author":{"gitId":"dt-td"},"content":"1.  Tutor enters the end date of the upcoming week, and requests to view the schedule up till that date","lastModifiedDate":"2021-09-28"},{"lineNumber":561,"author":{"gitId":"dt-td"},"content":"2.  TutorAid shows the sessions and milestones happening in the upcoming week, in a calendar view","lastModifiedDate":"2021-09-28"},{"lineNumber":562,"author":{"gitId":"dt-td"},"content":"3.  Tutor clicks on a specific date in the calendar","lastModifiedDate":"2021-09-28"},{"lineNumber":563,"author":{"gitId":"dt-td"},"content":"4.  TutorAid shows the details of the sessions and milestones happening on that specific date, in a list view","lastModifiedDate":"2021-09-28"},{"lineNumber":564,"author":{"gitId":"dt-td"},"content":"5.  Tutor requests to return to the calendar view","lastModifiedDate":"2021-09-28"},{"lineNumber":565,"author":{"gitId":"dt-td"},"content":"    Steps 2 - 5 are repeated until Tutor decides to stop viewing the details of sessions and milestones","lastModifiedDate":"2021-09-28"},{"lineNumber":566,"author":{"gitId":"dt-td"},"content":"    happening on a specific date in the upcoming week.","lastModifiedDate":"2021-09-28"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":568,"author":{"gitId":"dt-td"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":570,"author":{"gitId":"dt-td"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":572,"author":{"gitId":"dt-td"},"content":"* 1a. The given date has an invalid format.","lastModifiedDate":"2021-09-28"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":574,"author":{"gitId":"dt-td"},"content":"    * 1a1. TutorAid shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":575,"author":{"gitId":"dt-td"},"content":"    * 1a2. Tutor re-enters the date.","lastModifiedDate":"2021-09-28"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":577,"author":{"gitId":"dt-td"},"content":"      Steps 1a1 - 1a2 are repeated until a valid format for the date is given.","lastModifiedDate":"2021-09-28"},{"lineNumber":578,"author":{"gitId":"dt-td"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":579,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":580,"author":{"gitId":"JunWei3112"},"content":"* 1b. TutorAid detects an error in the view schedule command.","lastModifiedDate":"2021-09-28"},{"lineNumber":581,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":582,"author":{"gitId":"JunWei3112"},"content":"    * 1b1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":583,"author":{"gitId":"JunWei3112"},"content":"    * 1b2. User re-enters the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":584,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":585,"author":{"gitId":"JunWei3112"},"content":"      Steps 1b1-1b2 are repeated until the command entered is correct.","lastModifiedDate":"2021-09-28"},{"lineNumber":586,"author":{"gitId":"JunWei3112"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":587,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":588,"author":{"gitId":"ErnestCuong"},"content":"**Use case 9: Check which students should be present for the class**","lastModifiedDate":"2021-09-28"},{"lineNumber":589,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":590,"author":{"gitId":"ErnestCuong"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":591,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":592,"author":{"gitId":"ErnestCuong"},"content":"1. Tutor views his schedule","lastModifiedDate":"2021-09-28"},{"lineNumber":593,"author":{"gitId":"ErnestCuong"},"content":"2. TutorAid displays the schedule","lastModifiedDate":"2021-09-28"},{"lineNumber":594,"author":{"gitId":"Preshita01"},"content":"3. Tutor identifies the session for which he/she wants to check the list of students for","lastModifiedDate":"2021-10-06"},{"lineNumber":595,"author":{"gitId":"Preshita01"},"content":"4. Tutor requests the list of students for that session","lastModifiedDate":"2021-10-06"},{"lineNumber":596,"author":{"gitId":"ErnestCuong"},"content":"5. TutorAid displays the list of students in the session","lastModifiedDate":"2021-09-28"},{"lineNumber":597,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":598,"author":{"gitId":"ErnestCuong"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":599,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":600,"author":{"gitId":"ErnestCuong"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":601,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":602,"author":{"gitId":"ErnestCuong"},"content":"* 1a. Invalid view schedule command syntax","lastModifiedDate":"2021-09-28"},{"lineNumber":603,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":604,"author":{"gitId":"ErnestCuong"},"content":"    * 1a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":605,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":606,"author":{"gitId":"ErnestCuong"},"content":"    * 1a2. Tutor re-enters the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":607,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":608,"author":{"gitId":"ErnestCuong"},"content":"      Steps 1a1-1a2 are repeated until the syntax entered is correct. Use case resumes from step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":609,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":610,"author":{"gitId":"ErnestCuong"},"content":"* 4a. Invalid view session students command syntax","lastModifiedDate":"2021-09-28"},{"lineNumber":611,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":612,"author":{"gitId":"ErnestCuong"},"content":"    * 4a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":613,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":614,"author":{"gitId":"ErnestCuong"},"content":"    * 4a2. Tutor re-enters the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":615,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":616,"author":{"gitId":"ErnestCuong"},"content":"      Steps 4a1-4a2 are repeated until the syntax entered is correct. Use case resumes from step 5.","lastModifiedDate":"2021-09-28"},{"lineNumber":617,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":618,"author":{"gitId":"dt-td"},"content":"**Use case 10: Reset payment status for all students at the end of the month**","lastModifiedDate":"2021-09-28"},{"lineNumber":619,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":620,"author":{"gitId":"dt-td"},"content":"Preconditions: There is at least one student added to TutorAid.","lastModifiedDate":"2021-09-28"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"ErnestCuong"},"content":"1. Tutor requests to view the list of his/her students","lastModifiedDate":"2021-10-07"},{"lineNumber":625,"author":{"gitId":"ErnestCuong"},"content":"2. TutorAid shows the list of students, including each student\u0027s index number","lastModifiedDate":"2021-10-07"},{"lineNumber":626,"author":{"gitId":"ErnestCuong"},"content":"3. Tutor identifies that all students have made payment for the month, and the month has ended","lastModifiedDate":"2021-10-07"},{"lineNumber":627,"author":{"gitId":"ErnestCuong"},"content":"4. Tutor keys in the reset payment command to set all student payments as unpaid","lastModifiedDate":"2021-10-07"},{"lineNumber":628,"author":{"gitId":"ErnestCuong"},"content":"5. TutorAid successfully resets payment for all students, and displays a message to indicate this","lastModifiedDate":"2021-10-07"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"dt-td"},"content":"* 1a. TutorAid detects an error in the list command","lastModifiedDate":"2021-09-28"},{"lineNumber":635,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":636,"author":{"gitId":"dt-td"},"content":"    * 1a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":637,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":638,"author":{"gitId":"ErnestCuong"},"content":"    * 1a2. Tutor re-enters the command.","lastModifiedDate":"2021-10-07"},{"lineNumber":639,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":640,"author":{"gitId":"ErnestCuong"},"content":"      Steps 1a1-1a2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-07"},{"lineNumber":641,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":642,"author":{"gitId":"dt-td"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":643,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":644,"author":{"gitId":"ErnestCuong"},"content":"* 4a. TutorAid detects an error in the reset payment command","lastModifiedDate":"2021-10-07"},{"lineNumber":645,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":646,"author":{"gitId":"ErnestCuong"},"content":"    * 4a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-10-07"},{"lineNumber":647,"author":{"gitId":"ErnestCuong"},"content":"  ","lastModifiedDate":"2021-10-07"},{"lineNumber":648,"author":{"gitId":"ErnestCuong"},"content":"    * 4a2. Tutor re-enters the command.","lastModifiedDate":"2021-10-07"},{"lineNumber":649,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":650,"author":{"gitId":"ErnestCuong"},"content":"      Steps 4a1-4a2 are repeated until the data entered are correct.","lastModifiedDate":"2021-10-07"},{"lineNumber":651,"author":{"gitId":"dt-td"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":652,"author":{"gitId":"dt-td"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2021-09-28"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":654,"author":{"gitId":"dt-td"},"content":"**Use Case 11: View upcoming milestones for all students**","lastModifiedDate":"2021-09-28"},{"lineNumber":655,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":656,"author":{"gitId":"dt-td"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":657,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":658,"author":{"gitId":"dt-td"},"content":"1.  Tutor requests to view the students\u0027 upcoming milestones","lastModifiedDate":"2021-09-28"},{"lineNumber":659,"author":{"gitId":"dt-td"},"content":"2.  TutorAid shows the upcoming milestones in a chronological order","lastModifiedDate":"2021-09-28"},{"lineNumber":660,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":661,"author":{"gitId":"dt-td"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":662,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":663,"author":{"gitId":"JunWei3112"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":664,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":665,"author":{"gitId":"JunWei3112"},"content":"* 1a. TutorAid detects an error in the view milestones command.","lastModifiedDate":"2021-09-28"},{"lineNumber":666,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":667,"author":{"gitId":"JunWei3112"},"content":"    * 1a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":668,"author":{"gitId":"JunWei3112"},"content":"    * 1a2. User re-enters the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":669,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":670,"author":{"gitId":"JunWei3112"},"content":"      Steps 1a1-1a2 are repeated until the command entered is correct.","lastModifiedDate":"2021-09-28"},{"lineNumber":671,"author":{"gitId":"JunWei3112"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":672,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":673,"author":{"gitId":"dt-td"},"content":"**Use case 12: View income for the month**","lastModifiedDate":"2021-09-28"},{"lineNumber":674,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":675,"author":{"gitId":"dt-td"},"content":"Preconditions: There is at least one student added to TutorAid.","lastModifiedDate":"2021-09-28"},{"lineNumber":676,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":677,"author":{"gitId":"dt-td"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":678,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":679,"author":{"gitId":"dt-td"},"content":"1. Tutor keys in the view income command to view income earned for the month","lastModifiedDate":"2021-09-28"},{"lineNumber":680,"author":{"gitId":"dt-td"},"content":"2. Tutor successfully views income earned for the month","lastModifiedDate":"2021-09-28"},{"lineNumber":681,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":682,"author":{"gitId":"wpinrui"},"content":"   Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":683,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":684,"author":{"gitId":"wpinrui"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":685,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":686,"author":{"gitId":"dt-td"},"content":"* 1a. TutorAid detects an error in the view income command","lastModifiedDate":"2021-09-28"},{"lineNumber":687,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":688,"author":{"gitId":"dt-td"},"content":"    * 1a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":689,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":690,"author":{"gitId":"dt-td"},"content":"    * 1a2. User re-enters the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":691,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":692,"author":{"gitId":"dt-td"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2021-09-28"},{"lineNumber":693,"author":{"gitId":"ErnestCuong"},"content":"      ","lastModifiedDate":"2021-10-07"},{"lineNumber":694,"author":{"gitId":"dt-td"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":695,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":696,"author":{"gitId":"wpinrui"},"content":"**Use case 13: Set up a recurring class**","lastModifiedDate":"2021-09-28"},{"lineNumber":697,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":698,"author":{"gitId":"wpinrui"},"content":"Preconditions: The students of the class have been added to TutorAid.","lastModifiedDate":"2021-09-26"},{"lineNumber":699,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":700,"author":{"gitId":"wpinrui"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":701,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":702,"author":{"gitId":"wpinrui"},"content":"1. Tutor requests to add a class","lastModifiedDate":"2021-09-26"},{"lineNumber":703,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":704,"author":{"gitId":"dt-td"},"content":"2. TutorAid requests for details of the class including the day of the week, time and price","lastModifiedDate":"2021-10-05"},{"lineNumber":705,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":706,"author":{"gitId":"wpinrui"},"content":"3. Tutor enters the details of the class","lastModifiedDate":"2021-09-28"},{"lineNumber":707,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":708,"author":{"gitId":"wpinrui"},"content":"4. TutorAid creates the class","lastModifiedDate":"2021-09-28"},{"lineNumber":709,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":710,"author":{"gitId":"wpinrui"},"content":"5. Tutor \u003cu\u003eadds a student to the class (UC14)\u003c/u\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":711,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":712,"author":{"gitId":"wpinrui"},"content":"   Step 5 is repeated until all students have been added","lastModifiedDate":"2021-09-28"},{"lineNumber":713,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":714,"author":{"gitId":"wpinrui"},"content":"   Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":715,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":716,"author":{"gitId":"wpinrui"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":717,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":718,"author":{"gitId":"dt-td"},"content":"* 3a. Class appears to overlap with another class as intended by the Tutor","lastModifiedDate":"2021-10-05"},{"lineNumber":719,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":720,"author":{"gitId":"dt-td"},"content":"    * 3a1. TutorAid shows a warning message","lastModifiedDate":"2021-10-05"},{"lineNumber":721,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":722,"author":{"gitId":"dt-td"},"content":"    * 3a2. Tutor dismisses the warning message","lastModifiedDate":"2021-10-05"},{"lineNumber":723,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":724,"author":{"gitId":"wpinrui"},"content":"      Use case resumes at step 4","lastModifiedDate":"2021-09-28"},{"lineNumber":725,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":726,"author":{"gitId":"dt-td"},"content":"* 3b. Class appears to overlap with another class due to a mistake of the Tutor","lastModifiedDate":"2021-10-05"},{"lineNumber":727,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":728,"author":{"gitId":"dt-td"},"content":"    * 3b1. TutorAid shows a warning message","lastModifiedDate":"2021-10-05"},{"lineNumber":729,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":730,"author":{"gitId":"dt-td"},"content":"    * 3b2. Tutor acknowledges the warning message and cancels the creation of the class","lastModifiedDate":"2021-10-05"},{"lineNumber":731,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":732,"author":{"gitId":"wpinrui"},"content":"      Use case resumes at step 1","lastModifiedDate":"2021-09-28"},{"lineNumber":733,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":734,"author":{"gitId":"wpinrui"},"content":"* 3c. TutorAid detects invalid input","lastModifiedDate":"2021-09-28"},{"lineNumber":735,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":736,"author":{"gitId":"dt-td"},"content":"    * 3c1. TutorAid shows a warning message","lastModifiedDate":"2021-10-05"},{"lineNumber":737,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":738,"author":{"gitId":"dt-td"},"content":"    * 3c2. Tutor acknowledges the warning message","lastModifiedDate":"2021-10-05"},{"lineNumber":739,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":740,"author":{"gitId":"wpinrui"},"content":"      Use case resumes at step 3","lastModifiedDate":"2021-09-28"},{"lineNumber":741,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":742,"author":{"gitId":"wpinrui"},"content":"**Use case 14: Add a student to a class**","lastModifiedDate":"2021-09-26"},{"lineNumber":743,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":744,"author":{"gitId":"wpinrui"},"content":"Preconditions: The students of the class have been added to TutorAid, and the class has been created correctly.","lastModifiedDate":"2021-09-26"},{"lineNumber":745,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":746,"author":{"gitId":"wpinrui"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":747,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":748,"author":{"gitId":"wpinrui"},"content":"1. Tutor requests a list of classes","lastModifiedDate":"2021-09-26"},{"lineNumber":749,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":750,"author":{"gitId":"wpinrui"},"content":"2. TutorAid displays a list of classes","lastModifiedDate":"2021-09-26"},{"lineNumber":751,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":752,"author":{"gitId":"wpinrui"},"content":"3. Tutor requests to add students to a specific class","lastModifiedDate":"2021-09-26"},{"lineNumber":753,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":754,"author":{"gitId":"wpinrui"},"content":"4. TutorAid displays the list of students","lastModifiedDate":"2021-09-26"},{"lineNumber":755,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":756,"author":{"gitId":"wpinrui"},"content":"5. Tutor chooses some students from the list to be added","lastModifiedDate":"2021-09-26"},{"lineNumber":757,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":758,"author":{"gitId":"wpinrui"},"content":"6. TutorAid shows a confirmation message","lastModifiedDate":"2021-09-26"},{"lineNumber":759,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":760,"author":{"gitId":"wpinrui"},"content":"7. Tutor confirms the action","lastModifiedDate":"2021-09-26"},{"lineNumber":761,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":762,"author":{"gitId":"wpinrui"},"content":"8. TutorAid adds the selected students to the class","lastModifiedDate":"2021-09-26"},{"lineNumber":763,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":764,"author":{"gitId":"wpinrui"},"content":"   Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":765,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":766,"author":{"gitId":"wpinrui"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":767,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":768,"author":{"gitId":"dt-td"},"content":"* 6a. Tutor declines the confirmation message.","lastModifiedDate":"2021-10-05"},{"lineNumber":769,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":770,"author":{"gitId":"wpinrui"},"content":"    * 6a1. TutorAid stops the action.","lastModifiedDate":"2021-09-26"},{"lineNumber":771,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":772,"author":{"gitId":"wpinrui"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-09-26"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"dt-td"},"content":"**Use Case 15: Edit students in a class**","lastModifiedDate":"2021-09-28"},{"lineNumber":775,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":776,"author":{"gitId":"dt-td"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":777,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":778,"author":{"gitId":"JunWei3112"},"content":"1. Tutor requests to view the list of his/her students","lastModifiedDate":"2021-10-05"},{"lineNumber":779,"author":{"gitId":"JunWei3112"},"content":"2. TutorAid shows the list of students, including each student\u0027s index number","lastModifiedDate":"2021-10-05"},{"lineNumber":780,"author":{"gitId":"JunWei3112"},"content":"3. Tutor identifies the contact of the student who is to be removed from a specific class and takes note of the index number","lastModifiedDate":"2021-10-05"},{"lineNumber":781,"author":{"gitId":"JunWei3112"},"content":"4. Tutor requests to view the list of his/her classes","lastModifiedDate":"2021-10-05"},{"lineNumber":782,"author":{"gitId":"JunWei3112"},"content":"5. TutorAid shows the list of classes, including each class\u0027s index number","lastModifiedDate":"2021-10-05"},{"lineNumber":783,"author":{"gitId":"JunWei3112"},"content":"6. Tutor identifies the class he/she wishes to modify and takes note of the index number","lastModifiedDate":"2021-10-05"},{"lineNumber":784,"author":{"gitId":"JunWei3112"},"content":"7. Tutor keys in the student index number and the class index number along with the command to remove a student from a class","lastModifiedDate":"2021-10-05"},{"lineNumber":785,"author":{"gitId":"JunWei3112"},"content":"8. TutorAid successfully removes the student corresponding to the given index number from the class corresponding to the ","lastModifiedDate":"2021-10-05"},{"lineNumber":786,"author":{"gitId":"JunWei3112"},"content":"   given class index number, and displays a message to indicate this","lastModifiedDate":"2021-10-05"},{"lineNumber":787,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":788,"author":{"gitId":"dt-td"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":789,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":790,"author":{"gitId":"dt-td"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":791,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":792,"author":{"gitId":"JunWei3112"},"content":"* 1a. TutorAid detects an error in the command to list students (e.g. command is misspelt)","lastModifiedDate":"2021-10-07"},{"lineNumber":793,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":794,"author":{"gitId":"dt-td"},"content":"    * 1a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":795,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":796,"author":{"gitId":"JunWei3112"},"content":"    * 1a2. Tutor re-enters the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":797,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":798,"author":{"gitId":"JunWei3112"},"content":"      Steps 1a1-1a2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-05"},{"lineNumber":799,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":800,"author":{"gitId":"dt-td"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":801,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":802,"author":{"gitId":"JunWei3112"},"content":"* 4a. TutorAid detects an error in the command to list classes (e.g. command is misspelt)","lastModifiedDate":"2021-10-05"},{"lineNumber":803,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":804,"author":{"gitId":"JunWei3112"},"content":"    * 4a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":805,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":806,"author":{"gitId":"JunWei3112"},"content":"    * 4a2. Tutor re-enters the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":807,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":808,"author":{"gitId":"JunWei3112"},"content":"      Steps 4a1-4a2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-05"},{"lineNumber":809,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":810,"author":{"gitId":"JunWei3112"},"content":"      Use case resumes from step 5.","lastModifiedDate":"2021-10-05"},{"lineNumber":811,"author":{"gitId":"dt-td"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":812,"author":{"gitId":"JunWei3112"},"content":"* 7a. TutorAid detects an error in the command to remove a student from a class.","lastModifiedDate":"2021-10-07"},{"lineNumber":813,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":814,"author":{"gitId":"JunWei3112"},"content":"    * 7a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":815,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":816,"author":{"gitId":"JunWei3112"},"content":"    * 7a2. Tutor re-enters the command.","lastModifiedDate":"2021-10-07"},{"lineNumber":817,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":818,"author":{"gitId":"JunWei3112"},"content":"      Steps 7a1-7a2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-05"},{"lineNumber":819,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":820,"author":{"gitId":"JunWei3112"},"content":"      Use case resumes from step 8.","lastModifiedDate":"2021-10-05"},{"lineNumber":821,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":822,"author":{"gitId":"dt-td"},"content":"**Use Case 16: Edit timing of a recurring class**","lastModifiedDate":"2021-09-28"},{"lineNumber":823,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":824,"author":{"gitId":"dt-td"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":825,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":826,"author":{"gitId":"JunWei3112"},"content":"1. Tutor requests to view the list of his/her classes","lastModifiedDate":"2021-10-05"},{"lineNumber":827,"author":{"gitId":"JunWei3112"},"content":"2. TutorAid shows the list of classes, including each class\u0027s index number","lastModifiedDate":"2021-10-05"},{"lineNumber":828,"author":{"gitId":"JunWei3112"},"content":"3. Tutor identifies the recurring class he/she wishes to modify and takes note of the index number","lastModifiedDate":"2021-10-05"},{"lineNumber":829,"author":{"gitId":"JunWei3112"},"content":"4. Tutor keys in the command to modify the timing of a class, along with the new day, start and end timings of the class, and the class index number","lastModifiedDate":"2021-10-05"},{"lineNumber":830,"author":{"gitId":"JunWei3112"},"content":"5. TutorAid successfully updates the start and end timings of the class corresponding to the given class index number,","lastModifiedDate":"2021-10-05"},{"lineNumber":831,"author":{"gitId":"JunWei3112"},"content":"   and displays a message to indicate this","lastModifiedDate":"2021-10-05"},{"lineNumber":832,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":833,"author":{"gitId":"dt-td"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":834,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":835,"author":{"gitId":"dt-td"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":836,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":837,"author":{"gitId":"dt-td"},"content":"* 1a. TutorAid detects an error in the command to list classes (e.g. command is misspelt)","lastModifiedDate":"2021-09-28"},{"lineNumber":838,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":839,"author":{"gitId":"dt-td"},"content":"    * 1a1. TutorAid displays an error message highlighting the wrongly formatted command and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":840,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":841,"author":{"gitId":"JunWei3112"},"content":"    * 1a2. Tutor re-enters the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":842,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":843,"author":{"gitId":"JunWei3112"},"content":"      Steps 1a1-1a2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-05"},{"lineNumber":844,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":845,"author":{"gitId":"dt-td"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":846,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":847,"author":{"gitId":"JunWei3112"},"content":"* 4a. TutorAid detects an error in the command to edit the timing of a recurring class","lastModifiedDate":"2021-10-07"},{"lineNumber":848,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":849,"author":{"gitId":"JunWei3112"},"content":"    * 4a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-10-07"},{"lineNumber":850,"author":{"gitId":"dt-td"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":851,"author":{"gitId":"JunWei3112"},"content":"    * 4a2. Tutor re-enters the command.","lastModifiedDate":"2021-10-07"},{"lineNumber":852,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":853,"author":{"gitId":"JunWei3112"},"content":"      Steps 4a1-4a2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-05"},{"lineNumber":854,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":855,"author":{"gitId":"JunWei3112"},"content":"      Use case resumes from step 5.","lastModifiedDate":"2021-10-05"},{"lineNumber":856,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":857,"author":{"gitId":"JunWei3112"},"content":"* 4b. TutorAid detects a clash with another existing class (e.g. overlapping timings on the same day)","lastModifiedDate":"2021-10-07"},{"lineNumber":858,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":859,"author":{"gitId":"JunWei3112"},"content":"    * 4b1. TutorAid displays an error message highlighting the clash in classes and requests the tutor to key in a different day and/or a pair of timings.","lastModifiedDate":"2021-10-07"},{"lineNumber":860,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":861,"author":{"gitId":"JunWei3112"},"content":"    * 4b2. Tutor re-enters the command with a different day and/or different pair of timings.","lastModifiedDate":"2021-10-07"},{"lineNumber":862,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":863,"author":{"gitId":"JunWei3112"},"content":"      Steps 4b1-4b2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-05"},{"lineNumber":864,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":865,"author":{"gitId":"JunWei3112"},"content":"      Use case resumes from step 5.","lastModifiedDate":"2021-10-05"},{"lineNumber":866,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":867,"author":{"gitId":"dt-td"},"content":"**Use Case 17: Edit timing of an ad-hoc class**","lastModifiedDate":"2021-09-28"},{"lineNumber":868,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":869,"author":{"gitId":"dt-td"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":870,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":871,"author":{"gitId":"JunWei3112"},"content":"1. Tutor requests to view the list of his/her classes","lastModifiedDate":"2021-10-05"},{"lineNumber":872,"author":{"gitId":"JunWei3112"},"content":"2. TutorAid shows the list of classes, including each class\u0027s index number","lastModifiedDate":"2021-10-05"},{"lineNumber":873,"author":{"gitId":"JunWei3112"},"content":"3. Tutor identifies the ad-hoc class he/she wishes to modify and takes note of the index number","lastModifiedDate":"2021-10-05"},{"lineNumber":874,"author":{"gitId":"JunWei3112"},"content":"4. Tutor keys in the command to modify the timing of a class, along with the new date, start and end timings of the class, and the class index number","lastModifiedDate":"2021-10-05"},{"lineNumber":875,"author":{"gitId":"JunWei3112"},"content":"5. TutorAid successfully updates the start and end timings of the class corresponding to the given class index number,","lastModifiedDate":"2021-10-05"},{"lineNumber":876,"author":{"gitId":"JunWei3112"},"content":"   and displays a message to indicate this","lastModifiedDate":"2021-10-05"},{"lineNumber":877,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":878,"author":{"gitId":"dt-td"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":879,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":880,"author":{"gitId":"dt-td"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":881,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":882,"author":{"gitId":"dt-td"},"content":"* 1a. TutorAid detects an error in the command to list classes (e.g. command is misspelt)","lastModifiedDate":"2021-09-28"},{"lineNumber":883,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":884,"author":{"gitId":"dt-td"},"content":"    * 1a1. TutorAid displays an error message highlighting the wrongly formatted command and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":885,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":886,"author":{"gitId":"JunWei3112"},"content":"    * 1a2. Tutor re-enters the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":887,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":888,"author":{"gitId":"JunWei3112"},"content":"      Steps 1a1-1a2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-05"},{"lineNumber":889,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":890,"author":{"gitId":"dt-td"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":891,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":892,"author":{"gitId":"JunWei3112"},"content":"* 4a. TutorAid detects an error in the command to edit the timing of an ad-hoc class.","lastModifiedDate":"2021-10-07"},{"lineNumber":893,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":894,"author":{"gitId":"JunWei3112"},"content":"    * 4a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-10-07"},{"lineNumber":895,"author":{"gitId":"dt-td"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":896,"author":{"gitId":"JunWei3112"},"content":"    * 4a2. Tutor re-enters the command.","lastModifiedDate":"2021-10-07"},{"lineNumber":897,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":898,"author":{"gitId":"JunWei3112"},"content":"      Steps 4a1-4a2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-05"},{"lineNumber":899,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":900,"author":{"gitId":"JunWei3112"},"content":"      Use case resumes from step 5.","lastModifiedDate":"2021-10-05"},{"lineNumber":901,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":902,"author":{"gitId":"JunWei3112"},"content":"* 4b. TutorAid detects a clash with another existing class (e.g. overlapping timings on the same date)","lastModifiedDate":"2021-10-07"},{"lineNumber":903,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":904,"author":{"gitId":"JunWei3112"},"content":"    * 4b1. TutorAid displays an error message highlighting the clash in classes and requests the tutor to key a different day and/or a pair of timings.","lastModifiedDate":"2021-10-07"},{"lineNumber":905,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":906,"author":{"gitId":"JunWei3112"},"content":"    * 4b2. Tutor re-enters the command with a different day and/or different pair of timings.","lastModifiedDate":"2021-10-07"},{"lineNumber":907,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":908,"author":{"gitId":"JunWei3112"},"content":"      Steps 4b1-4b2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-05"},{"lineNumber":909,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":910,"author":{"gitId":"JunWei3112"},"content":"      Use case resumes from step 5.","lastModifiedDate":"2021-10-05"},{"lineNumber":911,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":912,"author":{"gitId":"dt-td"},"content":"**Use Case 18: Edit pricing of a class**","lastModifiedDate":"2021-09-28"},{"lineNumber":913,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":914,"author":{"gitId":"dt-td"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":915,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":916,"author":{"gitId":"JunWei3112"},"content":"1. Tutor requests to view the list of his/her classes","lastModifiedDate":"2021-10-05"},{"lineNumber":917,"author":{"gitId":"JunWei3112"},"content":"2. TutorAid shows the list of classes, including each class\u0027s index number","lastModifiedDate":"2021-10-05"},{"lineNumber":918,"author":{"gitId":"JunWei3112"},"content":"3. Tutor identifies the class he/she wishes to modify and takes note of the index number","lastModifiedDate":"2021-10-05"},{"lineNumber":919,"author":{"gitId":"JunWei3112"},"content":"4. Tutor keys in the command to modify the pricing of a class, along with the new price of the class and the class\u0027s index number","lastModifiedDate":"2021-10-05"},{"lineNumber":920,"author":{"gitId":"JunWei3112"},"content":"5. TutorAid successfully updates the pricing of the class corresponding to the given class index number,","lastModifiedDate":"2021-10-05"},{"lineNumber":921,"author":{"gitId":"JunWei3112"},"content":"   and displays a message to indicate this","lastModifiedDate":"2021-10-05"},{"lineNumber":922,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":923,"author":{"gitId":"dt-td"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":924,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":925,"author":{"gitId":"dt-td"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":926,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":927,"author":{"gitId":"dt-td"},"content":"* 1a. TutorAid detects an error in the command to list classes (e.g. command is misspelt)","lastModifiedDate":"2021-09-28"},{"lineNumber":928,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":929,"author":{"gitId":"dt-td"},"content":"    * 1a1. TutorAid displays an error message highlighting the wrongly formatted command and requests the tutor to re-enter the command.","lastModifiedDate":"2021-09-28"},{"lineNumber":930,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":931,"author":{"gitId":"JunWei3112"},"content":"    * 1a2. Tutor re-enters the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":932,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":933,"author":{"gitId":"JunWei3112"},"content":"      Steps 1a1-1a2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-05"},{"lineNumber":934,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":935,"author":{"gitId":"dt-td"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":936,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":937,"author":{"gitId":"JunWei3112"},"content":"* 4a. TutorAid detects an error in the command to edit the pricing of a class.","lastModifiedDate":"2021-10-07"},{"lineNumber":938,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":939,"author":{"gitId":"JunWei3112"},"content":"    * 4a1. TutorAid displays an error message and requests the tutor to re-enter the command.","lastModifiedDate":"2021-10-07"},{"lineNumber":940,"author":{"gitId":"dt-td"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":941,"author":{"gitId":"JunWei3112"},"content":"    * 4a2. Tutor re-enters the command.","lastModifiedDate":"2021-10-07"},{"lineNumber":942,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":943,"author":{"gitId":"JunWei3112"},"content":"      Steps 4a1-4a2 are repeated until the command entered is correct.","lastModifiedDate":"2021-10-05"},{"lineNumber":944,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":945,"author":{"gitId":"JunWei3112"},"content":"      Use case resumes from step 5.","lastModifiedDate":"2021-10-05"},{"lineNumber":946,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":947,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":948,"author":{"gitId":"Preshita01"},"content":"1.  The system should be able to run on any machine that has Java 11 or higher installed.","lastModifiedDate":"2021-09-27"},{"lineNumber":949,"author":{"gitId":"Preshita01"},"content":"2.  The user should be able to access the list of available commands within 2 inputs/clicks.","lastModifiedDate":"2021-09-27"},{"lineNumber":950,"author":{"gitId":"Preshita01"},"content":"3.  The length of the user commands should not be more than 20 characters (excluding the arguments).","lastModifiedDate":"2021-09-27"},{"lineNumber":951,"author":{"gitId":"Preshita01"},"content":"4.  No user input should corrupt the data file. (The data file should still be able to be parsed by TutorAid at all times)","lastModifiedDate":"2021-09-27"},{"lineNumber":952,"author":{"gitId":"Preshita01"},"content":"5.  The system should respond within 5 seconds for any action.","lastModifiedDate":"2021-09-27"},{"lineNumber":953,"author":{"gitId":"Preshita01"},"content":"6.  The system should not crash even when hundreds of student data are stored.","lastModifiedDate":"2021-09-27"},{"lineNumber":954,"author":{"gitId":"Preshita01"},"content":"7.  The system should only be able to handle up to 1000 students.","lastModifiedDate":"2021-09-27"},{"lineNumber":955,"author":{"gitId":"Preshita01"},"content":"8.  The user input elements are still visible even with hundreds of data records being displayed.","lastModifiedDate":"2021-09-27"},{"lineNumber":956,"author":{"gitId":"Preshita01"},"content":"9.  The project is expected to adhere to a schedule that delivers updates every 2 weeks.","lastModifiedDate":"2021-09-27"},{"lineNumber":957,"author":{"gitId":"Preshita01"},"content":"10.  The product should be fully functional offline and should not rely on internet connection to carry out any of its functions.","lastModifiedDate":"2021-09-27"},{"lineNumber":958,"author":{"gitId":"Preshita01"},"content":"11.  The product is not required to handle mobile phone capabilities.","lastModifiedDate":"2021-09-27"},{"lineNumber":959,"author":{"gitId":"Preshita01"},"content":"12.  The product is not required to handle any other languages (other than English).","lastModifiedDate":"2021-09-27"},{"lineNumber":960,"author":{"gitId":"Preshita01"},"content":"13.  The product is not required to facilitate monetary transactions for payment of tuition fees.","lastModifiedDate":"2021-09-27"},{"lineNumber":961,"author":{"gitId":"Preshita01"},"content":"14.  The product data should be transferable from one computer to another.","lastModifiedDate":"2021-09-27"},{"lineNumber":962,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":963,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":964,"author":{"gitId":"Preshita01"},"content":"* **Class**: Contains all the details and constructs the timing and structure of a session (e.g. Physics, Wednesday 3-4pm)","lastModifiedDate":"2021-09-27"},{"lineNumber":965,"author":{"gitId":"Preshita01"},"content":"* **Session**: A occurrence of a class (e.g. Physics, 1 Sept 2021 3-4pm)","lastModifiedDate":"2021-09-27"},{"lineNumber":966,"author":{"gitId":"Preshita01"},"content":"* **Milestone**: An upcoming, important assessment for a class","lastModifiedDate":"2021-09-27"},{"lineNumber":967,"author":{"gitId":"Preshita01"},"content":"* **To-do list**: Tasks to be done before and during a session","lastModifiedDate":"2021-09-27"},{"lineNumber":968,"author":{"gitId":"Preshita01"},"content":"* **Schedule**: A calendar view of all sessions and milestones","lastModifiedDate":"2021-09-27"},{"lineNumber":969,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":970,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":971,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":972,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":973,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":974,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":975,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":976,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":977,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":978,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":979,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":980,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":981,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":982,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":983,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":984,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":985,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":986,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":987,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":988,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":989,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":990,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":991,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":992,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":993,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":994,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":995,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":996,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":997,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":998,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":999,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wpinrui":138,"ErnestCuong":124,"JunWei3112":117,"Preshita01":58,"dt-td":231,"-":353}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"TutorAid is a **desktop app for private tutors to match their students\u0027 contacts, optimized for use via a Command Line","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TutorAid","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"can get your student management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Preshita01"},"content":"1. Download the latest `tutoraid.jar` from [here](https://github.com/AY2122S1-CS2103T-W16-3/tp/releases).","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Preshita01"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your TutorAid.","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Preshita01"},"content":"   * **`add -s`** sn/John Does sp/81234567 pn/Mrs Doe pp/91234567` :","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"     Adds a student named `John Doe` to TutorAid, along with the student\u0027s contact number, parent\u0027s name and parent\u0027s contact number.","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Preshita01"},"content":"   * **`delete`**`3` : Deletes the 3rd student shown in the current list.","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Preshita01"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user and can contain spaces.","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"Preshita01"},"content":"e.g. in `add sn/STUDENT_NAME`, `STUDENT_NAME` is a parameter which can be used as add n/John Doe.","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Preshita01"},"content":"* Items in square brackets are optional.","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"Preshita01"},"content":"e.g `sn/STUDENT_NAME [sp/STUDENT_PHONE]` can be used as `sn/John Doe sp/91234567` or as `sn/John Doe`.","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Preshita01"},"content":"* Parameters can be in any order.","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"Preshita01"},"content":"e.g. if the command specifies `sn/STUDENT_NAME sp/STUDENT_PHONE`, `sp/STUDENT_PHONE sn/STUDENT_NAME` is also acceptable.","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Preshita01"},"content":"* If a parameter is expected only once in the command but if you specify it multiple times, only the last occurrence of the parameter will be taken.","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"Preshita01"},"content":"e.g. if you specify `p/92341234 p/86785678`, only `p/86785678` will be taken.","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Preshita01"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"Preshita01"},"content":"### Adding a student: `add`","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"Preshita01"},"content":"Adds a new student to TutorAid.","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Preshita01"},"content":"Format: `add -s sn/STUDENT_NAME [sp/STUDENT_PHONE] [pn/PARENT_NAME] [pp/PARENT_PHONE]`","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"Preshita01"},"content":"Examples:","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"Preshita01"},"content":"* `add -s sn/John Does sp/81234567 pn/Mrs Doe pp/91234567`","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"Preshita01"},"content":"The student\u0027s phone number, parent\u0027s name and parent\u0027s phone number are optional details for tutors to include.","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"JunWei3112"},"content":"### Listing all students : `list`","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"JunWei3112"},"content":"Shows a list of all students in TutorAid in the order that they were added.","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"Preshita01"},"content":"### Deleting a student : `delete`","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"Preshita01"},"content":"Deletes the specified student with the given student index from TutorAid.","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"Preshita01"},"content":"Format: `del -s STUDENT_INDEX`","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"Preshita01"},"content":"* Deletes the student at the specified STUDENT_INDEX.","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"Preshita01"},"content":"* The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"Preshita01"},"content":"* The index must be a positive integer 1,2,3, …​","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"Preshita01"},"content":"Example:","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"Preshita01"},"content":"* `del -s 2` deletes the 2nd student in TutorAid.","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"dt-td"},"content":"### Viewing a student : `view`","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"dt-td"},"content":"Displays the specified student’s name, phone number, progress and payment status, along with their parent’s name and phone number.","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"dt-td"},"content":"Format: `view STUDENT_INDEX`","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":110,"author":{"gitId":"dt-td"},"content":"* Display details of the student at the specified STUDENT_INDEX.","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"dt-td"},"content":"* The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"dt-td"},"content":"* `view 2` shows the details associated with the 2nd student","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"Preshita01"},"content":"Clears all entries from TutorAid.","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"Preshita01"},"content":"TutorAid data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":136,"author":{"gitId":"Preshita01"},"content":"TutorAid data are saved as a JSON file `[JAR file location]/data/tutoraid.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":139,"author":{"gitId":"Preshita01"},"content":"If your changes to the data file makes its format invalid, TutorAid will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":142,"author":{"gitId":"ErnestCuong"},"content":"### Adding progress for a student : `add -p`","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"ErnestCuong"},"content":"Adds a given string representing progress to a student with a given student index.","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"ErnestCuong"},"content":"Format: `add -p STUDENT_INDEX PROGRESS`","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"ErnestCuong"},"content":"* Adds `PROGRESS` for the student at the specified `STUDENT_INDEX`.","lastModifiedDate":"2021-09-21"},{"lineNumber":149,"author":{"gitId":"ErnestCuong"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-21"},{"lineNumber":150,"author":{"gitId":"ErnestCuong"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-21"},{"lineNumber":151,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":152,"author":{"gitId":"ErnestCuong"},"content":"Examples:","lastModifiedDate":"2021-09-21"},{"lineNumber":153,"author":{"gitId":"ErnestCuong"},"content":"* `list` followed by `add -p 2 completed homework` adds `completed homework` to the 2nd student in the list.","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":155,"author":{"gitId":"ErnestCuong"},"content":"### Deleting progress from a student : `del -p`","lastModifiedDate":"2021-09-21"},{"lineNumber":156,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":157,"author":{"gitId":"ErnestCuong"},"content":"Removes the string representing progress from the student with a given student index.","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":159,"author":{"gitId":"ErnestCuong"},"content":"Format: `del -p STUDENT_INDEX`","lastModifiedDate":"2021-09-21"},{"lineNumber":160,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":161,"author":{"gitId":"ErnestCuong"},"content":"* Deletes the `PROGRESS` for the student at the specified `STUDENT_INDEX`.","lastModifiedDate":"2021-09-21"},{"lineNumber":162,"author":{"gitId":"ErnestCuong"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-21"},{"lineNumber":163,"author":{"gitId":"ErnestCuong"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-21"},{"lineNumber":164,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":165,"author":{"gitId":"ErnestCuong"},"content":"Examples:","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"ErnestCuong"},"content":"* `list` followed by `del -p 2` deletes the progress of the 2nd student in the list.","lastModifiedDate":"2021-09-21"},{"lineNumber":167,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"wpinrui"},"content":"### Set payment made: `paid`","lastModifiedDate":"2021-09-20"},{"lineNumber":173,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":174,"author":{"gitId":"wpinrui"},"content":"Sets the payment status of the specified student to `paid` for the current month.","lastModifiedDate":"2021-09-20"},{"lineNumber":175,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":176,"author":{"gitId":"wpinrui"},"content":"Format: `paid STUDENT_INDEX`","lastModifiedDate":"2021-09-20"},{"lineNumber":177,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":178,"author":{"gitId":"wpinrui"},"content":"- Sets the payment status for the student at the specified `STUDENT_INDEX` as \"paid\" for the current month.","lastModifiedDate":"2021-09-20"},{"lineNumber":179,"author":{"gitId":"wpinrui"},"content":"- The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2021-09-20"},{"lineNumber":180,"author":{"gitId":"wpinrui"},"content":"- The index must be a **positive integer** 1, 2, 3, ...","lastModifiedDate":"2021-09-20"},{"lineNumber":181,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":182,"author":{"gitId":"wpinrui"},"content":"Example:","lastModifiedDate":"2021-09-20"},{"lineNumber":183,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":184,"author":{"gitId":"wpinrui"},"content":"- `paid 3` updates the 3rd student\u0027s payment status to \"paid\".","lastModifiedDate":"2021-09-20"},{"lineNumber":185,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":186,"author":{"gitId":"wpinrui"},"content":"### Unset payment made: `unpaid`","lastModifiedDate":"2021-09-20"},{"lineNumber":187,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":188,"author":{"gitId":"wpinrui"},"content":"Sets the payment status of the specified student to ‘unpaid’ for the current month.","lastModifiedDate":"2021-09-20"},{"lineNumber":189,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":190,"author":{"gitId":"wpinrui"},"content":"Format: `unpaid STUDENT_INDEX`","lastModifiedDate":"2021-09-20"},{"lineNumber":191,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":192,"author":{"gitId":"wpinrui"},"content":"- Sets the payment status for the student at the specified `STUDENT_INDEX` as \"unpaid\" for the current month.","lastModifiedDate":"2021-09-20"},{"lineNumber":193,"author":{"gitId":"wpinrui"},"content":"- The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2021-09-20"},{"lineNumber":194,"author":{"gitId":"wpinrui"},"content":"- The index must be a **positive integer** 1, 2, 3, …","lastModifiedDate":"2021-09-20"},{"lineNumber":195,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":196,"author":{"gitId":"wpinrui"},"content":"Examples:","lastModifiedDate":"2021-09-20"},{"lineNumber":197,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":198,"author":{"gitId":"wpinrui"},"content":"- `unpaid 3` updates the 3rd student\u0027s payment status to \"unpaid\".","lastModifiedDate":"2021-09-20"},{"lineNumber":199,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":200,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"Preshita01"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous TutorAid home folder.","lastModifiedDate":"2021-10-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"Preshita01"},"content":"**Add student** | `add -s sn/STUDENT_NAME [sp/STUDENT_PHONE] [pn/PARENT_NAME] [pp/PARENT_PHONE]…​` \u003cbr\u003e e.g., `add -s sn/John Does sp/81234567 pn/Mrs Doe pp/91234567`","lastModifiedDate":"2021-10-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"Preshita01"},"content":"**Delete student** | `del -s STUDENT_INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-10-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"wpinrui"},"content":"**Set payment made** | `paid STUDENT_INDEX`\u003cbr\u003ee.g., `paid 3`","lastModifiedDate":"2021-09-20"},{"lineNumber":219,"author":{"gitId":"wpinrui"},"content":"**Unset payment made** | `unpaid STUDENT_INDEX`\u003cbr\u003ee.g., `unpaid 3`","lastModifiedDate":"2021-09-20"},{"lineNumber":220,"author":{"gitId":"dt-td"},"content":"**Add Progress** | `add -p STUDENT_INDEX PROGRESS` \u003cbr\u003e e.g., `add -p 2 completed homework`","lastModifiedDate":"2021-09-28"},{"lineNumber":221,"author":{"gitId":"dt-td"},"content":"**Delete Progress** | `del -p STUDENT_INDEX` \u003cbr\u003e e.g., `del -p 2`","lastModifiedDate":"2021-09-28"},{"lineNumber":222,"author":{"gitId":"dt-td"},"content":"**View** | `view STUDENT_INDEX`\u003cbr\u003e e.g., `view 2`","lastModifiedDate":"2021-09-21"},{"lineNumber":223,"author":{"gitId":"dt-td"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"ErnestCuong":26,"wpinrui":30,"JunWei3112":2,"Preshita01":37,"dt-td":12,"-":116}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Preshita01"},"content":"    content: \"TutorAid\";","lastModifiedDate":"2021-09-20"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Preshita01":1,"-":294}},{"path":"docs/team/dt-td.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"title: Dickson\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"### Project: TutorAid","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"TutorAid is a desktop application used for helping tech-savvy private tutors, who have busy schedules / many students, to keep track of each students\u0027 details.","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"    * User Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"        * Added documentation for the feature `view` and `exit`","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"        * Target user profile, value proposition, user stories, use cases, non-functional requirements, glossary","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"dt-td":17}},{"path":"docs/team/ernestcuong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ErnestCuong"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"ErnestCuong"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"ErnestCuong"},"content":"title: Cuong\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"ErnestCuong"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"ErnestCuong"},"content":"### Project: TutorAid","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"ErnestCuong"},"content":"TutorAid is a desktop application used for helping tech-savvy private tutors, who have busy schedules / many students, to keep track of each students\u0027 details. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"ErnestCuong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"ErnestCuong"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"ErnestCuong"},"content":"  * User Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"ErnestCuong"},"content":"    * Added documentation for the features `add -p` and `del -p` [\\#72]()","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"ErnestCuong"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"ErnestCuong"},"content":"    * Target user profile, value proposition, user stories, use cases, non-functional requirements, glossary","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"ErnestCuong":17}},{"path":"docs/team/junwei3112.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JunWei3112"},"content":"---","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"layout: page","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"title: Yeo Jun Wei\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"---","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"### Project: TutorAid","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"TutorAid is a desktop application used for helping tech-savvy private tutors, who have busy schedules / many students, to keep track of each students\u0027 details.","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"  * User Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"    * Added documentation for the feature `list`","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"    * Target user profile, value proposition, user stories, use cases, non-functional requirements, glossary","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"JunWei3112":17}},{"path":"docs/team/preshita01.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Preshita01"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"layout: page","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"title: Preshita\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"### Project: TutorAid","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"TutorAid is a desktop application used for helping tech-savvy private tutors, who have busy schedules / many students, to keep track of each students\u0027 details. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"    * User Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"      * Added the documentation for the features `add` and `delete`","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"      * Added on to the target user profile, value proposition, user stories, use cases, non-functional requirements and glossary.","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":"    * README:","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"        * Added the overview and acknowledgement sections","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"Preshita01"},"content":"        * Added the image of TutorAid\u0027s GUI","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"Preshita01":19}},{"path":"docs/team/wpinrui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"layout: page","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"title: Ivan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"### Project: TutorAid","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"TutorAid is a desktop application used for helping tech-savvy private tutors, who have busy schedules / many students, to keep track of each students\u0027 details. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"  * User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"    * Added documentation for the features `paid` and `unpaid`","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"    * Target user profile, value proposition, user stories, use cases, non-functional requirements, glossary","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"wpinrui":17}},{"path":"src/main/java/tutoraid/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.FileUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"wpinrui":3,"-":61}},{"path":"src/main/java/tutoraid/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"wpinrui":1,"-":24}},{"path":"src/main/java/tutoraid/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Config;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Version;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.ConfigUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.StringUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.Logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.LogicManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.StudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"import tutoraid.storage.JsonTutorAidStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"import tutoraid.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"import tutoraid.storage.Storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"import tutoraid.storage.StorageManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"import tutoraid.storage.TutorAidStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"import tutoraid.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"import tutoraid.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"import tutoraid.ui.UiManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing StudentBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"        TutorAidStorage tutorAidStorage \u003d new JsonTutorAidStorage(userPrefs.getStudentBookFilePath());","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"        storage \u003d new StorageManager(tutorAidStorage, userPrefsStorage);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"        Optional\u003cReadOnlyStudentBook\u003e addressBookOptional;","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"wpinrui"},"content":"        ReadOnlyStudentBook initialData;","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"            addressBookOptional \u003d storage.readStudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"wpinrui"},"content":"                logger.info(\"Data file not found. Will be starting with a sample StudentBook\");","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"wpinrui"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleStudentBook);","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"wpinrui"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty StudentBook\");","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"wpinrui"},"content":"            initialData \u003d new StudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"wpinrui"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty StudentBook\");","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"wpinrui"},"content":"            initialData \u003d new StudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"wpinrui"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty StudentBook\");","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"wpinrui"},"content":"        logger.info(\"Starting StudentBook \" + MainApp.VERSION);","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":39,"-":145}},{"path":"src/main/java/tutoraid/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":1,"-":62}},{"path":"src/main/java/tutoraid/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":1,"-":78}},{"path":"src/main/java/tutoraid/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"    private static final String LOG_FILE \u003d \"tutoraid.log\";","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":2,"-":110}},{"path":"src/main/java/tutoraid/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"    public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%1$d students listed!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wpinrui":3,"-":10}},{"path":"src/main/java/tutoraid/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":1,"-":115}},{"path":"src/main/java/tutoraid/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.core.index;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"wpinrui":1,"-":53}},{"path":"src/main/java/tutoraid/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":1,"-":10}},{"path":"src/main/java/tutoraid/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wpinrui":1,"-":20}},{"path":"src/main/java/tutoraid/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.MainApp;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wpinrui":2,"-":40}},{"path":"src/main/java/tutoraid/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wpinrui":1,"-":34}},{"path":"src/main/java/tutoraid/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Config;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wpinrui":3,"-":20}},{"path":"src/main/java/tutoraid/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"ErnestCuong"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String, String[])},","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":1,"ErnestCuong":1,"-":81}},{"path":"src/main/java/tutoraid/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":3,"-":140}},{"path":"src/main/java/tutoraid/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":2,"-":66}},{"path":"src/main/java/tutoraid/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"     * Returns the StudentBook.","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"     * @see Model#getStudentBook()","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"    ReadOnlyStudentBook getStudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"    /** Returns an unmodifiable view of the filtered list of students */","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"     * Returns the user prefs\u0027 student book file path.","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"    Path getStudentBookFilePath();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wpinrui":16,"-":36}},{"path":"src/main/java/tutoraid/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.TutorAidParser;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"import tutoraid.storage.Storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"    private final TutorAidParser tutorAidParser;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"        tutorAidParser \u003d new TutorAidParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"        Command command \u003d tutorAidParser.parseCommand(commandText);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"            storage.saveStudentBook(model.getStudentBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"    public ReadOnlyStudentBook getStudentBook() {","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"        return model.getStudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"    public Path getStudentBookFilePath() {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"        return model.getStudentBookFilePath();","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wpinrui":22,"-":59}},{"path":"src/main/java/tutoraid/logic/commands/AddProgressCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"ErnestCuong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"ErnestCuong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Progress;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ErnestCuong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":" * Adds progress string to an exiting student in TutorAid. Updates the progress if one already exists.","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"ErnestCuong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ErnestCuong"},"content":"public class AddProgressCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ErnestCuong"},"content":"    public static final String COMMAND_WORD \u003d \"add -p\";","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"ErnestCuong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a progress for a student in TutorAid identified \"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"            + \"by the index number used in the last student listing. \"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"ErnestCuong"},"content":"            + \"Existing progress will be overwritten by the input.\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"ErnestCuong"},"content":"            + \"Parameters: STUDENT_INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"ErnestCuong"},"content":"            + \"PROGRESS\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"ErnestCuong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"ErnestCuong"},"content":"            + \"Finishes Prelims.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"ErnestCuong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added progress: %1$s\\nFor this student: %2$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"ErnestCuong"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"ErnestCuong"},"content":"    private final Progress progress;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"ErnestCuong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"ErnestCuong"},"content":"     * @param targetIndex of the student in the filtered student list to add progress","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"ErnestCuong"},"content":"     * @param progress Progress object to be added to the student","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"ErnestCuong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"ErnestCuong"},"content":"    public AddProgressCommand(Index targetIndex, Progress progress) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"ErnestCuong"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"ErnestCuong"},"content":"        this.progress \u003d progress;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"ErnestCuong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"ErnestCuong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"ErnestCuong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"ErnestCuong"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"ErnestCuong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"        Student studentToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Preshita01"},"content":"                studentToEdit.getStudentName(), studentToEdit.getStudentPhone(), studentToEdit.getParentName(),","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Preshita01"},"content":"                studentToEdit.getParentPhone(), this.progress, studentToEdit.getPaymentStatus());","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"ErnestCuong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, progress, studentToEdit));","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"ErnestCuong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"wpinrui":16,"ErnestCuong":45,"Preshita01":2}},{"path":"src/main/java/tutoraid/logic/commands/AddStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.parser.CliSyntax.PREFIX_PARENT_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.parser.CliSyntax.PREFIX_PARENT_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.parser.CliSyntax.PREFIX_STUDENT_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.parser.CliSyntax.PREFIX_STUDENT_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":" * Adds a student to TutorAid.","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"public class AddStudentCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"    public static final String COMMAND_WORD \u003d \"add -s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Preshita01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to TutorAid. \"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":22,"author":{"gitId":"Preshita01"},"content":"            + PREFIX_STUDENT_NAME + \"STUDENT NAME \"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Preshita01"},"content":"            + PREFIX_STUDENT_PHONE + \"STUDENT PHONE \"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Preshita01"},"content":"            + PREFIX_PARENT_NAME + \"PARENT NAME \"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Preshita01"},"content":"            + PREFIX_PARENT_PHONE + \"PARENT PHONE \"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"Preshita01"},"content":"            + PREFIX_STUDENT_NAME + \"John Doe \"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Preshita01"},"content":"            + PREFIX_STUDENT_PHONE + \"81234567 \"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Preshita01"},"content":"            + PREFIX_PARENT_NAME + \"Mrs Doe \"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Preshita01"},"content":"            + PREFIX_PARENT_PHONE + \"91234567 \";","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Preshita01"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in TutorAid\";","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"    private final Student toAdd;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"     * Creates an AddStudentCommand to add the specified {@code Student}","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"    public AddStudentCommand(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"        toAdd \u003d student;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Preshita01"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"Preshita01"},"content":"                || (other instanceof AddStudentCommand // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"Preshita01"},"content":"                \u0026\u0026 toAdd.equals(((AddStudentCommand) other).toAdd));","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wpinrui":15,"Preshita01":17,"-":31}},{"path":"src/main/java/tutoraid/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.StudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":" * Clears TutorAid entries.","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"TutorAid has been cleared!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"        model.setStudentBook(new StudentBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wpinrui":7,"-":17}},{"path":"src/main/java/tutoraid/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wpinrui":3,"-":17}},{"path":"src/main/java/tutoraid/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wpinrui":1,"-":70}},{"path":"src/main/java/tutoraid/logic/commands/DeleteProgressCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"ErnestCuong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"ErnestCuong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Progress;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"ErnestCuong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":" * Delete progress of an existing student in TutorAid.","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"ErnestCuong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ErnestCuong"},"content":"public class DeleteProgressCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ErnestCuong"},"content":"    public static final String COMMAND_WORD \u003d \"del -p\";","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"ErnestCuong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a progress from a student in TutorAid \"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"            + \"identified by the index number used in the last student listing.\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"ErnestCuong"},"content":"            + \"Parameters: STUDENT_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"ErnestCuong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"ErnestCuong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted progress: %1$s\\nOf this student: %2$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"ErnestCuong"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"ErnestCuong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"ErnestCuong"},"content":"     * @param targetIndex of the student in the filtered student list to delete progress","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"ErnestCuong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"ErnestCuong"},"content":"    public DeleteProgressCommand(Index targetIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"ErnestCuong"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"ErnestCuong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"ErnestCuong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"ErnestCuong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"ErnestCuong"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"ErnestCuong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"        Student studentToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"ErnestCuong"},"content":"        Progress deletedProgress \u003d studentToEdit.getProgress();","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Preshita01"},"content":"                studentToEdit.getStudentName(), studentToEdit.getStudentPhone(), studentToEdit.getParentName(),","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Preshita01"},"content":"                studentToEdit.getParentPhone(), new Progress(\"No Progress\"), studentToEdit.getPaymentStatus());","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"ErnestCuong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, deletedProgress, studentToEdit));","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"ErnestCuong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"wpinrui":16,"ErnestCuong":41,"Preshita01":2}},{"path":"src/main/java/tutoraid/logic/commands/DeleteStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":" * Deletes a student identified using its displayed index from the TutorAid.","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"public class DeleteStudentCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"    public static final String COMMAND_WORD \u003d \"del -s\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"            + \": Deletes the student identified by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Preshita01"},"content":"    public DeleteStudentCommand(Index targetIndex) {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"        Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"        model.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete));","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"Preshita01"},"content":"                || (other instanceof DeleteStudentCommand // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"Preshita01"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteStudentCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wpinrui":14,"Preshita01":5,"-":34}},{"path":"src/main/java/tutoraid/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting TutorAid as requested ...\";","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"wpinrui":3,"-":16}},{"path":"src/main/java/tutoraid/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wpinrui":2,"-":19}},{"path":"src/main/java/tutoraid/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":" * Lists all students in TutorAid to the user.","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"        model.viewList();","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wpinrui":6,"-":17}},{"path":"src/main/java/tutoraid/logic/commands/PaidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.PaymentStatus;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":" * Sets the payment status of the student identified using the displayed index in TutorAid, to","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":" * \u0027Paid for the current month\u0027.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"public class PaidCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"    public static final String COMMAND_WORD \u003d \"paid\";","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"            + \": Sets the payment status of the student identified by the index number used in the \"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"            + \"displayed student list, to \u0027Paid for the current month\u0027.\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"    public static final String MESSAGE_SET_TO_PAID_SUCCESS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"            \"Set payment status to \u0027Paid for the current month\u0027: %1$s\";","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"    public static final String MESSAGE_ALREADY_PAID \u003d \"This student has already paid for the current month.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"    public PaidCommand(Index targetIndex) {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"        Student studentToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"JunWei3112"},"content":"        if (studentToEdit.getPaymentStatus().hasPaid) {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"JunWei3112"},"content":"            throw new CommandException(MESSAGE_ALREADY_PAID);","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Preshita01"},"content":"                studentToEdit.getStudentName(), studentToEdit.getStudentPhone(), studentToEdit.getParentName(),","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Preshita01"},"content":"                studentToEdit.getParentPhone(), studentToEdit.getProgress(), new PaymentStatus(true));","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"JunWei3112"},"content":"        return new CommandResult(String.format(MESSAGE_SET_TO_PAID_SUCCESS, editedStudent));","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"JunWei3112"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"JunWei3112"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"JunWei3112"},"content":"                || (other instanceof PaidCommand // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"JunWei3112"},"content":"                \u0026\u0026 targetIndex.equals(((PaidCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"wpinrui":13,"JunWei3112":54,"Preshita01":2}},{"path":"src/main/java/tutoraid/logic/commands/UnpaidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.PaymentStatus;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":" * Sets the payment status of the student identified using the displayed index in TutorAid, to","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":" * \u0027Has not paid for the current month\u0027.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"public class UnpaidCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"    public static final String COMMAND_WORD \u003d \"unpaid\";","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"            + \": Sets the payment status of the student identified by the index number used in the \"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"            + \"displayed student list, to \u0027Has not paid for the current month\u0027.\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"    public static final String MESSAGE_SET_TO_UNPAID_SUCCESS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"            \"Set payment status to \u0027Has not paid for the current month\u0027: %1$s\";","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"    public static final String MESSAGE_ALREADY_UNPAID \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"            \"This student has still not paid for the current month.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"    public UnpaidCommand(Index targetIndex) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"JunWei3112"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"JunWei3112"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"        Student studentToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"JunWei3112"},"content":"        if (!studentToEdit.getPaymentStatus().hasPaid) {","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"JunWei3112"},"content":"            throw new CommandException(MESSAGE_ALREADY_UNPAID);","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Preshita01"},"content":"                studentToEdit.getStudentName(), studentToEdit.getStudentPhone(), studentToEdit.getParentName(),","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Preshita01"},"content":"                studentToEdit.getParentPhone(), studentToEdit.getProgress(), new PaymentStatus(false));","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"JunWei3112"},"content":"        return new CommandResult(String.format(MESSAGE_SET_TO_UNPAID_SUCCESS, editedStudent));","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"JunWei3112"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"JunWei3112"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"JunWei3112"},"content":"                || (other instanceof UnpaidCommand // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"JunWei3112"},"content":"                \u0026\u0026 targetIndex.equals(((UnpaidCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"wpinrui":13,"JunWei3112":55,"Preshita01":2}},{"path":"src/main/java/tutoraid/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":" * Lists all students in TutorAid to the user.","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"            + \": Shows the student identified by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    public static final String MESSAGE_VIEW_STUDENT_SUCCESS \u003d \"Viewing requested student\";","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"dt-td"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"        Student studentToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"        model.viewStudent(studentToView);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"        return new CommandResult(MESSAGE_VIEW_STUDENT_SUCCESS);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"dt-td"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"dt-td"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"dt-td"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"dt-td"},"content":"                \u0026\u0026 targetIndex.equals(((ViewCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"wpinrui":14,"dt-td":38}},{"path":"src/main/java/tutoraid/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"wpinrui":1,"-":16}},{"path":"src/main/java/tutoraid/logic/parser/AddProgressCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"ErnestCuong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.AddProgressCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Progress;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"ErnestCuong"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"ErnestCuong"},"content":" * Parses input arguments and creates a new PaidCommand object","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"ErnestCuong"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"ErnestCuong"},"content":"public class AddProgressCommandParser implements Parser\u003cAddProgressCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"ErnestCuong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"ErnestCuong"},"content":"     * Parses the given {@code String} of arguments in the context of PaidCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"ErnestCuong"},"content":"     * and returns a PaidCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"ErnestCuong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"ErnestCuong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"ErnestCuong"},"content":"    public AddProgressCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"ErnestCuong"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"ErnestCuong"},"content":"            args \u003d args.trim() + \" \";","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"ErnestCuong"},"content":"            String [] arguments \u003d args.split(\" \", 2);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"ErnestCuong"},"content":"            Index index \u003d ParserUtil.parseIndex(arguments[0]);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"ErnestCuong"},"content":"            Progress progress \u003d ParserUtil.parseProgress(arguments[1]);","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"ErnestCuong"},"content":"            return new AddProgressCommand(index, progress);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"ErnestCuong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"ErnestCuong"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddProgressCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"ErnestCuong"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"ErnestCuong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"ErnestCuong"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"ErnestCuong"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"ErnestCuong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"ErnestCuong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"ErnestCuong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"ErnestCuong"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"wpinrui":8,"ErnestCuong":37}},{"path":"src/main/java/tutoraid/logic/parser/AddStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.ParentName;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.PaymentStatus;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Progress;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.StudentName;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":" * Parses input arguments and creates a new AddStudentCommand object","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"Preshita01"},"content":"public class AddStudentCommandParser implements Parser\u003cAddStudentCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"Preshita01"},"content":"     * Parses the given {@code String} of arguments in the context of the AddStudentCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"Preshita01"},"content":"    public AddStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_STUDENT_NAME, CliSyntax.PREFIX_STUDENT_PHONE,","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"                        CliSyntax.PREFIX_PARENT_NAME, CliSyntax.PREFIX_PARENT_PHONE);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"Preshita01"},"content":"        // Student name is a required fields (student phone, parent name and parent phone are optional)","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_STUDENT_NAME)","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"        StudentName studentName \u003d ParserUtil.parseStudentName(","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"                argMultimap.getValue(CliSyntax.PREFIX_STUDENT_NAME).get());","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"        Phone studentPhone \u003d ParserUtil.parsePhone(argMultimap.getValue(CliSyntax.PREFIX_STUDENT_PHONE).get());","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"        ParentName parentName \u003d ParserUtil.parseParentName(argMultimap.getValue(CliSyntax.PREFIX_PARENT_NAME).get());","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"        Phone parentPhone \u003d ParserUtil.parsePhone(argMultimap.getValue(CliSyntax.PREFIX_PARENT_PHONE).get());","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Preshita01"},"content":"        Progress progress \u003d new Progress(\"No Progress\");","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Preshita01"},"content":"        PaymentStatus paymentStatus \u003d new PaymentStatus(false);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"        Student student \u003d new Student(studentName, studentPhone, parentName, parentPhone, progress, paymentStatus);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"        return new AddStudentCommand(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"wpinrui":23,"Preshita01":7,"-":29}},{"path":"src/main/java/tutoraid/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"Preshita01"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Preshita01"},"content":"            return Optional.of(\"\");","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"wpinrui":1,"Preshita01":3,"-":59}},{"path":"src/main/java/tutoraid/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"wpinrui":1,"-":147}},{"path":"src/main/java/tutoraid/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"    public static final Prefix PREFIX_STUDENT_NAME \u003d new Prefix(\"sn/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"    public static final Prefix PREFIX_STUDENT_PHONE \u003d new Prefix(\"sp/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"    public static final Prefix PREFIX_PARENT_NAME \u003d new Prefix(\"pn/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"    public static final Prefix PREFIX_PARENT_PHONE \u003d new Prefix(\"pp/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"wpinrui":1,"Preshita01":4,"-":8}},{"path":"src/main/java/tutoraid/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteStudentCommand\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"Preshita01"},"content":"    public DeleteStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"Preshita01"},"content":"            return new DeleteStudentCommand(index);","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteStudentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"wpinrui":7,"Preshita01":3,"-":19}},{"path":"src/main/java/tutoraid/logic/parser/DeleteProgressCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.DeleteProgressCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"ErnestCuong"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"ErnestCuong"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"ErnestCuong"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"ErnestCuong"},"content":"public class DeleteProgressCommandParser implements Parser\u003cDeleteProgressCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"ErnestCuong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"ErnestCuong"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"ErnestCuong"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"ErnestCuong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"ErnestCuong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"ErnestCuong"},"content":"    public DeleteProgressCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"ErnestCuong"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"ErnestCuong"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"ErnestCuong"},"content":"            return new DeleteProgressCommand(index);","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"ErnestCuong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"ErnestCuong"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteProgressCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"ErnestCuong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"ErnestCuong"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"wpinrui":6,"ErnestCuong":22}},{"path":"src/main/java/tutoraid/logic/parser/PaidCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.PaidCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":" * Parses input arguments and creates a new PaidCommand object","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"public class PaidCommandParser implements Parser\u003cPaidCommand\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"     * Parses the given {@code String} of arguments in the context of PaidCommand","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"     * and returns a PaidCommand object for execution.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"    public PaidCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"            return new PaidCommand(index);","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, PaidCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"wpinrui":7,"JunWei3112":21}},{"path":"src/main/java/tutoraid/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"wpinrui":3,"-":13}},{"path":"src/main/java/tutoraid/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.StringUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.ParentName;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Progress;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.StudentName;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"Preshita01"},"content":"     * Parses a {@code String name} into a {@code StudentName}.","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"Preshita01"},"content":"    public static StudentName parseStudentName(String name) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"Preshita01"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Preshita01"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Preshita01"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Preshita01"},"content":"        return new StudentName(trimmedName);","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Preshita01"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Preshita01"},"content":"     * Parses a {@code String name} into a {@code ParentName}.","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"Preshita01"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Preshita01"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Preshita01"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Preshita01"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Preshita01"},"content":"    public static ParentName parseParentName(String name) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"Preshita01"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Preshita01"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Preshita01"},"content":"            return new ParentName(\"\");","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"Preshita01"},"content":"        return new ParentName(trimmedName);","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"Preshita01"},"content":"        if (phone.equals(\"\")) {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"Preshita01"},"content":"            return new Phone(\"\");","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"ErnestCuong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"ErnestCuong"},"content":"     * Parses a {@code String progress} into a {@code Progress}.","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"ErnestCuong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"ErnestCuong"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"ErnestCuong"},"content":"     * @throws ParseException if the given {@code progress} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"ErnestCuong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"ErnestCuong"},"content":"    public static Progress parseProgress(String progress) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"ErnestCuong"},"content":"        requireNonNull(progress);","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"ErnestCuong"},"content":"        String trimmedProgress \u003d progress.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"ErnestCuong"},"content":"        if (!Progress.isValidProgress(trimmedProgress)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"ErnestCuong"},"content":"            throw new ParseException(Progress.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"ErnestCuong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"ErnestCuong"},"content":"        return new Progress(trimmedProgress);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"wpinrui":9,"ErnestCuong":15,"Preshita01":26,"-":51}},{"path":"src/main/java/tutoraid/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"wpinrui":1,"-":38}},{"path":"src/main/java/tutoraid/logic/parser/TutorAidParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.AddProgressCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.DeleteProgressCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.ListCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.PaidCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.UnpaidCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"public class TutorAidParser {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Preshita01"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Preshita01"},"content":"            Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"Preshita01"},"content":"        final Matcher matcher;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Preshita01"},"content":"        final String commandWord;","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"Preshita01"},"content":"        final String arguments;","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Preshita01"},"content":"        if (userInput.contains(\"-s\")) {","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Preshita01"},"content":"            String[] extracts \u003d userInput.split(\"-s\", 2);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Preshita01"},"content":"            commandWord \u003d extracts[0] + \"-s\";","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"Preshita01"},"content":"            arguments \u003d extracts[1];","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"Preshita01"},"content":"        } else if (userInput.contains(\"-p\")) {","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Preshita01"},"content":"            String[] extracts \u003d userInput.split(\"-p\", 2);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Preshita01"},"content":"            commandWord \u003d extracts[0] + \"-p\";","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Preshita01"},"content":"            arguments \u003d extracts[1];","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Preshita01"},"content":"        } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Preshita01"},"content":"            matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"                throw new ParseException(String.format(","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"                        Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"Preshita01"},"content":"            commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Preshita01"},"content":"            arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"Preshita01"},"content":"        case AddStudentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"Preshita01"},"content":"            return new AddStudentCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"Preshita01"},"content":"        case DeleteStudentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":81,"author":{"gitId":"ErnestCuong"},"content":"        case AddProgressCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"ErnestCuong"},"content":"            return new AddProgressCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"ErnestCuong"},"content":"        case DeleteProgressCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"ErnestCuong"},"content":"            return new DeleteProgressCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"JunWei3112"},"content":"        case PaidCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"JunWei3112"},"content":"            return new PaidCommandParser().parse(arguments);","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"JunWei3112"},"content":"        case UnpaidCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"JunWei3112"},"content":"            return new UnpaidCommandParser().parse(arguments);","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"dt-td"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"dt-td"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"wpinrui"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wpinrui":19,"ErnestCuong":6,"JunWei3112":6,"Preshita01":22,"dt-td":3,"-":45}},{"path":"src/main/java/tutoraid/logic/parser/UnpaidCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.UnpaidCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":" * Parses input arguments and creates a new UnpaidCommand object","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"public class UnpaidCommandParser implements Parser\u003cUnpaidCommand\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"     * Parses the given {@code String} of arguments in the context of UnpaidCommand","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"     * and returns a UnpaidCommand object for execution.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"    public UnpaidCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"            return new UnpaidCommand(index);","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, UnpaidCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"wpinrui":7,"JunWei3112":21}},{"path":"src/main/java/tutoraid/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"            throw new ParseException(","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"wpinrui":7,"dt-td":22}},{"path":"src/main/java/tutoraid/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"wpinrui":2,"-":15}},{"path":"src/main/java/tutoraid/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"     * Returns the user prefs\u0027 student book file path.","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"    Path getStudentBookFilePath();","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"     * Sets the user prefs\u0027 student book file path.","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"    void setStudentBookFilePath(Path studentBookFilePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"     * Replaces student book data with the data in {@code studentBook}.","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"    void setStudentBook(ReadOnlyStudentBook studentBook);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"    /** Returns the StudentBook */","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"    ReadOnlyStudentBook getStudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the student book.","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"     * Deletes the given student.","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"     * The student must exist in the student book.","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"     * Adds the given student.","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"     * {@code student} must not already exist in the student book.","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"    void addStudent(Student student);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"     * {@code target} must exist in the student book.","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"     * student book.","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"     * Views the given student.","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"wpinrui"},"content":"     * {@code student} must exist in the student book.","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"wpinrui"},"content":"    void viewStudent(Student student);","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"wpinrui"},"content":"     * Views the list of people in the database.","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"wpinrui"},"content":"    void viewList();","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"wpinrui"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"wpinrui"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"wpinrui"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"wpinrui"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wpinrui":40,"dt-td":3,"-":59}},{"path":"src/main/java/tutoraid/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.ui.UiManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":" * Represents the in-memory model of the student book data.","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    private final StudentBook studentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"     * Initializes a ModelManager with the given studentBook and userPrefs.","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"    public ModelManager(ReadOnlyStudentBook studentBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"        CollectionUtil.requireAllNonNull(studentBook, userPrefs);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"        logger.fine(\"Initializing with student book: \" + studentBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"        this.studentBook \u003d new StudentBook(studentBook);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.studentBook.getStudentList());","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"        this(new StudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"    public Path getStudentBookFilePath() {","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"        return userPrefs.getStudentBookFilePath();","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"    public void setStudentBookFilePath(Path studentBookFilePath) {","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"        requireNonNull(studentBookFilePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"        userPrefs.setStudentBookFilePath(studentBookFilePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StudentBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"wpinrui"},"content":"    public void setStudentBook(ReadOnlyStudentBook studentBook) {","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"wpinrui"},"content":"        this.studentBook.resetData(studentBook);","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"wpinrui"},"content":"    public ReadOnlyStudentBook getStudentBook() {","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"wpinrui"},"content":"        return studentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"wpinrui"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"wpinrui"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"wpinrui"},"content":"        return studentBook.hasStudent(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"wpinrui"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"wpinrui"},"content":"        studentBook.removeStudent(target);","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"wpinrui"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"wpinrui"},"content":"        studentBook.addStudent(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"wpinrui"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"wpinrui"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"wpinrui"},"content":"        CollectionUtil.requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"wpinrui"},"content":"        studentBook.setStudent(target, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"wpinrui"},"content":"    public void viewStudent(Student targetStudent) {","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"wpinrui"},"content":"        requireNonNull(targetStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"wpinrui"},"content":"        filteredStudents.setPredicate(student -\u003e student.equals(targetStudent));","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"dt-td"},"content":"        UiManager.showViewWindow();","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"wpinrui"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"wpinrui"},"content":"    public void viewList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"wpinrui"},"content":"        UiManager.hideViewWindow();","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"wpinrui"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"wpinrui"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"wpinrui"},"content":"     * {@code versionedStudentBook}","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":136,"author":{"gitId":"wpinrui"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"wpinrui"},"content":"        return filteredStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":141,"author":{"gitId":"wpinrui"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"wpinrui"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"wpinrui"},"content":"        return studentBook.equals(other.studentBook)","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"wpinrui"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":55,"dt-td":4,"-":106}},{"path":"src/main/java/tutoraid/model/ReadOnlyStudentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":" * Unmodifiable view of a student book","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"public interface ReadOnlyStudentBook {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":7,"-":10}},{"path":"src/main/java/tutoraid/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"    Path getStudentBookFilePath();","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"wpinrui":3,"-":13}},{"path":"src/main/java/tutoraid/model/StudentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.UniqueStudentList;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":" * Wraps all data at the student-book level","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"public class StudentBook implements ReadOnlyStudentBook {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"    public StudentBook() {}","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"     * Creates an StudentBook using the Students in the {@code toBeCopied}","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"    public StudentBook(ReadOnlyStudentBook toBeCopied) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"     * Resets the existing data of this {@code StudentBook} with {@code newData}.","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"    public void resetData(ReadOnlyStudentBook newData) {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"    //// student-level operations","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the student book.","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"        return students.contains(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"     * Adds a student to the student book.","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"     * The student must not already exist in the student book.","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"        students.add(p);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"wpinrui"},"content":"     * {@code target} must exist in the student book.","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"wpinrui"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"     * student book.","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"wpinrui"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"wpinrui"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"wpinrui"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"wpinrui"},"content":"     * Removes {@code key} from this {@code StudentBook}.","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"wpinrui"},"content":"     * {@code key} must exist in the student book.","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"wpinrui"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"wpinrui"},"content":"        students.remove(key);","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"wpinrui"},"content":"        return students.asUnmodifiableObservableList().size() + \" students\";","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"wpinrui"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"wpinrui"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"wpinrui"},"content":"                || (other instanceof StudentBook // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"wpinrui"},"content":"                \u0026\u0026 students.equals(((StudentBook) other).students));","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"wpinrui"},"content":"        return students.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":44,"-":77}},{"path":"src/main/java/tutoraid/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    private Path studentBookFilePath \u003d Paths.get(\"data\" , \"tutoraid.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"        setStudentBookFilePath(newUserPrefs.getStudentBookFilePath());","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"    public Path getStudentBookFilePath() {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"        return studentBookFilePath;","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"    public void setStudentBookFilePath(Path studentBookFilePath) {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"        requireNonNull(studentBookFilePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"        this.studentBookFilePath \u003d studentBookFilePath;","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"                \u0026\u0026 studentBookFilePath.equals(o.studentBookFilePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"        return Objects.hash(guiSettings, studentBookFilePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"wpinrui"},"content":"        sb.append(\"\\nLocal data file location : \" + studentBookFilePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":12,"-":75}},{"path":"src/main/java/tutoraid/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":" * Represents a Student\u0027s name in the student book.","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"Preshita01"},"content":"        if (fullName.equals(\"\")) {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"Preshita01"},"content":"            return \"No number\";","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wpinrui":3,"Preshita01":3,"-":54}},{"path":"src/main/java/tutoraid/model/student/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.StringUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(student.getStudentName().fullName, keyword));","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wpinrui":6,"Preshita01":2,"-":25}},{"path":"src/main/java/tutoraid/model/student/ParentName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.AppUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"public class ParentName extends Name {","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"     * Constructs a {@code ParentName}.","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"    public ParentName(String name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"        super(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"        if (!name.equals(\"\")) {","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"            AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"wpinrui":4,"Preshita01":13}},{"path":"src/main/java/tutoraid/model/student/PaymentStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":" * Represents a student\u0027s payment status in TutorAid.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"JunWei3112"},"content":"public class PaymentStatus {","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"    public final boolean hasPaid;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"     * Constructs a {@code PaymentStatus}.","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"     * @param hasPaid Payment status for the current month","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"    public PaymentStatus(boolean hasPaid) {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"        this.hasPaid \u003d hasPaid;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"        if (hasPaid) {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"            return \"Paid for the current month\";","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"        } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"            return \"Has not paid for the current month\";","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"                || (other instanceof PaymentStatus // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"                \u0026\u0026 hasPaid \u003d\u003d ((PaymentStatus) other).hasPaid); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"        return hasPaid ? 1 : 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"wpinrui":1,"JunWei3112":38}},{"path":"src/main/java/tutoraid/model/student/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.AppUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":" * Represents a Student\u0027s phone number in the student book.","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"Preshita01"},"content":"        if (!phone.equals(\"\")) {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"            AppUtil.checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"Preshita01"},"content":"        if (value.equals(\"\")) {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Preshita01"},"content":"            return \"No number\";","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wpinrui":5,"Preshita01":4,"-":48}},{"path":"src/main/java/tutoraid/model/student/Progress.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"ErnestCuong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"ErnestCuong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"ErnestCuong"},"content":" * Represents a student\u0027s progress in TutorAid.","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"ErnestCuong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"ErnestCuong"},"content":"public class Progress {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"ErnestCuong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"ErnestCuong"},"content":"            \"Progress can be anything\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"ErnestCuong"},"content":"    public final String progress;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ErnestCuong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"ErnestCuong"},"content":"     * Constructs a {@code Progress}.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"ErnestCuong"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ErnestCuong"},"content":"     * @param progress Progress of the student;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"ErnestCuong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ErnestCuong"},"content":"    public Progress(String progress) {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"ErnestCuong"},"content":"        requireNonNull(progress);","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"ErnestCuong"},"content":"        this.progress \u003d progress;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"ErnestCuong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"ErnestCuong"},"content":"     * Returns true if a given string is a valid progress.","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"ErnestCuong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"ErnestCuong"},"content":"    public static boolean isValidProgress(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"ErnestCuong"},"content":"        return !test.trim().equals(\"\");","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"ErnestCuong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"ErnestCuong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"ErnestCuong"},"content":"        return progress;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"ErnestCuong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"ErnestCuong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"ErnestCuong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"ErnestCuong"},"content":"                || (other instanceof Progress // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"ErnestCuong"},"content":"                \u0026\u0026 this.progress.equals(((Progress) other).progress)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"ErnestCuong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"ErnestCuong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"ErnestCuong"},"content":"        return progress.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"ErnestCuong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"wpinrui":1,"ErnestCuong":47}},{"path":"src/main/java/tutoraid/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":" * Represents a Student in the TutorAid.","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"public class Student {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"    private final StudentName studentName;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"    private final Phone studentPhone;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"    private final ParentName parentName;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":"    private final Phone parentPhone;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"ErnestCuong"},"content":"    private final Progress progress;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"    private final PaymentStatus paymentStatus;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    public Student(StudentName studentName, Phone studentPhone, ParentName parentName, Phone parentPhone,","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Preshita01"},"content":"                   Progress progress, PaymentStatus paymentStatus) {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"        CollectionUtil.requireAllNonNull(studentName, studentPhone, parentName, parentPhone);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Preshita01"},"content":"        this.studentName \u003d studentName;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Preshita01"},"content":"        this.studentPhone \u003d studentPhone;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Preshita01"},"content":"        this.parentName \u003d parentName;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"        this.parentPhone \u003d parentPhone;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ErnestCuong"},"content":"        this.progress \u003d progress;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"JunWei3112"},"content":"        this.paymentStatus \u003d paymentStatus;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"Preshita01"},"content":"    public StudentName getStudentName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Preshita01"},"content":"        return studentName;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"Preshita01"},"content":"    public Phone getStudentPhone() {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Preshita01"},"content":"        return studentPhone;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"Preshita01"},"content":"    public ParentName getParentName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Preshita01"},"content":"        return parentName;","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"Preshita01"},"content":"    public Phone getParentPhone() {","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Preshita01"},"content":"        return parentPhone;","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"ErnestCuong"},"content":"    public Progress getProgress() {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"ErnestCuong"},"content":"        return progress;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"JunWei3112"},"content":"    public PaymentStatus getPaymentStatus() {","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"JunWei3112"},"content":"        return paymentStatus;","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"     * Returns true if both students have the same name.","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"                \u0026\u0026 otherStudent.getStudentName().equals(getStudentName());","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"     * Returns true if both students have the same identity and data fields.","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"     * This defines a stronger notion of equality between two students.","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"wpinrui"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"wpinrui"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"wpinrui"},"content":"        return otherStudent.getStudentName().equals(getStudentName())","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"wpinrui"},"content":"                \u0026\u0026 otherStudent.getStudentPhone().equals(getStudentPhone())","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"wpinrui"},"content":"                \u0026\u0026 otherStudent.getParentName().equals(getParentName())","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"wpinrui"},"content":"                \u0026\u0026 otherStudent.getParentPhone().equals(getParentPhone())","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"wpinrui"},"content":"                \u0026\u0026 otherStudent.getProgress().equals(getProgress())","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"wpinrui"},"content":"                \u0026\u0026 otherStudent.getPaymentStatus().equals(getPaymentStatus());","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"Preshita01"},"content":"        return Objects.hash(studentName, studentPhone, parentName, parentPhone, progress, paymentStatus);","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"Preshita01"},"content":"        builder.append(getStudentName());","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"Preshita01"},"content":"        if (studentPhone !\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"Preshita01"},"content":"            builder.append(\"; Student\u0027s phone: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"Preshita01"},"content":"                    .append(getStudentPhone());","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":113,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"Preshita01"},"content":"        if (parentName !\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"Preshita01"},"content":"            builder.append(\"; Parent\u0027s name: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"Preshita01"},"content":"                    .append(getParentName());","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"Preshita01"},"content":"        if (parentPhone !\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"Preshita01"},"content":"            builder.append(\"; Parent\u0027s phone: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"Preshita01"},"content":"                    .append(getParentPhone());","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"Preshita01"},"content":"        builder.append(\"; Progress: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"ErnestCuong"},"content":"                .append(getProgress())","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"JunWei3112"},"content":"                .append(\"; Payment Status: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"JunWei3112"},"content":"                .append(getPaymentStatus());","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wpinrui":23,"ErnestCuong":7,"JunWei3112":8,"Preshita01":37,"-":58}},{"path":"src/main/java/tutoraid/model/student/StudentName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.AppUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"public class StudentName extends Name {","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"     * Constructs a {@code StudentName}.","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"    public StudentName(String name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"        super(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"wpinrui":4,"Preshita01":11}},{"path":"src/main/java/tutoraid/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":" * A student is considered unique by comparing using {@code Student#isSameStudent(Student)}. As such, adding and","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":" * updating of students uses Student#isSameStudent(Student) for equality to ensure that the student being added or","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":" * updated is unique in terms of identity in the UniqueStudentList. However, the removal of a student uses","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":" * Student#equals(Object) to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":" *","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"     * Adds a student to the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"        CollectionUtil.requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"        if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"     * The student must exist in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"wpinrui"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"wpinrui"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"wpinrui"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"wpinrui"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"wpinrui"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"wpinrui"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"wpinrui"},"content":"        CollectionUtil.requireAllNonNull(students);","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"wpinrui"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"wpinrui"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"wpinrui"},"content":"        internalList.setAll(students);","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"wpinrui"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"wpinrui"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"wpinrui"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"wpinrui"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"wpinrui"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"wpinrui"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"wpinrui"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"wpinrui"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"wpinrui"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"wpinrui"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"wpinrui"},"content":"                \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"wpinrui"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"wpinrui"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"wpinrui"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"wpinrui"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"wpinrui"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"wpinrui"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"wpinrui"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"wpinrui"},"content":"                if (students.get(i).isSameStudent(students.get(j))) {","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"wpinrui"},"content":"                    return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"wpinrui"},"content":"                }","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"wpinrui"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"wpinrui"},"content":"        return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"wpinrui":137}},{"path":"src/main/java/tutoraid/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":" * Signals that the operation will result in duplicate Students (Students are considered duplicates if they have the","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":" * same identity).","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"        super(\"Operation would result in duplicate students\");","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"wpinrui":11}},{"path":"src/main/java/tutoraid/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"wpinrui":6}},{"path":"src/main/java/tutoraid/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.StudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.ParentName;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.PaymentStatus;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Progress;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.StudentName;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":" * Contains utility methods for populating {@code StudentBook} with sample data.","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"ErnestCuong"},"content":"    public static final Progress DEFAULT_PROGRESS \u003d new Progress(\"No Progress\");","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"    public static final PaymentStatus DEFAULT_PAYMENT_STATUS \u003d new PaymentStatus(false);","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"        return new Student[] {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Preshita01"},"content":"            // All details available","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"            new Student(new StudentName(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Preshita01"},"content":"                    new ParentName(\"Mr Yeoh\"), new Phone(\"93726483\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Preshita01"},"content":"                    DEFAULT_PROGRESS, DEFAULT_PAYMENT_STATUS),","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"            new Student(new StudentName(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Preshita01"},"content":"                    new ParentName(\"Mrs Yu\"), new Phone(\"83548274\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"Preshita01"},"content":"                    DEFAULT_PROGRESS, DEFAULT_PAYMENT_STATUS),","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Preshita01"},"content":"            // Parent\u0027s details unavailable","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"            new Student(new StudentName(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"                    new ParentName(\"\"), new Phone(\"\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"Preshita01"},"content":"                    DEFAULT_PROGRESS, DEFAULT_PAYMENT_STATUS),","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Preshita01"},"content":"            // Phone details unavailable","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"            new Student(new StudentName(\"David Li\"), new Phone(\"\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Preshita01"},"content":"                    new ParentName(\"Mr Li\"), new Phone(\"\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Preshita01"},"content":"                    DEFAULT_PROGRESS, DEFAULT_PAYMENT_STATUS),","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"Preshita01"},"content":"            // Phone and parent\u0027s details unavailable","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"            new Student(new StudentName(\"Irfan Ibrahim\"), new Phone(\"\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Preshita01"},"content":"                    new ParentName(\"\"), new Phone(\"\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Preshita01"},"content":"                    DEFAULT_PROGRESS, DEFAULT_PAYMENT_STATUS),","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Preshita01"},"content":"            // Student phone unavailable","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"            new Student(new StudentName(\"Roy Balakrishnan\"), new Phone(\"\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Preshita01"},"content":"                    new ParentName(\"Mrs Balakrishnan\"), new Phone(\"93628676\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Preshita01"},"content":"                    DEFAULT_PROGRESS, DEFAULT_PAYMENT_STATUS)","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"    public static ReadOnlyStudentBook getSampleStudentBook() {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"        StudentBook sampleAb \u003d new StudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"wpinrui":23,"ErnestCuong":3,"JunWei3112":1,"Preshita01":17,"-":13}},{"path":"src/main/java/tutoraid/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.ParentName;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.PaymentStatus;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Progress;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.StudentName;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Preshita01"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Preshita01"},"content":"    private final String studentName;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Preshita01"},"content":"    private final String studentPhone;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Preshita01"},"content":"    private final String parentName;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Preshita01"},"content":"    private final String parentPhone;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ErnestCuong"},"content":"    private final String progress;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"    private final boolean hasPaid;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"    public JsonAdaptedStudent(","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Preshita01"},"content":"            @JsonProperty(\"studentName\") String studentName, @JsonProperty(\"studentPhone\") String studentPhone,","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Preshita01"},"content":"            @JsonProperty(\"parentName\") String parentName, @JsonProperty(\"parentPhone\") String parentPhone,","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Preshita01"},"content":"            @JsonProperty(\"progress\") String progress, @JsonProperty(\"paymentStatus\") boolean hasPaid) {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Preshita01"},"content":"        this.studentName \u003d studentName;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Preshita01"},"content":"        this.studentPhone \u003d studentPhone;","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Preshita01"},"content":"        this.parentName \u003d parentName;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Preshita01"},"content":"        this.parentPhone \u003d parentPhone;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ErnestCuong"},"content":"        this.progress \u003d progress;","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"        this.hasPaid \u003d hasPaid;","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Preshita01"},"content":"        studentName \u003d source.getStudentName().fullName;","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Preshita01"},"content":"        studentPhone \u003d source.getStudentPhone().value;","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Preshita01"},"content":"        parentName \u003d source.getParentName().fullName;","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Preshita01"},"content":"        parentPhone \u003d source.getParentPhone().value;","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"ErnestCuong"},"content":"        progress \u003d source.getProgress().progress;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"JunWei3112"},"content":"        hasPaid \u003d source.getPaymentStatus().hasPaid;","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Preshita01"},"content":"        if (studentName \u003d\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Preshita01"},"content":"        if (!Name.isValidName(studentName)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Preshita01"},"content":"        final StudentName modelStudentName \u003d new StudentName(studentName);","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Preshita01"},"content":"        if (!studentPhone.equals(\"\") \u0026\u0026 !Phone.isValidPhone(studentPhone)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"Preshita01"},"content":"        final Phone modelStudentPhone \u003d new Phone(studentPhone);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"Preshita01"},"content":"        if (!parentName.equals(\"\") \u0026\u0026 !Name.isValidName(parentName)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"Preshita01"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"Preshita01"},"content":"        final ParentName modelParentName \u003d new ParentName(parentName);","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"Preshita01"},"content":"        if (!parentPhone.equals(\"\") \u0026\u0026 !Phone.isValidPhone(parentPhone)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"Preshita01"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"Preshita01"},"content":"        final Phone modelParentPhone \u003d new Phone(parentPhone);","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"ErnestCuong"},"content":"        if (progress \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"ErnestCuong"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"ErnestCuong"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Progress.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"ErnestCuong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"ErnestCuong"},"content":"        if (!Progress.isValidProgress(progress)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"ErnestCuong"},"content":"            throw new IllegalValueException(Progress.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"ErnestCuong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"ErnestCuong"},"content":"        final Progress modelProgress \u003d new Progress(progress);","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"JunWei3112"},"content":"        final PaymentStatus modelPaymentStatus \u003d new PaymentStatus(hasPaid);","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"wpinrui"},"content":"        return new Student(modelStudentName, modelStudentPhone, modelParentName, modelParentPhone,","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"Preshita01"},"content":"                modelProgress, modelPaymentStatus);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wpinrui":19,"ErnestCuong":12,"JunWei3112":5,"Preshita01":29,"-":37}},{"path":"src/main/java/tutoraid/storage/JsonSerializableStudentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.StudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":" * An Immutable StudentBook that is serializable to JSON format.","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"@JsonRootName(value \u003d \"studentbook\")","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"class JsonSerializableStudentBook {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Students list contains duplicate student(s).\";","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"     * Constructs a {@code JsonSerializableStudentBook} with the given students.","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"    public JsonSerializableStudentBook(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"        this.students.addAll(students);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"     * Converts a given {@code ReadOnlyStudentBook} into this class for Jackson use.","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableStudentBook}.","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"    public JsonSerializableStudentBook(ReadOnlyStudentBook source) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"     * Converts this student book into the model\u0027s {@code StudentBook} object.","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"    public StudentBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"        StudentBook studentBook \u003d new StudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"            if (studentBook.hasStudent(student)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"            studentBook.addStudent(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"        return studentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wpinrui":26,"-":34}},{"path":"src/main/java/tutoraid/storage/JsonTutorAidStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.FileUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.JsonUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":" * A class to access StudentBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"public class JsonTutorAidStorage implements TutorAidStorage {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTutorAidStorage.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    public JsonTutorAidStorage(Path filePath) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"    public Path getStudentBookFilePath() {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"    public Optional\u003cReadOnlyStudentBook\u003e readStudentBook() throws DataConversionException {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"        return readStudentBook(filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"     * Similar to {@link #readStudentBook()}.","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"    public Optional\u003cReadOnlyStudentBook\u003e readStudentBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"        Optional\u003cJsonSerializableStudentBook\u003e jsonStudentBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"                filePath, JsonSerializableStudentBook.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"        if (!jsonStudentBook.isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"            return Optional.of(jsonStudentBook.get().toModelType());","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"    public void saveStudentBook(ReadOnlyStudentBook studentBook) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"        saveStudentBook(studentBook, filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"     * Similar to {@link #saveStudentBook(ReadOnlyStudentBook)}.","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"    public void saveStudentBook(ReadOnlyStudentBook studentBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"        requireNonNull(studentBook);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableStudentBook(studentBook), filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wpinrui":26,"-":54}},{"path":"src/main/java/tutoraid/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.JsonUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wpinrui":5,"-":42}},{"path":"src/main/java/tutoraid/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"public interface Storage extends TutorAidStorage, UserPrefsStorage {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    Path getStudentBookFilePath();","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    Optional\u003cReadOnlyStudentBook\u003e readStudentBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"    void saveStudentBook(ReadOnlyStudentBook studentBook) throws IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wpinrui":9,"-":23}},{"path":"src/main/java/tutoraid/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":" * Manages storage of StudentBook data in local storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    private TutorAidStorage tutorAidStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"     * Creates a {@code StorageManager} with the given {@code TutorAidStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    public StorageManager(TutorAidStorage tutorAidStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"        this.tutorAidStorage \u003d tutorAidStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StudentBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"    public Path getStudentBookFilePath() {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"        return tutorAidStorage.getStudentBookFilePath();","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"    public Optional\u003cReadOnlyStudentBook\u003e readStudentBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"        return readStudentBook(tutorAidStorage.getStudentBookFilePath());","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"    public Optional\u003cReadOnlyStudentBook\u003e readStudentBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"        return tutorAidStorage.readStudentBook(filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"    public void saveStudentBook(ReadOnlyStudentBook studentBook) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"        saveStudentBook(studentBook, tutorAidStorage.getStudentBookFilePath());","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"    public void saveStudentBook(ReadOnlyStudentBook studentBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"        tutorAidStorage.saveStudentBook(studentBook, filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":22,"-":57}},{"path":"src/main/java/tutoraid/storage/TutorAidStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.StudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":" * Represents a storage for {@link StudentBook}.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"public interface TutorAidStorage {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    Path getStudentBookFilePath();","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"     * Returns StudentBook data as a {@link ReadOnlyStudentBook}.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    Optional\u003cReadOnlyStudentBook\u003e readStudentBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"     * @see #getStudentBookFilePath()","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"    Optional\u003cReadOnlyStudentBook\u003e readStudentBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"     * Saves the given {@link ReadOnlyStudentBook} to the storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"     * @param studentBook cannot be null.","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"    void saveStudentBook(ReadOnlyStudentBook studentBook) throws IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"     * @see #saveStudentBook(ReadOnlyStudentBook)","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"    void saveStudentBook(ReadOnlyStudentBook studentBook, Path filePath) throws IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wpinrui":16,"-":30}},{"path":"src/main/java/tutoraid/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wpinrui":6,"-":30}},{"path":"src/main/java/tutoraid/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.Logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"wpinrui":6,"-":80}},{"path":"src/main/java/tutoraid/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w16-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wpinrui":2,"dt-td":1,"-":99}},{"path":"src/main/java/tutoraid/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.Logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    private static StudentListPanel fullPanel \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"    private static StudentListPanel minimalPanel \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"        fullPanel \u003d new StudentListPanel(logic.getFilteredStudentList(), true);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"        minimalPanel \u003d new StudentListPanel(logic.getFilteredStudentList(), false);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"dt-td"},"content":"     * Fills up all the student\u0027s particulars of this window.","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"wpinrui"},"content":"    void fillStudentCard(boolean viewAll) {","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"wpinrui"},"content":"        studentListPanel \u003d viewAll","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"wpinrui"},"content":"            ? fullPanel","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"wpinrui"},"content":"            : minimalPanel;","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"wpinrui"},"content":"        studentListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"wpinrui"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"wpinrui"},"content":"        fillStudentCard(false); // TutorAid launches with list view","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"wpinrui"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getStudentBookFilePath());","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"dt-td"},"content":"    public void show() {","lastModifiedDate":"2021-10-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":182,"author":{"gitId":"wpinrui"},"content":"    public StudentListPanel getStudentListPanel() {","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"wpinrui"},"content":"        return studentListPanel;","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"wpinrui"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wpinrui":26,"dt-td":4,"-":182}},{"path":"src/main/java/tutoraid/ui/MinimalStudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":" * An UI component that displays information of a {@code Student}.","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"public class MinimalStudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"    private static final String FXML \u003d \"MinimalStudentListCard.fxml\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on StudentBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    public final Student student;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"    private Label name;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"    private Label id;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"     * Creates a {@code StudentCard} with the given {@code Student} and index to display.","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"    public MinimalStudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"dt-td"},"content":"        super(FXML);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"        this.student \u003d student;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"dt-td"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"        name.setText(student.getStudentName().fullName);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"dt-td"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"dt-td"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"dt-td"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"dt-td"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"dt-td"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"dt-td"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"        if (!(other instanceof MinimalStudentCard)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"dt-td"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"dt-td"},"content":"        // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"        MinimalStudentCard card \u003d (MinimalStudentCard) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"dt-td"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"wpinrui":14,"dt-td":46}},{"path":"src/main/java/tutoraid/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wpinrui":1,"-":27}},{"path":"src/main/java/tutoraid/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":1,"-":27}},{"path":"src/main/java/tutoraid/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":" * An UI component that displays information of a {@code Student}.","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"    private static final String STUDENT_NAME_LABEL \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    private static final String STUDENT_PHONE_LABEL \u003d \"Mobile\";","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"    private static final String PARENT_NAME_LABEL \u003d \"Parent\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    private static final String PARENT_PHONE_LABEL \u003d \"Parent Mobile\";","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    private static final String PROGRESS_LABEL \u003d \"Progress\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"    private static final String PAYMENT_STATUS_LABEL \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on StudentBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"    public final Student student;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"Preshita01"},"content":"    private Label studentName;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"Preshita01"},"content":"    private Label studentPhone;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"Preshita01"},"content":"    private Label parentName;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"Preshita01"},"content":"    private Label parentPhone;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"ErnestCuong"},"content":"    private Label progress;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"ErnestCuong"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"JunWei3112"},"content":"    private Label paymentStatus;","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"     * Creates a {@code StudentCard} with the given {@code Student} and index to display.","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"        this.student \u003d student;","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"        studentName.setText(formatCardLabel(STUDENT_NAME_LABEL, student.getStudentName().fullName));","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"        studentPhone.setText(formatCardLabel(STUDENT_PHONE_LABEL, student.getStudentPhone().value));","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"        parentName.setText(formatCardLabel(PARENT_NAME_LABEL, student.getParentName().fullName));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"        parentPhone.setText(formatCardLabel(PARENT_PHONE_LABEL, student.getParentPhone().value));","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"        progress.setText(formatCardLabel(PROGRESS_LABEL, student.getProgress().toString()));","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"        paymentStatus.setText(formatCardLabel(PAYMENT_STATUS_LABEL, student.getPaymentStatus().toString()));","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"wpinrui"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"wpinrui"},"content":"     * Formats the text for a StudentCard to include both the name and value if present.","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"wpinrui"},"content":"     * If the value is empty, it is displayed as (None).","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"wpinrui"},"content":"     * If the name is empty, we will display only the value.","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"wpinrui"},"content":"     * @param fieldName The name of the field","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"wpinrui"},"content":"     * @param value The value of the field","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"wpinrui"},"content":"     * @return A formatted string that includes the field name and its value","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"wpinrui"},"content":"    public static String formatCardLabel(String fieldName, String value) {","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"wpinrui"},"content":"        if (value.equals(\"\")) {","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"wpinrui"},"content":"            value \u003d \"(None)\";","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"wpinrui"},"content":"        return fieldName.equals(\"\")","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"wpinrui"},"content":"                ? value","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"wpinrui"},"content":"                : String.format(\"%s: %s\", fieldName, value);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wpinrui":44,"ErnestCuong":2,"JunWei3112":1,"Preshita01":5,"-":49}},{"path":"src/main/java/tutoraid/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":" * Panel containing the list of students.","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    private final boolean viewAll;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList, boolean viewAll) {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"        super(FXML);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"        this.viewAll \u003d viewAll;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"                setText(null);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"            } else if (viewAll) {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"            } else {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"                setGraphic(new MinimalStudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"wpinrui":53}},{"path":"src/main/java/tutoraid/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wpinrui":1,"-":12}},{"path":"src/main/java/tutoraid/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.MainApp;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.StringUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.Logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"    private static MainWindow mainWindow;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/tutor_aid.png\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"dt-td"},"content":"     * Shows full view of student\u0027s details","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"dt-td"},"content":"    public static void showViewWindow() {","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"dt-td"},"content":"        if (mainWindow !\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"wpinrui"},"content":"            mainWindow.fillStudentCard(true);","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"dt-td"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"dt-td"},"content":"     * Hides full view of student\u0027s details","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"dt-td"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"dt-td"},"content":"    public static void hideViewWindow() {","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"dt-td"},"content":"        if (mainWindow !\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"wpinrui"},"content":"            mainWindow.fillStudentCard(false);","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"wpinrui":7,"dt-td":17,"-":82}},{"path":"src/main/java/tutoraid/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.MainApp;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wpinrui":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"wpinrui"},"content":"#filterField, #studentListPanel, #personWebpage {","lastModifiedDate":"2021-10-11"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"wpinrui":1,"-":351}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"         title\u003d\"TutorAid\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"    \u003cImage url\u003d\"@/images/tutor_aid.png\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"        \u003cVBox fx:id\u003d\"studentList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"          \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"wpinrui":2,"dt-td":2,"-":57}},{"path":"src/main/resources/view/MinimalStudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dt-td"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"dt-td"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"dt-td"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"dt-td"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"dt-td"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"dt-td"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"30\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"dt-td"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"dt-td"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"dt-td"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"dt-td"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"dt-td"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"dt-td":32}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"Preshita01"},"content":"        \u003cLabel fx:id\u003d\"studentName\" text\u003d\"\\$studentName\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"Preshita01"},"content":"      \u003cLabel fx:id\u003d\"studentPhone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentPhone\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"      \u003cLabel fx:id\u003d\"parentName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$parentName\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Preshita01"},"content":"      \u003cLabel fx:id\u003d\"parentPhone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$parentPhone\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ErnestCuong"},"content":"      \u003cLabel fx:id\u003d\"progress\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$progress\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"      \u003cLabel fx:id\u003d\"paymentStatus\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$paymentStatus\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ErnestCuong":1,"JunWei3112":1,"Preshita01":4,"-":32}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":1,"-":7}},{"path":"src/test/data/JsonSerializableStudentBookTest/duplicatePersonStudentBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"    \"studentName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"    \"studentPhone\": \"94351253\",","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"    \"parentName\": \"Mrs Koh\",","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"    \"parentPhone\": \"94351238\",","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"ErnestCuong"},"content":"    \"progress\": \"No Progress\",","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"    \"paymentStatus\": false","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"    \"studentName\": \"Alice Pauline\",","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"    \"studentPhone\": \"94351253\",","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"    \"parentName\": \"Mr Koh\",","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"    \"parentPhone\": \"86351238\",","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"ErnestCuong"},"content":"    \"progress\": \"No Progress\",","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"    \"paymentStatus\": false","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wpinrui":1,"ErnestCuong":2,"JunWei3112":1,"Preshita01":9,"-":4}},{"path":"src/test/data/JsonSerializableStudentBookTest/invalidPersonStudentBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"    \"studentName\": \"Hans Muster\",","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"    \"studentPhone\": \"9482424\",","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"    \"parentName\": \"H@s!\",","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"    \"parentPhone\": \"22334455\",","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"ErnestCuong"},"content":"    \"progress\": \"No Progress\"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wpinrui":1,"ErnestCuong":1,"Preshita01":4,"-":3}},{"path":"src/test/data/JsonSerializableStudentBookTest/typicalPersonsStudentBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"  \"_comment\": \"TutorAid save file which contains the same Student values as in TypicalPersons#getTypicalStudentBook()\",","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"  \"students\" : [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"    \"studentName\" : \"Alice Pauline\",","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"    \"studentPhone\" : \"94351234\",","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"    \"parentName\" : \"Mrs Tan\",","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"    \"parentPhone\" : \"94351253\",","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"ErnestCuong"},"content":"    \"progress\" : \"No Progress\",","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"    \"paymentStatus\": false","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"    \"studentName\" : \"Benson Meier\",","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"    \"studentPhone\" : \"98765423\",","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"    \"parentName\" : \"Mrs Meier\",","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"    \"parentPhone\" : \"98765432\",","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"ErnestCuong"},"content":"    \"progress\" : \"No Progress\",","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"    \"paymentStatus\": true","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"    \"studentName\" : \"Carl Kurz\",","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Preshita01"},"content":"    \"studentPhone\" : \"95352563\",","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Preshita01"},"content":"    \"parentName\" : \"Mr Kurz\",","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Preshita01"},"content":"    \"parentPhone\" : \"95352567\",","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"ErnestCuong"},"content":"    \"progress\" : \"No Progress\",","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Preshita01"},"content":"    \"paymentStatus\": false","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Preshita01"},"content":"    \"studentName\" : \"Daniel Meier\",","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Preshita01"},"content":"    \"studentPhone\" : \"87652533\",","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Preshita01"},"content":"    \"parentName\" : \"Mrs Meier\",","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Preshita01"},"content":"    \"parentPhone\" : \"98765432\",","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"ErnestCuong"},"content":"    \"progress\" : \"No Progress\",","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Preshita01"},"content":"    \"paymentStatus\": false","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"    \"studentName\" : \"Elle Meyer\",","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Preshita01"},"content":"    \"studentPhone\" : \"9482224\",","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Preshita01"},"content":"    \"parentName\" : \"Mrs Meyer\",","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Preshita01"},"content":"    \"parentPhone\" : \"9482290\",","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"ErnestCuong"},"content":"    \"progress\" : \"No Progress\",","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Preshita01"},"content":"    \"paymentStatus\": false","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"Preshita01"},"content":"    \"studentName\" : \"Fiona Kunz\",","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"Preshita01"},"content":"    \"studentPhone\" : \"9482427\",","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Preshita01"},"content":"    \"parentName\" : \"Mr Daniel\",","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Preshita01"},"content":"    \"parentPhone\" : \"9482423\",","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"ErnestCuong"},"content":"    \"progress\" : \"No Progress\",","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Preshita01"},"content":"    \"paymentStatus\": false","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Preshita01"},"content":"    \"studentName\" : \"George Best\",","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"Preshita01"},"content":"    \"studentPhone\" : \"9482442\",","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"Preshita01"},"content":"    \"parentName\" : \"Mrs Kayla\",","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Preshita01"},"content":"    \"parentPhone\" : \"94824432\",","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"ErnestCuong"},"content":"    \"progress\" : \"No Progress\",","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Preshita01"},"content":"    \"paymentStatus\": false","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wpinrui":2,"ErnestCuong":7,"Preshita01":35,"-":9}},{"path":"src/test/data/JsonStudentBookStorageTest/invalidAndValidPersonStudentBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"    \"studentName\": \"Valid Person\",","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"    \"studentPhone\": \"9482424\",","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"    \"parentName\": \"Person\",","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"    \"parentPhone\": \"97485627\",","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"ErnestCuong"},"content":"    \"progress\": \"No Progress\"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"    \"studentName\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"    \"studentPhone\": \"948asdf2424\",","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"    \"parentName\": \"Person1\",","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"    \"parentPhone\": \"97485647\",","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"ErnestCuong"},"content":"    \"progress\": \"No Progress\"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wpinrui":1,"ErnestCuong":2,"Preshita01":8,"-":4}},{"path":"src/test/data/JsonStudentBookStorageTest/invalidPersonStudentBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"    \"studentName\": \"Hans Muster\",","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"    \"studentPhone\": \"9482424\",","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"    \"parentName\": \"H@!\",","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"    \"parentPhone\": \"22334455\",","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"ErnestCuong"},"content":"    \"progress\": \"No Progress\"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wpinrui":1,"ErnestCuong":1,"Preshita01":4,"-":3}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"  \"studentBookFilePath\" : \"tutoraid.json\"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wpinrui":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"  \"studentBookFilePath\" : \"tutoraid.json\"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wpinrui":1,"-":10}},{"path":"src/test/java/tutoraid/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"wpinrui":1,"-":57}},{"path":"src/test/java/tutoraid/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"wpinrui":1,"-":26}},{"path":"src/test/java/tutoraid/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.core;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":3,"-":133}},{"path":"src/test/java/tutoraid/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.core.index;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"wpinrui":4,"-":57}},{"path":"src/test/java/tutoraid/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"        assertNotNull(AppUtil.getImage(\"/images/tutor_aid.png\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"            IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"wpinrui":6,"dt-td":1,"-":31}},{"path":"src/test/java/tutoraid/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":91,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":99,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"wpinrui":5,"-":104}},{"path":"src/test/java/tutoraid/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Config;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wpinrui":8,"-":108}},{"path":"src/test/java/tutoraid/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":3,"-":21}},{"path":"src/test/java/tutoraid/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.SerializableTestClass;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.TestUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":3,"-":42}},{"path":"src/test/java/tutoraid/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.commons.util;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"            \"typical sentence\", null));","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"wpinrui":8,"-":137}},{"path":"src/test/java/tutoraid/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.PARENT_NAME_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.PARENT_PHONE_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.STUDENT_NAME_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.STUDENT_PHONE_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalStudents.AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.CommandResult;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.ListCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"import tutoraid.storage.JsonTutorAidStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"import tutoraid.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"import tutoraid.storage.StorageManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.StudentBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"        JsonTutorAidStorage studentBookStorage \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"                new JsonTutorAidStorage(temporaryFolder.resolve(\"tutoraid.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"        StorageManager storage \u003d new StorageManager(studentBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"Preshita01"},"content":"        String deleteCommand \u003d \"del -s 9\";","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"        // Setup LogicManager with JsonTutorAidIoExceptionThrowingStub","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"        JsonTutorAidStorage studentBookStorage \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"                new JsonTutorAidIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionStudentBook.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"        StorageManager storage \u003d new StorageManager(studentBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"Preshita01"},"content":"        String addCommand \u003d AddStudentCommand.COMMAND_WORD + STUDENT_NAME_DESC_AMY + STUDENT_PHONE_DESC_AMY","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"Preshita01"},"content":"                + PARENT_NAME_DESC_AMY + PARENT_PHONE_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"wpinrui"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"wpinrui"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"wpinrui"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"wpinrui"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"wpinrui"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"wpinrui"},"content":"    private static class JsonTutorAidIoExceptionThrowingStub extends JsonTutorAidStorage {","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"wpinrui"},"content":"        private JsonTutorAidIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"wpinrui"},"content":"        public void saveStudentBook(ReadOnlyStudentBook studentBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wpinrui":39,"Preshita01":3,"-":120}},{"path":"src/test/java/tutoraid/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.StudentBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.TypicalStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"        model \u003d new ModelManager(TypicalStudents.getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"    public void execute_newStudent_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"        assertCommandSuccess(new AddStudentCommand(validStudent), model,","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"                String.format(AddStudentCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"        Student studentInList \u003d model.getStudentBook().getStudentList().get(0);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"        assertCommandFailure(new AddStudentCommand(studentInList), model, AddStudentCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"wpinrui":19,"-":26}},{"path":"src/test/java/tutoraid/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.StudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.StudentBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new AddStudentCommand(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"    public void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"        ModelStubAcceptingStudentAdded modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"        CommandResult commandResult \u003d new AddStudentCommand(validStudent).execute(modelStub);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"        assertEquals(String.format(AddStudentCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.studentsAdded);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"        AddStudentCommand addCommand \u003d new AddStudentCommand(validStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"        ModelStub modelStub \u003d new ModelStubWithStudent(validStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(CommandException.class, AddStudentCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Preshita01"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"        Student alice \u003d new StudentBuilder().withStudentName(\"Alice\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"        Student bob \u003d new StudentBuilder().withStudentName(\"Bob\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Preshita01"},"content":"        AddStudentCommand addAliceCommand \u003d new AddStudentCommand(alice);","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Preshita01"},"content":"        AddStudentCommand addBobCommand \u003d new AddStudentCommand(bob);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"Preshita01"},"content":"        AddStudentCommand addAliceCommandCopy \u003d new AddStudentCommand(alice);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"wpinrui"},"content":"        public Path getStudentBookFilePath() {","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"wpinrui"},"content":"        public void setStudentBookFilePath(Path studentBookFilePath) {","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"wpinrui"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"wpinrui"},"content":"        public void setStudentBook(ReadOnlyStudentBook studentBook) {","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"wpinrui"},"content":"        public ReadOnlyStudentBook getStudentBook() {","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"wpinrui"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"wpinrui"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"wpinrui"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"dt-td"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"wpinrui"},"content":"        public void viewStudent(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"dt-td"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"dt-td"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"wpinrui"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"wpinrui"},"content":"        public void viewList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"wpinrui"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"wpinrui"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"wpinrui"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"wpinrui"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"wpinrui"},"content":"    private class ModelStubWithStudent extends ModelStub {","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"wpinrui"},"content":"        private final Student student;","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"wpinrui"},"content":"        ModelStubWithStudent(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"wpinrui"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"wpinrui"},"content":"            this.student \u003d student;","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"wpinrui"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"wpinrui"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"wpinrui"},"content":"            return this.student.isSameStudent(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"wpinrui"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"wpinrui"},"content":"    private class ModelStubAcceptingStudentAdded extends ModelStub {","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"wpinrui"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"wpinrui"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"wpinrui"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"wpinrui"},"content":"            return studentsAdded.stream().anyMatch(student::isSameStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"wpinrui"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":195,"author":{"gitId":"wpinrui"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"wpinrui"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"wpinrui"},"content":"        public ReadOnlyStudentBook getStudentBook() {","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"wpinrui"},"content":"            return new StudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"wpinrui":62,"Preshita01":4,"dt-td":4,"-":135}},{"path":"src/test/java/tutoraid/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.StudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.TypicalStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"    public void execute_emptyStudentBook_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    public void execute_nonEmptyStudentBook_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"        Model model \u003d new ModelManager(TypicalStudents.getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"        Model expectedModel \u003d new ModelManager(TypicalStudents.getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"        expectedModel.setStudentBook(new StudentBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"wpinrui":12,"-":20}},{"path":"src/test/java/tutoraid/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"wpinrui":1,"-":53}},{"path":"src/test/java/tutoraid/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.CliSyntax;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.StudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"Preshita01"},"content":"    public static final String VALID_STUDENT_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Preshita01"},"content":"    public static final String VALID_STUDENT_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Preshita01"},"content":"    public static final String VALID_STUDENT_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Preshita01"},"content":"    public static final String VALID_STUDENT_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Preshita01"},"content":"    public static final String VALID_PARENT_NAME_AMY \u003d \"Mr Bee\";","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Preshita01"},"content":"    public static final String VALID_PARENT_NAME_BOB \u003d \"Mrs Clara Choo\";","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Preshita01"},"content":"    public static final String VALID_PARENT_PHONE_AMY \u003d \"33333333\";","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Preshita01"},"content":"    public static final String VALID_PARENT_PHONE_BOB \u003d \"44444444\";","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ErnestCuong"},"content":"    public static final String VALID_PROGRESS_BOB \u003d \"No Progress\";","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"ErnestCuong"},"content":"    public static final String VALID_PROGRESS_AMY \u003d \"No Progress\";","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"    public static final boolean VALID_PAYMENT_STATUS_AMY \u003d false;","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"    public static final boolean VALID_PAYMENT_STATUS_BOB \u003d false;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"    public static final String STUDENT_NAME_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_STUDENT_NAME + VALID_STUDENT_NAME_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"    public static final String STUDENT_NAME_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_STUDENT_NAME + VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"    public static final String STUDENT_PHONE_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_STUDENT_PHONE + VALID_STUDENT_PHONE_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"    public static final String STUDENT_PHONE_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_STUDENT_PHONE + VALID_STUDENT_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"    public static final String PARENT_NAME_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_PARENT_NAME + VALID_PARENT_NAME_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"    public static final String PARENT_NAME_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_PARENT_NAME + VALID_PARENT_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"    public static final String PARENT_PHONE_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_PARENT_PHONE + VALID_PARENT_PHONE_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"    public static final String PARENT_PHONE_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_PARENT_PHONE + VALID_PARENT_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Preshita01"},"content":"    public static final String INVALID_STUDENT_NAME_DESC \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"            \" \" + CliSyntax.PREFIX_STUDENT_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Preshita01"},"content":"    public static final String INVALID_STUDENT_PHONE_DESC \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"            \" \" + CliSyntax.PREFIX_STUDENT_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Preshita01"},"content":"    public static final String INVALID_PARENT_NAME_DESC \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"            \" \" + CliSyntax.PREFIX_PARENT_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Preshita01"},"content":"    public static final String INVALID_PARENT_PHONE_DESC \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"            \" \" + CliSyntax.PREFIX_PARENT_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"wpinrui"},"content":"     * - the student book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"wpinrui"},"content":"        StudentBook expectedStudentBook \u003d new StudentBook(actualModel.getStudentBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"wpinrui"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"wpinrui"},"content":"        assertEquals(expectedStudentBook, actualModel.getStudentBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"wpinrui"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":104,"author":{"gitId":"wpinrui"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"wpinrui"},"content":"     * {@code model}\u0027s student book.","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":107,"author":{"gitId":"wpinrui"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"wpinrui"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":110,"author":{"gitId":"wpinrui"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"wpinrui"},"content":"        final String[] splitName \u003d student.getStudentName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"wpinrui"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":114,"author":{"gitId":"wpinrui"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"wpinrui":36,"ErnestCuong":2,"JunWei3112":2,"Preshita01":17,"-":60}},{"path":"src/test/java/tutoraid/logic/commands/DeleteStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.TypicalStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"Preshita01"},"content":"public class DeleteStudentCommandTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"    private Model model \u003d new ModelManager(TypicalStudents.getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(TypicalIndexes.INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(TypicalIndexes.INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"        String expectedMessage \u003d String.format(DeleteStudentCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"        CommandTestUtil.assertCommandSuccess(deleteStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Preshita01"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"        CommandTestUtil.assertCommandFailure(deleteStudentCommand, model,","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"            Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"        CommandTestUtil.showStudentAtIndex(model, TypicalIndexes.INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(TypicalIndexes.INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(TypicalIndexes.INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"        String expectedMessage \u003d String.format(DeleteStudentCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"        showNoStudent(expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"        CommandTestUtil.assertCommandSuccess(deleteStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"        CommandTestUtil.showStudentAtIndex(model, TypicalIndexes.INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"        // ensures that outOfBoundIndex is still in bounds of student book list","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getStudentBook().getStudentList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"Preshita01"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"        CommandTestUtil.assertCommandFailure(deleteStudentCommand, model,","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"            Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"wpinrui"},"content":"        DeleteStudentCommand deleteFirstCommand \u003d new DeleteStudentCommand(TypicalIndexes.INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"wpinrui"},"content":"        DeleteStudentCommand deleteSecondCommand \u003d new DeleteStudentCommand(TypicalIndexes.INDEX_SECOND_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"wpinrui"},"content":"        DeleteStudentCommand deleteFirstCommandCopy \u003d new DeleteStudentCommand(TypicalIndexes.INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"wpinrui"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"wpinrui"},"content":"    private void showNoStudent(Model model) {","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"wpinrui"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"wpinrui"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"wpinrui":40,"Preshita01":3,"-":64}},{"path":"src/test/java/tutoraid/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"public class ExitCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"        CommandTestUtil.assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"wpinrui":17}},{"path":"src/test/java/tutoraid/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"wpinrui":5,"-":15}},{"path":"src/test/java/tutoraid/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.TypicalStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"public class ListCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    private Model model;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"        model \u003d new ModelManager(TypicalStudents.getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"        expectedModel \u003d new ModelManager(model.getStudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"        CommandTestUtil.assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"        CommandTestUtil.showStudentAtIndex(model, TypicalIndexes.INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"        CommandTestUtil.assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"wpinrui":36}},{"path":"src/test/java/tutoraid/logic/commands/PaidCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.StudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.StudentBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":" * {@code PaidCommand}.","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":"public class PaidCommandTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"    private Model model \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"        Student studentToEdit \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"        Student editedStudent \u003d new StudentBuilder(studentToEdit).withPaymentStatus(true).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"        PaidCommand paidCommand \u003d new PaidCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"        String expectedMessage \u003d String.format(PaidCommand.MESSAGE_SET_TO_PAID_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"        Model expectedModel \u003d new ModelManager(new StudentBook(model.getStudentBook()), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"        expectedModel.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"        assertCommandSuccess(paidCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"JunWei3112"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"JunWei3112"},"content":"        PaidCommand paidCommand \u003d new PaidCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"        assertCommandFailure(paidCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"JunWei3112"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"        Student studentToEdit \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"        Student editedStudent \u003d new StudentBuilder(studentToEdit).withPaymentStatus(true).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"        PaidCommand paidCommand \u003d new PaidCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"JunWei3112"},"content":"        String expectedMessage \u003d String.format(PaidCommand.MESSAGE_SET_TO_PAID_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"        Model expectedModel \u003d new ModelManager(new StudentBook(model.getStudentBook()), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"JunWei3112"},"content":"        assertCommandSuccess(paidCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"JunWei3112"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"        // ensures that outOfBoundIndex is still in bounds of student book list","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getStudentBook().getStudentList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"JunWei3112"},"content":"        PaidCommand paidCommand \u003d new PaidCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"        assertCommandFailure(paidCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"JunWei3112"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"wpinrui"},"content":"        PaidCommand paidFirstCommand \u003d new PaidCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"wpinrui"},"content":"        PaidCommand paidSecondCommand \u003d new PaidCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"JunWei3112"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"JunWei3112"},"content":"        assertTrue(paidFirstCommand.equals(paidFirstCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"JunWei3112"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"wpinrui"},"content":"        PaidCommand paidFirstCommandCopy \u003d new PaidCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"JunWei3112"},"content":"        assertTrue(paidFirstCommand.equals(paidFirstCommandCopy));","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"JunWei3112"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"JunWei3112"},"content":"        assertFalse(paidFirstCommand.equals(1));","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"JunWei3112"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"JunWei3112"},"content":"        assertFalse(paidFirstCommand.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"wpinrui"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"JunWei3112"},"content":"        assertFalse(paidFirstCommand.equals(paidSecondCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"wpinrui":38,"JunWei3112":67}},{"path":"src/test/java/tutoraid/logic/commands/UnpaidCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"JunWei3112"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"JunWei3112"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.StudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.StudentBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":" * {@code UnpaidCommand}.","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"JunWei3112"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"JunWei3112"},"content":"public class UnpaidCommandTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"    private Model model \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"JunWei3112"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"        Student studentToEdit \u003d model.getFilteredStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"        Student editedStudent \u003d new StudentBuilder(studentToEdit).withPaymentStatus(false).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"        UnpaidCommand unpaidCommand \u003d new UnpaidCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"JunWei3112"},"content":"        String expectedMessage \u003d String.format(UnpaidCommand.MESSAGE_SET_TO_UNPAID_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"        Model expectedModel \u003d new ModelManager(new StudentBook(model.getStudentBook()), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"        expectedModel.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"JunWei3112"},"content":"        assertCommandSuccess(unpaidCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"JunWei3112"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"JunWei3112"},"content":"        UnpaidCommand unpaidCommand \u003d new UnpaidCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"        assertCommandFailure(unpaidCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"JunWei3112"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"        // ensures that outOfBoundIndex is still in bounds of student book list","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getStudentBook().getStudentList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"JunWei3112"},"content":"        UnpaidCommand unpaidCommand \u003d new UnpaidCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"        assertCommandFailure(unpaidCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"JunWei3112"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"        UnpaidCommand unpaidFirstCommand \u003d new UnpaidCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"        UnpaidCommand unpaidSecondCommand \u003d new UnpaidCommand(INDEX_THIRD_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"JunWei3112"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"JunWei3112"},"content":"        assertTrue(unpaidFirstCommand.equals(unpaidFirstCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"JunWei3112"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"        UnpaidCommand unpaidFirstCommandCopy \u003d new UnpaidCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"JunWei3112"},"content":"        assertTrue(unpaidFirstCommand.equals(unpaidFirstCommandCopy));","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"JunWei3112"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"JunWei3112"},"content":"        assertFalse(unpaidFirstCommand.equals(1));","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"JunWei3112"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"JunWei3112"},"content":"        assertFalse(unpaidFirstCommand.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"wpinrui"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"JunWei3112"},"content":"        assertFalse(unpaidFirstCommand.equals(unpaidSecondCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"wpinrui":33,"JunWei3112":56}},{"path":"src/test/java/tutoraid/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"dt-td"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"dt-td"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"dt-td"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"dt-td"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"dt-td"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"dt-td"},"content":" * {@code ViewCommand}.","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"dt-td"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"dt-td"},"content":"public class ViewCommandTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    private Model model \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"dt-td"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"        Student studentToView \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"dt-td"},"content":"        String expectedMessage \u003d \"Viewing requested student\";","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"        expectedModel.viewStudent(studentToView);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"dt-td"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"dt-td"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"dt-td"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"dt-td"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"        Student studentToView \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"dt-td"},"content":"        String expectedMessage \u003d \"Viewing requested student\";","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudentBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"        expectedModel.viewStudent(studentToView);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"dt-td"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"dt-td"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"dt-td"},"content":"        // ensures that outOfBoundIndex is still in bounds of student list","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getStudentBook().getStudentList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"dt-td"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"dt-td"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"dt-td"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"wpinrui"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"dt-td"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"dt-td"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"dt-td"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"wpinrui"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"dt-td"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"dt-td"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"dt-td"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"dt-td"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"dt-td"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"dt-td"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"wpinrui"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"dt-td"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"dt-td"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"dt-td"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"wpinrui":33,"dt-td":66}},{"path":"src/test/java/tutoraid/logic/parser/AddStudentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.INVALID_PARENT_NAME_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.INVALID_PARENT_PHONE_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.INVALID_STUDENT_NAME_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.INVALID_STUDENT_PHONE_DESC;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.PARENT_NAME_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.PARENT_PHONE_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.PARENT_PHONE_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.STUDENT_NAME_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.STUDENT_NAME_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.STUDENT_PHONE_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.STUDENT_PHONE_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalStudents.AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.StudentBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"public class AddStudentCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"    private final AddStudentCommandParser parser \u003d new AddStudentCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"        Student expectedStudent \u003d new StudentBuilder(BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, PREAMBLE_WHITESPACE + STUDENT_NAME_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"                + STUDENT_PHONE_DESC_BOB + PARENT_NAME_DESC_BOB + PARENT_PHONE_DESC_BOB,","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"            new AddStudentCommand(expectedStudent));","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, STUDENT_NAME_DESC_AMY + STUDENT_NAME_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"                + STUDENT_PHONE_DESC_BOB + PARENT_NAME_DESC_BOB + PARENT_PHONE_DESC_BOB,","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"            new AddStudentCommand(expectedStudent));","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, STUDENT_NAME_DESC_BOB + STUDENT_PHONE_DESC_AMY","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"                + STUDENT_PHONE_DESC_BOB + PARENT_NAME_DESC_BOB + PARENT_PHONE_DESC_BOB,","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"            new AddStudentCommand(expectedStudent));","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"        // TODO: add more tests for multiple parent name, parent phone","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"        // TODO: add tests with missing parent phone etc.","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withParentName(\"\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, STUDENT_NAME_DESC_AMY + STUDENT_PHONE_DESC_AMY","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"                + PARENT_PHONE_DESC_AMY,","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"            new AddStudentCommand(expectedStudent));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"        // missing student name prefix","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseFailure(parser, VALID_STUDENT_NAME_BOB + STUDENT_PHONE_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"            + PARENT_NAME_DESC_BOB + PARENT_PHONE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"        // invalid student name","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseFailure(parser, INVALID_STUDENT_NAME_DESC + STUDENT_PHONE_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"            + PARENT_NAME_DESC_BOB + PARENT_PHONE_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"        // invalid student phone","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseFailure(parser, STUDENT_NAME_DESC_BOB + INVALID_STUDENT_PHONE_DESC","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"wpinrui"},"content":"            + PARENT_NAME_DESC_BOB + PARENT_PHONE_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"wpinrui"},"content":"        // invalid parent name","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseFailure(parser, STUDENT_NAME_DESC_BOB + STUDENT_PHONE_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"wpinrui"},"content":"            + INVALID_PARENT_NAME_DESC + PARENT_PHONE_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"wpinrui"},"content":"        // invalid parent phone","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseFailure(parser, STUDENT_NAME_DESC_BOB + STUDENT_PHONE_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"wpinrui"},"content":"            + PARENT_NAME_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"wpinrui"},"content":"            + INVALID_PARENT_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"wpinrui"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseFailure(parser, INVALID_STUDENT_NAME_DESC + STUDENT_PHONE_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"wpinrui"},"content":"            + PARENT_NAME_DESC_BOB + PARENT_PHONE_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"wpinrui"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseFailure(parser, PREAMBLE_NON_EMPTY + STUDENT_NAME_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"wpinrui"},"content":"                + STUDENT_PHONE_DESC_BOB + PARENT_NAME_DESC_BOB + PARENT_PHONE_DESC_BOB,","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"wpinrui"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"wpinrui":100}},{"path":"src/test/java/tutoraid/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"Preshita01"},"content":"        // If the prefix isn\u0027t present, the string (\"\") will be returned","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Preshita01"},"content":"        assertTrue(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"wpinrui":1,"Preshita01":2,"-":147}},{"path":"src/test/java/tutoraid/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"wpinrui":3,"-":35}},{"path":"src/test/java/tutoraid/logic/parser/DeleteStudentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":"public class DeleteStudentCommandParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"1\", new DeleteStudentCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Preshita01"},"content":"                DeleteStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"wpinrui":6,"Preshita01":2,"-":23}},{"path":"src/test/java/tutoraid/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"wpinrui":1,"-":3}},{"path":"src/test/java/tutoraid/logic/parser/PaidCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"JunWei3112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.PaidCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"JunWei3112"},"content":"public class PaidCommandParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"JunWei3112"},"content":"    private PaidCommandParser parser \u003d new PaidCommandParser();","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"JunWei3112"},"content":"    public void parse_validArgs_returnsPaidCommand() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"        assertParseSuccess(parser, \"1\", new PaidCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"JunWei3112"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"JunWei3112"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"JunWei3112"},"content":"                PaidCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"wpinrui":7,"JunWei3112":19}},{"path":"src/test/java/tutoraid/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.ParentName;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.StudentName;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"Preshita01"},"content":"    public void parseStudentName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Preshita01"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStudentName((String) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"Preshita01"},"content":"    public void parseParentName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Preshita01"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseParentName((String) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"Preshita01"},"content":"    public void parseStudentName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Preshita01"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStudentName(INVALID_NAME));","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"Preshita01"},"content":"    public void parseParentName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"Preshita01"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseParentName(INVALID_NAME));","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"Preshita01"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"Preshita01"},"content":"    public void parseStudentName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"Preshita01"},"content":"        Name expectedName \u003d new StudentName(VALID_NAME);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"Preshita01"},"content":"        assertEquals(expectedName, ParserUtil.parseStudentName(VALID_NAME));","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"Preshita01"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"Preshita01"},"content":"    public void parseParentName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"Preshita01"},"content":"        Name expectedName \u003d new ParentName(VALID_NAME);","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"Preshita01"},"content":"        assertEquals(expectedName, ParserUtil.parseParentName(VALID_NAME));","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"Preshita01"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"Preshita01"},"content":"    public void parseStudentName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"Preshita01"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"Preshita01"},"content":"        Name expectedName \u003d new StudentName(VALID_NAME);","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"Preshita01"},"content":"        assertEquals(expectedName, ParserUtil.parseStudentName(nameWithWhitespace));","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"Preshita01"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"Preshita01"},"content":"    public void parseParentName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"Preshita01"},"content":"        Name expectedName \u003d new ParentName(VALID_NAME);","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"Preshita01"},"content":"        assertEquals(expectedName, ParserUtil.parseParentName(nameWithWhitespace));","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"wpinrui":11,"ErnestCuong":1,"Preshita01":33,"-":72}},{"path":"src/test/java/tutoraid/logic/parser/TutorAidParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.ListCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.PaidCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.UnpaidCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.StudentBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.StudentUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"public class TutorAidParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    private final TutorAidParser parser \u003d new TutorAidParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"        AddStudentCommand command \u003d (AddStudentCommand) parser.parseCommand(StudentUtil.getAddCommand(student));","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"        assertEquals(new AddStudentCommand(student), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"Preshita01"},"content":"        DeleteStudentCommand command \u003d (DeleteStudentCommand) parser.parseCommand(","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"                DeleteStudentCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"        assertEquals(new DeleteStudentCommand(INDEX_FIRST_STUDENT), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"JunWei3112"},"content":"    public void parseCommand_paid() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"JunWei3112"},"content":"        PaidCommand command \u003d (PaidCommand) parser.parseCommand(","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"                PaidCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"        assertEquals(new PaidCommand(INDEX_FIRST_STUDENT), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"JunWei3112"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"JunWei3112"},"content":"    public void parseCommand_unpaid() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"JunWei3112"},"content":"        UnpaidCommand command \u003d (UnpaidCommand) parser.parseCommand(","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"                UnpaidCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"        assertEquals(new UnpaidCommand(INDEX_FIRST_STUDENT), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"wpinrui":28,"JunWei3112":10,"Preshita01":1,"-":52}},{"path":"src/test/java/tutoraid/logic/parser/UnpaidCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.UnpaidCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"public class UnpaidCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"    private UnpaidCommandParser parser \u003d new UnpaidCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"    public void parse_validArgs_returnsUnpaidCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"1\", new UnpaidCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"                UnpaidCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"wpinrui":24}},{"path":"src/test/java/tutoraid/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"1\", new ViewCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"                ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"                ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"wpinrui":30}},{"path":"src/test/java/tutoraid/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.StudentBookBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.TypicalStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"        assertEquals(new StudentBook(), new StudentBook(modelManager.getStudentBook()));","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"        userPrefs.setStudentBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"        userPrefs.setStudentBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"    public void setStudentBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setStudentBookFilePath(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"    public void setStudentBookFilePath_validPath_setsStudentBookFilePath() {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"        modelManager.setStudentBookFilePath(path);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"        assertEquals(path, modelManager.getStudentBookFilePath());","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"wpinrui"},"content":"    public void hasStudent_studentNotInStudentBook_returnsFalse() {","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"        assertFalse(modelManager.hasStudent(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"wpinrui"},"content":"    public void hasStudent_studentInStudentBook_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"wpinrui"},"content":"        modelManager.addStudent(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"wpinrui"},"content":"        assertTrue(modelManager.hasStudent(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"wpinrui"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList()","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"wpinrui"},"content":"            .remove(0));","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"wpinrui"},"content":"        StudentBook studentBook \u003d new StudentBookBuilder().withStudent(TypicalStudents.ALICE)","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"wpinrui"},"content":"            .withStudent(TypicalStudents.BENSON).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"wpinrui"},"content":"        StudentBook differentStudentBook \u003d new StudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"wpinrui"},"content":"        modelManager \u003d new ModelManager(studentBook, userPrefs);","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"wpinrui"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(studentBook, userPrefs);","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"wpinrui"},"content":"        // different studentBook -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"wpinrui"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentStudentBook, userPrefs)));","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"Preshita01"},"content":"        //TODO: The only test that is failing","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"wpinrui"},"content":"        String[] keywords \u003d TypicalStudents.ALICE.getStudentName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"wpinrui"},"content":"        modelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"wpinrui"},"content":"        assertFalse(modelManager.equals(new ModelManager(studentBook, userPrefs)));","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"wpinrui"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"wpinrui"},"content":"        differentUserPrefs.setStudentBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"wpinrui"},"content":"        assertFalse(modelManager.equals(new ModelManager(studentBook, differentUserPrefs)));","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"wpinrui":40,"Preshita01":1,"-":93}},{"path":"src/test/java/tutoraid/model/StudentBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_PARENT_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.StudentBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.TypicalStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"public class StudentBookTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"    private final StudentBook studentBook \u003d new StudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"        assertEquals(Collections.emptyList(), studentBook.getStudentList());","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e studentBook.resetData(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"    public void resetData_withValidReadOnlyStudentBook_replacesData() {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"        StudentBook newData \u003d TypicalStudents.getTypicalStudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"        studentBook.resetData(newData);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"        assertEquals(newData, studentBook);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"    public void resetData_withDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"        Student editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withParentPhone(VALID_PARENT_PHONE_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(TypicalStudents.ALICE, editedAlice);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"        StudentBookStub newData \u003d new StudentBookStub(newStudents);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(DuplicateStudentException.class, () -\u003e studentBook.resetData(newData));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e studentBook.hasStudent(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"    public void hasStudent_studentNotInStudentBook_returnsFalse() {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"        assertFalse(studentBook.hasStudent(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"    public void hasStudent_studentInStudentBook_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"        studentBook.addStudent(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"        assertTrue(studentBook.hasStudent(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"    public void hasStudent_studentWithSameIdentityFieldsInStudentBook_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"        studentBook.addStudent(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"        Student editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withParentPhone(VALID_PARENT_PHONE_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"        assertTrue(studentBook.hasStudent(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"    public void getStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e studentBook.getStudentList().remove(0));","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"wpinrui"},"content":"     * A stub ReadOnlyStudentBook whose students list can violate interface constraints.","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"wpinrui"},"content":"    private static class StudentBookStub implements ReadOnlyStudentBook {","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"wpinrui"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"wpinrui"},"content":"        StudentBookStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"wpinrui"},"content":"            this.students.setAll(students);","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"wpinrui"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"wpinrui"},"content":"            return students;","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"wpinrui":41,"-":57}},{"path":"src/test/java/tutoraid/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"    public void setStudentBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPrefs.setStudentBookFilePath(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"wpinrui":6,"-":15}},{"path":"src/test/java/tutoraid/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.StudentBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"        assertFalse(predicate.test(new StudentBuilder().withStudentName(\"Alice\").build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"        assertFalse(predicate.test(new StudentBuilder().withStudentName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"        // Keywords match parent phone, student phone and parent name, but does not match student name","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Preshita01"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"Lee\", \"98375845\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"        assertFalse(predicate.test(new StudentBuilder().withStudentName(\"Alice\").withStudentPhone(\"12345\")","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Preshita01"},"content":"                .withParentName(\"Mrs Lee\").withParentPhone(\"98375845\").build()));","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wpinrui":11,"Preshita01":2,"-":62}},{"path":"src/test/java/tutoraid/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"    public void constructor_invalidStudentName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new StudentName(invalidName));","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"wpinrui":5,"Preshita01":1,"-":35}},{"path":"src/test/java/tutoraid/model/student/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"wpinrui":4,"-":31}},{"path":"src/test/java/tutoraid/model/student/ProgressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"ErnestCuong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"ErnestCuong"},"content":"public class ProgressTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"ErnestCuong"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"ErnestCuong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Progress(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"ErnestCuong"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"wpinrui":4,"ErnestCuong":10}},{"path":"src/test/java/tutoraid/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_PARENT_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_PARENT_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_STUDENT_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.StudentBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.TypicalStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"public class StudentTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    public void isSameStudent() {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"        assertTrue(TypicalStudents.ALICE.isSameStudent(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"        assertFalse(TypicalStudents.ALICE.isSameStudent(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"        Student editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withStudentPhone(VALID_STUDENT_PHONE_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"                .withParentName(VALID_PARENT_NAME_BOB).withParentPhone(VALID_PARENT_PHONE_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"        assertTrue(TypicalStudents.ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"        editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withStudentName(VALID_STUDENT_NAME_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"        assertFalse(TypicalStudents.ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"        Student editedBob \u003d new StudentBuilder(TypicalStudents.BOB).withStudentName(","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"                VALID_STUDENT_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"        assertFalse(TypicalStudents.BOB.isSameStudent(editedBob));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"        String nameWithTrailingSpaces \u003d VALID_STUDENT_NAME_BOB + \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"        editedBob \u003d new StudentBuilder(TypicalStudents.BOB).withStudentName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"        assertFalse(TypicalStudents.BOB.isSameStudent(editedBob));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"        Student aliceCopy \u003d new StudentBuilder(TypicalStudents.ALICE).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"        assertTrue(TypicalStudents.ALICE.equals(aliceCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"        assertTrue(TypicalStudents.ALICE.equals(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"        assertFalse(TypicalStudents.ALICE.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"        assertFalse(TypicalStudents.ALICE.equals(5));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"        assertFalse(TypicalStudents.ALICE.equals(TypicalStudents.BOB));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"        // different student name -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"        Student editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withStudentName(VALID_STUDENT_NAME_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"        assertFalse(TypicalStudents.ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"        // different student phone -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"        editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withStudentPhone(VALID_STUDENT_PHONE_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"        assertFalse(TypicalStudents.ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"        // different parent name -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"        editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withParentName(VALID_PARENT_NAME_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"        assertFalse(TypicalStudents.ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"        // different parent phone -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"        editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withParentPhone(VALID_PARENT_PHONE_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"        assertFalse(TypicalStudents.ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"wpinrui":78}},{"path":"src/test/java/tutoraid/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_PARENT_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.StudentBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.TypicalStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"    public void contains_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"    public void contains_studentNotInList_returnsFalse() {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"        assertFalse(uniqueStudentList.contains(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"    public void contains_studentInList_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"        assertTrue(uniqueStudentList.contains(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"    public void contains_studentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"        Student editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withParentPhone(VALID_PARENT_PHONE_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"    public void add_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"    public void add_duplicateStudent_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.add(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"    public void setStudent_nullTargetStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"                null, TypicalStudents.ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"    public void setStudent_nullEditedStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"                TypicalStudents.ALICE, null));","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"    public void setStudent_targetStudentNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.setStudent(","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"                TypicalStudents.ALICE, TypicalStudents.ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"    public void setStudent_editedStudentIsSameStudent_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.setStudent(TypicalStudents.ALICE, TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"wpinrui"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"        expectedUniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"wpinrui"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"wpinrui"},"content":"    public void setStudent_editedStudentHasSameIdentity_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"wpinrui"},"content":"        Student editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withParentPhone(VALID_PARENT_PHONE_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.setStudent(TypicalStudents.ALICE, editedAlice);","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"wpinrui"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"wpinrui"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"wpinrui"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"wpinrui"},"content":"    public void setStudent_editedStudentHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.setStudent(TypicalStudents.ALICE, TypicalStudents.BOB);","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"wpinrui"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"wpinrui"},"content":"        expectedUniqueStudentList.add(TypicalStudents.BOB);","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"wpinrui"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"wpinrui"},"content":"    public void setStudent_editedStudentHasNonUniqueIdentity_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.add(TypicalStudents.BOB);","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudent(","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"wpinrui"},"content":"                TypicalStudents.ALICE, TypicalStudents.BOB));","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"wpinrui"},"content":"    public void remove_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"wpinrui"},"content":"    public void remove_studentDoesNotExist_throwsStudentNotFoundException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.remove(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"wpinrui"},"content":"    public void remove_existingStudent_removesStudent() {","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.remove(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"wpinrui"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"wpinrui"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"wpinrui"},"content":"    public void setStudents_nullUniqueStudentList_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"wpinrui"},"content":"    public void setStudents_uniqueStudentList_replacesOwnListWithProvidedUniqueStudentList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"wpinrui"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"wpinrui"},"content":"        expectedUniqueStudentList.add(TypicalStudents.BOB);","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"wpinrui"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"wpinrui"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"wpinrui"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"wpinrui"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(TypicalStudents.BOB);","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"wpinrui"},"content":"        uniqueStudentList.setStudents(studentList);","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"wpinrui"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"wpinrui"},"content":"        expectedUniqueStudentList.add(TypicalStudents.BOB);","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"wpinrui"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"wpinrui"},"content":"    public void setStudents_listWithDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"wpinrui"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(TypicalStudents.ALICE, TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"wpinrui"},"content":"            DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudents(listWithDuplicateStudents));","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"wpinrui"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"wpinrui"},"content":"            -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"wpinrui":171}},{"path":"src/test/java/tutoraid/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.TypicalStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    private static final String VALID_STUDENT_NAME \u003d TypicalStudents.BENSON.getStudentName().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"    private static final String VALID_STUDENT_PHONE \u003d TypicalStudents.BENSON.getStudentPhone().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    private static final String VALID_PARENT_NAME \u003d TypicalStudents.BENSON.getParentName().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    private static final String VALID_PARENT_PHONE \u003d TypicalStudents.BENSON.getParentPhone().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"    private static final String VALID_PROGRESS \u003d TypicalStudents.BENSON.getProgress().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"    private static final boolean VALID_PAYMENT_STATUS \u003d TypicalStudents.BENSON.getPaymentStatus().hasPaid;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"    public void toModelType_validStudentDetails_returnsStudent() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(TypicalStudents.BENSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"        assertEquals(TypicalStudents.BENSON, student.toModelType());","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Preshita01"},"content":"    public void toModelType_invalidStudentName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(INVALID_NAME, VALID_STUDENT_PHONE,","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Preshita01"},"content":"                        VALID_PARENT_NAME, VALID_PARENT_PHONE,","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Preshita01"},"content":"                        VALID_PROGRESS, VALID_PAYMENT_STATUS);","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Preshita01"},"content":"    public void toModelType_nullStudentName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(null, VALID_STUDENT_PHONE,","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Preshita01"},"content":"                VALID_PARENT_NAME, VALID_PARENT_PHONE,","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Preshita01"},"content":"                VALID_PROGRESS, VALID_PAYMENT_STATUS);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"                JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"Preshita01"},"content":"    public void toModelType_invalidStudentPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_STUDENT_NAME, INVALID_PHONE,","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Preshita01"},"content":"                VALID_PARENT_NAME, VALID_PARENT_PHONE,","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"Preshita01"},"content":"                VALID_PROGRESS, VALID_PAYMENT_STATUS);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"Preshita01"},"content":"    public void toModelType_invalidParentName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_STUDENT_PHONE,","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Preshita01"},"content":"                INVALID_NAME, VALID_PARENT_PHONE,","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"Preshita01"},"content":"                VALID_PROGRESS, VALID_PAYMENT_STATUS);","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Preshita01"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"Preshita01"},"content":"    public void toModelType_invalidParentPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_STUDENT_NAME, INVALID_PHONE,","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Preshita01"},"content":"                VALID_PARENT_NAME, INVALID_PHONE,","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"Preshita01"},"content":"                VALID_PROGRESS, VALID_PAYMENT_STATUS);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"Preshita01"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wpinrui":28,"Preshita01":17,"-":33}},{"path":"src/test/java/tutoraid/storage/JsonSerializableStudentBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.util.JsonUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.StudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.TypicalStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"public class JsonSerializableStudentBookTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableStudentBookTest\");","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    private static final Path TYPICAL_STUDENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsStudentBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    private static final Path INVALID_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonStudentBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"    private static final Path DUPLICATE_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonStudentBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    public void toModelType_typicalStudentsFile_success() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"        JsonSerializableStudentBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STUDENTS_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"                JsonSerializableStudentBook.class).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"        StudentBook studentBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"        StudentBook typicalPersonsStudentBook \u003d TypicalStudents.getTypicalStudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"        assertEquals(studentBookFromFile, typicalPersonsStudentBook);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"    public void toModelType_invalidStudentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"        JsonSerializableStudentBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STUDENT_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"                JsonSerializableStudentBook.class).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"    public void toModelType_duplicateStudents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"        JsonSerializableStudentBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STUDENT_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"                JsonSerializableStudentBook.class).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableStudentBook.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wpinrui":25,"-":22}},{"path":"src/test/java/tutoraid/storage/JsonStudentBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.StudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.TypicalStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"public class JsonStudentBookStorageTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonStudentBookStorageTest\");","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    public void readStudentBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readStudentBook(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"    private java.util.Optional\u003cReadOnlyStudentBook\u003e readStudentBook(String filePath) throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"        return new JsonTutorAidStorage(Paths.get(filePath)).readStudentBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"        assertFalse(readStudentBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readStudentBook(\"notJsonFormatStudentBook.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"    public void readStudentBook_invalidPersonStudentBook_throwDataConversionException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readStudentBook(\"invalidPersonStudentBook.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"    public void readStudentBook_invalidAndValidPersonStudentBook_throwDataConversionException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"            DataConversionException.class, () -\u003e readStudentBook(\"invalidAndValidPersonStudentBook.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"    public void readAndSaveStudentBook_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"        Path filePath \u003d testFolder.resolve(\"TempStudentBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"        StudentBook original \u003d TypicalStudents.getTypicalStudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"        JsonTutorAidStorage jsonTutorAidStorage \u003d new JsonTutorAidStorage(filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"        jsonTutorAidStorage.saveStudentBook(original, filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"        ReadOnlyStudentBook readBack \u003d jsonTutorAidStorage.readStudentBook(filePath).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"        assertEquals(original, new StudentBook(readBack));","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"        original.addStudent(TypicalStudents.HOON);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"        original.removeStudent(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"        jsonTutorAidStorage.saveStudentBook(original, filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"        readBack \u003d jsonTutorAidStorage.readStudentBook(filePath).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"        assertEquals(original, new StudentBook(readBack));","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"wpinrui"},"content":"        original.addStudent(TypicalStudents.IDA);","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"        jsonTutorAidStorage.saveStudentBook(original); // file path not specified","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"wpinrui"},"content":"        readBack \u003d jsonTutorAidStorage.readStudentBook().get(); // file path not specified","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"wpinrui"},"content":"        assertEquals(original, new StudentBook(readBack));","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"wpinrui"},"content":"    public void saveStudentBook_nullStudentBook_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveStudentBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"wpinrui"},"content":"     * Saves {@code studentBook} at the specified {@code filePath}.","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"wpinrui"},"content":"    private void saveStudentBook(ReadOnlyStudentBook studentBook, String filePath) {","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"wpinrui"},"content":"            new JsonTutorAidStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"wpinrui"},"content":"                    .saveStudentBook(studentBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"wpinrui"},"content":"    public void saveStudentBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveStudentBook(new StudentBook(), null));","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wpinrui":43,"-":65}},{"path":"src/test/java/tutoraid/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.Assert;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"        userPrefs.setStudentBookFilePath(Paths.get(\"tutoraid.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"wpinrui"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wpinrui":10,"-":113}},{"path":"src/test/java/tutoraid/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.GuiSettings;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.StudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"import tutoraid.testutil.TypicalStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"        JsonTutorAidStorage studentBookStorage \u003d new JsonTutorAidStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"        storageManager \u003d new StorageManager(studentBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"    public void studentBookReadSave() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"         * {@link JsonTutorAidStorage} class.","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonStudentBookStorageTest} class.","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"        StudentBook original \u003d TypicalStudents.getTypicalStudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"        storageManager.saveStudentBook(original);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"        ReadOnlyStudentBook retrieved \u003d storageManager.readStudentBook().get();","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"        assertEquals(original, new StudentBook(retrieved));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"    public void getStudentBookFilePath() {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"        assertNotNull(storageManager.getStudentBookFilePath());","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":17,"-":51}},{"path":"src/test/java/tutoraid/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"wpinrui":1,"-":33}},{"path":"src/test/java/tutoraid/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":1,"-":71}},{"path":"src/test/java/tutoraid/testutil/StudentBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.StudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":" * A utility class to help with building StudentBook objects.","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":" *     {@code StudentBook sb \u003d new StudentBookBuilder().withStudent(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"public class StudentBookBuilder {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"    private StudentBook studentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"    public StudentBookBuilder() {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"        studentBook \u003d new StudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    public StudentBookBuilder(StudentBook studentBook) {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"        this.studentBook \u003d studentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"     * Adds a new {@code Student} to the {@code StudentBook} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    public StudentBookBuilder withStudent(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"        studentBook.addStudent(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"    public StudentBook build() {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"        return studentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":16,"-":18}},{"path":"src/test/java/tutoraid/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.ParentName;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.PaymentStatus;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Phone;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Progress;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.StudentName;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"public class StudentBuilder {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"    public static final String DEFAULT_STUDENT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"    public static final String DEFAULT_STUDENT_PHONE \u003d \"96355255\";","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"    public static final String DEFAULT_PARENT_NAME \u003d \"Mr Bee\";","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":"    public static final String DEFAULT_PARENT_PHONE \u003d \"85355255\";","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ErnestCuong"},"content":"    public static final String DEFAULT_PROGRESS \u003d \"No Progress\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"JunWei3112"},"content":"    public static final boolean DEFAULT_PAYMENT_STATUS \u003d false;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"Preshita01"},"content":"    private StudentName studentName;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Preshita01"},"content":"    private Phone studentPhone;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Preshita01"},"content":"    private ParentName parentName;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Preshita01"},"content":"    private Phone parentPhone;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"ErnestCuong"},"content":"    private Progress progress;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"JunWei3112"},"content":"    private PaymentStatus paymentStatus;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"    public StudentBuilder() {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"        studentName \u003d new StudentName(DEFAULT_STUDENT_NAME);","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Preshita01"},"content":"        studentPhone \u003d new Phone(DEFAULT_STUDENT_PHONE);","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Preshita01"},"content":"        parentName \u003d new ParentName(DEFAULT_PARENT_NAME);","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Preshita01"},"content":"        parentPhone \u003d new Phone(DEFAULT_PARENT_PHONE);","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"ErnestCuong"},"content":"        progress \u003d new Progress(DEFAULT_PROGRESS);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"JunWei3112"},"content":"        paymentStatus \u003d new PaymentStatus(DEFAULT_PAYMENT_STATUS);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"        studentName \u003d studentToCopy.getStudentName();","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"        studentPhone \u003d studentToCopy.getStudentPhone();","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"        parentName \u003d studentToCopy.getParentName();","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"        parentPhone \u003d studentToCopy.getParentPhone();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"        progress \u003d studentToCopy.getProgress();","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"        paymentStatus \u003d studentToCopy.getPaymentStatus();","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"     * Sets the {@code StudentName} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"    public StudentBuilder withStudentName(String name) {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Preshita01"},"content":"        this.studentName \u003d new StudentName(name);","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"     * Sets the {@code ParentName} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"    public StudentBuilder withParentName(String name) {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Preshita01"},"content":"        this.parentName \u003d new ParentName(name);","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"     * Sets the {@code StudentPhone} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"    public StudentBuilder withStudentPhone(String phone) {","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Preshita01"},"content":"        this.studentPhone \u003d new Phone(phone);","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"     * Sets the {@code ParentPhone} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"wpinrui"},"content":"    public StudentBuilder withParentPhone(String phone) {","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"Preshita01"},"content":"        this.parentPhone \u003d new Phone(phone);","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"ErnestCuong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"wpinrui"},"content":"     * Sets the {@code Progress} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"ErnestCuong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"wpinrui"},"content":"    public StudentBuilder withProgress(String progress) {","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"ErnestCuong"},"content":"        this.progress \u003d new Progress(progress);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"ErnestCuong"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"ErnestCuong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"ErnestCuong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"JunWei3112"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"wpinrui"},"content":"     * Sets the {@code Payment Statis} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"JunWei3112"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"wpinrui"},"content":"    public StudentBuilder withPaymentStatus(boolean hasPaid) {","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"JunWei3112"},"content":"        this.paymentStatus \u003d new PaymentStatus(hasPaid);","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"JunWei3112"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"JunWei3112"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"JunWei3112"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"wpinrui"},"content":"    public Student build() {","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"wpinrui"},"content":"        return new Student(studentName, studentPhone, parentName, parentPhone, progress, paymentStatus);","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"wpinrui":33,"ErnestCuong":9,"JunWei3112":9,"Preshita01":16,"-":36}},{"path":"src/test/java/tutoraid/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.parser.CliSyntax.PREFIX_PARENT_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.parser.CliSyntax.PREFIX_PARENT_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.parser.CliSyntax.PREFIX_STUDENT_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.parser.CliSyntax.PREFIX_STUDENT_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":" * A utility class for Student.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"public class StudentUtil {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"        return AddStudentCommand.COMMAND_WORD + \" \" + getStudentDetails(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"        sb.append(PREFIX_STUDENT_NAME + student.getStudentName().fullName + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"        sb.append(PREFIX_STUDENT_PHONE + student.getStudentPhone().value + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"        sb.append(PREFIX_PARENT_NAME + student.getParentName().fullName + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"        sb.append(PREFIX_PARENT_PHONE + student.getParentPhone().value + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"wpinrui":18,"Preshita01":1,"-":16}},{"path":"src/test/java/tutoraid/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"    public static Student getStudent(Model model, Index index) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wpinrui":11,"-":44}},{"path":"src/test/java/tutoraid/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import tutoraid.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"    public static final Index INDEX_FIRST_STUDENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"    public static final Index INDEX_SECOND_STUDENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"    public static final Index INDEX_THIRD_STUDENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"wpinrui":5,"-":7}},{"path":"src/test/java/tutoraid/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_PARENT_NAME_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_PARENT_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_PARENT_PHONE_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_PARENT_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_PAYMENT_STATUS_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_PAYMENT_STATUS_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_PROGRESS_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_PROGRESS_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_STUDENT_PHONE_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.logic.commands.CommandTestUtil.VALID_STUDENT_PHONE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.StudentBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"import tutoraid.model.student.Student;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"public class TypicalStudents {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    public static final Student ALICE \u003d new StudentBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"            .withStudentName(\"Alice Pauline\")","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"            .withStudentPhone(\"94351234\")","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"            .withParentName(\"Mrs Tan\")","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"            .withParentPhone(\"94351253\")","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"            .withProgress(\"No Progress\")","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"            .withPaymentStatus(false)","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"            .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"    public static final Student BENSON \u003d new StudentBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"            .withStudentName(\"Benson Meier\")","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"            .withStudentPhone(\"98765423\")","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"            .withParentName(\"Mrs Meier\")","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"            .withParentPhone(\"98765432\")","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"            .withProgress(\"No Progress\")","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"            .withPaymentStatus(true)","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"            .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"    public static final Student CARL \u003d new StudentBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"            .withStudentName(\"Carl Kurz\")","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"            .withStudentPhone(\"95352563\")","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"            .withParentName(\"Mr Kurz\")","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"            .withParentPhone(\"95352567\")","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"            .withProgress(\"No Progress\")","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"            .withPaymentStatus(false)","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"            .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"    public static final Student DANIEL \u003d new StudentBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"            .withStudentName(\"Daniel Meier\")","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"            .withStudentPhone(\"87652533\")","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"            .withParentName(\"Mrs Meier\")","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"            .withParentPhone(\"98765432\")","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"            .withProgress(\"No Progress\")","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"            .withPaymentStatus(false)","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"            .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"    public static final Student ELLE \u003d new StudentBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"            .withStudentName(\"Elle Meyer\")","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"            .withStudentPhone(\"9482224\")","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"            .withParentName(\"Mrs Meyer\")","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"            .withParentPhone(\"9482290\")","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"            .withPaymentStatus(false)","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"            .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"    public static final Student FIONA \u003d new StudentBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"            .withStudentName(\"Fiona Kunz\")","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"            .withStudentPhone(\"9482427\")","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"            .withParentName(\"Mr Daniel\")","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"            .withParentPhone(\"9482423\")","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"            .withProgress(\"No Progress\")","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"            .withPaymentStatus(false)","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"            .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"    public static final Student GEORGE \u003d new StudentBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"            .withStudentName(\"George Best\")","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"            .withStudentPhone(\"9482442\")","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"            .withParentName(\"Mrs Kayla\")","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"            .withParentPhone(\"94824432\")","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"wpinrui"},"content":"            .withProgress(\"No Progress\")","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"wpinrui"},"content":"            .withPaymentStatus(false)","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"            .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"wpinrui"},"content":"    public static final Student HOON \u003d new StudentBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"wpinrui"},"content":"            .withStudentName(\"Hoon Meier\")","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"wpinrui"},"content":"            .withStudentPhone(\"8482424\")","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"wpinrui"},"content":"            .withParentName(\"Mrs Meier\")","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"wpinrui"},"content":"            .withParentPhone(\"98765432\")","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"wpinrui"},"content":"            .withProgress(\"No Progress\")","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"wpinrui"},"content":"            .withPaymentStatus(false)","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"wpinrui"},"content":"            .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"wpinrui"},"content":"    public static final Student IDA \u003d new StudentBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"wpinrui"},"content":"            .withStudentName(\"Ida Mueller\")","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"wpinrui"},"content":"            .withStudentPhone(\"8482131\")","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"wpinrui"},"content":"            .withParentName(\"Mr Mueller\")","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"wpinrui"},"content":"            .withParentPhone(\"8482155\")","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"wpinrui"},"content":"            .withProgress(\"No Progress\")","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"wpinrui"},"content":"            .withPaymentStatus(false)","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"wpinrui"},"content":"            .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":101,"author":{"gitId":"wpinrui"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"wpinrui"},"content":"    public static final Student AMY \u003d new StudentBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"wpinrui"},"content":"            .withStudentName(VALID_STUDENT_NAME_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"Preshita01"},"content":"            .withStudentPhone(VALID_STUDENT_PHONE_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"Preshita01"},"content":"            .withParentName(VALID_PARENT_NAME_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"Preshita01"},"content":"            .withParentPhone(VALID_PARENT_PHONE_AMY)","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"Preshita01"},"content":"            .withProgress(VALID_PROGRESS_AMY)","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"wpinrui"},"content":"            .withPaymentStatus(VALID_PAYMENT_STATUS_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"wpinrui"},"content":"            .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"wpinrui"},"content":"    public static final Student BOB \u003d new StudentBuilder()","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"wpinrui"},"content":"            .withStudentName(VALID_STUDENT_NAME_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"Preshita01"},"content":"            .withStudentPhone(VALID_STUDENT_PHONE_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"Preshita01"},"content":"            .withParentName(VALID_PARENT_NAME_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"Preshita01"},"content":"            .withParentPhone(VALID_PARENT_PHONE_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"Preshita01"},"content":"            .withProgress(VALID_PROGRESS_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"Preshita01"},"content":"            .withPaymentStatus(VALID_PAYMENT_STATUS_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"Preshita01"},"content":"            .build();","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":121,"author":{"gitId":"wpinrui"},"content":"    private TypicalStudents() {","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"wpinrui"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":125,"author":{"gitId":"wpinrui"},"content":"     * Returns an {@code StudentBook} with all the typical students.","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":127,"author":{"gitId":"wpinrui"},"content":"    public static StudentBook getTypicalStudentBook() {","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"wpinrui"},"content":"        StudentBook ab \u003d new StudentBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"wpinrui"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"wpinrui"},"content":"            ab.addStudent(student);","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":135,"author":{"gitId":"wpinrui"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"wpinrui":103,"Preshita01":10,"-":25}},{"path":"src/test/java/tutoraid/ui/StudentCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.ui.StudentCard.formatCardLabel;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"public class StudentCardTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"    public void formatCardLabel_emptyLabelEmptyField() {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"        assertEquals(\"(None)\", formatCardLabel(\"\", \"\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"    public void formatCardLabel_emptyLabelValidField() {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"        assertEquals(\"Value\", formatCardLabel(\"\", \"Value\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"    public void formatCardLabel_validLabelEmptyField() {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"        assertEquals(\"Field: (None)\", formatCardLabel(\"Field\", \"\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"    public void formatCardLabel_validLabelValidField() {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"        assertEquals(\"Field: Name\", formatCardLabel(\"Field\", \"Name\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"wpinrui":31}},{"path":"src/test/java/tutoraid/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"wpinrui":1,"-":34}},{"path":"src/test/java/tutoraid/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package tutoraid.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import static tutoraid.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import tutoraid.MainApp;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"wpinrui":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"\u003c?import tutoraid.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"wpinrui":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"\u003cfx:root type\u003d\"tutoraid.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"wpinrui":1,"-":5}}]
