[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103-W14-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103-W14-2/tp/actions) [![codecov](https://codecov.io/gh/AY2122S1-CS2103-W14-2/tp/branch/master/graph/badge.svg?token\u003dWENQ6375WF)](https://codecov.io/gh/AY2122S1-CS2103-W14-2/tp)","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"* Track2Gather is an app that will manage up to a few thousand contacts, providing basic features for contact tracing","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"  personnel to organise and search through them via:","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"    * personal information (limited to English names and Singaporean contact numbers and addresses)","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"    * case contacts","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"    * quarantine period","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"* For the detailed documentation of this project, see","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"  the **[Track2Gather Website](https://ay2122s1-cs2103-w14-2.github.io/tp/)**.","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"luffingluffy":9,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"mainClassName \u003d \u0027seedu.track2gather.Main\u0027","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"run {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"    archiveName \u003d \u0027track2gather.jar\u0027","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"luffingluffy":4,"-":70,"wei2912":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"### Ian Yong","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"\u003cimg src\u003d\"images/ianyong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"[[github](https://github.com/ianyong)]","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":"[[portfolio](team/ianyong.md)]","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"### Lauren Shak","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"\u003cimg src\u003d\"images/lrnshk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"[[github](http://github.com/lrnshk)]","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"[[portfolio](team/lrnshk.md)]","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"* Responsibilities: Scheduling","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"### Lutfi Randiva","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"\u003cimg src\u003d\"images/luffingluffy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"[[github](http://github.com/luffingluffy)] [[portfolio](team/luffingluffy.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"* Responsibilities: UI, Scheduling and Deliverables","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"frederickpek"},"content":"### Frederick Pek","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"frederickpek"},"content":"\u003cimg src\u003d\"images/frederickpek.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"frederickpek"},"content":"[[github](http://github.com/frederickpek)]","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"frederickpek"},"content":"[[portfolio](team/frederickpek.md)]","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"frederickpek"},"content":"* Responsibilities: Documentation and JavaFX","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"### Andrew Sutjipto","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"\u003cimg src\u003d\"images/over-fitted.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"[[github](http://github.com/over-fitted)]","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"[[portfolio](team/over-fitted.md)]","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"* Responsibilities: Git and Testing","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"### Ng Wei En","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"\u003cimg src\u003d\"images/wei2912.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"[[github](http://github.com/wei2912)]","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"[[portfolio](team/wei2912.md)]","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"* Role: Developer","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"* Responsibilities: GitHub Actions and Integration","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"jennibearduit"},"content":"### Jennifer","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"jennibearduit"},"content":"\u003cimg src\u003d\"images/jennibearduit.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"jennibearduit"},"content":"[[github](http://github.com/jennibearduit)]","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"jennibearduit"},"content":"[[portfolio](team/jennibearduit.md)]","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"jennibearduit"},"content":"* Responsibilities: Coding Standard","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"luffingluffy":3,"over-fitted":5,"lrnshk":10,"-":41,"wei2912":10,"frederickpek":5,"jennibearduit":5}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your fork to CodeCov.","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/AY2122S1-CS2103-W14-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2122S1-CS2103-W14-2/tp) in that page reflects the coverage of your project.","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2122S1-CS2103-W14-2/tp/tree/master/src/main/java/seedu/track2gather/MainApp.java).","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"-":77,"wei2912":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S1-CS2103-W14-2/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103-W14-2/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103-W14-2/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for:","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"lrnshk"},"content":"* At app launch: Initializing the components in the correct sequence, and connecting them up with each other.","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"lrnshk"},"content":"* At shut down: Shutting down the components and invoking cleanup methods where necessary.","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"lrnshk"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103-W14-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"lrnshk"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103-W14-2/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S1-CS2103-W14-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"lrnshk"},"content":"The `UI` component:","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"lrnshk"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103-W14-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"lrnshk"},"content":"1. When `Logic` is called upon to execute a command, it uses the `Track2GatherParser` class to parse the user command.","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"lrnshk"},"content":"* When called upon to parse a user command, the `Track2GatherParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `Track2GatherParser` returns back as a `Command` object.","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"wei2912"},"content":"**Note:** Command objects which have simpler syntax, e.g. `ClearCommand`, may be created directly within the `Track2GatherParser` class without the use of a `XYZCommandParser` class.","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"lrnshk"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103-W14-2/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"lrnshk"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"lrnshk"},"content":"The `Model` component:","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"wei2912"},"content":"* stores the contacts list data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"wei2912"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _sorted_ and _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"lrnshk"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103-W14-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"lrnshk"},"content":"The `Storage` component:","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"wei2912"},"content":"* can save both contacts list data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"lrnshk"},"content":"* inherits from both `Track2GatherStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"lrnshk"},"content":"Classes used by multiple components are in the `seedu.Track2Gather.commons` package.","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"lrnshk"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedTrack2Gather`. It extends `Track2Gather` with an undo/redo history, stored internally as an `Track2GatherStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"wei2912"},"content":"* `VersionedTrack2Gather#commit()` — Saves the current Track2Gather state in its history.","lastModifiedDate":"2021-10-31"},{"lineNumber":159,"author":{"gitId":"wei2912"},"content":"* `VersionedTrack2Gather#undo()` — Restores the previous Track2Gather state from its history.","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"wei2912"},"content":"* `VersionedTrack2Gather#redo()` — Restores a previously undone Track2Gather state from its history.","lastModifiedDate":"2021-10-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"lrnshk"},"content":"These operations are exposed in the `Model` interface as `Model#commitTrack2Gather()`, `Model#undoTrack2Gather()` and `Model#redoTrack2Gather()` respectively.","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"wei2912"},"content":"Step 1. The user launches the application for the first time. The `VersionedTrack2Gather` will be initialized with the initial Track2Gather state, and the `currentStatePointer` pointing to that single Track2Gather state.","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"wei2912"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the contacts list. The `delete` command calls `Model#commitTrack2Gather()`, causing the modified state of the contacts list after the `delete 5` command executes to be saved in the `Track2GatherStateList`, and the `currentStatePointer` is shifted to the newly inserted Track2Gather state.","lastModifiedDate":"2021-10-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"wei2912"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitTrack2Gather()`, causing another modified Track2Gather state to be saved into the `Track2GatherStateList`.","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"wei2912"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitTrack2Gather()`, so the Track2Gather state will not be saved into the `Track2GatherStateList`.","lastModifiedDate":"2021-10-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"wei2912"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoTrack2Gather()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous Track2Gather state, and restores Track2Gather to that state.","lastModifiedDate":"2021-10-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"lrnshk"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial Track2Gather state, then there are no previous Track2Gather states to restore. The `undo` command uses `Model#canUndoTrack2Gather()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2021-10-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"wei2912"},"content":"The `redo` command does the opposite — it calls `Model#redoTrack2Gather()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores Track2Gather to that state.","lastModifiedDate":"2021-10-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"wei2912"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `Track2GatherStateList.size() - 1`, pointing to the latest Track2Gather state, then there are no undone Track2Gather states to restore. The `redo` command uses `Model#canRedoTrack2Gather()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2021-10-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"wei2912"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the contacts list, such as `list`, will usually not call `Model#commitTrack2Gather()`, `Model#undoTrack2Gather()` or `Model#redoTrack2Gather()`. Thus, the `Track2GatherStateList` remains unchanged.","lastModifiedDate":"2021-10-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"wei2912"},"content":"Step 6. The user executes `clear`, which calls `Model#commitTrack2Gather()`. Since the `currentStatePointer` is not pointing at the end of the `Track2GatherStateList`, all Track2Gather states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2021-10-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"wei2912"},"content":"* **Alternative 1 (current choice):** Saves the entire contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"lrnshk"},"content":"**Target user profile**: contact tracing personnel at MOH who:","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"lrnshk"},"content":"* have a need to maintain a lot of contact information","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"lrnshk"},"content":"* have a need to regularly contact a large set of persons and track their responsiveness over a period of time","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"lrnshk"},"content":"* prefer CLI over GUI","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":261,"author":{"gitId":"lrnshk"},"content":"**Value proposition**: The app will manage up to a few thousand contacts, providing basic features for contact tracing personnel to organise and search through them according to personal information (limited to English names and Singaporean contact numbers and addresses), case numbers and Stay-Home-Notice (SHN) periods.","lastModifiedDate":"2021-11-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"| Priority | As a …​          | I want to …​                   | So that I can…​                                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"lrnshk"},"content":"| -------- | --------------------| --------------------------------- | ----------------------------------------------------------------------- |","lastModifiedDate":"2021-11-01"},{"lineNumber":270,"author":{"gitId":"lrnshk"},"content":"| `* * *`  | new user            | see usage instructions         | refer to instructions when I forget how to use the app                  |","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"lrnshk"},"content":"| `* * *`  | user                | save my contacts               | keep track of their details between sessions                            |","lastModifiedDate":"2021-11-04"},{"lineNumber":272,"author":{"gitId":"lrnshk"},"content":"| `* * *`  | user                | add a person’s personal information | contact the person regularly to enforce SHN |","lastModifiedDate":"2021-11-01"},{"lineNumber":273,"author":{"gitId":"lrnshk"},"content":"| `* * *`  | user                | add a person’s next-of-kin’s information | contact the person’s next-of-kin should an emergency arise |","lastModifiedDate":"2021-11-01"},{"lineNumber":274,"author":{"gitId":"lrnshk"},"content":"| `* * *`  | user                | add a person’s SHN period | track the person only within their SHN period |","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"lrnshk"},"content":"| `* * *`  | user                | delete multiple persons at once | more easily clean my contacts                                         |","lastModifiedDate":"2021-11-01"},{"lineNumber":276,"author":{"gitId":"lrnshk"},"content":"| `* * *`  | user                | update a person\u0027s personal information and SHN period without re-adding that person  | avoid re-entering existing data |","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"lrnshk"},"content":"| `* *`    | user                | update the SHN periods of all persons      | postpone or bring forward the SHN end dates according to government regulations    |","lastModifiedDate":"2021-11-04"},{"lineNumber":278,"author":{"gitId":"lrnshk"},"content":"| `* *`    | user                | remove persons whose SHN period has been completed | quickly and easily clear outdated contacts           |","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"lrnshk"},"content":"| `* * `  | user                 | find person(s) by name, phone number, case number, SHN start date or SHN end date          | locate specific person(s) without having to go through the entire list  |","lastModifiedDate":"2021-11-04"},{"lineNumber":280,"author":{"gitId":"lrnshk"},"content":"| `* *`    | user                | sort contacts by name, case number, SHN start date or SHN end date | more easily browse through the contacts |","lastModifiedDate":"2021-11-01"},{"lineNumber":281,"author":{"gitId":"lrnshk"},"content":"| `* *`    | user                | see the number of search results | estimate how much additional filtering I would need to do          |","lastModifiedDate":"2021-11-01"},{"lineNumber":282,"author":{"gitId":"lrnshk"},"content":"| `* *`    | user                | view a dynamically filtered list of persons who have not been called in the current SHN enforcement session | know which persons need to be called next |","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"lrnshk"},"content":"| `* *`    | user                | mark a person as contacted in the current SHN enforcement session | track who I have tried to contact for the day        |","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"lrnshk"},"content":"| `* *`    | user                | mark a person as un-contactable in the current SHN enforcement session | track the person\u0027s non-compliance instances for further action       |","lastModifiedDate":"2021-11-01"},{"lineNumber":285,"author":{"gitId":"frederickpek"},"content":"| `* *`    | experienced user    | directly adjust my save files  | bypass the CLI for simple bulk tasks                                    |","lastModifiedDate":"2021-09-26"},{"lineNumber":286,"author":{"gitId":"lrnshk"},"content":"| `*`      | user                | have Track2Gather dial my contacts for me       | increase efficiency when calling persons              |","lastModifiedDate":"2021-11-01"},{"lineNumber":287,"author":{"gitId":"lrnshk"},"content":"| `*`      | user                | be able to search persons with similar postal codes         | find groups of persons who stay within a close vicinity, and take fewer trips while enforcing SHN                |","lastModifiedDate":"2021-11-01"},{"lineNumber":288,"author":{"gitId":"lrnshk"},"content":"| `*`      | user                | be given a warning before making any delete operations      |  avoid accidentally losing data             |","lastModifiedDate":"2021-11-01"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"frederickpek"},"content":"(For all use cases below, the **System** is the `Track2Gather` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-26"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":294,"author":{"gitId":"lrnshk"},"content":"#### Use case: UC01 - Add a new person ","lastModifiedDate":"2021-11-01"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":296,"author":{"gitId":"frederickpek"},"content":"**MSS:**","lastModifiedDate":"2021-09-26"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":298,"author":{"gitId":"lrnshk"},"content":"1. User chooses to add a new person.","lastModifiedDate":"2021-11-01"},{"lineNumber":299,"author":{"gitId":"lrnshk"},"content":"2. Track2Gather requests for details of the person.","lastModifiedDate":"2021-11-01"},{"lineNumber":300,"author":{"gitId":"lrnshk"},"content":"3. User enters the requested details.","lastModifiedDate":"2021-11-01"},{"lineNumber":301,"author":{"gitId":"lrnshk"},"content":"4. Track2Gather adds the person and shows the details of the new person.","lastModifiedDate":"2021-11-01"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":305,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":307,"author":{"gitId":"lrnshk"},"content":"* 3a. The format of the given details is invalid.","lastModifiedDate":"2021-11-01"},{"lineNumber":308,"author":{"gitId":"lrnshk"},"content":"    * 3a1. Track2Gather shows the correct format for input.","lastModifiedDate":"2021-11-04"},{"lineNumber":309,"author":{"gitId":"frederickpek"},"content":"      ","lastModifiedDate":"2021-09-26"},{"lineNumber":310,"author":{"gitId":"lrnshk"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-11-01"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"lrnshk"},"content":"#### Use case: UC02 - Delete person(s)","lastModifiedDate":"2021-11-01"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"frederickpek"},"content":"**MSS:**","lastModifiedDate":"2021-09-26"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"lrnshk"},"content":"1. User chooses to list persons.","lastModifiedDate":"2021-11-01"},{"lineNumber":317,"author":{"gitId":"lrnshk"},"content":"2. Track2Gather shows a list of persons.","lastModifiedDate":"2021-10-26"},{"lineNumber":318,"author":{"gitId":"lrnshk"},"content":"3. User identifies specific person(s) to delete from the list.","lastModifiedDate":"2021-11-01"},{"lineNumber":319,"author":{"gitId":"lrnshk"},"content":"4. Track2Gather deletes the person(s) and shows the details of the deleted person(s).","lastModifiedDate":"2021-11-01"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"lrnshk"},"content":"* 3a. One or more of the given index(s) is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":329,"author":{"gitId":"frederickpek"},"content":"    * 3a1. Track2Gather shows an error message.","lastModifiedDate":"2021-09-26"},{"lineNumber":330,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":331,"author":{"gitId":"lrnshk"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-11-01"},{"lineNumber":332,"author":{"gitId":"lrnshk"},"content":"* 3b. The format of the given details is invalid.","lastModifiedDate":"2021-11-01"},{"lineNumber":333,"author":{"gitId":"lrnshk"},"content":"    * 3b1. Track2Gather shows the correct format for input.","lastModifiedDate":"2021-11-01"},{"lineNumber":334,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":335,"author":{"gitId":"lrnshk"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-11-01"},{"lineNumber":336,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":337,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":338,"author":{"gitId":"lrnshk"},"content":"#### Use case: UC03 - Edit details of an existing person","lastModifiedDate":"2021-11-01"},{"lineNumber":339,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":340,"author":{"gitId":"frederickpek"},"content":"**MSS:**","lastModifiedDate":"2021-09-26"},{"lineNumber":341,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":342,"author":{"gitId":"lrnshk"},"content":"1. User chooses to list persons.","lastModifiedDate":"2021-11-01"},{"lineNumber":343,"author":{"gitId":"jennibearduit"},"content":"2. Track2Gather shows a list of persons.","lastModifiedDate":"2021-10-24"},{"lineNumber":344,"author":{"gitId":"lrnshk"},"content":"3. User chooses to edit a person.","lastModifiedDate":"2021-11-01"},{"lineNumber":345,"author":{"gitId":"lrnshk"},"content":"4. Track2Gather requests for details of the person to be edited.","lastModifiedDate":"2021-11-01"},{"lineNumber":346,"author":{"gitId":"lrnshk"},"content":"5. User enters the requested details.","lastModifiedDate":"2021-11-01"},{"lineNumber":347,"author":{"gitId":"lrnshk"},"content":"6. Track2Gather edits the person.","lastModifiedDate":"2021-11-01"},{"lineNumber":348,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":349,"author":{"gitId":"frederickpek"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"frederickpek"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":353,"author":{"gitId":"frederickpek"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-26"},{"lineNumber":354,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":355,"author":{"gitId":"frederickpek"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":356,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-11-01"},{"lineNumber":357,"author":{"gitId":"lrnshk"},"content":"  * 3a1. Track2Gather shows an error message.","lastModifiedDate":"2021-11-01"},{"lineNumber":358,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":359,"author":{"gitId":"lrnshk"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2021-11-01"},{"lineNumber":360,"author":{"gitId":"lrnshk"},"content":"* 5a. The format of the given details is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":361,"author":{"gitId":"lrnshk"},"content":"  * 5a1. Track2Gather shows the correct format for input.","lastModifiedDate":"2021-11-04"},{"lineNumber":362,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":363,"author":{"gitId":"frederickpek"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2021-09-26"},{"lineNumber":364,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":365,"author":{"gitId":"lrnshk"},"content":"#### Use case: UC04 - Update SHN end dates of all persons","lastModifiedDate":"2021-11-04"},{"lineNumber":366,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":367,"author":{"gitId":"frederickpek"},"content":"**MSS:**","lastModifiedDate":"2021-09-26"},{"lineNumber":368,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":369,"author":{"gitId":"lrnshk"},"content":"1. User chooses to list persons.","lastModifiedDate":"2021-11-01"},{"lineNumber":370,"author":{"gitId":"frederickpek"},"content":"2. Track2Gather shows a list of persons.","lastModifiedDate":"2021-09-26"},{"lineNumber":371,"author":{"gitId":"lrnshk"},"content":"3. User chooses to update the SHN end dates of all persons.","lastModifiedDate":"2021-11-04"},{"lineNumber":372,"author":{"gitId":"lrnshk"},"content":"4. Track2Gather requests for the number of days to shift the SHN end dates.","lastModifiedDate":"2021-11-04"},{"lineNumber":373,"author":{"gitId":"lrnshk"},"content":"5. User enters the number of days.","lastModifiedDate":"2021-11-04"},{"lineNumber":374,"author":{"gitId":"lrnshk"},"content":"6. Track2Gather updates all persons\u0027 SHN end dates.","lastModifiedDate":"2021-11-04"},{"lineNumber":375,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":376,"author":{"gitId":"frederickpek"},"content":"   Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":377,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":378,"author":{"gitId":"frederickpek"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":379,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":380,"author":{"gitId":"frederickpek"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-26"},{"lineNumber":381,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":382,"author":{"gitId":"frederickpek"},"content":"  Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":383,"author":{"gitId":"lrnshk"},"content":"* 5a. The format of the given details is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":384,"author":{"gitId":"lrnshk"},"content":"    * 5a1. Track2Gather shows the correct format for input.","lastModifiedDate":"2021-11-01"},{"lineNumber":385,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":386,"author":{"gitId":"lrnshk"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-11-04"},{"lineNumber":387,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":388,"author":{"gitId":"lrnshk"},"content":"#### Use case: UC05 - Clear persons with completed SHN periods","lastModifiedDate":"2021-11-01"},{"lineNumber":389,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":390,"author":{"gitId":"frederickpek"},"content":"**MSS:**","lastModifiedDate":"2021-09-26"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":392,"author":{"gitId":"lrnshk"},"content":"1. User chooses to list persons.","lastModifiedDate":"2021-11-01"},{"lineNumber":393,"author":{"gitId":"lrnshk"},"content":"2. Track2Gather shows a list of persons.","lastModifiedDate":"2021-10-21"},{"lineNumber":394,"author":{"gitId":"lrnshk"},"content":"3. User chooses to clear persons.","lastModifiedDate":"2021-10-21"},{"lineNumber":395,"author":{"gitId":"lrnshk"},"content":"4. Track2Gather clears all persons with completed SHN periods.","lastModifiedDate":"2021-10-21"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":397,"author":{"gitId":"frederickpek"},"content":"   Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":399,"author":{"gitId":"frederickpek"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":400,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":401,"author":{"gitId":"lrnshk"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-10-21"},{"lineNumber":402,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":403,"author":{"gitId":"lrnshk"},"content":"  Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":404,"author":{"gitId":"lrnshk"},"content":"* 3a. There are no persons with completed SHN periods.","lastModifiedDate":"2021-10-21"},{"lineNumber":405,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":406,"author":{"gitId":"frederickpek"},"content":"  Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":407,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":408,"author":{"gitId":"lrnshk"},"content":"#### Use case: UC06 - Find person(s) by name, phone number, case number, SHN start date or SHN end date","lastModifiedDate":"2021-11-01"},{"lineNumber":409,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":410,"author":{"gitId":"frederickpek"},"content":"**MSS:**","lastModifiedDate":"2021-10-23"},{"lineNumber":411,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":412,"author":{"gitId":"lrnshk"},"content":"1. User chooses to list persons.","lastModifiedDate":"2021-11-01"},{"lineNumber":413,"author":{"gitId":"frederickpek"},"content":"2. Track2Gather shows a list of persons.","lastModifiedDate":"2021-10-23"},{"lineNumber":414,"author":{"gitId":"lrnshk"},"content":"3. User chooses to find person(s).","lastModifiedDate":"2021-11-01"},{"lineNumber":415,"author":{"gitId":"lrnshk"},"content":"4. Track2Gather requests for the search keyword(s).","lastModifiedDate":"2021-11-01"},{"lineNumber":416,"author":{"gitId":"lrnshk"},"content":"5. User enters the search keyword(s).","lastModifiedDate":"2021-11-01"},{"lineNumber":417,"author":{"gitId":"lrnshk"},"content":"6. Track2Gather shows the person(s) containing keyword(s) in the field.","lastModifiedDate":"2021-11-01"},{"lineNumber":418,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":419,"author":{"gitId":"frederickpek"},"content":"    Use case ends.","lastModifiedDate":"2021-10-23"},{"lineNumber":420,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":421,"author":{"gitId":"frederickpek"},"content":"**Extensions**","lastModifiedDate":"2021-10-23"},{"lineNumber":422,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":423,"author":{"gitId":"frederickpek"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-10-23"},{"lineNumber":424,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":425,"author":{"gitId":"frederickpek"},"content":"    Use case ends.","lastModifiedDate":"2021-10-23"},{"lineNumber":426,"author":{"gitId":"lrnshk"},"content":"* 5a. The format of the given details is invalid.","lastModifiedDate":"2021-11-01"},{"lineNumber":427,"author":{"gitId":"lrnshk"},"content":"  * 5a1. Track2Gather shows the correct format for input.","lastModifiedDate":"2021-11-01"},{"lineNumber":428,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":429,"author":{"gitId":"lrnshk"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2021-11-01"},{"lineNumber":430,"author":{"gitId":"lrnshk"},"content":"* 6a. No person found.","lastModifiedDate":"2021-11-01"},{"lineNumber":431,"author":{"gitId":"lrnshk"},"content":"  * 6a1. Track2Gather prompts the user that no person is found.","lastModifiedDate":"2021-11-01"},{"lineNumber":432,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":433,"author":{"gitId":"lrnshk"},"content":"    Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":434,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":435,"author":{"gitId":"lrnshk"},"content":"#### Use case: UC07 - Sort person(s) by name, case number, SHN start date and/or SHN end date","lastModifiedDate":"2021-11-04"},{"lineNumber":436,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":437,"author":{"gitId":"wei2912"},"content":"**MSS:**","lastModifiedDate":"2021-10-24"},{"lineNumber":438,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":439,"author":{"gitId":"lrnshk"},"content":"1. User chooses to list persons.","lastModifiedDate":"2021-11-01"},{"lineNumber":440,"author":{"gitId":"wei2912"},"content":"2. Track2Gather shows a list of persons.","lastModifiedDate":"2021-10-24"},{"lineNumber":441,"author":{"gitId":"lrnshk"},"content":"3. User chooses to sort person(s).","lastModifiedDate":"2021-11-01"},{"lineNumber":442,"author":{"gitId":"lrnshk"},"content":"4. Track2Gather requests for the sorting fields.","lastModifiedDate":"2021-11-01"},{"lineNumber":443,"author":{"gitId":"lrnshk"},"content":"5. User enters the fields to be sorted and their respective sort orders.","lastModifiedDate":"2021-11-01"},{"lineNumber":444,"author":{"gitId":"lrnshk"},"content":"6. Track2Gather displays the list of sorted person(s).","lastModifiedDate":"2021-11-01"},{"lineNumber":445,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":446,"author":{"gitId":"wei2912"},"content":"   Use case ends.","lastModifiedDate":"2021-10-24"},{"lineNumber":447,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":448,"author":{"gitId":"wei2912"},"content":"**Extensions**","lastModifiedDate":"2021-10-24"},{"lineNumber":449,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":450,"author":{"gitId":"wei2912"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-10-24"},{"lineNumber":451,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":452,"author":{"gitId":"wei2912"},"content":"  Use case ends.","lastModifiedDate":"2021-10-24"},{"lineNumber":453,"author":{"gitId":"lrnshk"},"content":"* 3a. The format of the given details is invalid.","lastModifiedDate":"2021-11-01"},{"lineNumber":454,"author":{"gitId":"lrnshk"},"content":"  * 3a1. Track2Gather shows the correct format for input.","lastModifiedDate":"2021-11-01"},{"lineNumber":455,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":456,"author":{"gitId":"wei2912"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2021-10-24"},{"lineNumber":457,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":458,"author":{"gitId":"lrnshk"},"content":"#### Use case: UC08 - Enforce a person\u0027s SHN","lastModifiedDate":"2021-11-01"},{"lineNumber":459,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":460,"author":{"gitId":"wei2912"},"content":"**MSS:**","lastModifiedDate":"2021-10-26"},{"lineNumber":461,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":462,"author":{"gitId":"lrnshk"},"content":"1.  User chooses to start a new SHN enforcement session.","lastModifiedDate":"2021-11-01"},{"lineNumber":463,"author":{"gitId":"lrnshk"},"content":"2.\tTrack2Gather resets all persons to \u0027not called\u0027 in the new session, and updates the display to show all persons.","lastModifiedDate":"2021-11-04"},{"lineNumber":464,"author":{"gitId":"wei2912"},"content":"3.  User requests to update call statuses for specified person(s).","lastModifiedDate":"2021-10-26"},{"lineNumber":465,"author":{"gitId":"lrnshk"},"content":"4.\tTrack2Gather updates the call statuses for these person(s), and updates the display to remove all called person(s).","lastModifiedDate":"2021-11-04"},{"lineNumber":466,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":467,"author":{"gitId":"wei2912"},"content":"Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":468,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":469,"author":{"gitId":"wei2912"},"content":"**Extensions**","lastModifiedDate":"2021-10-26"},{"lineNumber":470,"author":{"gitId":"lrnshk"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":471,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":472,"author":{"gitId":"lrnshk"},"content":"  Use case ends.","lastModifiedDate":"2021-11-01"},{"lineNumber":473,"author":{"gitId":"lrnshk"},"content":"* 3a. The format of the given details is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":474,"author":{"gitId":"lrnshk"},"content":"  * 3a1. Track2Gather shows the correct format for input.","lastModifiedDate":"2021-11-04"},{"lineNumber":475,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":476,"author":{"gitId":"wei2912"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2021-10-26"},{"lineNumber":477,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":478,"author":{"gitId":"lrnshk"},"content":"#### Use case: UC09 - Access help page","lastModifiedDate":"2021-11-01"},{"lineNumber":479,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":480,"author":{"gitId":"lrnshk"},"content":"**MSS:**","lastModifiedDate":"2021-11-01"},{"lineNumber":481,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":482,"author":{"gitId":"lrnshk"},"content":"1.  User requests for help.","lastModifiedDate":"2021-11-01"},{"lineNumber":483,"author":{"gitId":"lrnshk"},"content":"2.  Track2Gather shows a message with a link to the user guide.","lastModifiedDate":"2021-11-01"},{"lineNumber":484,"author":{"gitId":"lrnshk"},"content":"3.  User accesses the user guide.","lastModifiedDate":"2021-11-01"},{"lineNumber":485,"author":{"gitId":"lrnshk"},"content":"4.  User closes the message.","lastModifiedDate":"2021-11-01"},{"lineNumber":486,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":487,"author":{"gitId":"lrnshk"},"content":"    Use case ends.","lastModifiedDate":"2021-11-01"},{"lineNumber":488,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":489,"author":{"gitId":"lrnshk"},"content":"**Extensions**","lastModifiedDate":"2021-11-01"},{"lineNumber":490,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":491,"author":{"gitId":"lrnshk"},"content":"* 2a. User closes the message.","lastModifiedDate":"2021-11-01"},{"lineNumber":492,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":493,"author":{"gitId":"lrnshk"},"content":"  Use case ends.","lastModifiedDate":"2021-11-01"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"frederickpek"},"content":"* **Graphical User Interface (GUI)**: Type of user interface through which users interact with electronic devices via visual indicator representations","lastModifiedDate":"2021-09-26"},{"lineNumber":506,"author":{"gitId":"frederickpek"},"content":"* **Command Line Interface (CLI)**: Type of user interface through which users interact with a system or application by typing in text (commands)","lastModifiedDate":"2021-09-26"},{"lineNumber":507,"author":{"gitId":"lrnshk"},"content":"* **Stay-Home-Notice (SHN)**: The notice involves a stipulated period consisting of a start and end date a person would have to remain in their place of residence or dedicated facility","lastModifiedDate":"2021-11-04"},{"lineNumber":508,"author":{"gitId":"lrnshk"},"content":"* **SHN enforcement mode**: Refer to [User Guide](UserGuide.md#SHN-enforcement-mode)","lastModifiedDate":"2021-11-01"},{"lineNumber":509,"author":{"gitId":"lrnshk"},"content":"* **Case number**: The unique identifier assigned to each person in Track2Gather","lastModifiedDate":"2021-11-01"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"frederickpek"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2021-10-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"frederickpek"},"content":"2. Saving window preferences","lastModifiedDate":"2021-10-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"frederickpek"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"lrnshk"},"content":"### Adding a new Person","lastModifiedDate":"2021-11-01"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"lrnshk"},"content":"1. Adding a person","lastModifiedDate":"2021-11-01"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"lrnshk"},"content":"   1. Test case: `add n/John Doe p/91234567 e/johndoe@gmail.com cn/1 ha/123 Waterloo`\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":542,"author":{"gitId":"lrnshk"},"content":"       Expected: New person is added with the given details. Details of the added person shown in the","lastModifiedDate":"2021-11-04"},{"lineNumber":543,"author":{"gitId":"lrnshk"},"content":"       status message.","lastModifiedDate":"2021-11-01"},{"lineNumber":544,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":545,"author":{"gitId":"lrnshk"},"content":"   2. Test case: `add n/John Doe p/91234567 e/johndoe@gmail.com cn/3 ha/123 Waterloo wa/456 Waterloo`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":546,"author":{"gitId":"lrnshk"},"content":"       Expected: New person is added with the given details. Details of the added person shown in the ","lastModifiedDate":"2021-11-04"},{"lineNumber":547,"author":{"gitId":"lrnshk"},"content":"       status message.","lastModifiedDate":"2021-11-01"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"lrnshk"},"content":"   3. Test case: `add n/John Doe cn/12`\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":550,"author":{"gitId":"lrnshk"},"content":"      Expected: No person will be added as not all mandatory details are given. Error details shown in the status message. Status bar","lastModifiedDate":"2021-11-01"},{"lineNumber":551,"author":{"gitId":"lrnshk"},"content":"      remains the same.","lastModifiedDate":"2021-11-01"},{"lineNumber":552,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":553,"author":{"gitId":"lrnshk"},"content":"   4. Test case: `add` \u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":554,"author":{"gitId":"lrnshk"},"content":"      Expected: No person will be added. Error details shown in the status message. Status bar","lastModifiedDate":"2021-11-01"},{"lineNumber":555,"author":{"gitId":"lrnshk"},"content":"      remains the same.","lastModifiedDate":"2021-11-01"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"lrnshk"},"content":"   5. Test case: `add INVALID_PREFIX/EXAMPLE`\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":558,"author":{"gitId":"lrnshk"},"content":"      Expected: No person will be added. Error details shown in the status message. Status bar","lastModifiedDate":"2021-11-01"},{"lineNumber":559,"author":{"gitId":"lrnshk"},"content":"      remains the same.","lastModifiedDate":"2021-11-01"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"lrnshk"},"content":"   6. Test case: `add VALID_PREFIX/INVALID_INPUT`\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":562,"author":{"gitId":"lrnshk"},"content":"      Expected: No person will be added. Error details shown in the status message. Status bar","lastModifiedDate":"2021-11-01"},{"lineNumber":563,"author":{"gitId":"lrnshk"},"content":"      remains the same.","lastModifiedDate":"2021-11-01"},{"lineNumber":564,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":565,"author":{"gitId":"frederickpek"},"content":"### Editing a Person","lastModifiedDate":"2021-10-23"},{"lineNumber":566,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":567,"author":{"gitId":"frederickpek"},"content":"1. Editing a person while all persons are being shown","lastModifiedDate":"2021-10-23"},{"lineNumber":568,"author":{"gitId":"frederickpek"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2021-10-23"},{"lineNumber":569,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":570,"author":{"gitId":"frederickpek"},"content":"   2. Test case: `edit 1 n/John Doe`\u003cbr\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":571,"author":{"gitId":"luffingluffy"},"content":"      Expected: First person in the list has their name edited to `John Doe`. Details of the edited person shown in the","lastModifiedDate":"2021-10-24"},{"lineNumber":572,"author":{"gitId":"luffingluffy"},"content":"      status message.","lastModifiedDate":"2021-10-24"},{"lineNumber":573,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":574,"author":{"gitId":"frederickpek"},"content":"   3. Test case: `edit 1 n/John Doe cn/12`\u003cbr\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":575,"author":{"gitId":"luffingluffy"},"content":"      Expected: First person in the list has their name edited to `John Doe` and their case number edited to `12`.","lastModifiedDate":"2021-10-24"},{"lineNumber":576,"author":{"gitId":"luffingluffy"},"content":"      Details of the edited person shown in the status message.","lastModifiedDate":"2021-10-24"},{"lineNumber":577,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":578,"author":{"gitId":"frederickpek"},"content":"   4. Test case: `edit 1`\u003cbr\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":579,"author":{"gitId":"luffingluffy"},"content":"      Expected: No persons\u0027 contact details will be edited. Error details shown in the status message. Status bar","lastModifiedDate":"2021-10-24"},{"lineNumber":580,"author":{"gitId":"luffingluffy"},"content":"      remains the same.","lastModifiedDate":"2021-10-24"},{"lineNumber":581,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":582,"author":{"gitId":"frederickpek"},"content":"   5. Test case: `edit 1 INVALID_PREFIX/EXAMPLE`\u003cbr\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":583,"author":{"gitId":"luffingluffy"},"content":"      Expected: No persons\u0027 contact details will be edited. Error details shown in the status message. Status bar","lastModifiedDate":"2021-10-24"},{"lineNumber":584,"author":{"gitId":"luffingluffy"},"content":"      remains the same.","lastModifiedDate":"2021-10-24"},{"lineNumber":585,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":586,"author":{"gitId":"luffingluffy"},"content":"   6. Test case: `edit 1 VALID_PREFIX/INVALID_INPUT`\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":587,"author":{"gitId":"luffingluffy"},"content":"      Expected: No persons\u0027 contact details will be edited. Error details shown in the status message. Status bar","lastModifiedDate":"2021-10-24"},{"lineNumber":588,"author":{"gitId":"luffingluffy"},"content":"      remains the same.","lastModifiedDate":"2021-10-24"},{"lineNumber":589,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":590,"author":{"gitId":"lrnshk"},"content":"2. Editing a person while search results are being shown","lastModifiedDate":"2021-11-01"},{"lineNumber":591,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":592,"author":{"gitId":"lrnshk"},"content":"    Expected: Similar to previous, but person(s) are deleted based on their index(s) in the search results instead of the list.","lastModifiedDate":"2021-11-04"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":594,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2021-11-01"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":596,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2021-11-01"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":598,"author":{"gitId":"lrnshk"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2021-10-21"},{"lineNumber":599,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":600,"author":{"gitId":"lrnshk"},"content":"    2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":601,"author":{"gitId":"lrnshk"},"content":"       Expected: First person is deleted from the list. Details of the deleted person shown in the status message.","lastModifiedDate":"2021-11-01"},{"lineNumber":602,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":603,"author":{"gitId":"lrnshk"},"content":"    3. Test case: `delete 1 2`\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":604,"author":{"gitId":"lrnshk"},"content":"       Expected: First and second persons are deleted from the list. Details of the deleted persons shown in the status message.","lastModifiedDate":"2021-11-01"},{"lineNumber":605,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":606,"author":{"gitId":"lrnshk"},"content":"    4. Test case: `delete 3 1 2`\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":607,"author":{"gitId":"lrnshk"},"content":"       Expected: First, second and third persons are deleted from the list. Details of the deleted persons shown in the status message.","lastModifiedDate":"2021-11-01"},{"lineNumber":608,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":609,"author":{"gitId":"lrnshk"},"content":"    5. Test case: `delete 1 1 1 2 2 2`\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":610,"author":{"gitId":"lrnshk"},"content":"       Expected: First and second persons are deleted from the list. Details of the deleted persons shown in the status message.","lastModifiedDate":"2021-11-01"},{"lineNumber":611,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":612,"author":{"gitId":"lrnshk"},"content":"    6. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":613,"author":{"gitId":"lrnshk"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-11-01"},{"lineNumber":614,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":615,"author":{"gitId":"lrnshk"},"content":"    7. Other incorrect delete commands to try: `delete`, `delete x` (where x is larger than the list size), `...` \u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":616,"author":{"gitId":"lrnshk"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-11-01"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"lrnshk"},"content":"2. Deleting a person while search results are being shown","lastModifiedDate":"2021-11-01"},{"lineNumber":619,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":620,"author":{"gitId":"lrnshk"},"content":"   Expected: Similar to previous, but person(s) are deleted based on their index(s) in the search results instead of the list.","lastModifiedDate":"2021-11-04"},{"lineNumber":621,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":622,"author":{"gitId":"lrnshk"},"content":"### Updating SHN end dates of all persons","lastModifiedDate":"2021-11-04"},{"lineNumber":623,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":624,"author":{"gitId":"frederickpek"},"content":"1. Batch-updating SHN periods while all persons are being shown","lastModifiedDate":"2021-10-23"},{"lineNumber":625,"author":{"gitId":"frederickpek"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons with an SHN period.","lastModifiedDate":"2021-10-23"},{"lineNumber":626,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":627,"author":{"gitId":"frederickpek"},"content":"    2. Test case: `tshift 3` or `tshift +3`\u003cbr\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":628,"author":{"gitId":"lrnshk"},"content":"       Expected: All persons\u0027 SHN end dates will be postponed by `3` days. Details of the batch-update will be displayed as the status message.","lastModifiedDate":"2021-11-04"},{"lineNumber":629,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":630,"author":{"gitId":"frederickpek"},"content":"    3. Test case: `tshift -3`\u003cbr\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":631,"author":{"gitId":"lrnshk"},"content":"       Expected: All persons\u0027 SHN end dates will be brought forward by `3` days. Details of the batch-update will be displayed as the status message.","lastModifiedDate":"2021-11-04"},{"lineNumber":632,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":633,"author":{"gitId":"frederickpek"},"content":"    4. Test case: `tshift 91`\u003cbr\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":634,"author":{"gitId":"lrnshk"},"content":"       Expected: Unable to shift beyond the limit of `90` days. No persons\u0027 SHN end dates will be shifted. Error details shown in the status message.","lastModifiedDate":"2021-11-04"},{"lineNumber":635,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":636,"author":{"gitId":"lrnshk"},"content":"    5. Test case: `tshift 0`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":637,"author":{"gitId":"lrnshk"},"content":"       Expected: Unable to shift by `0` days. No persons\u0027 SHN end dates will be shifted. Error details shown in the status message.","lastModifiedDate":"2021-11-04"},{"lineNumber":638,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":639,"author":{"gitId":"lrnshk"},"content":"### Clearing person(s) with completed SHN periods","lastModifiedDate":"2021-11-01"},{"lineNumber":640,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":641,"author":{"gitId":"lrnshk"},"content":"1. Clearing person(s) while all persons are being shown","lastModifiedDate":"2021-11-01"},{"lineNumber":642,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2021-11-01"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":644,"author":{"gitId":"lrnshk"},"content":"   2. Test case: `clear`\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":645,"author":{"gitId":"lrnshk"},"content":"      Expected: All persons with completed SHN periods are deleted from the list. Success message is shown.","lastModifiedDate":"2021-11-01"},{"lineNumber":646,"author":{"gitId":"lrnshk"},"content":"    ","lastModifiedDate":"2021-11-01"},{"lineNumber":647,"author":{"gitId":"lrnshk"},"content":"   3. Test case: `clear x` (where x is any character)\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":648,"author":{"gitId":"lrnshk"},"content":"      Expected: Similar to previous. All trailing characters or whitespaces are ignored.","lastModifiedDate":"2021-11-01"},{"lineNumber":649,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":650,"author":{"gitId":"lrnshk"},"content":"### Finding persons by field","lastModifiedDate":"2021-11-01"},{"lineNumber":651,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":652,"author":{"gitId":"lrnshk"},"content":"1. Find person(s) while all persons are being shown","lastModifiedDate":"2021-11-01"},{"lineNumber":653,"author":{"gitId":"lrnshk"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2021-11-01"},{"lineNumber":654,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":655,"author":{"gitId":"lrnshk"},"content":"    2. Test case: `find n/Alex`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":656,"author":{"gitId":"lrnshk"},"content":"       Expected: Only persons whose name contains `Alex` will be shown.","lastModifiedDate":"2021-11-04"},{"lineNumber":657,"author":{"gitId":"lrnshk"},"content":"    ","lastModifiedDate":"2021-11-04"},{"lineNumber":658,"author":{"gitId":"lrnshk"},"content":"    3. Test case: `find n/Alex Alice`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":659,"author":{"gitId":"lrnshk"},"content":"        Expected: Only persons whose name contains `Alex` or `Alice` will be shown.","lastModifiedDate":"2021-11-01"},{"lineNumber":660,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":661,"author":{"gitId":"lrnshk"},"content":"    4. Test case: `find p/123`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":662,"author":{"gitId":"lrnshk"},"content":"       Expected: Only persons whose phone number starts with `123` will be shown.","lastModifiedDate":"2021-11-04"},{"lineNumber":663,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":664,"author":{"gitId":"lrnshk"},"content":"    5. Test case: `find p/123 234`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":665,"author":{"gitId":"lrnshk"},"content":"       Expected: Only persons whose phone number starts with `123` or `234` will be shown.","lastModifiedDate":"2021-11-01"},{"lineNumber":666,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":667,"author":{"gitId":"lrnshk"},"content":"    6. Test case: `find cn/1 2 3`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":668,"author":{"gitId":"lrnshk"},"content":"       Expected: Only persons with case number `1` `2` or `3` will be shown.","lastModifiedDate":"2021-11-01"},{"lineNumber":669,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":670,"author":{"gitId":"lrnshk"},"content":"    8. Test case: `find sh/start:2021-01-01 2021-01-02`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":671,"author":{"gitId":"lrnshk"},"content":"       Expected: Only persons with SHN start date of `2021-01-01` or `2021-01-02` will be shown.","lastModifiedDate":"2021-11-01"},{"lineNumber":672,"author":{"gitId":"lrnshk"},"content":"    ","lastModifiedDate":"2021-11-01"},{"lineNumber":673,"author":{"gitId":"lrnshk"},"content":"    10. Test case: `find sh/end:2021-01-01 2021-01-02`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":674,"author":{"gitId":"lrnshk"},"content":"        Expected: Only persons with SHN end date of `2021-01-01` or `2021-01-02` will be shown.","lastModifiedDate":"2021-11-01"},{"lineNumber":675,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":676,"author":{"gitId":"lrnshk"},"content":"    12. Test case: `find INVALID_PREFIX/EXAMPLE`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":677,"author":{"gitId":"lrnshk"},"content":"        Expected: The list is unchanged. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-11-04"},{"lineNumber":678,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":679,"author":{"gitId":"lrnshk"},"content":"    13. Test case: `find VALID_PREFIX/INVALID_INPUT`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":680,"author":{"gitId":"lrnshk"},"content":"        Expected: The list is unchanged. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-11-04"},{"lineNumber":681,"author":{"gitId":"frederickpek"},"content":"    ","lastModifiedDate":"2021-10-23"},{"lineNumber":682,"author":{"gitId":"lrnshk"},"content":"### Sorting persons","lastModifiedDate":"2021-11-04"},{"lineNumber":683,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":684,"author":{"gitId":"lrnshk"},"content":"1. Sorting persons while all persons are being shown","lastModifiedDate":"2021-11-04"},{"lineNumber":685,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":686,"author":{"gitId":"wei2912"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2021-10-24"},{"lineNumber":687,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":688,"author":{"gitId":"wei2912"},"content":"   2. Test case: `sort n/`\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":689,"author":{"gitId":"wei2912"},"content":"      Expected: The list of persons is sorted by name (in ascending order by default).","lastModifiedDate":"2021-10-24"},{"lineNumber":690,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":691,"author":{"gitId":"wei2912"},"content":"   3. Test case: `sort sh/start:dsc`\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":692,"author":{"gitId":"lrnshk"},"content":"      Expected: The list of persons is sorted by SHN start date in descending order.","lastModifiedDate":"2021-11-04"},{"lineNumber":693,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":694,"author":{"gitId":"wei2912"},"content":"   4. Test case: `sort sh/end: cn/asc`\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":695,"author":{"gitId":"lrnshk"},"content":"      Expected: The list of persons is sorted by SHN end date (in ascending order by default), then by case number in ascending order.","lastModifiedDate":"2021-11-04"},{"lineNumber":696,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":697,"author":{"gitId":"wei2912"},"content":"   5. Test case: `sort`\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":698,"author":{"gitId":"wei2912"},"content":"      Expected: The list is unchanged. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-24"},{"lineNumber":699,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":700,"author":{"gitId":"lrnshk"},"content":"   6. Test case: `sort INVALID_PREFIX/VALID_DIRECTION`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":701,"author":{"gitId":"lrnshk"},"content":"      Expected: The list is unchanged. Error details shown in the status message. Status bar remains the same. ","lastModifiedDate":"2021-11-04"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":703,"author":{"gitId":"lrnshk"},"content":"   7. Test case: `sort VALID_PREFIX/INVALID_DIRECTION`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":704,"author":{"gitId":"lrnshk"},"content":"      Expected: The list is unchanged. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-11-04"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":706,"author":{"gitId":"lrnshk"},"content":"2. Sorting persons while search results are being shown","lastModifiedDate":"2021-11-04"},{"lineNumber":707,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":708,"author":{"gitId":"lrnshk"},"content":"   Expected: Similar to previous, but only search results are displayed and sorted.","lastModifiedDate":"2021-11-04"},{"lineNumber":709,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":710,"author":{"gitId":"wei2912"},"content":"### Enforcing SHN","lastModifiedDate":"2021-10-26"},{"lineNumber":711,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":712,"author":{"gitId":"wei2912"},"content":"1. Starting a new SHN enforcement session","lastModifiedDate":"2021-10-26"},{"lineNumber":713,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":714,"author":{"gitId":"wei2912"},"content":"   1. Test case: `session`\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":715,"author":{"gitId":"lrnshk"},"content":"      Expected: All persons in the list are updated to be \u0027not called\u0027 status.","lastModifiedDate":"2021-11-04"},{"lineNumber":716,"author":{"gitId":"wei2912"},"content":"       ","lastModifiedDate":"2021-10-26"},{"lineNumber":717,"author":{"gitId":"wei2912"},"content":"   2. Test case: `session x` (where x is any character)\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":718,"author":{"gitId":"wei2912"},"content":"      Expected: Similar to previous. All trailing characters or whitespaces are ignored.","lastModifiedDate":"2021-10-26"},{"lineNumber":719,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":720,"author":{"gitId":"lrnshk"},"content":"2. Showing a dynamically filtered list of all persons who have not been called in the current SHN enforcement session","lastModifiedDate":"2021-11-04"},{"lineNumber":721,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":722,"author":{"gitId":"lrnshk"},"content":"   1. Test case: `schedule`\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":723,"author":{"gitId":"lrnshk"},"content":"      Expected: The list is updated to display only persons who have not been called in the current SHN enforcement session.","lastModifiedDate":"2021-11-01"},{"lineNumber":724,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":725,"author":{"gitId":"lrnshk"},"content":"   2. Test case: `schedule x` (where x is any character)\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":726,"author":{"gitId":"lrnshk"},"content":"      Expected: Similar to previous. All trailing characters or whitespaces are ignored.","lastModifiedDate":"2021-11-01"},{"lineNumber":727,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":728,"author":{"gitId":"lrnshk"},"content":"3. Updating a person\u0027s call status to successful in the current SHN enforcement session","lastModifiedDate":"2021-11-04"},{"lineNumber":729,"author":{"gitId":"lrnshk"},"content":"   1. Prerequisites: SHN enforcement mode is activated.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":730,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":731,"author":{"gitId":"lrnshk"},"content":"   2. Test case: `scall 1`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":732,"author":{"gitId":"lrnshk"},"content":"      Expected: First person displayed in the list is updated as successfully called. The name, case number, and number of failed call attempts of the updated person is shown in the status message. The person disappears from the display.","lastModifiedDate":"2021-11-04"},{"lineNumber":733,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":734,"author":{"gitId":"lrnshk"},"content":"   3. Test case: `scall 3`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":735,"author":{"gitId":"lrnshk"},"content":"      Expected: Third person displayed in the list is updated as successfully called. The name, case number, and number of failed call attempts of the updated person is shown in the status message. The person disappears from the display.","lastModifiedDate":"2021-11-04"},{"lineNumber":736,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":737,"author":{"gitId":"lrnshk"},"content":"   4. Test case: `scall 0`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":738,"author":{"gitId":"lrnshk"},"content":"      Expected: No person is updated. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-11-01"},{"lineNumber":739,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":740,"author":{"gitId":"lrnshk"},"content":"   5. Other incorrect scall commands to try: `scall`, `scall x` (where x is larger than the list size), `...` \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":741,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2021-11-01"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":743,"author":{"gitId":"lrnshk"},"content":"4. Updating a person\u0027s call status to successful in the current SHN enforcement session","lastModifiedDate":"2021-11-04"},{"lineNumber":744,"author":{"gitId":"lrnshk"},"content":"   1. Prerequisites: SHN enforcement mode is not activated.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":745,"author":{"gitId":"lrnshk"},"content":"      Expected: Similar to previous, except the updated person does not disappear from the display.","lastModifiedDate":"2021-11-04"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":747,"author":{"gitId":"lrnshk"},"content":"5. Updating that a failed call was made to a person in the current SHN enforcement session","lastModifiedDate":"2021-11-04"},{"lineNumber":748,"author":{"gitId":"lrnshk"},"content":"   1. Prerequisites: SHN enforcement mode is activated.","lastModifiedDate":"2021-11-04"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":750,"author":{"gitId":"lrnshk"},"content":"   2. Test case: `fcall 1`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":751,"author":{"gitId":"lrnshk"},"content":"      Expected: First person displayed in the list is updated as unsuccessfully called. The name, case number, and number of failed call attempts of the updated person is shown in the status message. The person disappears from the display.","lastModifiedDate":"2021-11-04"},{"lineNumber":752,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":753,"author":{"gitId":"lrnshk"},"content":"   3. Test case: `fcall 3`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":754,"author":{"gitId":"lrnshk"},"content":"      Expected: Third person displayed in the list is updated as unsuccessfully called. The name, case number, and number of failed call attempts of the updated person is shown in the status message. The person disappears from the display.","lastModifiedDate":"2021-11-04"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":756,"author":{"gitId":"lrnshk"},"content":"   4. Test case: `fcall 0`\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":757,"author":{"gitId":"wei2912"},"content":"      Expected: No person is updated. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-26"},{"lineNumber":758,"author":{"gitId":"wei2912"},"content":"    ","lastModifiedDate":"2021-10-26"},{"lineNumber":759,"author":{"gitId":"lrnshk"},"content":"   5. Other incorrect fcall commands to try: `fcall`, `fcall x` (where x is larger than the list size), `...` \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":760,"author":{"gitId":"wei2912"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2021-10-26"},{"lineNumber":761,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":762,"author":{"gitId":"lrnshk"},"content":"6. Updating that a failed call was made to a person in the current SHN enforcement session","lastModifiedDate":"2021-11-04"},{"lineNumber":763,"author":{"gitId":"lrnshk"},"content":"    1. Prerequisites: SHN enforcement mode is not activated.\u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":764,"author":{"gitId":"lrnshk"},"content":"       Expected: Similar to previous, except the updated person does not disappear from the display.","lastModifiedDate":"2021-11-04"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":766,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"lrnshk"},"content":"    1. Test case: Empty JSON file.  ","lastModifiedDate":"2021-10-26"},{"lineNumber":770,"author":{"gitId":"luffingluffy"},"content":"       Expected: Sample Track2Gather person list will be generated with sample persons\u0027 information.","lastModifiedDate":"2021-10-24"},{"lineNumber":771,"author":{"gitId":"lrnshk"},"content":"    2. Test case: Corrupted JSON file.  ","lastModifiedDate":"2021-10-26"},{"lineNumber":772,"author":{"gitId":"luffingluffy"},"content":"       Expected: Sample Track2Gather person list will be generated with sample persons\u0027 information.","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"luffingluffy":13,"lrnshk":282,"-":311,"wei2912":74,"frederickpek":91,"jennibearduit":1}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"   1. Run the `seedu.track2gather.Main` and try a few commands.","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [Track2Gather’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":53,"wei2912":2}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"   e.g. `seedu.track2gather.commons.StringUtilTest`","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"   e.g. `seedu.track2gather.storage.StorageManagerTest`","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"   e.g. `seedu.track2gather.logic.LogicManagerTest`","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"-":33,"wei2912":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"Track2Gather is a **desktop app for contact tracing personnel at the [Ministry of Health (MOH)](https://www.moh.gov.sg/), optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"frederickpek"},"content":"## Quick Start","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"frederickpek"},"content":"2. Download the latest `track2gather.jar` from [here](https://github.com/AY2122S1-CS2103-W14-2/tp/releases).","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"frederickpek"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Track2Gather.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"frederickpek"},"content":"4. To start the app, double-click the file or enter `java -jar track2gather.jar` into the terminal in the _home folder_.","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"frederickpek"},"content":"5. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"frederickpek"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"   Here is an overview of the commands you can try:","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"frederickpek"},"content":"    * **`add`** : Adds a person to the persons list.","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"lrnshk"},"content":"    * **`delete`** : Deletes person(s) at the specified index(s).","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"    * **`list`** : Shows a list of all persons.","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"    * **`edit`** : Edits the details of a person at the specified index.","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"lrnshk"},"content":"    * **`tshift`** : Shifts all persons\u0027 SHN end dates by the specified number of days.","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"    * **`clear`** : Deletes all persons with SHN periods that are completed at time of command call.","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"lrnshk"},"content":"    * **`find`** : Finds person(s) by certain fields.","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"lrnshk"},"content":"    * **`sort`** : Sorts all persons in the persons list by certain fields.","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"frederickpek"},"content":"    ","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"lrnshk"},"content":"    * **`session`** : Starts a new SHN enforcement session with all persons set to \u0027not called\u0027.","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"    * **`schedule`** : Shows a list of all persons who have not been called in the current SHN enforcement session.","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"    * **`scall`** : Updates a person as successfully called in the current SHN enforcement session.","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"    * **`fcall`** : Updates that a failed call was made to a person in the current SHN enforcement session.","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"    ","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"frederickpek"},"content":"    * **`help`** : Shows a message explaining how to access the help page.","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"lrnshk"},"content":"  e.g. in `find n/NAME`, `NAME` is a parameter which can be used as `find n/John Doe`.","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"frederickpek"},"content":"  e.g `n/NAME [wa/WORK_ADDRESS]` can be used as `n/John Doe wa/Home` or as `n/John Doe`.","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"frederickpek"},"content":"### Format for person details","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"frederickpek"},"content":"Field | Format","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"frederickpek"},"content":"------|------------------","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"frederickpek"},"content":"`NAME` | Names should only contain alphanumeric characters and spaces, and should not be blank.","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"frederickpek"},"content":"`PHONE_NUMBER` | Phone numbers should only contain numbers and should be at least 3 digits long.","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"lrnshk"},"content":"`EMAIL` | Emails should be of the format local-part@domain. \u003cbr\u003e The local-part should only contain alphanumeric characters and these special characters, excluding the parentheses, (+_.-). The local-part may not start or end with any special characters. This is followed by a \u0027@\u0027 and then a domain name. \u003cbr\u003e The domain name is made up of domain labels separated by periods. The domain name must end with a domain label at least 2 characters long, have each domain label start and end with alphanumeric characters and must have each domain label consist of alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"frederickpek"},"content":"`CASE_NUMBER` | Case numbers should be input as positive integers with no leading zeros. Case numbers can be anywhere from 1 to 6 digits long. Note that case numbers are displayed in a fixed format of 6 digits, padded with zeros on the left, if needed.","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"lrnshk"},"content":"`HOME_ADDRESS` | Addresses can be any non-empty string of characters.","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"lrnshk"},"content":"`WORK_ADDRESS` | Addresses can be any non-empty string of characters.","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"lrnshk"},"content":"`QUARANTINE_ADDRESS` | Addresses can be any non-empty string of characters.","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"lrnshk"},"content":"`SHN_PERIOD` | SHN periods should comprise of two dates in the [ISO-8601 format](https://www.iso.org/iso-8601-date-and-time-format.html) (i.e. yyyy-MM-dd), separated by a space. The start date should be keyed before the end date, and must occur earlier than the end date by at least 1 day.","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"frederickpek"},"content":"`NEXT_OF_KIN_NAME` | Names should only contain alphanumeric characters and spaces, and should not be blank.","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"frederickpek"},"content":"`NEXT_OF_KIN_PHONE` | Phone numbers should only contain numbers and should be at least 3 digits long.","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"lrnshk"},"content":"`NEXT_OF_KIN_ADDRESS` | Addresses can be any non-empty string of characters.","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"wei2912"},"content":"### Adding a person: `add`","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"frederickpek"},"content":"Adds a person to the persons list for tracking.","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"wei2912"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL cn/CASE_NUMBER ha/HOME_ADDRESS [wa/WORK_ADDRESS] [qa/QUARANTINE_ADDRESS] [sh/SHN_PERIOD] [kn/NEXT_OF_KIN_NAME] [kp/NEXT_OF_KIN_PHONE] [ka/NEXT_OF_KIN_ADDRESS]`","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"lrnshk"},"content":"* There cannot be multiple persons with the same case number","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"lrnshk"},"content":"* `add n/Alex p/98765432 e/alex@email.com cn/200 ha/123 Orchard Road #01-100 800123`","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"lrnshk"},"content":"* `add n/Ben e/ben@email.com p/98765432 cn/100 ha/123 Tampines Road #01-100 800123`","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"lrnshk"},"content":"* `add n/Charlie p/12345678 e/charlie@email.com cn/2103 ha/123 Changi Road #01-100 700123 wa/50 Jurong Road 120050 qa/12 Harbourfront Ring 123012 sh/2021-01-01 2021-01-14 kn/Peter kp/90011234 ka/73 Yishun Drive #10-301 310073`","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"frederickpek"},"content":"### Editing a person : `edit`","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"frederickpek"},"content":"Edits the details of the person identified by the index number used in the displayed person list. Existing values will be overwritten by the input values.","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"frederickpek"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [cn/CASE_NUMBER] [ha/HOME_ADDRESS] [wa/WORK_ADDRESS] [qa/QUARANTINE_ADDRESS] [sh/SHN_PERIOD] [kn/NEXT_OF_KIN_NAME] [kp/NEXT_OF_KIN_PHONE] [ka/NEXT_OF_KIN_ADDRESS]`","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"frederickpek"},"content":"* Edits the person at the specified `INDEX`","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"frederickpek"},"content":"* The index **must be a positive integer** (e.g. 1, 2, 3, ..)","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"frederickpek"},"content":"* The index **must not exceed the total number of persons** in the persons list","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"lrnshk"},"content":"* There cannot be multiple persons with the same case number","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"frederickpek"},"content":"* At least one field to edit must be provided","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"lrnshk"},"content":"* Editing a field that was previously blank will add the field to the person with the given input","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"frederickpek"},"content":"* `edit 1 n/Henry Hugh` edits the name of the first person in the list to be `Henry Hugh`","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"jennibearduit"},"content":"### Finding persons by a field: `find`","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"lrnshk"},"content":"Finds person(s) based on the field specified by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"lrnshk"},"content":"Format: `find [n/NAME] [p/PHONE_NUMBER] [cn/CASE_NUMBER] [sh/start:SHN_START_DATE] [sh/end:SHN_END_DATE]`","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"lrnshk"},"content":"* Exactly one field can be searched at a time","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"lrnshk"},"content":"* For each field, multiple keywords can be provided.","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"lrnshk"},"content":"  * Keywords are separated by spaces.","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"lrnshk"},"content":"  * The order of the keywords does not matter.","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"lrnshk"},"content":"  * Persons matching at least one keyword will be returned (i.e. `OR` search). \u003cbr\u003e ","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"lrnshk"},"content":"    Example: `Hans Bo` will be interpreted as two separate keywords, `Hans` and `Bo`, and thus return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"lrnshk"},"content":"* Field must be one of the following:","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"lrnshk"},"content":"Field (`FIELD_PREFIX`) | Description","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"lrnshk"},"content":"------|------------------","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"lrnshk"},"content":"Name (`n/`) |{::nomarkdown}\u003cul\u003e\u003cli\u003eSearch is case-insensitive. e.g `hans` will match `Hans`\u003c/li\u003e\u003cli\u003eFull words will be matched e.g. `Han` will not match `Hans`\u003c/li\u003e\u003cli\u003eName must be entered in the \u003ca href\u003d\"#format-for-person-details\"\u003evalid format\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e{:/}","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"lrnshk"},"content":"Phone number (`p/`) |{::nomarkdown}\u003cul\u003e\u003cli\u003ePhone numbers that start with the specified number(s) will be matched e.g. `123` and `1234` will match `12345678`\u003c/li\u003e\u003cli\u003ePhone number must be a positive integer, minimally 1 digit long\u003c/li\u003e\u003c/ul\u003e{:/}","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"lrnshk"},"content":"Case number (`cn/`) |{::nomarkdown}\u003cul\u003e\u003cli\u003e Search will only match if case number is equal, e.g. `123` will match `123` but will not match `1234`\u003c/li\u003e\u003cli\u003eCase number must be entered in the \u003ca href\u003d\"#format-for-person-details\"\u003evalid format\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e{:/}","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"lrnshk"},"content":"SHN start date (`sh/start:`) |{::nomarkdown}\u003cul\u003e\u003cli\u003eSearch will only match if SHN start date is equal, e.g. `2021-01-01` will match `2021-01-01`\u003c/li\u003e\u003cli\u003eSHN start date must be entered in the \u003ca href\u003d\"https://www.iso.org/iso-8601-date-and-time-format.html\"\u003eISO-8601 format\u003c/a\u003e (i.e. yyyy-MM-dd)\u003c/li\u003e\u003c/ul\u003e{:/}","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"lrnshk"},"content":"SHN end date (`sh/end:`) |{::nomarkdown}\u003cul\u003e\u003cli\u003eSearch will only match if SHN end date is equal, e.g. `2021-01-02` will match `2021-01-02`\u003c/li\u003e\u003cli\u003eSHN end date must be entered in the \u003ca href\u003d\"https://www.iso.org/iso-8601-date-and-time-format.html\"\u003eISO-8601 format\u003c/a\u003e (i.e. yyyy-MM-dd)\u003c/li\u003e\u003c/ul\u003e{:/}","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"jennibearduit"},"content":"* `find n/John` will match the following names: `john` and `John Doe` ","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"jennibearduit"},"content":"* `find n/alex david` will match the following names: `Alex Yeoh` and `David Li` ","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"jennibearduit"},"content":"* `find p/123` will match the following phone numbers: `12345678` and `12387654` ","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"lrnshk"},"content":"* `find p/123 234` will match the following phone numbers: `12345678`, `23456778` and `12387654`","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"frederickpek"},"content":"* `find cn/1` will only match the following case number: `1`","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"frederickpek"},"content":"* `find sh/start:2021-01-01` will only match the following SHN start date: `2021-01-01` ","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"frederickpek"},"content":"* `find sh/end:2021-01-02` will only match the following SHN end date: `2021-01-02` ","lastModifiedDate":"2021-10-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"frederickpek"},"content":"### Shifting SHN End Dates: `tshift`","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"lrnshk"},"content":"Shifts all persons\u0027 SHN end dates by the specified number of days.","lastModifiedDate":"2021-11-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"frederickpek"},"content":"Format: `tshift [PLUS_MINUS_SIGN]DAYS`","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"frederickpek"},"content":"* `DAYS` should be a number between `1` and `90` inclusive","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"frederickpek"},"content":"* The shift will only be applied to the persons which are currently displayed in the UI","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"frederickpek"},"content":"* Postpones the SHN end date if the evaluated value is positive","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"lrnshk"},"content":"* Brings forward the SHN end date if the evaluated value is negative","lastModifiedDate":"2021-11-02"},{"lineNumber":166,"author":{"gitId":"frederickpek"},"content":"* The SHN end dates will only be brought forward up to and including a day after the person\u0027s SHN start date","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"frederickpek"},"content":"* `tshift 3` postpones all SHN end dates by 3 days. This is identical to `tshift +3`","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"frederickpek"},"content":"* `tshift -3` brings forward all SHN end dates by up to 3 days","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"frederickpek"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"lrnshk"},"content":"Deletes the person(s) identified by the specified index number(s) used in the displayed persons list.","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"lrnshk"},"content":"Format: `delete INDEX [MORE_INDICES]`","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"lrnshk"},"content":"* Deletes the person(s) at the specified `INDEX`(s).","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"lrnshk"},"content":"* The index(s) **must be a positive integer** (e.g. 1, 2, 3, ..)","lastModifiedDate":"2021-10-17"},{"lineNumber":180,"author":{"gitId":"wei2912"},"content":"* The index(s) **must not exceed the total number of persons** in the contacts list","lastModifiedDate":"2021-10-31"},{"lineNumber":181,"author":{"gitId":"lrnshk"},"content":"* The index(s) **can be given in any order** (e.g. `delete 1 4 5`, `delete 5 1 4`)","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"lrnshk"},"content":"* Repeated indices will be ignored i.e. `delete 1 1 2 2` will be interpreted as `delete 1 2`","lastModifiedDate":"2021-11-02"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"lrnshk"},"content":"* `sort n/` followed by `delete 2` deletes the 2nd person in the persons list when sorted by name. ","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"lrnshk"},"content":"* `sort cn/` followed by `delete 1 4 5` deletes the 1st, 4th and 5th persons in the persons list when sorted by case","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"wei2912"},"content":"  number.","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"lrnshk"},"content":"* `find n/Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command, if any.","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"frederickpek"},"content":"### Listing all persons : `list`","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"frederickpek"},"content":"Shows a list of all persons.","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":194,"author":{"gitId":"frederickpek"},"content":"Format: `list`","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"wei2912"},"content":"### Sorting all persons : `sort`","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"lrnshk"},"content":"Sorts the persons list based on the field specified by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"wei2912"},"content":"Format: `sort [n/DIRECTION] [cn/DIRECTION] [sh/start:DIRECTION] [sh/end:DIRECTION]`","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"lrnshk"},"content":"* `DIRECTION` can either be `asc` or `dsc`","lastModifiedDate":"2021-11-02"},{"lineNumber":203,"author":{"gitId":"lrnshk"},"content":"* Direction `asc` indicates ascending sort order and `dsc` indicates descending sort order","lastModifiedDate":"2021-11-02"},{"lineNumber":204,"author":{"gitId":"lrnshk"},"content":"* Sorts the persons list from the first to the last specified field prefix","lastModifiedDate":"2021-11-02"},{"lineNumber":205,"author":{"gitId":"lrnshk"},"content":"* At least one field prefix must be provided","lastModifiedDate":"2021-11-02"},{"lineNumber":206,"author":{"gitId":"lrnshk"},"content":"* Specifying the sort direction is optional","lastModifiedDate":"2021-11-02"},{"lineNumber":207,"author":{"gitId":"lrnshk"},"content":"  * By default, field prefixes are sorted in ascending order","lastModifiedDate":"2021-11-02"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"lrnshk"},"content":"* `sort n/` sorts the persons list by name (in ascending order by default).","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"lrnshk"},"content":"* `sort sh/end:dsc` sorts the persons list by end date of SHN period in descending order.","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"lrnshk"},"content":"* `sort sh/start: cn/asc` sorts the persons list by start date of SHN period (in ascending order by default), then by case number in ascending order.","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"frederickpek"},"content":"### Clearing all persons : `clear`","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"lrnshk"},"content":"Deletes all persons with SHN periods that are completed at the time of command call.","lastModifiedDate":"2021-11-02"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"lrnshk"},"content":"### SHN enforcement mode","lastModifiedDate":"2021-10-31"},{"lineNumber":221,"author":{"gitId":"lrnshk"},"content":"SHN enforcement mode contains a special group of features that enables users to track the call statuses of persons in Track2Gather. ","lastModifiedDate":"2021-10-31"},{"lineNumber":222,"author":{"gitId":"lrnshk"},"content":"The purpose of this mode is to facilitate the calling of persons to enforce their SHN. ","lastModifiedDate":"2021-10-31"},{"lineNumber":223,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":224,"author":{"gitId":"lrnshk"},"content":"The intended use of this mode is to:","lastModifiedDate":"2021-10-31"},{"lineNumber":225,"author":{"gitId":"lrnshk"},"content":"* create a new calling session (henceforth referred to as \u0027SHN enforcement session\u0027).","lastModifiedDate":"2021-11-02"},{"lineNumber":226,"author":{"gitId":"lrnshk"},"content":"* mark successful/failed attempts to contact each person in order to check on their well-being throughout their SHN.","lastModifiedDate":"2021-11-02"},{"lineNumber":227,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":228,"author":{"gitId":"lrnshk"},"content":"In SHN enforcement mode, all people who have been called for the current SHN enforcement session will be *filtered out of the schedule and hidden from the display.*","lastModifiedDate":"2021-11-02"},{"lineNumber":229,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":230,"author":{"gitId":"lrnshk"},"content":"There are 4 features relevant to this mode: `session`, `schedule`, `scall`, and `fcall`.","lastModifiedDate":"2021-10-31"},{"lineNumber":231,"author":{"gitId":"lrnshk"},"content":"* `session` and `schedule` activate SHN enforcement mode.","lastModifiedDate":"2021-10-31"},{"lineNumber":232,"author":{"gitId":"lrnshk"},"content":"* `scall` and `fcall` are intended to work best in SHN enforcement mode, but can be used outside of enforcement mode.","lastModifiedDate":"2021-10-31"},{"lineNumber":233,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":234,"author":{"gitId":"lrnshk"},"content":"#### How the information is reflected on the display","lastModifiedDate":"2021-11-02"},{"lineNumber":235,"author":{"gitId":"lrnshk"},"content":"Under `Call Status` for each person, there are two components:","lastModifiedDate":"2021-10-31"},{"lineNumber":236,"author":{"gitId":"lrnshk"},"content":"* Call status indicator","lastModifiedDate":"2021-10-31"},{"lineNumber":237,"author":{"gitId":"lrnshk"},"content":"  * Represents whether a person has been called in the current SHN enforcement session.","lastModifiedDate":"2021-10-31"},{"lineNumber":238,"author":{"gitId":"lrnshk"},"content":"  * Displayed as `Called:` followed by a red cross or green tick.","lastModifiedDate":"2021-11-02"},{"lineNumber":239,"author":{"gitId":"lrnshk"},"content":"  * Red cross indicates that a person has not been called for the current SHN enforcement session.","lastModifiedDate":"2021-10-31"},{"lineNumber":240,"author":{"gitId":"lrnshk"},"content":"  * Green tick indicates that a person has been called for the current SHN enforcement session, *regardless of whether the call was successful*.","lastModifiedDate":"2021-11-02"},{"lineNumber":241,"author":{"gitId":"lrnshk"},"content":"* Non-compliance counter ","lastModifiedDate":"2021-10-31"},{"lineNumber":242,"author":{"gitId":"lrnshk"},"content":"  * Represents the number of failed attempts that have been made to call the person ","lastModifiedDate":"2021-10-31"},{"lineNumber":243,"author":{"gitId":"lrnshk"},"content":"  * Displayed as `Failed: X time(s)` where X is the number of failed call attempts ","lastModifiedDate":"2021-11-02"},{"lineNumber":244,"author":{"gitId":"lrnshk"},"content":"  * The number of failed call attempts recorded is cumulative over the entire period of Track2Gather usage. It does not reset to zero when a new SHN enforcement session is created.","lastModifiedDate":"2021-10-31"},{"lineNumber":245,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":246,"author":{"gitId":"lrnshk"},"content":"#### Important notes","lastModifiedDate":"2021-10-31"},{"lineNumber":247,"author":{"gitId":"lrnshk"},"content":"* `add`, `edit`, `find` and `list` commands deactivate enforcement mode.","lastModifiedDate":"2021-11-04"},{"lineNumber":248,"author":{"gitId":"lrnshk"},"content":"* At any point in time, there is only 1 ongoing SHN enforcement session.","lastModifiedDate":"2021-10-31"},{"lineNumber":249,"author":{"gitId":"lrnshk"},"content":"* Previous sessions cannot be accessed.","lastModifiedDate":"2021-10-31"},{"lineNumber":250,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":251,"author":{"gitId":"lrnshk"},"content":"### Starting a new SHN enforcement session : `session`","lastModifiedDate":"2021-10-31"},{"lineNumber":252,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":253,"author":{"gitId":"lrnshk"},"content":"Starts a new SHN enforcement session by resetting the call status indicators of all persons to \u0027not called\u0027.","lastModifiedDate":"2021-11-02"},{"lineNumber":254,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"lrnshk"},"content":"Format: `session`","lastModifiedDate":"2021-10-31"},{"lineNumber":256,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":257,"author":{"gitId":"lrnshk"},"content":"* Displays the full list of persons, in which the call status indicator for all persons will display a red cross.","lastModifiedDate":"2021-10-31"},{"lineNumber":258,"author":{"gitId":"lrnshk"},"content":"* Activates SHN enforcement mode.","lastModifiedDate":"2021-10-31"},{"lineNumber":259,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":260,"author":{"gitId":"lrnshk"},"content":"### Showing the current SHN enforcement session : `schedule`","lastModifiedDate":"2021-10-31"},{"lineNumber":261,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":262,"author":{"gitId":"lrnshk"},"content":"Displays a filtered list of all persons who have not been called in the current SHN enforcement session.","lastModifiedDate":"2021-10-31"},{"lineNumber":263,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"wei2912"},"content":"Format: `schedule`","lastModifiedDate":"2021-10-26"},{"lineNumber":265,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":266,"author":{"gitId":"lrnshk"},"content":"* Displays the list of persons who have not been called in the current SHN enforcement session i.e. those whose call status indicators are red crosses.","lastModifiedDate":"2021-10-31"},{"lineNumber":267,"author":{"gitId":"lrnshk"},"content":"* Activates SHN enforcement mode.","lastModifiedDate":"2021-10-31"},{"lineNumber":268,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":269,"author":{"gitId":"lrnshk"},"content":"Example:","lastModifiedDate":"2021-11-02"},{"lineNumber":270,"author":{"gitId":"lrnshk"},"content":"* `session`, followed by `list` will deactivate enforcement mode. Calling `schedule` afterwards will return the user to enforcement mode in the current enforcement session.","lastModifiedDate":"2021-11-02"},{"lineNumber":271,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":272,"author":{"gitId":"wei2912"},"content":"### Updating a person as successfully called : `scall`","lastModifiedDate":"2021-10-26"},{"lineNumber":273,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":274,"author":{"gitId":"wei2912"},"content":"Updates a person as successfully called in the current SHN enforcement session.","lastModifiedDate":"2021-10-26"},{"lineNumber":275,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":276,"author":{"gitId":"wei2912"},"content":"Format: `scall INDEX`","lastModifiedDate":"2021-10-26"},{"lineNumber":277,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":278,"author":{"gitId":"wei2912"},"content":"* Updates the person at the specified `INDEX` as called.","lastModifiedDate":"2021-10-26"},{"lineNumber":279,"author":{"gitId":"wei2912"},"content":"* The index **must be a positive integer** (e.g. 1, 2, 3, ..)","lastModifiedDate":"2021-10-26"},{"lineNumber":280,"author":{"gitId":"wei2912"},"content":"* The index **must not exceed the total number of persons** in the contacts list","lastModifiedDate":"2021-10-31"},{"lineNumber":281,"author":{"gitId":"lrnshk"},"content":"* If Track2Gather is in enforcement mode, the person at the specified index will be removed from the schedule and thus the display.","lastModifiedDate":"2021-10-31"},{"lineNumber":282,"author":{"gitId":"lrnshk"},"content":"  * Note that the person at the specified index will have its call status indicator changed to a green tick.","lastModifiedDate":"2021-10-31"},{"lineNumber":283,"author":{"gitId":"lrnshk"},"content":"* If Track2Gather is not in enforcement mode, the person at the specified index will have its call status indicator changed to a green tick.","lastModifiedDate":"2021-10-31"},{"lineNumber":284,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":285,"author":{"gitId":"lrnshk"},"content":"Example when Track2Gather is not in SHN enforcement mode:","lastModifiedDate":"2021-11-02"},{"lineNumber":286,"author":{"gitId":"lrnshk"},"content":"* `scall 1` updates the first person in the list by changing the person\u0027s call status indicator to a green tick.","lastModifiedDate":"2021-10-31"},{"lineNumber":287,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":288,"author":{"gitId":"lrnshk"},"content":"Example when Track2Gather is in SHN enforcement mode:","lastModifiedDate":"2021-11-02"},{"lineNumber":289,"author":{"gitId":"lrnshk"},"content":"* `scall 1` removes the first person in the list from the schedule and thus the display.","lastModifiedDate":"2021-10-31"},{"lineNumber":290,"author":{"gitId":"lrnshk"},"content":"    * Note that the first person\u0027s call status indicator is also updated (as in the above example), except the person can now only be viewed outside SHN enforcement mode.","lastModifiedDate":"2021-10-31"},{"lineNumber":291,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":292,"author":{"gitId":"wei2912"},"content":"### Updating a person as unsuccessfully called : `fcall`","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"wei2912"},"content":"Updates that a failed call was made to a person in the current SHN enforcement session.","lastModifiedDate":"2021-10-26"},{"lineNumber":295,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"wei2912"},"content":"Format: `fcall INDEX`","lastModifiedDate":"2021-10-26"},{"lineNumber":297,"author":{"gitId":"wei2912"},"content":"* Updates the person at the specified `INDEX` as called, and increments the person\u0027s non-compliance counter by 1.","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"wei2912"},"content":"* The index **must be a positive integer** (e.g. 1, 2, 3, ..)","lastModifiedDate":"2021-10-26"},{"lineNumber":299,"author":{"gitId":"wei2912"},"content":"* The index **must not exceed the total number of persons** in the contacts list","lastModifiedDate":"2021-10-31"},{"lineNumber":300,"author":{"gitId":"lrnshk"},"content":"* If Track2Gather is in SHN enforcement mode, the person at the specified index will be removed from the schedule and thus the display.","lastModifiedDate":"2021-10-31"},{"lineNumber":301,"author":{"gitId":"lrnshk"},"content":"  * Note that the person at the specified index will have its call status indicator changed to a green tick and its non-compliance counter incremented by 1.","lastModifiedDate":"2021-10-31"},{"lineNumber":302,"author":{"gitId":"lrnshk"},"content":"* If Track2Gather is not in SHN enforcement mode, the person at the specified index will have its call status indicator changed to a green tick, and non-compliance counter incremented by 1.","lastModifiedDate":"2021-10-31"},{"lineNumber":303,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":304,"author":{"gitId":"lrnshk"},"content":"Example when Track2Gather is not in SHN enforcement mode:","lastModifiedDate":"2021-11-02"},{"lineNumber":305,"author":{"gitId":"lrnshk"},"content":"* `fcall 1` updates the first person in the list by:","lastModifiedDate":"2021-10-31"},{"lineNumber":306,"author":{"gitId":"lrnshk"},"content":"  * changing the person\u0027s call status indicator to a green tick.","lastModifiedDate":"2021-10-31"},{"lineNumber":307,"author":{"gitId":"lrnshk"},"content":"  * incrementing the person\u0027s non-compliance counter by 1.","lastModifiedDate":"2021-10-31"},{"lineNumber":308,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":309,"author":{"gitId":"lrnshk"},"content":"Example when Track2Gather is in SHN enforcement mode:","lastModifiedDate":"2021-11-02"},{"lineNumber":310,"author":{"gitId":"lrnshk"},"content":"* `fcall 1` removes the first person in the list from the schedule and thus the display.","lastModifiedDate":"2021-10-31"},{"lineNumber":311,"author":{"gitId":"lrnshk"},"content":"    * Note that the first person\u0027s call status indicator and non-compliance counter are also updated (as in the above example), except the person can now only be viewed outside SHN enforcement mode.","lastModifiedDate":"2021-10-31"},{"lineNumber":312,"author":{"gitId":"wei2912"},"content":"    ","lastModifiedDate":"2021-10-26"},{"lineNumber":313,"author":{"gitId":"frederickpek"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-10-18"},{"lineNumber":314,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":315,"author":{"gitId":"frederickpek"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-10-18"},{"lineNumber":316,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":317,"author":{"gitId":"frederickpek"},"content":"Format: `help`","lastModifiedDate":"2021-10-18"},{"lineNumber":318,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"frederickpek"},"content":"Track2Gather data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":331,"author":{"gitId":"frederickpek"},"content":"Track2Gather data are saved as JSON files `[JAR file location]/data/track2gather.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":333,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":334,"author":{"gitId":"wei2912"},"content":"If your changes to the data file makes its format invalid, Track2Gather will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"frederickpek"},"content":"## Command Summary","lastModifiedDate":"2021-10-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"lrnshk"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL cn/CASE_NUMBER ha/HOME_ADDRESS [wa/WORK_ADDRESS] [qa/QUARANTINE_ADDRESS] [sh/SHN_PERIOD] [kn/NEXT_OF_KIN_NAME] [kp/NEXT_OF_KIN_PHONE] [ka/NEXT_OF_KIN_ADDRESS]`\u003cbr\u003e e.g. `add n/Charlie p/12345678 e/charlie@email.com cn/2103 ha/123 Changi Road #01-100 700123 wa/50 Jurong Road 120050 qa/12 Harbourfront Ring 123012 sh/2021-01-01 2021-01-14 kn/Peter kp/90011234 ka/73 Yishun Drive #10-301 310073`","lastModifiedDate":"2021-11-04"},{"lineNumber":345,"author":{"gitId":"lrnshk"},"content":"**Delete** | `delete INDEX [MORE_INDICES]`\u003cbr\u003e e.g. `delete 3` `delete 1 4`","lastModifiedDate":"2021-11-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2021-10-18"},{"lineNumber":347,"author":{"gitId":"lrnshk"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [cn/CASE_NUMBER] [ha/HOME_ADDRESS] [wa/WORK_ADDRESS] [qa/QUARANTINE_ADDRESS] [sh/SHN_PERIOD] [kn/NEXT_OF_KIN_NAME] [kp/NEXT_OF_KIN_PHONE] [ka/NEXT_OF_KIN_ADDRESS]`\u003cbr\u003e e.g. `edit 1 n/Henry Hugh`","lastModifiedDate":"2021-11-04"},{"lineNumber":348,"author":{"gitId":"lrnshk"},"content":"**TShift** | `tshift [PLUS_MINUS_SIGN]DAYS`\u003cbr\u003e e.g. `tshift 3`","lastModifiedDate":"2021-11-02"},{"lineNumber":349,"author":{"gitId":"frederickpek"},"content":"**Clear** | `clear`","lastModifiedDate":"2021-10-18"},{"lineNumber":350,"author":{"gitId":"lrnshk"},"content":"**Find** | `find [n/NAME] [p/PHONE_NUMBER] [cn/CASE_NUMBER] [sh/start:SHN_START_DATE] [sh/end:SHN_END_DATE]`\u003cbr\u003e e.g. `find n/James Jake` `find p/123` `find cn/111` `find sh/start:2000-01-01` `find sh/end: 2000-01-02`","lastModifiedDate":"2021-11-02"},{"lineNumber":351,"author":{"gitId":"lrnshk"},"content":"**Sort** | `sort [n/DIRECTION] [cn/DIRECTION] [sh/start:DIRECTION] [sh/end:DIRECTION]`\u003cbr\u003e e.g. `sort n/` `sort sort/end:dsc` `sort sh/start: cn/asc`","lastModifiedDate":"2021-11-02"},{"lineNumber":352,"author":{"gitId":"wei2912"},"content":"**Session** | `session`","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"lrnshk"},"content":"**Schedule** | `schedule`","lastModifiedDate":"2021-11-02"},{"lineNumber":354,"author":{"gitId":"lrnshk"},"content":"**SCall** | `scall INDEX`\u003cbr\u003e e.g. `scall 3`","lastModifiedDate":"2021-11-02"},{"lineNumber":355,"author":{"gitId":"lrnshk"},"content":"**FCall** | `fcall INDEX`\u003cbr\u003e e.g. `fcall 3`","lastModifiedDate":"2021-11-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"frederickpek"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"lrnshk":139,"-":117,"wei2912":40,"frederickpek":57,"jennibearduit":4}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"wei2912"},"content":"    content: \"Track2Gather\";","lastModifiedDate":"2021-09-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"wei2912":1}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveTrack2Gather(track2Gather)","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lrnshk":1,"-":37}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"lrnshk"},"content":"if () then ([command commits Track2Gather])","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"    :Save Track2Gather to","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"    track2GatherStateList;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lrnshk":3,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":"participant \":Track2GatherParser\" as Track2GatherParser LOGIC_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"LogicManager -\u003e Track2GatherParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"lrnshk"},"content":"activate Track2GatherParser","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"Track2GatherParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"DeleteCommandParser --\u003e Track2GatherParser","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"Track2GatherParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"DeleteCommandParser --\u003e Track2GatherParser : d","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"lrnshk"},"content":"DeleteCommandParser -[hidden]-\u003e Track2GatherParser","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"lrnshk"},"content":"Track2GatherParser --\u003e LogicManager : d","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"lrnshk"},"content":"deactivate Track2GatherParser","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lrnshk":10,"-":59}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"Class Track2GatherParser","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"LogicManager -right-\u003e\"1\" Track2GatherParser","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"lrnshk"},"content":"Track2GatherParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lrnshk":3,"-":43}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"lrnshk"},"content":"Interface ReadOnlyTrack2Gather \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"Class Track2Gather","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"Class ReadOnlyTrack2Gather","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"Class Email","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"Class CaseNumber","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"Class Address","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"Class WorkAddress","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"Class QuarantineAddress","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"Class ShnPeriod","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"Class NextOfKinName","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"Class NextOfKinPhone","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"lrnshk"},"content":"Class NextOfKinAddress","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"Class CallStatus","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"Track2Gather .up.|\u003e ReadOnlyTrack2Gather","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"lrnshk"},"content":"Model .left.\u003e ReadOnlyTrack2Gather","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"lrnshk"},"content":"ModelManager -left-\u003e \"1\" Track2Gather","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"Track2Gather *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"lrnshk"},"content":"Person *--\u003e CaseNumber","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"lrnshk"},"content":"Person *--\u003e \"0..1\" WorkAddress","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"lrnshk"},"content":"Person *--\u003e \"0..1\" QuarantineAddress","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"lrnshk"},"content":"Person *--\u003e \"0..1\" ShnPeriod","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"lrnshk"},"content":"Person *--\u003e \"0..1\" NextOfKinName","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"lrnshk"},"content":"Person *--\u003e \"0..1\" NextOfKinPhone","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"lrnshk"},"content":"Person *--\u003e \"0..1\" NextOfKinAddress","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"Person *--\u003e CallStatus","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"Address -[hidden]right-\u003e Name","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"lrnshk"},"content":"WorkAddress -[hidden]right-\u003e QuarantineAddress","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"QuarantineAddress -[hidden]right-\u003e NextOfKinAddress","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"NextOfKinAddress -[hidden]right-\u003e NextOfKinName","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"lrnshk"},"content":"NextOfKinName -[hidden]right-\u003e NextOfKinPhone","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"NextOfKinPhone -[hidden]right-\u003e Email","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"Email -[hidden]right-\u003e CaseNumber","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"CaseNumber -[hidden]right-\u003e ShnPeriod","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"ShnPeriod -[hidden]right-\u003e CallStatus","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"WorkAddress ..\u003e Address","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"QuarantineAddress ..\u003e Address","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"NextOfKinName ..\u003e Name","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"NextOfKinPhone ..\u003e Phone","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"NextOfKinAddress ..\u003e Address","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lrnshk":24,"-":41,"wei2912":17}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"Class Track2GatherParser","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"HiddenOutside ..\u003e Track2GatherParser","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"Track2GatherParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"Track2GatherParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"lrnshk":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":"package \"Track2Gather Storage\" #F4F6F6{","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"Interface Track2GatherStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"lrnshk"},"content":"Class JsonTrack2GatherStorage","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"lrnshk"},"content":"Class JsonSerializableTrack2Gather","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"lrnshk"},"content":"StorageManager -up-\u003e \"1\" Track2GatherStorage","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"Storage -right-|\u003e Track2GatherStorage","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"lrnshk"},"content":"JsonTrack2GatherStorage .up.|\u003e Track2GatherStorage","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"JsonTrack2GatherStorage ..\u003e JsonSerializableTrack2Gather","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"lrnshk"},"content":"JsonSerializableTrack2Gather --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lrnshk":10,"-":32}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"    class State1 as \"__tg0:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"    class State2 as \"__tg1:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"    class State3 as \"__tg2:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lrnshk":4,"-":16}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"    class State1 as \"__tg0:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"    class State2 as \"__tg1:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"    class State3 as \"__tg2:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lrnshk":4,"-":18}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"    class State1 as \"__tg0:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"    class State2 as \"__tg1:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"    class State3 as \"__tg2:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lrnshk":4,"-":16}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"    class State1 as \"__tg0:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"    class State2 as \"__tg1:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"    class State3 as \"__tg2:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lrnshk":4,"-":16}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"    class State1 as \"__tg0:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"    class State2 as \"__tg1:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"    class State3 as \"__tg2:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lrnshk":4,"-":16}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"    class State1 as \"__tg0:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"    class State2 as \"__tg1:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"    class State3 as \"__tg2:Track2Gather__\"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"lrnshk"},"content":"note right on link: State tg2 deleted.","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lrnshk":5,"-":16}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":"participant \":Track2GatherParser\" as Track2GatherParser LOGIC_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"participant \":VersionedTrack2Gather\" as VersionedTrack2Gather MODEL_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"LogicManager -\u003e Track2GatherParser : parseCommand(undo)","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":"activate Track2GatherParser","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"lrnshk"},"content":"Track2GatherParser -\u003e UndoCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"UndoCommand --\u003e Track2GatherParser","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"Track2GatherParser --\u003e LogicManager : u","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"deactivate Track2GatherParser","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"UndoCommand -\u003e Model : undoTrack2Gather()","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"lrnshk"},"content":"Model -\u003e VersionedTrack2Gather : undo()","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"lrnshk"},"content":"activate VersionedTrack2Gather","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"VersionedTrack2Gather -\u003e VersionedTrack2Gather :resetData(ReadOnlyTrack2Gather)","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"lrnshk"},"content":"VersionedTrack2Gather--\u003e Model :","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"lrnshk"},"content":"deactivate VersionedTrack2Gather","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lrnshk":14,"-":39}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"Participant \":Track2GatherParser\" as t2gp LOGIC_COLOR","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"logic -\u003e t2gp ++: parseCommand(commandText)","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"t2gp -\u003e ecp","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"t2gp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"ecp -\u003e ec ++: index, editPersonDescriptor","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"ecp --\u003e t2gp --: command","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"t2gp --\u003e logic --: command","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"-":15,"wei2912":6}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"title: Track2Gather","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103-W14-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103-W14-2/tp/actions)","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-W14-2/tp/branch/master/graph/badge.svg?token\u003dWENQ6375WF)](https://codecov.io/gh/AY2122S1-CS2103-W14-2/tp)","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"* Track2Gather is an app that provides basic features for contact tracing personnel to track the following details for ","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"  up to a few thousand persons:","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"    * personal information (limited to English names and Singaporean contact numbers and addresses)","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"    * case number","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"lrnshk"},"content":"    * Stay-Home-Notice period","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"lrnshk"},"content":"    * next-of-kin information","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":"* If you are interested in using Track2Gather, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.md#quick-start).","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"* If you are interested about developing Track2Gather, the [**Developer Guide**](DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"lrnshk":7,"-":13,"wei2912":5}},{"path":"docs/sanityCheck.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"# Purpose","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"Hi! Overfitted here. I am writing this document in response to the large number of hanging dependencies created within","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"the first week of the project. This document aims to outline the not so obvious items that should be updated whenever","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"you create or modify a feature.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"# Table of Contents","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"[Person Attributes](#attributes)","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"[Features](#features)","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"\u003ca name\u003d\"attributes\"/\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"## Person Attributes","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"Attributes are each to be represented as an object in the person object in [person library](\"../src/main/java/seedu.track2gather/model/person\".)","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"The purpose of this is to make tests easier, apply regex validation and to provide compile-time validation in our ","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"commands.","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"When creating an attribute, you minimally require:","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"1. the value itself","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"2. Regex validation (for example, no whitespaces at the beginning or end), in case the parser breaks","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"   a. use `seedu.track2gather.commons.util.AppUtil.checkArgument`, using a custom `MESSAGE_CONSTRAINTS` as the error message.","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"3. null check in the constructor using `java.util.Objects.requireNonNull`","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"4. equals","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"5. hashCode","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"Then add tests in [person test directory](\"../src/main/java/seedu.address/model/person\") for your new class.","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"You can reference CaseNumberTest.java for a minimal test, and AddressTest.java for string checks.","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"To integrate the attribute with the rest of the system, do the following:","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"1. Add your attribute prefix to [cliparser](\"../src/main/java/seedu/address/logic/parser/CliSyntax.java\")","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"2. Document your attribute prefix in AddCommand\u0027s MESSAGE_USAGE warning","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"3. Add parsing for your prefix in [AddCommandParser.java](\"src/main/java/seedu/address/logic/parser/AddCommandParser.java\")","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"   a. arePrefixesPresent check, otherwise will throw java.util.NoSuchElementException instead of CommandException","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"4. Add whitespace trimming and validation checks in [ParserUtil.java](\"..//home/naws/tp/src/main/java/seedu/address/logic/parser/ParserUtil.java\")","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"5. Add your attribute to Person class [Person.java](\"..//home/naws/tp/src/main/java/seedu/address/model/person/Person.java\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"   a. make sure that the Person constructor in the returned command works correctly.","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"   b. add attribute to `equals` and `toString` function","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"   c. add attribute getter","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"6. Add your attribute to the [Person test](\"../src/test/java/seedu/address/model/person/PersonTest.java\")","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"7. Add your attribute to JsonAdaptedPerson to allow for storage","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"8. Add your attribute to [JsonAdaptedPersonTest](\"../src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java\")","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"9. Add sample attributes to AMY and BOB test data in CommandTestUtil.java + valid prefixed (desc) command for attribute","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"   a. Amy for addTest","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"   b. Bob for editTest","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"10. Add sample attributes to PersonBuilder","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"    a. class property","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"    b. with\u003cAttribute\u003e method","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"    c. build() call to constructor","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"11. Add sample attributes to TypicalPersons.java","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"12. Add your attribute to `execute_storageThrowsIoException_throwsCommandException` test in LogicManagerTest.java","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"13. Add your attribute to AddCommandParserTest.java","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"    a. Add valid prefixed command (desc constant) to existing tests","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"    b. Add your own test using VALID_\u003cATTRIBUTE\u003e_BOB instead of DESC command","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"14. Add your attribute to PersonUtil.java","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"15. Add your attribute to test data json files","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"    ","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"### MINIMAL ACCEPTANCE","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"FOR ASSIGNEES AND PR MAKERS: Do not merge the PR unless it has the following passing tests:","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"1. Attribute tests from [person test directory](\"../src/main/java/seedu.address/model/person\")","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"2. Regex parsing and assertions, with a valid MESSAGE_USAGE warning","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"3. AddCommandParserTest.java prefix-less test","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"over-fitted"},"content":"4. AddCommandParserTest.java invalid value test","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"over-fitted"},"content":"\u003ca name\u003d\"features\"/\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"over-fitted"},"content":"## Feature standardisation","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"over-fitted"},"content":"We decided to standardise the app as having a single-view. As such, all functionality should operate within the ","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"over-fitted"},"content":"constraints as follows:","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"over-fitted"},"content":"1. All functions need to be CLI-only","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"over-fitted"},"content":"2. To select which person is to be acted upon, we should use the index of the person in the list","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"over-fitted"},"content":"3. Persons relevant to the view should be filtered by applying a predicate on an attribute of Person attribute class.","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"over-fitted"},"content":"## Implementing the feature","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"over-fitted"},"content":"### Filtering view","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"over-fitted"},"content":"1. View filters take the form of predicates which should be created in ","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"over-fitted"},"content":"   [Model.java](\"../src/main/java/seedu/address/model/Model.java\")","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"over-fitted"},"content":"2. Refer to [List Command](\"../src/main/java/seedu/address/logic/commands/ListCommand.java\") for how to implement","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"over-fitted"},"content":"   the filter","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"over-fitted"},"content":"   ","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"over-fitted"},"content":"### Adding the command","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"over-fitted"},"content":"1. ","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"over-fitted":78,"wei2912":2}},{"path":"docs/team/frederickpek.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"--- ","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"title: Frederick Pek\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"frederickpek"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"frederickpek"},"content":"### Project: Track2Gather","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"Track2Gather is a desktop application that will manage up to a few thousand contacts, providing basic features for","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"contact tracing personnel to organise and search through them via personal information, case contacts and quarantine","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"period. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"about 10 kLoC.","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"frederickpek"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"frederickpek"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"frederickpek"},"content":"    * None yet.","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"frederickpek"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"frederickpek"},"content":"* **Project management**:","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"frederickpek"},"content":"    * None yet.","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"frederickpek"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"frederickpek"},"content":"    * None yet.","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"frederickpek"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"frederickpek"},"content":"    * User Guide:","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"frederickpek"},"content":"        * None yet.","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"frederickpek"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"frederickpek"},"content":"        * None yet.","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"luffingluffy":3,"wei2912":4,"frederickpek":23}},{"path":"docs/team/jennibearduit.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"--- ","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"title: Jennifer\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"### Project: Track2Gather","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"Track2Gather is a desktop application that will manage up to a few thousand contacts, providing basic features for","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"contact tracing personnel to organise and search through them via personal information, case contacts and quarantine","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"period. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"about 10 kLoC.","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    * Coming Soon.","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"* **Project management**:","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"    * Coming Soon.","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"    * Coming Soon.","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"    * Coming Soon.","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"* **Community**:","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"    * Coming Soon.","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"* **Tools**:","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"    * Coming Soon.","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"luffingluffy":3,"wei2912":4,"jennibearduit":32}},{"path":"docs/team/lrnshk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"--- ","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"title: Lauren Shak\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"---","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":"### Project: Track2Gather","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"Track2Gather is a desktop application that will manage up to a few thousand contacts, providing basic features for","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"contact tracing personnel to organise and search through them via personal information, case contacts and quarantine","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"period. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"about 10 kLoC.","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"lrnshk"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"lrnshk"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"      by using the redo command.","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"      the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"lrnshk"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"lrnshk"},"content":"      analysis of design alternatives. The implementation too was challenging as it required changes to existing","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"      commands.","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"      the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"* **Project management**:","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"lrnshk"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"lrnshk"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36]()","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"lrnshk"},"content":"      , [\\#38]())","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"lrnshk"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"    * User Guide:","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"lrnshk"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"lrnshk"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"lrnshk"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"lrnshk"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"lrnshk"},"content":"* **Community**:","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"lrnshk"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"lrnshk"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"lrnshk"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"lrnshk"},"content":"* **Tools**:","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"lrnshk"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"lrnshk"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"lrnshk"},"content":"* _{you can add/remove categories in the list above}__","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"luffingluffy":3,"lrnshk":48,"wei2912":4}},{"path":"docs/team/luffingluffy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"--- ","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"title: Lutfi Randiva\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"### Project: Track2Gather","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"Track2Gather is a desktop application used for teaching Software Engineering principles. The user interacts","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. ","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"      by using the redo command.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"      the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"      analysis of design alternatives. The implementation too was challenging as it required changes to existing","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"      commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"      the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"* **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36]()","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"      , [\\#38]())","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"    * User Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"    * README","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"        * Added UI mockup for the final product.","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"* **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"* **Tools**:","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"* _{you can add/remove categories in the list above}__","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"luffingluffy":53,"wei2912":2}},{"path":"docs/team/over-fitted.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"--- ","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"title: Andrew Sutjipto\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"### Project: Track2Gather","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"Track2Gather is a desktop application that will manage up to a few thousand contacts, providing basic features for","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"contact tracing personnel to organise and search through them via personal information, case contacts and quarantine","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"period. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"about 10 kLoC.","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"* **Project management**:","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"* **Community**:","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"* **Tools**:","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"* _{you can add/remove categories in the list above}__","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"luffingluffy":3,"over-fitted":22,"wei2912":4}},{"path":"docs/team/wei2912.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"--- ","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"title: Ng Wei En\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"### Project: Track2Gather","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"Track2Gather is a desktop application that will manage up to a few thousand contacts, providing basic features for","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"contact tracing personnel to organise and search through them via personal information, case contacts and quarantine","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"period. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"about 10 kLoC. ","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    * None yet.","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"* **Project management**:","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    * None yet.","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    * None yet.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    * User Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"        * None yet.","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"        * None yet.","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"luffingluffy":3,"wei2912":27}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"This command allows users of the Track2Gather application to add optional remarks to people in their contacts list and edit it if required. The command should have the following format:","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":" * Changes the remark of an existing person in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `Track2GatherParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"wei2912"},"content":"Create a `RemarkCommandParser` class in the `seedu.track2gather.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"wei2912"},"content":":information_source: Don’t forget to update `Track2GatherParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2021-10-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"wei2912"},"content":"Create a new `Remark` in `seedu.track2gather.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-10-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"wei2912"},"content":"Simply add the following to [`seedu.track2gather.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"wei2912"},"content":"Track2Gather stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2021-10-31"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"wei2912"},"content":":exclamation: You must delete Track2Gather’s storage file located at `/data/track2gather.json` before running it! Not doing so will cause Track2Gather to default to an empty contacts list!","lastModifiedDate":"2021-10-31"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"wei2912"},"content":"This concludes the tutorial for adding a new `Command` to Track2Gather.","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"-":388,"wei2912":13}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"The `address` field in `Person` is actually an instance of the `seedu.track2gather.model.person.attributes.Address`","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"wei2912"},"content":"**`invalidPersonTrack2Gather.json`:**","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"luffingluffy":4,"-":110,"wei2912":1}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.track2gather.logic.Logic`.","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"A quick look at the `seedu.track2gather.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"wei2912"},"content":"        Command command \u003d track2GatherParser.parseCommand(commandText);","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"wei2912"},"content":"            storage.saveTrack2Gather(model.getTrack2Gather());","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"wei2912"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `Track2GatherParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-10-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"wei2912"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveTrack2Gather(model.getTrack2Gather())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-10-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"wei2912"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonTrack2Gather#saveTrack2Gather()` method which calls the `JsonSerializableTrack2Gather` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-10-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"wei2912"},"content":"    **`JsonSerializableTrack2Gather` constructor:**","lastModifiedDate":"2021-10-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"wei2912"},"content":"     * Converts a given {@code ReadOnlyTrack2Gather} into this class for Jackson use.","lastModifiedDate":"2021-10-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"wei2912"},"content":"     * {@code JsonSerializableTrack2Gather}.","lastModifiedDate":"2021-10-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"wei2912"},"content":"    public JsonSerializableTrack2Gather(ReadOnlyTrack2Gather source) {","lastModifiedDate":"2021-10-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"wei2912"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableTrack2Gather`.","lastModifiedDate":"2021-10-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"wei2912"},"content":"    3.  Save the contacts list in the CSV format instead","lastModifiedDate":"2021-10-31"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"wei2912"},"content":"    6.  Add a new entity to the contacts list","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"-":287,"wei2912":14}},{"path":"src/main/java/seedu/track2gather/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.LogsCenter;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.util.FileUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"wei2912":3,"-":61}},{"path":"src/main/java/seedu/track2gather/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"wei2912":1,"-":24}},{"path":"src/main/java/seedu/track2gather/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.Config;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.LogsCenter;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.Version;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.util.ConfigUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.util.StringUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.Logic;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.LogicManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ModelManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.storage.JsonTrack2GatherStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.storage.Storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.storage.StorageManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.storage.Track2GatherStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.ui.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.ui.UiManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Track2Gather ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"        Track2GatherStorage track2GatherStorage \u003d new JsonTrack2GatherStorage(userPrefs.getTrack2GatherFilePath());","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"        storage \u003d new StorageManager(track2GatherStorage, userPrefsStorage);","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s contacts list and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"     * The data from the sample contacts list will be used instead if {@code storage}\u0027s contacts list is not found,","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"     * or an empty contacts list will be used instead if errors occur when reading {@code storage}\u0027s contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"        Optional\u003cReadOnlyTrack2Gather\u003e track2GatherOptional;","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"        ReadOnlyTrack2Gather initialData;","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"            track2GatherOptional \u003d storage.readTrack2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"            if (!track2GatherOptional.isPresent()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Track2Gather\");","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"            initialData \u003d track2GatherOptional.orElseGet(SampleDataUtil::getSampleTrack2Gather);","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Track2Gather\");","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"            initialData \u003d new Track2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Track2Gather\");","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"            initialData \u003d new Track2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"wei2912"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Track2Gather\");","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"wei2912"},"content":"        logger.info(\"Starting Track2Gather \" + MainApp.VERSION);","lastModifiedDate":"2021-10-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"wei2912"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Track2Gather ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":44,"-":139}},{"path":"src/main/java/seedu/track2gather/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.core;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":1,"-":62}},{"path":"src/main/java/seedu/track2gather/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.core;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":1,"-":78}},{"path":"src/main/java/seedu/track2gather/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.core;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    private static final String LOG_FILE \u003d \"track2gather.log\";","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":2,"-":110}},{"path":"src/main/java/seedu/track2gather/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.core;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index(s) provided is invalid\";","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_PERSONS_FOUND_OVERVIEW \u003d \"There are %1$d person(s) found in your search!\";","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_PREDICATE_SHOW_ALL_PERSONS \u003d \"Now showing all persons!\";","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_PREDICATE_SHOW_NON_CALLED \u003d \"Now showing all persons who have not been called \"","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"            + \"in the current SHN enforcement session!\";","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lrnshk":5,"wei2912":1,"-":9}},{"path":"src/main/java/seedu/track2gather/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.core;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":1,"-":115}},{"path":"src/main/java/seedu/track2gather/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.core.index;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"public class Index implements Comparable\u003cIndex\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"    public int compareTo(Index other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"lrnshk"},"content":"        return Integer.compare(zeroBasedIndex, other.zeroBasedIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"lrnshk":5,"wei2912":1,"-":52}},{"path":"src/main/java/seedu/track2gather/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.exceptions;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":1,"-":10}},{"path":"src/main/java/seedu/track2gather/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.exceptions;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wei2912":1,"-":20}},{"path":"src/main/java/seedu/track2gather/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.util;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.MainApp;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wei2912":2,"-":40}},{"path":"src/main/java/seedu/track2gather/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.util;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wei2912":1,"-":34}},{"path":"src/main/java/seedu/track2gather/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.util;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.Config;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wei2912":3,"-":20}},{"path":"src/main/java/seedu/track2gather/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.util;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":1,"-":82}},{"path":"src/main/java/seedu/track2gather/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.util;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.LogsCenter;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":3,"-":140}},{"path":"src/main/java/seedu/track2gather/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.util;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":2,"-":66}},{"path":"src/main/java/seedu/track2gather/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.GuiSettings;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.CommandResult;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"     * Returns the Track2Gather.","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"     * @see seedu.track2gather.model.Model#getTrack2Gather()","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"    ReadOnlyTrack2Gather getTrack2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"     * Returns the user prefs\u0027 contacts list file path.","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    Path getTrack2GatherFilePath();","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"    /** Returns the total number of contacts in the contacts list. */","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"    int getNumPersonsTotal();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wei2912":14,"-":39}},{"path":"src/main/java/seedu/track2gather/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.GuiSettings;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.LogsCenter;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.Command;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.CommandResult;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.Track2GatherParser;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.storage.Storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    private final Track2GatherParser track2GatherParser;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"        track2GatherParser \u003d new Track2GatherParser();","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"        Command command \u003d track2GatherParser.parseCommand(commandText);","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"            storage.saveTrack2Gather(model.getTrack2Gather());","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"    public ReadOnlyTrack2Gather getTrack2Gather() {","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"        return model.getTrack2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"    public int getNumPersonsTotal() {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"        return model.getTrack2Gather().getPersonList().size();","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"    public Path getTrack2GatherFilePath() {","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"        return model.getTrack2GatherFilePath();","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wei2912":24,"-":62}},{"path":"src/main/java/seedu/track2gather/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_HOME_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_PHONE;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_QUARANTINE_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_WORK_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":" * Adds a person to the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the contacts list. \\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"            + PREFIX_CASE_NUMBER + \"CASE_NUMBER \"","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"lrnshk"},"content":"            + PREFIX_HOME_ADDRESS + \"HOME_ADDRESS \"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_WORK_ADDRESS + \"WORK_ADDRESS] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_QUARANTINE_ADDRESS + \"QUARANTINE_ADDRESS] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_SHN_PERIOD + \"SHN_PERIOD] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_NEXT_OF_KIN_NAME + \"NEXT_OF_KIN_NAME] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_NEXT_OF_KIN_PHONE + \"NEXT_OF_KIN_PHONE] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_NEXT_OF_KIN_ADDRESS + \"NEXT_OF_KIN_ADDRESS] \\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"            + PREFIX_CASE_NUMBER + \"123 \"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"            + PREFIX_HOME_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"            + PREFIX_SHN_PERIOD + \"2021-10-23 2021-10-30 \"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"            + PREFIX_NEXT_OF_KIN_NAME + \"Bob Doe\";","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\\n\" + MESSAGE_PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This case number already exists in the contacts list.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"over-fitted":1,"lrnshk":12,"wei2912":19,"-":49}},{"path":"src/main/java/seedu/track2gather/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":"import java.time.Clock;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"lrnshk"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Period;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":" * Clears the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Contacts with completed SHN periods have been cleared!\";","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"lrnshk"},"content":"    private Clock clock;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"    public ClearCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"        this.clock \u003d Clock.systemDefaultZone();","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"    public ClearCommand(Clock clock) {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"        this.clock \u003d clock;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"lrnshk"},"content":"        List\u003cPerson\u003e lastShownListCopy \u003d List.copyOf(model.getFilteredPersonList());","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"lrnshk"},"content":"        // A dummy SHN period for contacts that do not have SHN periods","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"lrnshk"},"content":"        // These contacts will be ignored as the endDate is always set to the future","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"        LocalDate startDate \u003d LocalDate.of(2000, 1, 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"        LocalDate futureDate \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"        assert (futureDate.isAfter(startDate));","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"        Period dummyIncompleteShnPeriod \u003d new Period(startDate, futureDate);","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"lrnshk"},"content":"        for (int i \u003d 0; i \u003c lastShownListCopy.size(); i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"lrnshk"},"content":"            Person person \u003d lastShownListCopy.get(i);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"            if (person.getShnPeriod().value.orElse(dummyIncompleteShnPeriod).isCompletedBy(LocalDate.now(clock))) {","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"lrnshk"},"content":"                model.deletePerson(person);","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"lrnshk"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"luffingluffy":5,"lrnshk":25,"wei2912":4,"-":17}},{"path":"src/main/java/seedu/track2gather/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wei2912":3,"-":17}},{"path":"src/main/java/seedu/track2gather/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wei2912":1,"-":70}},{"path":"src/main/java/seedu/track2gather/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"lrnshk"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.Messages;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":" * Deletes a person identified using its displayed index from the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"            + \": Deletes the person(s) identified by the index number(s) used in the displayed person list.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"lrnshk"},"content":"            + \"Parameters: INDEX [MORE_INDICES] (must be positive integers)\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2\";","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person(s):\\n\";","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"    private final ArrayList\u003cIndex\u003e targetIndices;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"     * Creates a DeleteCommand to delete the specified {@code Person}(s)","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"    public DeleteCommand(ArrayList\u003cIndex\u003e targetIndices) {","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"lrnshk"},"content":"        targetIndices.sort(Comparator.reverseOrder());","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"lrnshk"},"content":"        this.targetIndices \u003d targetIndices;","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"lrnshk"},"content":"        String commandResult \u003d MESSAGE_DELETE_PERSON_SUCCESS;","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"lrnshk"},"content":"        ArrayList\u003cString\u003e commandResultList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"lrnshk"},"content":"        for (Index targetIndex : targetIndices) {","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"lrnshk"},"content":"            commandResultList.add(0, personToDelete.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"lrnshk"},"content":"        commandResult +\u003d commandResultList.stream().collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"lrnshk"},"content":"        return new CommandResult(commandResult);","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"lrnshk"},"content":"                \u0026\u0026 targetIndices.equals(((DeleteCommand) other).targetIndices)); // state check","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lrnshk":24,"wei2912":7,"-":36}},{"path":"src/main/java/seedu/track2gather/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_HOME_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_PHONE;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_QUARANTINE_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_WORK_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.Messages;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Address;","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CallStatus;","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CaseNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Name;","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinName;","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinPhone;","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.QuarantineAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.ShnPeriod;","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.WorkAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":" * Edits the details of an existing person in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_CASE_NUMBER + \"CASE_NUMBER] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_HOME_ADDRESS + \"HOME_ADDRESS] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_WORK_ADDRESS + \"WORK_ADDRESS] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_QUARANTINE_ADDRESS + \"QUARANTINE_ADDRESS] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_SHN_PERIOD + \"SHN_PERIOD] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_NEXT_OF_KIN_NAME + \"NEXT_OF_KIN_NAME] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_NEXT_OF_KIN_PHONE + \"NEXT_OF_KIN_PHONE] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_NEXT_OF_KIN_ADDRESS + \"NEXT_OF_KIN_ADDRESS] \\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"lrnshk"},"content":"            + MESSAGE_PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This case number already exists in the contacts list.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"frederickpek"},"content":"    public static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":117,"author":{"gitId":"wei2912"},"content":"        CaseNumber updatedCaseNumber \u003d editPersonDescriptor.getCaseNumber().orElse(personToEdit.getCaseNumber());","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"wei2912"},"content":"        Address updatedHomeAddress \u003d editPersonDescriptor.getHomeAddress().orElse(personToEdit.getHomeAddress());","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"luffingluffy"},"content":"        WorkAddress updatedWorkAddress \u003d editPersonDescriptor.getWorkAddress()","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"luffingluffy"},"content":"                .orElse(personToEdit.getWorkAddress());","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"luffingluffy"},"content":"        QuarantineAddress updatedQuarantineAddress \u003d editPersonDescriptor.getQuarantineAddress()","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"luffingluffy"},"content":"                .orElse(personToEdit.getQuarantineAddress());","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"luffingluffy"},"content":"        ShnPeriod updatedShnPeriod \u003d editPersonDescriptor.getShnPeriod()","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"luffingluffy"},"content":"                .orElse(personToEdit.getShnPeriod());","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"luffingluffy"},"content":"        NextOfKinName updatedNextOfKinName \u003d editPersonDescriptor.getNextOfKinName()","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"luffingluffy"},"content":"                .orElse(personToEdit.getNextOfKinName());","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"luffingluffy"},"content":"        NextOfKinPhone updatedNextOfKinPhone \u003d editPersonDescriptor.getNextOfKinPhone()","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"luffingluffy"},"content":"                .orElse(personToEdit.getNextOfKinPhone());","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"luffingluffy"},"content":"        NextOfKinAddress updatedNextOfKinAddress \u003d editPersonDescriptor.getNextOfKinAddress()","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"luffingluffy"},"content":"                .orElse(personToEdit.getNextOfKinAddress());","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"over-fitted"},"content":"        CallStatus updatedCallStatus \u003d editPersonDescriptor.getCallStatus().orElse(personToEdit.getCallStatus());","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"frederickpek"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedCaseNumber, updatedHomeAddress,","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"frederickpek"},"content":"                updatedWorkAddress, updatedQuarantineAddress, updatedShnPeriod, updatedNextOfKinName,","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"over-fitted"},"content":"                updatedNextOfKinPhone, updatedNextOfKinAddress, updatedCallStatus);","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"over-fitted"},"content":"        private CaseNumber caseNumber;","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"wei2912"},"content":"        private Address homeAddress;","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"luffingluffy"},"content":"        private WorkAddress workAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"luffingluffy"},"content":"        private QuarantineAddress quarantineAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"frederickpek"},"content":"        private ShnPeriod shnPeriod;","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"luffingluffy"},"content":"        private NextOfKinName nextOfKinName;","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"luffingluffy"},"content":"        private NextOfKinPhone nextOfKinPhone;","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"luffingluffy"},"content":"        private NextOfKinAddress nextOfKinAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"over-fitted"},"content":"        private CallStatus callStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"luffingluffy"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":183,"author":{"gitId":"over-fitted"},"content":"            setCaseNumber(toCopy.caseNumber);","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"wei2912"},"content":"            setHomeAddress(toCopy.homeAddress);","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"frederickpek"},"content":"            setWorkAddress(toCopy.workAddress);","lastModifiedDate":"2021-10-17"},{"lineNumber":186,"author":{"gitId":"frederickpek"},"content":"            setQuarantineAddress(toCopy.quarantineAddress);","lastModifiedDate":"2021-10-17"},{"lineNumber":187,"author":{"gitId":"frederickpek"},"content":"            setShnPeriod(toCopy.shnPeriod);","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"frederickpek"},"content":"            setNextOfKinName(toCopy.nextOfKinName);","lastModifiedDate":"2021-10-17"},{"lineNumber":189,"author":{"gitId":"frederickpek"},"content":"            setNextOfKinPhone(toCopy.nextOfKinPhone);","lastModifiedDate":"2021-10-17"},{"lineNumber":190,"author":{"gitId":"frederickpek"},"content":"            setNextOfKinAddress(toCopy.nextOfKinAddress);","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"over-fitted"},"content":"            setCallStatus(toCopy.callStatus);","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"frederickpek"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, caseNumber, homeAddress,","lastModifiedDate":"2021-10-17"},{"lineNumber":199,"author":{"gitId":"frederickpek"},"content":"                    workAddress, quarantineAddress, shnPeriod, nextOfKinName, nextOfKinPhone, nextOfKinAddress);","lastModifiedDate":"2021-10-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"over-fitted"},"content":"        public void setCaseNumber(CaseNumber caseNumber) {","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"over-fitted"},"content":"            this.caseNumber \u003d caseNumber;","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"over-fitted"},"content":"        public Optional\u003cCaseNumber\u003e getCaseNumber() {","lastModifiedDate":"2021-10-10"},{"lineNumber":231,"author":{"gitId":"over-fitted"},"content":"            return Optional.ofNullable(caseNumber);","lastModifiedDate":"2021-10-10"},{"lineNumber":232,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":233,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":234,"author":{"gitId":"wei2912"},"content":"        public void setHomeAddress(Address homeAddress) {","lastModifiedDate":"2021-10-11"},{"lineNumber":235,"author":{"gitId":"wei2912"},"content":"            this.homeAddress \u003d homeAddress;","lastModifiedDate":"2021-10-11"},{"lineNumber":236,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":237,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":238,"author":{"gitId":"wei2912"},"content":"        public Optional\u003cAddress\u003e getHomeAddress() {","lastModifiedDate":"2021-10-11"},{"lineNumber":239,"author":{"gitId":"wei2912"},"content":"            return Optional.ofNullable(homeAddress);","lastModifiedDate":"2021-10-11"},{"lineNumber":240,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":241,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":242,"author":{"gitId":"luffingluffy"},"content":"        public void setWorkAddress(WorkAddress workAddress) {","lastModifiedDate":"2021-11-03"},{"lineNumber":243,"author":{"gitId":"frederickpek"},"content":"            this.workAddress \u003d workAddress;","lastModifiedDate":"2021-10-17"},{"lineNumber":244,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":245,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":246,"author":{"gitId":"luffingluffy"},"content":"        public Optional\u003cWorkAddress\u003e getWorkAddress() {","lastModifiedDate":"2021-11-03"},{"lineNumber":247,"author":{"gitId":"frederickpek"},"content":"            return Optional.ofNullable(workAddress);","lastModifiedDate":"2021-10-17"},{"lineNumber":248,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":249,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":250,"author":{"gitId":"luffingluffy"},"content":"        public void setQuarantineAddress(QuarantineAddress quarantineAddress) {","lastModifiedDate":"2021-11-03"},{"lineNumber":251,"author":{"gitId":"frederickpek"},"content":"            this.quarantineAddress \u003d quarantineAddress;","lastModifiedDate":"2021-10-17"},{"lineNumber":252,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":253,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":254,"author":{"gitId":"luffingluffy"},"content":"        public Optional\u003cQuarantineAddress\u003e getQuarantineAddress() {","lastModifiedDate":"2021-11-03"},{"lineNumber":255,"author":{"gitId":"frederickpek"},"content":"            return Optional.ofNullable(quarantineAddress);","lastModifiedDate":"2021-10-17"},{"lineNumber":256,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":257,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":258,"author":{"gitId":"frederickpek"},"content":"        public void setShnPeriod(ShnPeriod shnPeriod) {","lastModifiedDate":"2021-10-17"},{"lineNumber":259,"author":{"gitId":"frederickpek"},"content":"            this.shnPeriod \u003d shnPeriod;","lastModifiedDate":"2021-10-17"},{"lineNumber":260,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":261,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":262,"author":{"gitId":"frederickpek"},"content":"        public Optional\u003cShnPeriod\u003e getShnPeriod() {","lastModifiedDate":"2021-10-17"},{"lineNumber":263,"author":{"gitId":"frederickpek"},"content":"            return Optional.ofNullable(shnPeriod);","lastModifiedDate":"2021-10-17"},{"lineNumber":264,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":265,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":266,"author":{"gitId":"luffingluffy"},"content":"        public void setNextOfKinName(NextOfKinName nextOfKinName) {","lastModifiedDate":"2021-11-03"},{"lineNumber":267,"author":{"gitId":"frederickpek"},"content":"            this.nextOfKinName \u003d nextOfKinName;","lastModifiedDate":"2021-10-17"},{"lineNumber":268,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":269,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":270,"author":{"gitId":"luffingluffy"},"content":"        public Optional\u003cNextOfKinName\u003e getNextOfKinName() {","lastModifiedDate":"2021-11-03"},{"lineNumber":271,"author":{"gitId":"frederickpek"},"content":"            return Optional.ofNullable(nextOfKinName);","lastModifiedDate":"2021-10-17"},{"lineNumber":272,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":273,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":274,"author":{"gitId":"luffingluffy"},"content":"        public void setNextOfKinPhone(NextOfKinPhone nextOfKinPhone) {","lastModifiedDate":"2021-11-03"},{"lineNumber":275,"author":{"gitId":"frederickpek"},"content":"            this.nextOfKinPhone \u003d nextOfKinPhone;","lastModifiedDate":"2021-10-17"},{"lineNumber":276,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":277,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":278,"author":{"gitId":"luffingluffy"},"content":"        public Optional\u003cNextOfKinPhone\u003e getNextOfKinPhone() {","lastModifiedDate":"2021-11-03"},{"lineNumber":279,"author":{"gitId":"frederickpek"},"content":"            return Optional.ofNullable(nextOfKinPhone);","lastModifiedDate":"2021-10-17"},{"lineNumber":280,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":281,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":282,"author":{"gitId":"luffingluffy"},"content":"        public void setNextOfKinAddress(NextOfKinAddress nextOfKinAddress) {","lastModifiedDate":"2021-11-03"},{"lineNumber":283,"author":{"gitId":"frederickpek"},"content":"            this.nextOfKinAddress \u003d nextOfKinAddress;","lastModifiedDate":"2021-10-17"},{"lineNumber":284,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":285,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":286,"author":{"gitId":"luffingluffy"},"content":"        public Optional\u003cNextOfKinAddress\u003e getNextOfKinAddress() {","lastModifiedDate":"2021-11-03"},{"lineNumber":287,"author":{"gitId":"frederickpek"},"content":"            return Optional.ofNullable(nextOfKinAddress);","lastModifiedDate":"2021-10-17"},{"lineNumber":288,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":289,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":290,"author":{"gitId":"over-fitted"},"content":"        public void setCallStatus(CallStatus callStatus) {","lastModifiedDate":"2021-10-20"},{"lineNumber":291,"author":{"gitId":"over-fitted"},"content":"            this.callStatus \u003d callStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":292,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":293,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":294,"author":{"gitId":"over-fitted"},"content":"        public Optional\u003cCallStatus\u003e getCallStatus() {","lastModifiedDate":"2021-10-20"},{"lineNumber":295,"author":{"gitId":"over-fitted"},"content":"            return Optional.ofNullable(callStatus);","lastModifiedDate":"2021-10-20"},{"lineNumber":296,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":297,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":316,"author":{"gitId":"over-fitted"},"content":"                    \u0026\u0026 getCaseNumber().equals(e.getCaseNumber())","lastModifiedDate":"2021-10-10"},{"lineNumber":317,"author":{"gitId":"frederickpek"},"content":"                    \u0026\u0026 getHomeAddress().equals(e.getHomeAddress())","lastModifiedDate":"2021-10-17"},{"lineNumber":318,"author":{"gitId":"frederickpek"},"content":"                    \u0026\u0026 getWorkAddress().equals(e.getWorkAddress())","lastModifiedDate":"2021-10-17"},{"lineNumber":319,"author":{"gitId":"frederickpek"},"content":"                    \u0026\u0026 getQuarantineAddress().equals(e.getQuarantineAddress())","lastModifiedDate":"2021-10-17"},{"lineNumber":320,"author":{"gitId":"frederickpek"},"content":"                    \u0026\u0026 getShnPeriod().equals(e.getShnPeriod())","lastModifiedDate":"2021-10-17"},{"lineNumber":321,"author":{"gitId":"frederickpek"},"content":"                    \u0026\u0026 getNextOfKinName().equals(e.getNextOfKinName())","lastModifiedDate":"2021-10-17"},{"lineNumber":322,"author":{"gitId":"frederickpek"},"content":"                    \u0026\u0026 getNextOfKinPhone().equals(e.getNextOfKinPhone())","lastModifiedDate":"2021-10-17"},{"lineNumber":323,"author":{"gitId":"over-fitted"},"content":"                    \u0026\u0026 getNextOfKinAddress().equals(e.getNextOfKinAddress())","lastModifiedDate":"2021-10-20"},{"lineNumber":324,"author":{"gitId":"over-fitted"},"content":"                    \u0026\u0026 getCallStatus().equals(e.getCallStatus());","lastModifiedDate":"2021-10-20"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"luffingluffy":41,"over-fitted":25,"lrnshk":12,"wei2912":32,"-":161,"frederickpek":56}},{"path":"src/main/java/seedu/track2gather/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Track2Gather as requested ...\";","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"wei2912":3,"-":16}},{"path":"src/main/java/seedu/track2gather/logic/commands/FCallCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.Messages;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":" * Indicates that a failed call was made to a person. This records that person has been called and increases recorded","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":" * number of failed attempts.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"public class FCallCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"    public static final String COMMAND_WORD \u003d \"fcall\";","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"        + \": Indicates that a person was non-responsive when an attempt to contact failed\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"    public static final String MESSAGE_INCREMENT_PERSON_SUCCESS \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"            \"Failed to call Person: %s (Case No. %s) with %d past failed call attempt(s)\";","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"     * Default constructor to create a new {@code FCallCommand}","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"     * @param targetIndex index of target person.","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"    public FCallCommand(Index targetIndex) {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"        Person personToIncrement \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"        Person newPerson \u003d new Person(personToIncrement, personToIncrement.getCallStatus().incrementNumFailedCalls());","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"        model.setPerson(personToIncrement, newPerson);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"lrnshk"},"content":"        return new CommandResult(String.format(MESSAGE_INCREMENT_PERSON_SUCCESS, newPerson.getName(),","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"lrnshk"},"content":"                newPerson.getCaseNumber(), newPerson.getCallStatus().getNumFailedCalls()));","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"            || (other instanceof FCallCommand // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"over-fitted"},"content":"            \u0026\u0026 targetIndex.equals(((FCallCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"over-fitted":55,"lrnshk":3,"wei2912":6}},{"path":"src/main/java/seedu/track2gather/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD_END;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD_START;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.Messages;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":" * Finds and lists all persons in contacts list who fulfills the criteria specified by the","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":" * user. Only one parameter can be specified at a time, but multiple arguments can be specified.","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons who fulfills the \"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"            + \"criteria specified by the user.\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"            + \"Parameters (indicate only 1): \"","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_CASE_NUMBER + \"CASE NUMBER] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_SHN_PERIOD_START + \"SHN_START_DATE] \"","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"lrnshk"},"content":"            + \"[\" + PREFIX_SHN_PERIOD_END + \"SHN_END_DATE]\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_PHONE + \"91\";","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"     * Creates a FindCommand to search by the specified {@code Predicate}","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":50,"author":{"gitId":"lrnshk"},"content":"                String.format(Messages.MESSAGE_PERSONS_FOUND_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"lrnshk":9,"wei2912":10,"-":29,"jennibearduit":11}},{"path":"src/main/java/seedu/track2gather/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wei2912":2,"-":19}},{"path":"src/main/java/seedu/track2gather/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":" * Lists all persons in the contacts list to the user.","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_SUCCESS \u003d MESSAGE_PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lrnshk":2,"wei2912":4,"-":19}},{"path":"src/main/java/seedu/track2gather/logic/commands/SCallCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.Messages;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":" * Indicates a person identified using its displayed index from the contacts list as called for the session.","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"public class SCallCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    public static final String COMMAND_WORD \u003d \"scall\";","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"        + \": Indicates that the person has been successfully called\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"    public static final String MESSAGE_CALL_PERSON_SUCCESS \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"        \"Successfully called Person: %s (Case No. %s) with %d past failed call attempt(s)\";","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"     * Default constructor to create a new {@code SCallCommand}","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"     * @param targetIndex index of target person.","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"    public SCallCommand(Index targetIndex) {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"        Person personToIncrement \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"        Person newPerson \u003d new Person(personToIncrement, personToIncrement.getCallStatus().call());","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"        model.setPerson(personToIncrement, newPerson);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"lrnshk"},"content":"        return new CommandResult(String.format(MESSAGE_CALL_PERSON_SUCCESS, newPerson.getName(),","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"lrnshk"},"content":"                newPerson.getCaseNumber(), newPerson.getCallStatus().getNumFailedCalls()));","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"            || (other instanceof SCallCommand // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"            \u0026\u0026 targetIndex.equals(((SCallCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"over-fitted":53,"lrnshk":3,"wei2912":7}},{"path":"src/main/java/seedu/track2gather/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_PREDICATE_SHOW_NON_CALLED;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.model.Model.PREDICATE_SHOW_NON_CALLED;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":" * Lists all persons who have not been called in the current session.","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_SUCCESS \u003d MESSAGE_PREDICATE_SHOW_NON_CALLED;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_NON_CALLED);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"over-fitted":17,"lrnshk":2,"wei2912":3}},{"path":"src/main/java/seedu/track2gather/logic/commands/SessionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_PREDICATE_SHOW_NON_CALLED;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":" * Starts a new call session with all persons set to non-called.","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"public class SessionCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"    public static final String COMMAND_WORD \u003d \"session\";","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Started a new call session with all persons set to \u0027not called\u0027.\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"            + MESSAGE_PREDICATE_SHOW_NON_CALLED;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"        model.resetAllCallStatuses();","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_NON_CALLED);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"over-fitted":18,"lrnshk":3,"wei2912":2}},{"path":"src/main/java/seedu/track2gather/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD_END;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD_START;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.Prefix;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Period;","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":" * Sorts all persons in the contacts list based on specified fields.","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts all persons in the contact list. \"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"lrnshk"},"content":"            + \"At least one field prefix must be provided. Specifying the sort direction is optional. \"","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"            + \"Default sort direction is ascending.\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"            + \"Direction \\\"\" + Direction.ASCENDING + \"\\\" indicates ascending order and \\\"\"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"            + Direction.DESCENDING + \"\\\" indicates descending order.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"            + \"[\" + PREFIX_NAME + \"DIRECTION] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"            + \"[\" + PREFIX_CASE_NUMBER + \"DIRECTION] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"            + \"[\" + PREFIX_SHN_PERIOD_START + \"DIRECTION] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"            + \"[\" + PREFIX_SHN_PERIOD_END + \"DIRECTION]\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"            + \"Examples: \\\"\" + COMMAND_WORD + \" \" + PREFIX_NAME + \"\\\"\"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"            + \" \\\"\" + COMMAND_WORD + \" \" + PREFIX_SHN_PERIOD_END + Direction.DESCENDING + \"\\\"\"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"            + \" \\\"\" + COMMAND_WORD + \" \" + PREFIX_SHN_PERIOD_START + \" \" + PREFIX_CASE_NUMBER + Direction.ASCENDING","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"            + \"\\\"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All persons sorted by %s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"    public static final HashMap\u003cPrefix, String\u003e SORTING_FIELD_STRINGS;","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"lrnshk"},"content":"    static {","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"lrnshk"},"content":"        SORTING_FIELD_STRINGS \u003d new HashMap\u003cPrefix, String\u003e();","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"lrnshk"},"content":"        SORTING_FIELD_STRINGS.put(PREFIX_NAME, \"name\");","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"lrnshk"},"content":"        SORTING_FIELD_STRINGS.put(PREFIX_CASE_NUMBER, \"case number\");","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"lrnshk"},"content":"        SORTING_FIELD_STRINGS.put(PREFIX_SHN_PERIOD_START, \"SHN start date\");","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"lrnshk"},"content":"        SORTING_FIELD_STRINGS.put(PREFIX_SHN_PERIOD_END, \"SHN end date\");","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"lrnshk"},"content":"    public static final HashMap\u003cDirection, String\u003e SORTING_DIRECTION_STRINGS;","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"lrnshk"},"content":"    static {","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"lrnshk"},"content":"        SORTING_DIRECTION_STRINGS \u003d new HashMap\u003cDirection, String\u003e();","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"lrnshk"},"content":"        SORTING_DIRECTION_STRINGS.put(Direction.ASCENDING, \" in ascending order\");","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"lrnshk"},"content":"        SORTING_DIRECTION_STRINGS.put(Direction.DESCENDING, \" in descending order\");","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"    public static final List\u003cPrefix\u003e SUPPORTED_PREFIXES \u003d Arrays.asList(PREFIX_NAME, PREFIX_CASE_NUMBER,","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"            PREFIX_SHN_PERIOD_START, PREFIX_SHN_PERIOD_END);","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"    public static final Comparator\u003cPerson\u003e COMPARATOR_PERSON_NAME \u003d Comparator.comparing(Person::getName);","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"    public static final Comparator\u003cPerson\u003e COMPARATOR_PERSON_CASE_NUMBER \u003d Comparator.comparing(Person::getCaseNumber);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"    public static final Comparator\u003cPerson\u003e COMPARATOR_PERSON_SHN_PERIOD_START \u003d Comparator.comparing(person -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"            person.getShnPeriod().value.map(Period::getStartDate).orElse(LocalDate.MAX));","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"    public static final Comparator\u003cPerson\u003e COMPARATOR_PERSON_SHN_PERIOD_END \u003d Comparator.comparing(person -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"            person.getShnPeriod().value.map(Period::getEndDate).orElse(LocalDate.MAX));","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"    public enum Direction {","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"        ASCENDING(\"asc\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"        DESCENDING(\"dsc\");","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"        final String code;","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"        Direction(String code) {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"            this.code \u003d code;","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"        public String toString() {","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"            return code;","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"wei2912"},"content":"    private final List\u003cPrefix\u003e prefixes;","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"wei2912"},"content":"    private final List\u003cDirection\u003e directions;","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"wei2912"},"content":"     * Creates a SortCommand to sort by the specified fields in {@code args}","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"wei2912"},"content":"    public SortCommand(List\u003cPrefix\u003e prefixes, List \u003cDirection\u003e directions) {","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"        requireAllNonNull(prefixes);","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"        requireAllNonNull(directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"wei2912"},"content":"        assert prefixes.size() \u003e 0; // prefixes is non-empty","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"wei2912"},"content":"        assert prefixes.size() \u003d\u003d prefixes.stream().distinct().count(); // prefixes are distinct","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"wei2912"},"content":"        assert SUPPORTED_PREFIXES.containsAll(prefixes); // all prefixes are supported","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"        assert prefixes.size() \u003d\u003d directions.size(); // prefixes and directions are of the same size","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"wei2912"},"content":"        this.prefixes \u003d prefixes;","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"wei2912"},"content":"        this.directions \u003d directions;","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"wei2912"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"wei2912"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"wei2912"},"content":"        Comparator\u003cPerson\u003e comparator \u003d IntStream.range(0, prefixes.size())","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"wei2912"},"content":"                .mapToObj(i -\u003e buildComparator(prefixes.get(i), directions.get(i)))","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"wei2912"},"content":"                .reduce(Comparator.naturalOrder(), (accComparator, nextComparator)","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"wei2912"},"content":"                    -\u003e nextComparator.thenComparing(accComparator));","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"wei2912"},"content":"        model.updateSortedPersonList(comparator);","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"wei2912"},"content":"        String sortsString \u003d IntStream.range(0, prefixes.size())","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"lrnshk"},"content":"                .mapToObj(i -\u003e SORTING_FIELD_STRINGS.get(prefixes.get(i))","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"lrnshk"},"content":"                        + SORTING_DIRECTION_STRINGS.get(directions.get(i)))","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"lrnshk"},"content":"                .collect(Collectors.joining(\", then by \"));","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"wei2912"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, sortsString));","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"wei2912"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"wei2912"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"wei2912"},"content":"                || (other instanceof SortCommand // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"wei2912"},"content":"                \u0026\u0026 prefixes.equals(((SortCommand) other).prefixes)","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"wei2912"},"content":"                \u0026\u0026 directions.equals(((SortCommand) other).directions));","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"wei2912"},"content":"     * Builds a {@code Comparator\u003cPerson\u003e} based on the natural order of the","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"wei2912"},"content":"     * specified {@code prefix} and its respective {@code direction}.","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"wei2912"},"content":"    private static Comparator\u003cPerson\u003e buildComparator(Prefix prefix, Direction direction) {","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"wei2912"},"content":"        requireAllNonNull(prefix, direction);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"wei2912"},"content":"        assert SUPPORTED_PREFIXES.contains(prefix);","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"wei2912"},"content":"        Comparator\u003cPerson\u003e comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"wei2912"},"content":"        if (prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"wei2912"},"content":"            comparator \u003d COMPARATOR_PERSON_NAME;","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"wei2912"},"content":"        } else if (prefix.equals(PREFIX_CASE_NUMBER)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"wei2912"},"content":"            comparator \u003d COMPARATOR_PERSON_CASE_NUMBER;","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"wei2912"},"content":"        } else if (prefix.equals(PREFIX_SHN_PERIOD_START)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"wei2912"},"content":"            comparator \u003d COMPARATOR_PERSON_SHN_PERIOD_START;","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"wei2912"},"content":"        } else if (prefix.equals(PREFIX_SHN_PERIOD_END)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"wei2912"},"content":"            comparator \u003d COMPARATOR_PERSON_SHN_PERIOD_END;","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"wei2912"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"wei2912"},"content":"            throw new IllegalStateException(\"Prefix %s is not supported.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"wei2912"},"content":"        return direction \u003d\u003d Direction.ASCENDING ? comparator : comparator.reversed();","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"luffingluffy":3,"lrnshk":24,"wei2912":131}},{"path":"src/main/java/seedu/track2gather/logic/commands/TShiftCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"frederickpek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"frederickpek"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"frederickpek"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Period;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.ShnPeriod;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"frederickpek"},"content":"public class TShiftCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"frederickpek"},"content":"    public static final String COMMAND_WORD \u003d \"tshift\";","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"frederickpek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shifts all persons\u0027 SHN end date \"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"frederickpek"},"content":"            + \"by the specified number of DAYS.\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"frederickpek"},"content":"            + \"Parameters: [PLUS_MINUS_SIGN]DAYS\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"frederickpek"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3\";","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The SHN end dates of all currently displayed person(s) have been \"","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"            + \"shifted by %d day(s).\\n\";","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"frederickpek"},"content":"    public static final String MESSAGE_TSHIFT_BY_ZERO \u003d \"Number of days to shift the SHN end dates by should not be 0.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"frederickpek"},"content":"    public static final String MESSAGE_BEYOND_LIMIT \u003d \"Magnitude of shift should not be larger than %d days.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"frederickpek"},"content":"    public static final int MAX_ABS_DAYS_VALUE \u003d 90;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"frederickpek"},"content":"    private final int days;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"frederickpek"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"frederickpek"},"content":"     * @param days to shift all persons\u0027 {@code ShnPeriod} end date by.","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"frederickpek"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"frederickpek"},"content":"    public TShiftCommand(int days) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"frederickpek"},"content":"        this.days \u003d days;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"frederickpek"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"frederickpek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"frederickpek"},"content":"        if (days \u003d\u003d 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"frederickpek"},"content":"            throw new CommandException(MESSAGE_TSHIFT_BY_ZERO);","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"frederickpek"},"content":"        if (Math.abs(days) \u003e MAX_ABS_DAYS_VALUE) {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"frederickpek"},"content":"            throw new CommandException(String.format(MESSAGE_BEYOND_LIMIT, MAX_ABS_DAYS_VALUE));","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"frederickpek"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"frederickpek"},"content":"        for (Person personToEdit : lastShownList) {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"frederickpek"},"content":"            EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"            editPersonDescriptor.setShnPeriod(this.shiftShnPeriodEndDate(personToEdit.getShnPeriod()));","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"frederickpek"},"content":"            Person editedPerson \u003d EditCommand.createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"frederickpek"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"lrnshk"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, days));","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"frederickpek"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"frederickpek"},"content":"     * Shifts the end date of the specified {@code ShnPeriod} by {@code days}.","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"frederickpek"},"content":"     * @param shnPeriod that will have its end date shifted.","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"frederickpek"},"content":"     * @return A new {@code ShnPeriod} object with its end date shifted.","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"frederickpek"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"frederickpek"},"content":"    public ShnPeriod shiftShnPeriodEndDate(ShnPeriod shnPeriod) {","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"        return new ShnPeriod(shnPeriod.value.map(period -\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"            LocalDate startDate \u003d period.getStartDate();","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"            LocalDate endDate \u003d period.getEndDate();","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"frederickpek"},"content":"            assert days !\u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"frederickpek"},"content":"            LocalDate newEndDate \u003d Collections.max(List.of(endDate.plusDays(days), startDate.plusDays(1)));","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"            return new Period(startDate, newEndDate);","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"        }));","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"frederickpek"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"frederickpek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"frederickpek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"frederickpek"},"content":"                || (other instanceof TShiftCommand // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"frederickpek"},"content":"                \u0026\u0026 days \u003d\u003d (((TShiftCommand) other).days));","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"frederickpek"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"luffingluffy":8,"lrnshk":3,"wei2912":5,"frederickpek":67}},{"path":"src/main/java/seedu/track2gather/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands.exceptions;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"wei2912":1,"-":16}},{"path":"src/main/java/seedu/track2gather/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_HOME_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_PHONE;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_QUARANTINE_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_WORK_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.AddCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Address;","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CaseNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Name;","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinName;","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinPhone;","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.QuarantineAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.ShnPeriod;","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.WorkAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"                PREFIX_CASE_NUMBER, PREFIX_HOME_ADDRESS, PREFIX_WORK_ADDRESS, PREFIX_QUARANTINE_ADDRESS,","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"                PREFIX_SHN_PERIOD, PREFIX_NEXT_OF_KIN_NAME, PREFIX_NEXT_OF_KIN_PHONE, PREFIX_NEXT_OF_KIN_ADDRESS);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_CASE_NUMBER,","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"                PREFIX_HOME_ADDRESS) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"        CaseNumber caseNumber \u003d ParserUtil.parseCaseNumber(argMultimap.getValue(PREFIX_CASE_NUMBER).get());","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"        Address homeAddress \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_HOME_ADDRESS).get());","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"        Optional\u003cString\u003e workAddressOptional \u003d argMultimap.getValue(PREFIX_WORK_ADDRESS);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"        WorkAddress workAddress \u003d new WorkAddress(workAddressOptional.isEmpty()","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"                ? Optional.empty()","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"                : Optional.of(ParserUtil.parseAddress(workAddressOptional.get())));","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"        Optional\u003cString\u003e quarantineAddressOptional \u003d argMultimap.getValue(PREFIX_QUARANTINE_ADDRESS);","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"        QuarantineAddress quarantineAddress \u003d new QuarantineAddress(quarantineAddressOptional.isEmpty()","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"                ? Optional.empty()","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"                : Optional.of(ParserUtil.parseAddress(quarantineAddressOptional.get())));","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"lrnshk"},"content":"        Optional\u003cString\u003e shnPeriodOptional \u003d argMultimap.getValue(PREFIX_SHN_PERIOD);","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"        ShnPeriod shnPeriod \u003d new ShnPeriod(shnPeriodOptional.isEmpty()","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"lrnshk"},"content":"                ? Optional.empty()","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"                : Optional.of(ParserUtil.parsePeriod(shnPeriodOptional.get())));","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"jennibearduit"},"content":"        Optional\u003cString\u003e nextOfKinNameOptional \u003d argMultimap.getValue(PREFIX_NEXT_OF_KIN_NAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"        NextOfKinName nextOfKinName \u003d new NextOfKinName(nextOfKinNameOptional.isEmpty()","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"jennibearduit"},"content":"                ? Optional.empty()","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"                : Optional.of(ParserUtil.parseName(nextOfKinNameOptional.get())));","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"jennibearduit"},"content":"        Optional\u003cString\u003e nextOfKinPhoneOptional \u003d argMultimap.getValue(PREFIX_NEXT_OF_KIN_PHONE);","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"        NextOfKinPhone nextOfKinPhone \u003d new NextOfKinPhone(nextOfKinPhoneOptional.isEmpty()","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"jennibearduit"},"content":"                ? Optional.empty()","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"                : Optional.of(ParserUtil.parsePhone(nextOfKinPhoneOptional.get())));","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"jennibearduit"},"content":"        Optional\u003cString\u003e nextOfKinAddressOptional \u003d argMultimap.getValue(PREFIX_NEXT_OF_KIN_ADDRESS);","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"        NextOfKinAddress nextOfKinAddress \u003d new NextOfKinAddress(nextOfKinAddressOptional.isEmpty()","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"jennibearduit"},"content":"                ? Optional.empty()","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"luffingluffy"},"content":"                : Optional.of(ParserUtil.parseAddress(nextOfKinAddressOptional.get())));","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"        Person person \u003d new Person(name, phone, email, caseNumber, homeAddress, workAddress, quarantineAddress,","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"wei2912"},"content":"                shnPeriod, nextOfKinName, nextOfKinPhone, nextOfKinAddress);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"luffingluffy":28,"lrnshk":2,"wei2912":32,"-":36,"jennibearduit":6}},{"path":"src/main/java/seedu/track2gather/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":" * Keys are ordered by the index of their last occurrences.","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"     **/","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"        // update insertion order of LinkedHashMap by deleting and reinserting prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"        // so that the latest prefix is shifted to the end","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"        argMultimap.remove(prefix);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"     * Returns all prefixes in order of the index of their last occurrences.","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"    public List\u003cPrefix\u003e getPrefixes() {","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"        List\u003cPrefix\u003e prefixes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"        argMultimap.forEach((prefix, value) -\u003e prefixes.add(prefix));","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"        return prefixes;","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"wei2912":17,"-":56,"jennibearduit":3}},{"path":"src/main/java/seedu/track2gather/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"wei2912":1,"-":147}},{"path":"src/main/java/seedu/track2gather/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"    public static final Prefix PREFIX_CASE_NUMBER \u003d new Prefix(\"cn/\");","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    public static final Prefix PREFIX_HOME_ADDRESS \u003d new Prefix(\"ha/\");","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"    public static final Prefix PREFIX_WORK_ADDRESS \u003d new Prefix(\"wa/\");","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"    public static final Prefix PREFIX_QUARANTINE_ADDRESS \u003d new Prefix(\"qa/\");","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    public static final Prefix PREFIX_SHN_PERIOD \u003d new Prefix(\"sh/\");","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"    public static final Prefix PREFIX_NEXT_OF_KIN_NAME \u003d new Prefix(\"kn/\");","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"    public static final Prefix PREFIX_NEXT_OF_KIN_PHONE \u003d new Prefix(\"kp/\");","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    public static final Prefix PREFIX_NEXT_OF_KIN_ADDRESS \u003d new Prefix(\"ka/\");","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"    public static final Prefix PREFIX_SHN_PERIOD_START \u003d new Prefix(\"sh/start:\");","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"    public static final Prefix PREFIX_SHN_PERIOD_END \u003d new Prefix(\"sh/end:\");","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"luffingluffy":1,"wei2912":8,"-":11,"jennibearduit":2}},{"path":"src/main/java/seedu/track2gather/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"            ArrayList\u003cIndex\u003e indices \u003d ParserUtil.parseIndices(args);","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"            return new DeleteCommand(indices);","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"lrnshk":4,"wei2912":5,"-":22}},{"path":"src/main/java/seedu/track2gather/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_HOME_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_PHONE;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_QUARANTINE_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_WORK_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.EditCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinName;","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinPhone;","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.QuarantineAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.ShnPeriod;","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.WorkAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"frederickpek"},"content":"                PREFIX_CASE_NUMBER, PREFIX_HOME_ADDRESS, PREFIX_WORK_ADDRESS, PREFIX_QUARANTINE_ADDRESS,","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"frederickpek"},"content":"                PREFIX_SHN_PERIOD, PREFIX_NEXT_OF_KIN_NAME, PREFIX_NEXT_OF_KIN_PHONE, PREFIX_NEXT_OF_KIN_ADDRESS);","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"        if (argMultimap.getValue(PREFIX_CASE_NUMBER).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"            editPersonDescriptor.setCaseNumber(ParserUtil.parseCaseNumber(","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"                    argMultimap.getValue(PREFIX_CASE_NUMBER).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"        if (argMultimap.getValue(PREFIX_HOME_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"            editPersonDescriptor.setHomeAddress(ParserUtil.parseAddress(","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"                    argMultimap.getValue(PREFIX_HOME_ADDRESS).get()));","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"frederickpek"},"content":"        if (argMultimap.getValue(PREFIX_WORK_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"            Optional\u003cString\u003e workAddressOptional \u003d argMultimap.getValue(PREFIX_WORK_ADDRESS);","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"            editPersonDescriptor.setWorkAddress(workAddressOptional.isEmpty()","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"                    ? null","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"                    : new WorkAddress(ParserUtil.parseAddress(workAddressOptional.get())));","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"frederickpek"},"content":"        if (argMultimap.getValue(PREFIX_QUARANTINE_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"luffingluffy"},"content":"            Optional\u003cString\u003e quarantineAddressOptional \u003d argMultimap.getValue(PREFIX_QUARANTINE_ADDRESS);","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"luffingluffy"},"content":"            editPersonDescriptor.setQuarantineAddress(quarantineAddressOptional.isEmpty()","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"                    ? null","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"                    : new QuarantineAddress(ParserUtil.parseAddress(quarantineAddressOptional.get())));","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"frederickpek"},"content":"        if (argMultimap.getValue(PREFIX_SHN_PERIOD).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"            Optional\u003cString\u003e shnPeriodOptional \u003d argMultimap.getValue(PREFIX_SHN_PERIOD);","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"            editPersonDescriptor.setShnPeriod(shnPeriodOptional.isEmpty()","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"luffingluffy"},"content":"                    ? null","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"luffingluffy"},"content":"                    : new ShnPeriod(ParserUtil.parsePeriod(shnPeriodOptional.get())));","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"frederickpek"},"content":"        if (argMultimap.getValue(PREFIX_NEXT_OF_KIN_NAME).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"luffingluffy"},"content":"            Optional\u003cString\u003e nextOfKinNameOptional \u003d argMultimap.getValue(PREFIX_NEXT_OF_KIN_NAME);","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"luffingluffy"},"content":"            editPersonDescriptor.setNextOfKinName(nextOfKinNameOptional.isEmpty()","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"luffingluffy"},"content":"                    ? null","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"luffingluffy"},"content":"                    : new NextOfKinName(ParserUtil.parseName(nextOfKinNameOptional.get())));","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"frederickpek"},"content":"        if (argMultimap.getValue(PREFIX_NEXT_OF_KIN_PHONE).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"luffingluffy"},"content":"            Optional\u003cString\u003e nextOfKinPhoneOptional \u003d argMultimap.getValue(PREFIX_NEXT_OF_KIN_PHONE);","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"luffingluffy"},"content":"            editPersonDescriptor.setNextOfKinPhone(nextOfKinPhoneOptional.isEmpty()","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"luffingluffy"},"content":"                    ? null","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"luffingluffy"},"content":"                    : new NextOfKinPhone(ParserUtil.parsePhone(nextOfKinPhoneOptional.get())));","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"frederickpek"},"content":"        if (argMultimap.getValue(PREFIX_NEXT_OF_KIN_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"luffingluffy"},"content":"            Optional\u003cString\u003e nextOfKinAddressOptional \u003d argMultimap.getValue(PREFIX_NEXT_OF_KIN_ADDRESS);","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"luffingluffy"},"content":"            editPersonDescriptor.setNextOfKinAddress(nextOfKinAddressOptional.isEmpty()","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"luffingluffy"},"content":"                    ? null","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"luffingluffy"},"content":"                    : new NextOfKinAddress(ParserUtil.parseAddress(nextOfKinAddressOptional.get())));","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"luffingluffy":32,"wei2912":25,"-":44,"frederickpek":14}},{"path":"src/main/java/seedu/track2gather/logic/parser/FCallCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.FCallCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":" * Parses input arguments and creates a new FCallCommand object","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"public class FCallCommandParser implements Parser\u003cFCallCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"     * Parses the given {@code String} of arguments in the context of the FCallCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"     * and returns a FCallCommand object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"    public FCallCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"            return new FCallCommand(index);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FCallCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"over-fitted":24,"wei2912":5}},{"path":"src/main/java/seedu/track2gather/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD_END;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD_START;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.FindCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CaseNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Period;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.predicates.CaseNumberEqualsKeywordsPredicate;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.predicates.PhoneStartsWithKeywordsPredicate;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.predicates.ShnPeriodEndEqualsKeywordsPredicate;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.predicates.ShnPeriodStartEqualsKeywordsPredicate;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"                PREFIX_CASE_NUMBER, PREFIX_SHN_PERIOD_START, PREFIX_SHN_PERIOD_END);","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"        List\u003cPrefix\u003e prefixesWithValue \u003d getPrefixesWithValue(argMultimap, PREFIX_NAME,","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"                PREFIX_PHONE, PREFIX_CASE_NUMBER, PREFIX_SHN_PERIOD_START, PREFIX_SHN_PERIOD_END);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"        // Checks if exactly one prefix is entered by the user","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"        if (prefixesWithValue.size() !\u003d 1 || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"        Prefix prefixWithValue \u003d prefixesWithValue.get(0);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"        String value \u003d argMultimap.getValue(prefixWithValue).get().trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"        // Checks if user entered an argument along with the prefix","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"        if (value.isBlank()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"jennibearduit"},"content":"        String[] keywords \u003d value.split(\"\\\\s+\");","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"jennibearduit"},"content":"        List\u003cString\u003e keywordList \u003d Arrays.asList(keywords);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"jennibearduit"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"jennibearduit"},"content":"            return new FindCommand(new NameContainsKeywordsPredicate(keywordList));","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"jennibearduit"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"jennibearduit"},"content":"            return new FindCommand(new PhoneStartsWithKeywordsPredicate(keywordList));","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"jennibearduit"},"content":"        if (argMultimap.getValue(PREFIX_CASE_NUMBER).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"jennibearduit"},"content":"            boolean areValidCaseNumbers \u003d keywordList.stream().allMatch(CaseNumber::isValidCaseNumber);","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"jennibearduit"},"content":"            if (!areValidCaseNumbers) {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"jennibearduit"},"content":"                throw new ParseException(CaseNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"jennibearduit"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"jennibearduit"},"content":"            return new FindCommand(new CaseNumberEqualsKeywordsPredicate(keywordList));","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"jennibearduit"},"content":"        if (argMultimap.getValue(PREFIX_SHN_PERIOD_START).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"            boolean areValidDates \u003d keywordList.stream().allMatch(Period::isValidDate);","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"jennibearduit"},"content":"            if (!areValidDates) {","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"                throw new ParseException(Period.MESSAGE_CONSTRAINTS_DATE);","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"jennibearduit"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"jennibearduit"},"content":"            return new FindCommand(new ShnPeriodStartEqualsKeywordsPredicate(keywordList));","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"jennibearduit"},"content":"        if (argMultimap.getValue(PREFIX_SHN_PERIOD_END).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"            boolean areValidDates \u003d keywordList.stream().allMatch(Period::isValidDate);","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"jennibearduit"},"content":"            if (!areValidDates) {","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"                throw new ParseException(Period.MESSAGE_CONSTRAINTS_DATE);","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"jennibearduit"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"jennibearduit"},"content":"            return new FindCommand(new ShnPeriodEndEqualsKeywordsPredicate(keywordList));","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"jennibearduit"},"content":"        throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"jennibearduit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"jennibearduit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"jennibearduit"},"content":"     * Returns a list of prefixes with values.","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"jennibearduit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"jennibearduit"},"content":"    private List\u003cPrefix\u003e getPrefixesWithValue(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"jennibearduit"},"content":"        return Stream.of(prefixes).filter(prefix -\u003e argumentMultimap.getValue(prefix).isPresent())","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"jennibearduit"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"luffingluffy":6,"wei2912":14,"-":24,"jennibearduit":57}},{"path":"src/main/java/seedu/track2gather/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.Command;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"wei2912":3,"-":13}},{"path":"src/main/java/seedu/track2gather/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"lrnshk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.util.StringUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Address;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CaseNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Name;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Period;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"lrnshk"},"content":"     * Parses a string of {@code oneBasedIndex}s into an ArrayList of {@code Index} and returns it. Leading and","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"lrnshk"},"content":"     * trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"lrnshk"},"content":"     * @throws ParseException if the specified indices are invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"lrnshk"},"content":"    public static ArrayList\u003cIndex\u003e parseIndices(String oneBasedIndices) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"lrnshk"},"content":"        ArrayList\u003cIndex\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"lrnshk"},"content":"        String trimmedIndices \u003d oneBasedIndices.trim();","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"        String[] trimmedIndicesArr \u003d trimmedIndices.split(\"\\\\s\");","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"lrnshk"},"content":"        for (String trimmedIndex : trimmedIndicesArr) {","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"lrnshk"},"content":"            if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"lrnshk"},"content":"                throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"lrnshk"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"lrnshk"},"content":"            indexList.add(Index.fromOneBased(Integer.parseInt(trimmedIndex)));","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"lrnshk"},"content":"        return indexList;","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"wei2912"},"content":"     * Parses a {@code String caseNumber} into a {@code CaseNumber}.","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"wei2912"},"content":"     * @throws ParseException if the given {@code caseNumber} is invalid.","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"wei2912"},"content":"    public static CaseNumber parseCaseNumber(String caseNumber) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"wei2912"},"content":"        requireNonNull(caseNumber);","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"wei2912"},"content":"        String trimmedCaseNumber \u003d caseNumber.trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"wei2912"},"content":"        if (!CaseNumber.isValidCaseNumber(trimmedCaseNumber)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"wei2912"},"content":"            throw new ParseException(CaseNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"wei2912"},"content":"        return new CaseNumber(trimmedCaseNumber);","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"lrnshk"},"content":"     * Parses {@code String SHN period} into an {@code ShnPeriod}.","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"lrnshk"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"lrnshk"},"content":"     * @throws ParseException if the given {@code SHN period} is invalid.","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"luffingluffy"},"content":"    public static Period parsePeriod(String period) throws ParseException {","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"luffingluffy"},"content":"        requireNonNull(period);","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"luffingluffy"},"content":"        String trimmedShnPeriod \u003d period.trim();","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"lrnshk"},"content":"        String[] dates \u003d trimmedShnPeriod.split(\" \", 2);","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"lrnshk"},"content":"        if (dates.length \u003c 2) {","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"luffingluffy"},"content":"            throw new ParseException(Period.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"wei2912"},"content":"        LocalDate startDate;","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"wei2912"},"content":"        LocalDate endDate;","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"lrnshk"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"wei2912"},"content":"            startDate \u003d LocalDate.parse(dates[0]);","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"wei2912"},"content":"            endDate \u003d LocalDate.parse(dates[1]);","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"lrnshk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"luffingluffy"},"content":"            throw new ParseException(Period.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"luffingluffy"},"content":"        if (!Period.isValidPeriod(startDate, endDate)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"luffingluffy"},"content":"            throw new ParseException(Period.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"luffingluffy"},"content":"        return new Period(startDate, endDate);","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"luffingluffy":14,"lrnshk":40,"wei2912":17,"-":95}},{"path":"src/main/java/seedu/track2gather/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"wei2912":1,"-":38}},{"path":"src/main/java/seedu/track2gather/logic/parser/SCallCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.SCallCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":" * Parses input arguments and creates a new SCallCommand object","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"public class SCallCommandParser implements Parser\u003cSCallCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"     * Parses the given {@code String} of arguments in the context of the SCallCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"     * and returns a SCallCommand object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"    public SCallCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"            return new SCallCommand(index);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SCallCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"over-fitted":24,"wei2912":5}},{"path":"src/main/java/seedu/track2gather/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.SortCommand.SUPPORTED_PREFIXES;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.SortCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.SortCommand.Direction;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, SUPPORTED_PREFIXES.toArray(new Prefix[0]));","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"        List\u003cPrefix\u003e prefixes \u003d argMultimap.getPrefixes().stream()","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"                .filter(prefix -\u003e !prefix.toString().isEmpty())","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"        if (prefixes.size() \u003d\u003d 0 || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"        List\u003cDirection\u003e directions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"        for (Prefix prefix : prefixes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"            String value \u003d argMultimap.getValue(prefix).get();","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"            if (value.isEmpty() || value.equals(Direction.ASCENDING.toString())) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"                directions.add(Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"            } else if (value.equals(Direction.DESCENDING.toString())) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"                directions.add(Direction.DESCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"            } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"        return new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"wei2912":49}},{"path":"src/main/java/seedu/track2gather/logic/parser/TShiftCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"frederickpek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.TShiftCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"frederickpek"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"frederickpek"},"content":" * Parses input arguments and creates a new {@code TShiftCommand} object","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"frederickpek"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"frederickpek"},"content":"public class TShiftCommandParser implements Parser\u003cTShiftCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"frederickpek"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"frederickpek"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TShiftCommand}","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"frederickpek"},"content":"     * and returns a {@code TShiftCommand} object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"frederickpek"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"frederickpek"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"frederickpek"},"content":"    public TShiftCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"frederickpek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"frederickpek"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"frederickpek"},"content":"            int days \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"frederickpek"},"content":"            return new TShiftCommand(days);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"frederickpek"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"frederickpek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TShiftCommand.MESSAGE_USAGE), nfe);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"frederickpek"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"wei2912":4,"frederickpek":24}},{"path":"src/main/java/seedu/track2gather/logic/parser/Track2GatherParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.AddCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.Command;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.EditCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.FCallCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.FindCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.ListCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.SCallCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.ScheduleCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.SessionCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.SortCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.TShiftCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"public class Track2GatherParser {","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"        case TShiftCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"            return new TShiftCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"over-fitted"},"content":"        case FCallCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"over-fitted"},"content":"            return new FCallCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"over-fitted"},"content":"        case SCallCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"over-fitted"},"content":"            return new SCallCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"over-fitted"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"over-fitted"},"content":"            return new ScheduleCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"over-fitted"},"content":"        case SessionCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"over-fitted"},"content":"            return new SessionCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"over-fitted":12,"wei2912":26,"-":62}},{"path":"src/main/java/seedu/track2gather/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser.exceptions;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"wei2912":2,"-":15}},{"path":"src/main/java/seedu/track2gather/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.GuiSettings;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_NON_CALLED \u003d person -\u003e !person.getCallStatus().isCalledInCurrentSession();","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"     * Returns the user prefs\u0027 contacts list file path.","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"    Path getTrack2GatherFilePath();","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"     * Sets the user prefs\u0027 contacts list file path.","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"    void setTrack2GatherFilePath(Path track2GatherFilePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"     * Replaces contacts list data with the data in {@code track2Gather}.","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"    void setTrack2Gather(ReadOnlyTrack2Gather track2Gather);","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"    /** Returns the Track2Gather */","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"    ReadOnlyTrack2Gather getTrack2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"     * The person must exist in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"     * {@code person} must not already exist in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"over-fitted"},"content":"     * Sets all persons as non-called.","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"over-fitted"},"content":"    void resetAllCallStatuses();","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"     * {@code target} must exist in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"wei2912"},"content":"     * Updates the sorting order of the filtered person list to sort by the given {@code comparator}.","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"wei2912"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"    void updateSortedPersonList(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"over-fitted":6,"wei2912":23,"-":71}},{"path":"src/main/java/seedu/track2gather/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.GuiSettings;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.LogsCenter;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":" * Represents the in-memory model of the contacts list data.","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    private final Track2Gather track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    private final SortedList\u003cPerson\u003e sortedPersons;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"     * Initializes a ModelManager with the given track2Gather and userPrefs.","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"    public ModelManager(ReadOnlyTrack2Gather track2Gather, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"        requireAllNonNull(track2Gather, userPrefs);","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"        logger.fine(\"Initializing with contacts list: \" + track2Gather + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"        this.track2Gather \u003d new Track2Gather(track2Gather);","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.track2Gather.getPersonList());","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"        sortedPersons \u003d filteredPersons.sorted();","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"        this(new Track2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"    public Path getTrack2GatherFilePath() {","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"        return userPrefs.getTrack2GatherFilePath();","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"    public void setTrack2GatherFilePath(Path track2GatherFilePath) {","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"        requireNonNull(track2GatherFilePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"        userPrefs.setTrack2GatherFilePath(track2GatherFilePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Track2Gather \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"    public void setTrack2Gather(ReadOnlyTrack2Gather track2Gather) {","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"        this.track2Gather.resetData(track2Gather);","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"wei2912"},"content":"    public ReadOnlyTrack2Gather getTrack2Gather() {","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"wei2912"},"content":"        return track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"        return track2Gather.hasPerson(person);","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"        track2Gather.removePerson(target);","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"over-fitted"},"content":"    public void resetAllCallStatuses() {","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"wei2912"},"content":"        track2Gather.resetAllCallStatuses();","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"wei2912"},"content":"        track2Gather.addPerson(person);","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":120,"author":{"gitId":"wei2912"},"content":"        track2Gather.setPerson(target, editedPerson);","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"wei2912"},"content":"     * {@code versionedTrack2Gather}","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"wei2912"},"content":"        return sortedPersons;","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"wei2912"},"content":"    public void updateSortedPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"wei2912"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"wei2912"},"content":"        sortedPersons.setComparator(comparator);","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"wei2912"},"content":"        return track2Gather.equals(other.track2Gather)","lastModifiedDate":"2021-10-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"wei2912"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"wei2912"},"content":"                \u0026\u0026 sortedPersons.equals(other.sortedPersons);","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"over-fitted":2,"wei2912":44,"-":120}},{"path":"src/main/java/seedu/track2gather/model/ReadOnlyTrack2Gather.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":" * Unmodifiable view of Track2Gather","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"public interface ReadOnlyTrack2Gather {","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":4,"-":13}},{"path":"src/main/java/seedu/track2gather/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.GuiSettings;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"    Path getTrack2GatherFilePath();","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"wei2912":3,"-":13}},{"path":"src/main/java/seedu/track2gather/model/Track2Gather.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.UniquePersonList;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":" * Wraps all data at the contacts list level","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"public class Track2Gather implements ReadOnlyTrack2Gather {","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"    public Track2Gather() {}","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"     * Creates a Track2Gather using the Persons in the {@code toBeCopied}","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"    public Track2Gather(ReadOnlyTrack2Gather toBeCopied) {","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"     * Resets the existing data of this {@code Track2Gather} with {@code newData}.","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"    public void resetData(ReadOnlyTrack2Gather newData) {","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"     * Reset the call status of all {@code Person} in {@code Track2Gather} as not called.","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"over-fitted"},"content":"    public void resetAllCallStatuses() {","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"over-fitted"},"content":"        for (Person i : persons) {","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"over-fitted"},"content":"            persons.setPerson(i, new Person(i, i.getCallStatus().reset()));","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"     * Adds a person to the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"     * The person must not already exist in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"     * {@code target} must exist in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"     * Removes {@code key} from this {@code Track2Gather}.","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"     * {@code key} must exist in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"wei2912"},"content":"                || (other instanceof Track2Gather // instanceof handles nulls","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"wei2912"},"content":"                \u0026\u0026 persons.equals(((Track2Gather) other).persons));","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"over-fitted":8,"wei2912":20,"-":101}},{"path":"src/main/java/seedu/track2gather/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.GuiSettings;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    private static final String DATA_DIR \u003d \"data\";","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"    private static final String USER_PREFS_FILE \u003d \"track2gather.json\";","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    private Path track2GatherFilePath \u003d Paths.get(DATA_DIR, USER_PREFS_FILE);","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"        setTrack2GatherFilePath(newUserPrefs.getTrack2GatherFilePath());","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"    public Path getTrack2GatherFilePath() {","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"        return track2GatherFilePath;","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"    public void setTrack2GatherFilePath(Path track2GatherFilePath) {","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"        requireNonNull(track2GatherFilePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"        this.track2GatherFilePath \u003d track2GatherFilePath;","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"                \u0026\u0026 track2GatherFilePath.equals(o.track2GatherFilePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"        return Objects.hash(guiSettings, track2GatherFilePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"        sb.append(\"\\nLocal data file location : \" + track2GatherFilePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":14,"-":75}},{"path":"src/main/java/seedu/track2gather/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Address;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CallStatus;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CaseNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Name;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinName;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinPhone;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.QuarantineAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.ShnPeriod;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.WorkAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":" * Represents a Person in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"public class Person implements Comparable\u003cPerson\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"    private final CaseNumber caseNumber;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"    private final Address homeAddress;","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"    private final WorkAddress workAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"    private final QuarantineAddress quarantineAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"    private final ShnPeriod shnPeriod;","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"    private final NextOfKinName nextOfKinName;","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"    private final NextOfKinPhone nextOfKinPhone;","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"    private final NextOfKinAddress nextOfKinAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"    private final CallStatus callStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"     * Constructor for Person.","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"     * All fields must be present and not null.","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"    public Person(Name name, Phone phone, Email email, CaseNumber caseNumber, Address homeAddress,","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"                  WorkAddress workAddress, QuarantineAddress quarantineAddress, ShnPeriod shnPeriod,","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"                  NextOfKinName nextOfKinName, NextOfKinPhone nextOfKinPhone, NextOfKinAddress nextOfKinAddress,","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"                  CallStatus callStatus) {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"        requireAllNonNull(name, phone, email, caseNumber, homeAddress, workAddress, quarantineAddress,","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"                shnPeriod, nextOfKinName, nextOfKinPhone, nextOfKinAddress, callStatus);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"        this.caseNumber \u003d caseNumber;","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"        this.homeAddress \u003d homeAddress;","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"        this.workAddress \u003d workAddress;","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"        this.quarantineAddress \u003d quarantineAddress;","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"        this.shnPeriod \u003d shnPeriod;","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"        this.nextOfKinName \u003d nextOfKinName;","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"        this.nextOfKinPhone \u003d nextOfKinPhone;","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"        this.nextOfKinAddress \u003d nextOfKinAddress;","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"over-fitted"},"content":"        this.callStatus \u003d callStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"over-fitted"},"content":"     * Default constructor for Person that uses a default call status.","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"over-fitted"},"content":"    public Person(Name name, Phone phone, Email email, CaseNumber caseNumber, Address homeAddress,","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"                  WorkAddress workAddress, QuarantineAddress quarantineAddress, ShnPeriod shnPeriod,","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"                  NextOfKinName nextOfKinName, NextOfKinPhone nextOfKinPhone, NextOfKinAddress nextOfKinAddress) {","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"over-fitted"},"content":"        this(name, phone, email, caseNumber, homeAddress, workAddress, quarantineAddress, shnPeriod,","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"over-fitted"},"content":"                nextOfKinName, nextOfKinPhone, nextOfKinAddress, new CallStatus(0, false));","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"over-fitted"},"content":"     * Constuctor for Person to create a copy that uses a new counter. Used to update immutable call status.","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"over-fitted"},"content":"     * @param old the previous version of the person.","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"over-fitted"},"content":"     * @param newCallStatus the new counter to be used.","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"over-fitted"},"content":"    public Person(Person old, CallStatus newCallStatus) {","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"over-fitted"},"content":"        this(old.name, old.phone, old.email, old.caseNumber, old.homeAddress, old.workAddress, old.quarantineAddress,","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"over-fitted"},"content":"             old.shnPeriod, old.nextOfKinName, old.nextOfKinPhone, old.nextOfKinAddress, newCallStatus);","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"     * Short constructor for Person with no optional attributes.","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"    public Person(Name name, Phone phone, Email email, CaseNumber caseNumber, Address homeAddress) {","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"luffingluffy"},"content":"        this(name, phone, email, caseNumber, homeAddress, new WorkAddress(), new QuarantineAddress(), new ShnPeriod(),","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"luffingluffy"},"content":"                new NextOfKinName(), new NextOfKinPhone(), new NextOfKinAddress());","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"wei2912"},"content":"    public CaseNumber getCaseNumber() {","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"wei2912"},"content":"        return caseNumber;","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"wei2912"},"content":"    public Address getHomeAddress() {","lastModifiedDate":"2021-10-03"},{"lineNumber":112,"author":{"gitId":"wei2912"},"content":"        return homeAddress;","lastModifiedDate":"2021-10-03"},{"lineNumber":113,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":114,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":115,"author":{"gitId":"luffingluffy"},"content":"    public WorkAddress getWorkAddress() {","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"wei2912"},"content":"        return workAddress;","lastModifiedDate":"2021-10-03"},{"lineNumber":117,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":118,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":119,"author":{"gitId":"luffingluffy"},"content":"    public QuarantineAddress getQuarantineAddress() {","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"wei2912"},"content":"        return quarantineAddress;","lastModifiedDate":"2021-10-03"},{"lineNumber":121,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":122,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":123,"author":{"gitId":"luffingluffy"},"content":"    public ShnPeriod getShnPeriod() {","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"wei2912"},"content":"        return shnPeriod;","lastModifiedDate":"2021-10-03"},{"lineNumber":125,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":126,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":127,"author":{"gitId":"luffingluffy"},"content":"    public NextOfKinName getNextOfKinName() {","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"wei2912"},"content":"        return nextOfKinName;","lastModifiedDate":"2021-10-03"},{"lineNumber":129,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":130,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":131,"author":{"gitId":"luffingluffy"},"content":"    public NextOfKinPhone getNextOfKinPhone() {","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"wei2912"},"content":"        return nextOfKinPhone;","lastModifiedDate":"2021-10-03"},{"lineNumber":133,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":134,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":135,"author":{"gitId":"luffingluffy"},"content":"    public NextOfKinAddress getNextOfKinAddress() {","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"wei2912"},"content":"        return nextOfKinAddress;","lastModifiedDate":"2021-10-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":139,"author":{"gitId":"over-fitted"},"content":"    public CallStatus getCallStatus() {","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"over-fitted"},"content":"        return callStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"lrnshk"},"content":"     * Returns true if both persons have the same case number.","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"lrnshk"},"content":"        return otherPerson !\u003d null \u0026\u0026 otherPerson.getCaseNumber().equals(getCaseNumber());","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":173,"author":{"gitId":"over-fitted"},"content":"                \u0026\u0026 otherPerson.getCaseNumber().equals(getCaseNumber())","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"wei2912"},"content":"                \u0026\u0026 otherPerson.getHomeAddress().equals(getHomeAddress())","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"wei2912"},"content":"                \u0026\u0026 otherPerson.getWorkAddress().equals(getWorkAddress())","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"wei2912"},"content":"                \u0026\u0026 otherPerson.getQuarantineAddress().equals(getQuarantineAddress())","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"wei2912"},"content":"                \u0026\u0026 otherPerson.getShnPeriod().equals(getShnPeriod())","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"wei2912"},"content":"                \u0026\u0026 otherPerson.getNextOfKinName().equals(getNextOfKinName())","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"wei2912"},"content":"                \u0026\u0026 otherPerson.getNextOfKinPhone().equals(getNextOfKinPhone())","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"over-fitted"},"content":"                \u0026\u0026 otherPerson.getNextOfKinAddress().equals(getNextOfKinAddress())","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"over-fitted"},"content":"                \u0026\u0026 otherPerson.getCallStatus().equals(getCallStatus());","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"wei2912"},"content":"        return Objects.hash(name, phone, email, caseNumber, homeAddress, workAddress, quarantineAddress, shnPeriod,","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"over-fitted"},"content":"            nextOfKinName, nextOfKinPhone, nextOfKinAddress, callStatus);","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":199,"author":{"gitId":"wei2912"},"content":"                .append(\"; Case Number: \")","lastModifiedDate":"2021-10-11"},{"lineNumber":200,"author":{"gitId":"wei2912"},"content":"                .append(getCaseNumber())","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"wei2912"},"content":"                .append(\"; Home Address: \")","lastModifiedDate":"2021-10-03"},{"lineNumber":202,"author":{"gitId":"lrnshk"},"content":"                .append(getHomeAddress());","lastModifiedDate":"2021-11-02"},{"lineNumber":203,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":204,"author":{"gitId":"lrnshk"},"content":"        if (getWorkAddress().value.isPresent()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"lrnshk"},"content":"            builder.append(\"; Work Address: \").append(getWorkAddress().value.get());","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":207,"author":{"gitId":"lrnshk"},"content":"        if (getQuarantineAddress().value.isPresent()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"lrnshk"},"content":"            builder.append(\"; Quarantine Address: \").append(getQuarantineAddress().value.get());","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":210,"author":{"gitId":"lrnshk"},"content":"        if (getShnPeriod().value.isPresent()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"lrnshk"},"content":"            builder.append(\"; SHN Period: \").append(getShnPeriod().value.get());","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":213,"author":{"gitId":"lrnshk"},"content":"        if (getNextOfKinName().value.isPresent()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"lrnshk"},"content":"            builder.append(\"; Next-of-Kin\u0027s Name: \").append(getNextOfKinName().value.get());","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":216,"author":{"gitId":"lrnshk"},"content":"        if (getNextOfKinPhone().value.isPresent()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"lrnshk"},"content":"            builder.append(\"; Next-of-Kin\u0027s Phone: \").append(getNextOfKinPhone().value.get());","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":219,"author":{"gitId":"lrnshk"},"content":"        if (getNextOfKinAddress().value.isPresent()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"lrnshk"},"content":"            builder.append(\"; Next-of-Kin\u0027s Address: \").append(getNextOfKinAddress().value.get());","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":222,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":226,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"wei2912"},"content":"    public int compareTo(Person otherPerson) {","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"wei2912"},"content":"        return getCaseNumber().compareTo(otherPerson.getCaseNumber());","lastModifiedDate":"2021-10-25"},{"lineNumber":229,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"luffingluffy":32,"over-fitted":30,"lrnshk":25,"wei2912":60,"-":83}},{"path":"src/main/java/seedu/track2gather/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wei2912":4,"-":133}},{"path":"src/main/java/seedu/track2gather/model/person/attributes/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package seedu.track2gather.model.person.attributes;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":" * Represents a Person\u0027s address in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"public class Address extends Attribute\u003cString\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"        super(address);","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"luffingluffy":4,"-":41,"wei2912":2}},{"path":"src/main/java/seedu/track2gather/model/person/attributes/Attribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package seedu.track2gather.model.person.attributes;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"public abstract class Attribute\u003cT\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"    public final T value;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"     * Constructs an {@code Attribute}.","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"     * @param value A valid attribute value.","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    public Attribute(T value) {","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"        requireNonNull(value);","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"    public String toString() {","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"        return value.toString();","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"        return value.hashCode();","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"                || (other instanceof Attribute // instanceof handles nulls","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"                \u0026\u0026 this.value.equals(((Attribute\u003c?\u003e) other).value)); // state check","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"luffingluffy":34}},{"path":"src/main/java/seedu/track2gather/model/person/attributes/CallStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package seedu.track2gather.model.person.attributes;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":" * Represents a Person\u0027s call status in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":" * Guarantee: immutable; is valid as declared in {@link #isValidCallStatus(String)}","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"public class CallStatus extends Attribute\u003cPair\u003cInteger, Boolean\u003e\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"            \"CallStatus should be a non-negative integer followed by a boolean, separated by whitespace.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d+\\\\s+(true|false)$\";","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"     * Constructs a {@code CallStatus}.","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"     * @param numFailedCalls Number of failed calls.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"     * @param isCalledInCurrentSession Boolean indicating if the person has been called in the current session.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"    public CallStatus(int numFailedCalls, boolean isCalledInCurrentSession) {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"        super(new Pair\u003c\u003e(numFailedCalls, isCalledInCurrentSession));","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"        requireAllNonNull(numFailedCalls, isCalledInCurrentSession);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"     * Constructs a {@code CallStatus}.","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"     * @param callStatusString String containing number of failed calls and a boolean flag for whether they have been","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"     *                         called in the current session.","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"    public CallStatus(String callStatusString) {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"        this(Integer.parseInt(callStatusString.split(\" \", 2)[0]),","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"                Boolean.parseBoolean(callStatusString.split(\" \", 2)[1]));","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"     * Tests validity of a given string as input to be parsed into {@code CallStatus}","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"     * @param test string to test","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"     * @return bool whether the string is valid as an input.","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"    public static boolean isValidCallStatus(String test) {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"     * Returns a new {@code CallStatus} with {@code isCalledInCurrentSession} set to true.","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"    public CallStatus call() {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"        return new CallStatus(value.getKey(), true);","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"     * Returns a new {@code CallStatus} with {@code isCalledInCurrentSession} set to false.","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"    public CallStatus reset() {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"        return new CallStatus(value.getKey(), false);","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"over-fitted"},"content":"     * Returns true if the person has been called in the current session.","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"over-fitted"},"content":"    public boolean isCalledInCurrentSession() {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"        return value.getValue();","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"over-fitted"},"content":"     * Returns number of times person has failed to pick up since the start of SHN period.","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"over-fitted"},"content":"    public int getNumFailedCalls() {","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"        return value.getKey();","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"over-fitted"},"content":"     * Returns a new {@code CallStatus} which increments {@code numFailedCalls} and sets","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"over-fitted"},"content":"     * {@code isCalledInCurrentSession} to true.","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"over-fitted"},"content":"    public CallStatus incrementNumFailedCalls() {","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"        return new CallStatus(value.getKey() + 1, true);","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"over-fitted"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"        return value.getKey() + \" \" + value.getValue();","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"over-fitted"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"over-fitted"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"over-fitted"},"content":"                || (other instanceof CallStatus // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"luffingluffy"},"content":"                \u0026\u0026 value.equals(((CallStatus) other).value));","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"over-fitted"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"luffingluffy"},"content":"        return value.hashCode();","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"luffingluffy":14,"over-fitted":85,"wei2912":2}},{"path":"src/main/java/seedu/track2gather/model/person/attributes/CaseNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package seedu.track2gather.model.person.attributes;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":" * Represents a quarantined person\u0027s case number in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCaseNumber(String)}","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"public class CaseNumber extends Attribute\u003cString\u003e implements Comparable\u003cCaseNumber\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"            \"Case number should be a positive integer with no leading zeros and at most 6 digits\";","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[1-9]\\\\d{0,5}$\";","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"     * Constructs a {@code CaseNumber}.","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"     * @param caseNumber A valid case number.","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"    public CaseNumber(String caseNumber) {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"        super(caseNumber);","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"        checkArgument(isValidCaseNumber(caseNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"     * Returns true if a given string is a valid case number.","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"    public static boolean isValidCaseNumber(String test) {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"                || (other instanceof CaseNumber // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"                \u0026\u0026 value.equals(((CaseNumber) other).value)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"    public int compareTo(CaseNumber otherCaseNumber) {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"        return Integer.compare(Integer.parseInt(value), Integer.parseInt(otherCaseNumber.value));","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"luffingluffy":4,"over-fitted":37,"wei2912":5,"jennibearduit":1}},{"path":"src/main/java/seedu/track2gather/model/person/attributes/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package seedu.track2gather.model.person.attributes;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":" * Represents a Person\u0027s email in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"public class Email extends Attribute\u003cString\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"        super(email);","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"luffingluffy":3,"over-fitted":1,"-":55,"wei2912":2}},{"path":"src/main/java/seedu/track2gather/model/person/attributes/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package seedu.track2gather.model.person.attributes;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":" * Represents a Person\u0027s name in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"public class Name extends Attribute\u003cString\u003e implements Comparable\u003cName\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"        super(name);","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"                \u0026\u0026 value.equals(((Name) other).value)); // state check","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"        return value.hashCode();","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"    public int compareTo(Name otherName) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"        return value.compareToIgnoreCase(otherName.value);","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"luffingluffy":6,"-":42,"wei2912":5}},{"path":"src/main/java/seedu/track2gather/model/person/attributes/NextOfKinAddress.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package seedu.track2gather.model.person.attributes;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"public class NextOfKinAddress extends Attribute\u003cOptional\u003cAddress\u003e\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"     * Constructs an {@code Attribute}.","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"     * @param value A valid attribute value.","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"    public NextOfKinAddress(Optional\u003cAddress\u003e value) {","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"        super(value);","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    public NextOfKinAddress(Address value) {","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"        super(Optional.ofNullable(value));","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    public NextOfKinAddress() {","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"        super(Optional.empty());","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"                || (other instanceof NextOfKinAddress // instanceof handles nulls","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"                \u0026\u0026 value.equals(((NextOfKinAddress) other).value)); // state check","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"        return value.hashCode();","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"luffingluffy":35}},{"path":"src/main/java/seedu/track2gather/model/person/attributes/NextOfKinName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package seedu.track2gather.model.person.attributes;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"public class NextOfKinName extends Attribute\u003cOptional\u003cName\u003e\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"     * Constructs an {@code Attribute}.","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"     * @param value A valid attribute value.","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"    public NextOfKinName(Optional\u003cName\u003e value) {","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"        super(value);","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    public NextOfKinName(Name value) {","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"        super(Optional.ofNullable(value));","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    public NextOfKinName() {","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"        super(Optional.empty());","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"                || (other instanceof NextOfKinName // instanceof handles nulls","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"                \u0026\u0026 value.equals(((NextOfKinName) other).value)); // state check","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"        return value.hashCode();","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"luffingluffy":35}},{"path":"src/main/java/seedu/track2gather/model/person/attributes/NextOfKinPhone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package seedu.track2gather.model.person.attributes;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"public class NextOfKinPhone extends Attribute\u003cOptional\u003cPhone\u003e\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"     * Constructs an {@code Attribute}.","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"     * @param value A valid attribute value.","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"    public NextOfKinPhone(Optional\u003cPhone\u003e value) {","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"        super(value);","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    public NextOfKinPhone(Phone value) {","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"        super(Optional.ofNullable(value));","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    public NextOfKinPhone() {","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"        super(Optional.empty());","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"                || (other instanceof NextOfKinPhone // instanceof handles nulls","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"                \u0026\u0026 value.equals(((NextOfKinPhone) other).value)); // state check","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"        return value.hashCode();","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"luffingluffy":35}},{"path":"src/main/java/seedu/track2gather/model/person/attributes/Period.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package seedu.track2gather.model.person.attributes;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"import static seedu.track2gather.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import javafx.util.Pair;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":" * Represents a Person\u0027s period in the contacts list.","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPeriod(LocalDate, LocalDate)}","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"public class Period extends Attribute\u003cPair\u003cLocalDate, LocalDate\u003e\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"            \"Period should be of two dates in the ISO-8601 format (i.e. yyyy-MM-dd), \"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"                    + \"separated by a space. Start date should be keyed before the end date, \"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"                    + \"and must occur earlier than the end date by at least 1 second.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    public static final String MESSAGE_CONSTRAINTS_DATE \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"            \"Date should be in the ISO-8601 format (i.e. yyyy-MM-dd)\";","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a {@code Period}.","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"     * @param periodPair A valid period pair.","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"    public Period(Pair\u003cLocalDate, LocalDate\u003e periodPair) {","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"        super(periodPair);","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"        requireNonNull(periodPair);","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"        requireNonNull(super.value.getKey());","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"        requireNonNull(super.value.getValue());","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"        checkArgument(isValidPeriod(super.value.getKey(), super.value.getValue()), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a {@code Period}.","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"     * @param startDate A valid start date.","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"     * @param endDate   A valid end date.","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"    public Period(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"        this(new Pair\u003c\u003e(startDate, endDate));","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a {@code Period} from a String.","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"     * @param period A valid string period.","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"    public Period(String period) {","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"        this(LocalDate.parse(period.split(\" \u003d\u003e \", 2)[0]),","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"                LocalDate.parse(period.split(\" \u003d\u003e \", 2)[1]));","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"     * Returns true if a given Period is a valid period.","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"    public static boolean isValidPeriod(LocalDate testStartDate, LocalDate testEndDate) {","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"        requireNonNull(testStartDate);","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"        requireNonNull(testEndDate);","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"        return testEndDate.compareTo(testStartDate) \u003e 0; // end date is after start date","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"     * Returns true if a given period in string form is a valid period.","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"    public static boolean isValidPeriodString(String period) {","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"luffingluffy"},"content":"        requireNonNull(period);","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"luffingluffy"},"content":"        String[] dates \u003d period.split(\" \u003d\u003e \", 2);","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"        if (dates.length !\u003d 2) {","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"            return false;","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"            LocalDate testStartDate \u003d LocalDate.parse(dates[0]);","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"            LocalDate testEndDate \u003d LocalDate.parse(dates[1]);","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"            return isValidPeriod(testStartDate, testEndDate);","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"luffingluffy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"luffingluffy"},"content":"            return false;","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"        return value.getKey();","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"luffingluffy"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"luffingluffy"},"content":"        return value.getValue();","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"luffingluffy"},"content":"     * Returns true if a given period date is in the valid format.","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"luffingluffy"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"luffingluffy"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"luffingluffy"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"luffingluffy"},"content":"            LocalDate.parse(date);","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"luffingluffy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"luffingluffy"},"content":"            return false;","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"luffingluffy"},"content":"        return true;","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"luffingluffy"},"content":"     * Returns true if this period is completed by the given date.","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"luffingluffy"},"content":"    public boolean isCompletedBy(LocalDate dateToCompare) {","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"luffingluffy"},"content":"        return getEndDate().isBefore(dateToCompare);","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"luffingluffy"},"content":"    public String toString() {","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"luffingluffy"},"content":"        return String.format(\"%s \u003d\u003e %s\", getStartDate(), getEndDate());","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"luffingluffy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"luffingluffy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"luffingluffy"},"content":"                || (other instanceof Period // instanceof handles nulls","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"luffingluffy"},"content":"                \u0026\u0026 value.equals(((Period) other).value)); // state check","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"luffingluffy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"luffingluffy"},"content":"        return value.hashCode();","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"luffingluffy":128}},{"path":"src/main/java/seedu/track2gather/model/person/attributes/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package seedu.track2gather.model.person.attributes;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":" * Represents a Person\u0027s phone number in the contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"public class Phone extends Attribute\u003cString\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"        super(phone);","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"luffingluffy":3,"-":38,"wei2912":2}},{"path":"src/main/java/seedu/track2gather/model/person/attributes/QuarantineAddress.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package seedu.track2gather.model.person.attributes;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"public class QuarantineAddress extends Attribute\u003cOptional\u003cAddress\u003e\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"     * Constructs an {@code Attribute}.","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"     * @param value A valid attribute value.","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"    public QuarantineAddress(Optional\u003cAddress\u003e value) {","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"        super(value);","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    public QuarantineAddress(Address value) {","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"        super(Optional.ofNullable(value));","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    public QuarantineAddress() {","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"        super(Optional.empty());","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"                || (other instanceof QuarantineAddress // instanceof handles nulls","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"                \u0026\u0026 value.equals(((QuarantineAddress) other).value)); // state check","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"        return value.hashCode();","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"luffingluffy":35}},{"path":"src/main/java/seedu/track2gather/model/person/attributes/ShnPeriod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package seedu.track2gather.model.person.attributes;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":" * Represents a Person\u0027s SHN period in the contacts list.","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":" * Guarantees: immutable; is valid as declared in Period.","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"public class ShnPeriod extends Attribute\u003cOptional\u003cPeriod\u003e\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"     * Constructs an {@code Attribute}.","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"     * @param value A valid attribute value.","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    public ShnPeriod(Optional\u003cPeriod\u003e value) {","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"        super(value);","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    public ShnPeriod(Period value) {","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"        super(Optional.ofNullable(value));","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    public ShnPeriod() {","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"        super(Optional.empty());","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"                || (other instanceof ShnPeriod // instanceof handles nulls","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"                \u0026\u0026 value.equals(((ShnPeriod) other).value)); // state check","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"        return value.hashCode();","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"luffingluffy":39}},{"path":"src/main/java/seedu/track2gather/model/person/attributes/WorkAddress.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package seedu.track2gather.model.person.attributes;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"public class WorkAddress extends Attribute\u003cOptional\u003cAddress\u003e\u003e {","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"     * Constructs an {@code Attribute}.","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"     * @param value A valid attribute value.","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"    public WorkAddress(Optional\u003cAddress\u003e value) {","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"        super(value);","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    public WorkAddress(Address value) {","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"        super(Optional.ofNullable(value));","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    public WorkAddress() {","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"        super(Optional.empty());","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"                || (other instanceof WorkAddress // instanceof handles nulls","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"                \u0026\u0026 value.equals(((WorkAddress) other).value)); // state check","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"        return value.hashCode();","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"luffingluffy":35}},{"path":"src/main/java/seedu/track2gather/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person.exceptions;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"wei2912":1,"-":10}},{"path":"src/main/java/seedu/track2gather/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person.exceptions;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"wei2912":1,"-":5}},{"path":"src/main/java/seedu/track2gather/model/person/predicates/CaseNumberEqualsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person.predicates;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":" * Tests that a {@code Person}\u0027s {@code Case Number} equals any of the keywords given.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"public class CaseNumberEqualsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    public CaseNumberEqualsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"                .anyMatch(keyword -\u003e person.getCaseNumber().value.equals(keyword));","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"                || (other instanceof CaseNumberEqualsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"                \u0026\u0026 keywords.equals(((CaseNumberEqualsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"wei2912":2,"jennibearduit":28}},{"path":"src/main/java/seedu/track2gather/model/person/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person.predicates;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.util.StringUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().value, keyword));","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"luffingluffy":1,"wei2912":3,"-":27}},{"path":"src/main/java/seedu/track2gather/model/person/predicates/PhoneStartsWithKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person.predicates;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} starts with any of the keywords given.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"public class PhoneStartsWithKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    public PhoneStartsWithKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"                .anyMatch(key -\u003e person.getPhone().value.startsWith(key));","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"                || (other instanceof PhoneStartsWithKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"                \u0026\u0026 keywords.equals(((PhoneStartsWithKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"wei2912":2,"jennibearduit":28}},{"path":"src/main/java/seedu/track2gather/model/person/predicates/ShnPeriodEndEqualsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person.predicates;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":" * Tests that a {@code Person}\u0027s {@code ShnPeriod} end date equals any of the keywords given.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"public class ShnPeriodEndEqualsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    public ShnPeriodEndEqualsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"                .anyMatch(keyword -\u003e person.getShnPeriod()","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"                        .value","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"                        .map(sh -\u003e sh.getEndDate().toString().equals(keyword))","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"                        .orElse(false));","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"                || (other instanceof ShnPeriodEndEqualsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"                \u0026\u0026 keywords.equals(((ShnPeriodEndEqualsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"luffingluffy":2,"wei2912":2,"jennibearduit":29}},{"path":"src/main/java/seedu/track2gather/model/person/predicates/ShnPeriodStartEqualsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person.predicates;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":" * Tests that a {@code Person}\u0027s {@code ShnPeriod} start date equals any of the keywords given.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"public class ShnPeriodStartEqualsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"jennibearduit"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"    public ShnPeriodStartEqualsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"                .anyMatch(keyword -\u003e person.getShnPeriod()","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"                        .value","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"                        .map(sh -\u003e sh.getStartDate().toString().equals(keyword))","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"                        .orElse(false));","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"                || (other instanceof ShnPeriodStartEqualsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"                \u0026\u0026 keywords.equals(((ShnPeriodStartEqualsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"luffingluffy":2,"wei2912":2,"jennibearduit":29}},{"path":"src/main/java/seedu/track2gather/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.util;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Address;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CaseNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Name;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinName;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinPhone;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Period;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.QuarantineAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.ShnPeriod;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.WorkAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":" * Contains utility methods for populating {@code Track2Gather} with sample data.","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"frederickpek"},"content":"                    new CaseNumber(\"1\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"                    new WorkAddress(new Address(\"70 Pasir Panjang Rd, #03-71\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"                    new QuarantineAddress(new Address(\"Marina Bay Sands, 10 Bayfront Avenue\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"                    new ShnPeriod(new Period(\"2021-10-11 \u003d\u003e 2021-10-24\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"                    new NextOfKinName(new Name(\"Alexander Yeoh\")), new NextOfKinPhone(new Phone(\"92347283\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"                    new NextOfKinAddress(new Address(\"Blk 30 Geylang Street 29, #06-40\"))),","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"frederickpek"},"content":"            new Person(new Name(\"Bernice Teo\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"frederickpek"},"content":"                    new CaseNumber(\"2\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"                    new WorkAddress(), new QuarantineAddress(),","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"                    new ShnPeriod(new Period(\"2021-10-02 \u003d\u003e 2021-10-07\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"                    new NextOfKinName(), new NextOfKinPhone(), new NextOfKinAddress()),","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"                    new CaseNumber(\"3\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new WorkAddress(),","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"                    new QuarantineAddress(new Address(\"NUS Prince George\u0027s Park Residences\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"                    new ShnPeriod(new Period(\"2021-09-29 \u003d\u003e 2021-10-05\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"                    new NextOfKinName(new Name(\"Christopher Oliveiro\")), new NextOfKinPhone(new Phone(\"98290023\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"                    new NextOfKinAddress(new Address(\"Blk 26 Ang Mo Kio Street 74, #06-23\"))),","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"frederickpek"},"content":"                    new CaseNumber(\"4\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"                    new WorkAddress(), new QuarantineAddress(), new ShnPeriod(),","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"                    new NextOfKinName(), new NextOfKinPhone(new Phone(\"83546783\")), new NextOfKinAddress()),","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"                    new CaseNumber(\"5\"), new Address(\"Blk 47 Tampines Street 20, #17-35\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"frederickpek"},"content":"                    new CaseNumber(\"6\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\")),","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"frederickpek"},"content":"            new Person(new Name(\"Jane Ang\"), new Phone(\"95958462\"), new Email(\"jane@email.com\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"frederickpek"},"content":"                    new CaseNumber(\"600204\"), new Address(\"123 Changi Road #01-100 700123\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"                    new WorkAddress(new Address(\"50 Jurong Road 120050\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"                    new QuarantineAddress(new Address(\"12 Harbourfront Ring 123012\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"                    new ShnPeriod(new Period(\"2021-01-01 \u003d\u003e 2021-01-14\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"                    new NextOfKinName(new Name(\"Peter Ang\")), new NextOfKinPhone(new Phone(\"90011234\")),","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"                    new NextOfKinAddress(new Address(\"73 Yishun Drive #10-301 310073\")))","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"    public static ReadOnlyTrack2Gather getSampleTrack2Gather() {","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"        Track2Gather sampleAb \u003d new Track2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"luffingluffy":32,"wei2912":8,"-":22,"frederickpek":7}},{"path":"src/main/java/seedu/track2gather/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Address;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CallStatus;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CaseNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Name;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinName;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinPhone;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Period;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.QuarantineAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.ShnPeriod;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.WorkAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"    private final String caseNumber;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"    private final String homeAddress;","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"    private final String workAddress;","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"    private final String quarantineAddress;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"lrnshk"},"content":"    private final String shnPeriod;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"    private final String nextOfKinName;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"    private final String nextOfKinPhone;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"    private final String nextOfKinAddress;","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"    private final String callStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"caseNumber\") String caseNumber,","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"                             @JsonProperty(\"homeAddress\") String homeAddress,","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"                             @JsonProperty(\"workAddress\") String workAddress,","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"                             @JsonProperty(\"quarantineAddress\") String quarantineAddress,","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"                             @JsonProperty(\"shnPeriod\") String shnPeriod,","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"                             @JsonProperty(\"nextOfKinName\") String nextOfKinName,","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"                             @JsonProperty(\"nextOfKinPhone\") String nextOfKinPhone,","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"                             @JsonProperty(\"nextOfKinAddress\") String nextOfKinAddress,","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"                             @JsonProperty(\"callStatus\") String callStatus) {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"        this.caseNumber \u003d caseNumber;","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"        this.homeAddress \u003d homeAddress;","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"        this.workAddress \u003d workAddress;","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"luffingluffy"},"content":"        this.quarantineAddress \u003d quarantineAddress;","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"        this.shnPeriod \u003d shnPeriod;","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"        this.nextOfKinName \u003d nextOfKinName;","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"        this.nextOfKinPhone \u003d nextOfKinPhone;","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"        this.nextOfKinAddress \u003d nextOfKinAddress;","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"over-fitted"},"content":"        this.callStatus \u003d callStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"        name \u003d source.getName().value;","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"        caseNumber \u003d source.getCaseNumber().value;","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"luffingluffy"},"content":"        homeAddress \u003d source.getHomeAddress().value;","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"        workAddress \u003d source.getWorkAddress().value.map(Object::toString).orElse(null);","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"        quarantineAddress \u003d source.getQuarantineAddress().value.map(Object::toString).orElse(null);","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"        shnPeriod \u003d source.getShnPeriod().value.map(Object::toString).orElse(null);","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"        nextOfKinName \u003d source.getNextOfKinName().value.map(Object::toString).orElse(null);","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"        nextOfKinPhone \u003d source.getNextOfKinPhone().value.map(Object::toString).orElse(null);","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"        nextOfKinAddress \u003d source.getNextOfKinAddress().value.map(Object::toString).orElse(null);","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"over-fitted"},"content":"        callStatus \u003d source.getCallStatus().toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"wei2912"},"content":"        if (caseNumber \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"wei2912"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"wei2912"},"content":"                    CaseNumber.class.getSimpleName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"wei2912"},"content":"        if (!CaseNumber.isValidCaseNumber(caseNumber)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"wei2912"},"content":"            throw new IllegalValueException(CaseNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"wei2912"},"content":"        final CaseNumber modelCaseNumber \u003d new CaseNumber(caseNumber);","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"luffingluffy"},"content":"        if (homeAddress \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"luffingluffy"},"content":"        if (!Address.isValidAddress(homeAddress)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"luffingluffy"},"content":"        final Address modelHomeAddress \u003d new Address(homeAddress);","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"luffingluffy"},"content":"        if (workAddress !\u003d null \u0026\u0026 !Address.isValidAddress(workAddress)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"luffingluffy"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"luffingluffy"},"content":"        final WorkAddress modelWorkAddress \u003d new WorkAddress(Optional.ofNullable(workAddress).map(Address::new));","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"luffingluffy"},"content":"        if (quarantineAddress !\u003d null \u0026\u0026 !Address.isValidAddress(quarantineAddress)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"luffingluffy"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"luffingluffy"},"content":"        final QuarantineAddress modelQuarantineAddress \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"luffingluffy"},"content":"                new QuarantineAddress(Optional.ofNullable(quarantineAddress).map(Address::new));","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"luffingluffy"},"content":"        if (shnPeriod !\u003d null \u0026\u0026 !Period.isValidPeriodString(shnPeriod)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"luffingluffy"},"content":"            throw new IllegalValueException(Period.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"luffingluffy"},"content":"        final ShnPeriod modelShnPeriod \u003d new ShnPeriod(Optional.ofNullable(shnPeriod).map(Period::new));","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"jennibearduit"},"content":"        if (nextOfKinName !\u003d null \u0026\u0026 !Name.isValidName(nextOfKinName)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"jennibearduit"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"luffingluffy"},"content":"        final NextOfKinName modelNextOfKinName \u003d new NextOfKinName(Optional.ofNullable(nextOfKinName).map(Name::new));","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"jennibearduit"},"content":"        if (nextOfKinPhone !\u003d null \u0026\u0026 !Phone.isValidPhone(nextOfKinPhone)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"jennibearduit"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"luffingluffy"},"content":"        final NextOfKinPhone modelNextOfKinPhone \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"luffingluffy"},"content":"                new NextOfKinPhone(Optional.ofNullable(nextOfKinPhone).map(Phone::new));","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"jennibearduit"},"content":"        if (nextOfKinAddress !\u003d null \u0026\u0026 !Address.isValidAddress(nextOfKinAddress)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"jennibearduit"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"jennibearduit"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"luffingluffy"},"content":"        final NextOfKinAddress modelNextOfKinAddress \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"luffingluffy"},"content":"                new NextOfKinAddress(Optional.ofNullable(nextOfKinAddress).map(Address::new));","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"luffingluffy"},"content":"        if (callStatus \u003d\u003d null) {","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"luffingluffy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"luffingluffy"},"content":"                    CallStatus.class.getSimpleName()));","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"luffingluffy"},"content":"        if (!CallStatus.isValidCallStatus(callStatus)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"over-fitted"},"content":"            throw new IllegalValueException(CallStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"over-fitted"},"content":"        final CallStatus modelCallStatus \u003d new CallStatus(callStatus);","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"wei2912"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelCaseNumber, modelHomeAddress, modelWorkAddress,","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"over-fitted"},"content":"                modelQuarantineAddress, modelShnPeriod, modelNextOfKinName, modelNextOfKinPhone,","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"over-fitted"},"content":"                modelNextOfKinAddress, modelCallStatus);","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"luffingluffy":62,"over-fitted":11,"lrnshk":2,"wei2912":23,"-":71,"jennibearduit":15}},{"path":"src/main/java/seedu/track2gather/storage/JsonSerializableTrack2Gather.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.util.List;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":" * An Immutable Track2Gather that is serializable to JSON format.","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"@JsonRootName(value \u003d \"track2gather\")","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"class JsonSerializableTrack2Gather {","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate case number(s).\";","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"     * Constructs a {@code JsonSerializableTrack2Gather} with the given persons.","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"    public JsonSerializableTrack2Gather(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"     * Converts a given {@code ReadOnlyTrack2Gather} into this class for Jackson use.","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTrack2Gather}.","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    public JsonSerializableTrack2Gather(ReadOnlyTrack2Gather source) {","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"     * Converts this contacts list into the model\u0027s {@code Track2Gather} object.","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"    public Track2Gather toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"        Track2Gather track2Gather \u003d new Track2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"            if (track2Gather.hasPerson(person)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"            track2Gather.addPerson(person);","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"        return track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"lrnshk":1,"wei2912":59}},{"path":"src/main/java/seedu/track2gather/storage/JsonTrack2GatherStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.LogsCenter;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.util.FileUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.util.JsonUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":" * A class to access Track2Gather data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"public class JsonTrack2GatherStorage implements Track2GatherStorage {","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTrack2GatherStorage.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    private Path filePath;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"    public JsonTrack2GatherStorage(Path filePath) {","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"    public Path getTrack2GatherFilePath() {","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"        return filePath;","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"    public Optional\u003cReadOnlyTrack2Gather\u003e readTrack2Gather() throws DataConversionException {","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"        return readTrack2Gather(filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"     * Similar to {@link #readTrack2Gather()}.","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"    public Optional\u003cReadOnlyTrack2Gather\u003e readTrack2Gather(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"        Optional\u003cJsonSerializableTrack2Gather\u003e jsonTrack2Gather \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"                filePath, JsonSerializableTrack2Gather.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"        if (!jsonTrack2Gather.isPresent()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"            return Optional.of(jsonTrack2Gather.get().toModelType());","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"    public void saveTrack2Gather(ReadOnlyTrack2Gather track2Gather) throws IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"        saveTrack2Gather(track2Gather, filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"     * Similar to {@link #saveTrack2Gather(ReadOnlyTrack2Gather)}.","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"    public void saveTrack2Gather(ReadOnlyTrack2Gather track2Gather, Path filePath) throws IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"        requireNonNull(track2Gather);","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTrack2Gather(track2Gather), filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"wei2912":80}},{"path":"src/main/java/seedu/track2gather/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.util.JsonUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wei2912":5,"-":42}},{"path":"src/main/java/seedu/track2gather/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":" * API of the Storage component","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"public interface Storage extends Track2GatherStorage, UserPrefsStorage {","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    Path getTrack2GatherFilePath();","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    Optional\u003cReadOnlyTrack2Gather\u003e readTrack2Gather() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"    void saveTrack2Gather(ReadOnlyTrack2Gather track2Gather) throws IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"wei2912":32}},{"path":"src/main/java/seedu/track2gather/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.LogsCenter;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":" * Manages storage of Track2Gather data in local storage.","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"    private Track2GatherStorage track2GatherStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"     * Creates a {@code StorageManager} with the given {@code Track2GatherStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"    public StorageManager(Track2GatherStorage track2GatherStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"        super();","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"        this.track2GatherStorage \u003d track2GatherStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Track2Gather methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"    public Path getTrack2GatherFilePath() {","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"        return track2GatherStorage.getTrack2GatherFilePath();","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"    public Optional\u003cReadOnlyTrack2Gather\u003e readTrack2Gather() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"        return readTrack2Gather(track2GatherStorage.getTrack2GatherFilePath());","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"    public Optional\u003cReadOnlyTrack2Gather\u003e readTrack2Gather(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"        return track2GatherStorage.readTrack2Gather(filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"    public void saveTrack2Gather(ReadOnlyTrack2Gather track2Gather) throws IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"        saveTrack2Gather(track2Gather, track2GatherStorage.getTrack2GatherFilePath());","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"    public void saveTrack2Gather(ReadOnlyTrack2Gather track2Gather, Path filePath) throws IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"        track2GatherStorage.saveTrack2Gather(track2Gather, filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"wei2912":79}},{"path":"src/main/java/seedu/track2gather/storage/Track2GatherStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":" * Represents a storage for {@link Track2Gather}.","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"public interface Track2GatherStorage {","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    Path getTrack2GatherFilePath();","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"     * Returns Track2Gather data as a {@link ReadOnlyTrack2Gather}.","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    Optional\u003cReadOnlyTrack2Gather\u003e readTrack2Gather() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"     * @see #getTrack2GatherFilePath()","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"    Optional\u003cReadOnlyTrack2Gather\u003e readTrack2Gather(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"     * Saves the given {@link ReadOnlyTrack2Gather} to the storage.","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"     * @param track2Gather cannot be null.","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    void saveTrack2Gather(ReadOnlyTrack2Gather track2Gather) throws IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"     * @see #saveTrack2Gather(ReadOnlyTrack2Gather)","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"    void saveTrack2Gather(ReadOnlyTrack2Gather track2Gather, Path filePath) throws IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"wei2912":46}},{"path":"src/main/java/seedu/track2gather/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":" * Represents a storage for {@link seedu.track2gather.model.UserPrefs}.","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"     * Saves the given {@link seedu.track2gather.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wei2912":6,"-":30}},{"path":"src/main/java/seedu/track2gather/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.CommandResult;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"         * @see seedu.track2gather.logic.Logic#execute(String)","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"wei2912":5,"-":80}},{"path":"src/main/java/seedu/track2gather/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.LogsCenter;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"frederickpek"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103-w14-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wei2912":2,"-":99,"frederickpek":1}},{"path":"src/main/java/seedu/track2gather/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.GuiSettings;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.LogsCenter;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.Logic;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.CommandResult;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"    private StatusBarFooter statusBarFooter;","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"wei2912"},"content":"        statusBarFooter \u003d new StatusBarFooter(logic.getTrack2GatherFilePath());","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"wei2912"},"content":"        statusBarFooter.updateNumPersons(logic.getFilteredPersonList().size(), logic.getNumPersonsTotal());","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"wei2912"},"content":"     * @see seedu.track2gather.logic.Logic#execute(String)","lastModifiedDate":"2021-10-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"wei2912"},"content":"            statusBarFooter.updateNumPersons(logic.getFilteredPersonList().size(), logic.getNumPersonsTotal());","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wei2912":12,"-":187}},{"path":"src/main/java/seedu/track2gather/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"frederickpek"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"frederickpek"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"frederickpek"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"    private Label email;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"    private Label caseNumber;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"    private Label homeAddress;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"    private Label workAddress;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"    private Label quarantineAddress;","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"    private Label shnPeriod;","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"lrnshk"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"    private Label nextOfKinName;","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"jennibearduit"},"content":"    private Label nextOfKinPhone;","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"jennibearduit"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"jennibearduit"},"content":"    private Label nextOfKinAddress;","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"jennibearduit"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"frederickpek"},"content":"    private Label numFailedCalls;","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"frederickpek"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"frederickpek"},"content":"    private HBox phoneHBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"frederickpek"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"frederickpek"},"content":"    private HBox homeHBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"frederickpek"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"frederickpek"},"content":"    private HBox emailHBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"frederickpek"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"frederickpek"},"content":"    private HBox workAddressHBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"frederickpek"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"frederickpek"},"content":"    private HBox quarantineAddressHBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"frederickpek"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"frederickpek"},"content":"    private HBox shnPeriodHBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"frederickpek"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"frederickpek"},"content":"    private HBox nextOfKinNameHBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"frederickpek"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"frederickpek"},"content":"    private HBox nextOfKinPhoneHBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"frederickpek"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"frederickpek"},"content":"    private HBox nextOfKinAddressHBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"frederickpek"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"frederickpek"},"content":"    private VBox nextOfKinBlock;","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"frederickpek"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"frederickpek"},"content":"    private VBox callStatusBlock;","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"frederickpek"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"frederickpek"},"content":"    private ImageView callStatusTick;","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"frederickpek"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"frederickpek"},"content":"    private ImageView callStatusCross;","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"luffingluffy"},"content":"        name.setText(person.getName().value);","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"frederickpek"},"content":"        caseNumber.setText(String.format(\"#%1$6s\", person.getCaseNumber().value).replace(\u0027 \u0027, \u00270\u0027));","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"wei2912"},"content":"        homeAddress.setText(person.getHomeAddress().value);","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"luffingluffy"},"content":"        person.getWorkAddress().value.map(Object::toString).ifPresentOrElse(","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"frederickpek"},"content":"            text -\u003e workAddress.setText(text), () -\u003e hideNode(workAddressHBox));","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"luffingluffy"},"content":"        person.getQuarantineAddress().value.map(Object::toString).ifPresentOrElse(","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"frederickpek"},"content":"            text -\u003e quarantineAddress.setText(text), () -\u003e hideNode(quarantineAddressHBox));","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"luffingluffy"},"content":"        person.getShnPeriod().value.map(Object::toString).ifPresentOrElse(","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"frederickpek"},"content":"            text -\u003e shnPeriod.setText(text), () -\u003e hideNode(shnPeriodHBox));","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"luffingluffy"},"content":"        person.getNextOfKinName().value.map(Object::toString).ifPresentOrElse(","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"frederickpek"},"content":"            text -\u003e nextOfKinName.setText(text), () -\u003e hideNode(nextOfKinNameHBox));","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"luffingluffy"},"content":"        person.getNextOfKinPhone().value.map(Object::toString).ifPresentOrElse(","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"frederickpek"},"content":"            text -\u003e nextOfKinPhone.setText(text), () -\u003e hideNode(nextOfKinPhoneHBox));","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"luffingluffy"},"content":"        person.getNextOfKinAddress().value.map(Object::toString).ifPresentOrElse(","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"frederickpek"},"content":"            text -\u003e nextOfKinAddress.setText(text), () -\u003e hideNode(nextOfKinAddressHBox));","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"luffingluffy"},"content":"        if (person.getNextOfKinName().value.isEmpty()","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"luffingluffy"},"content":"                \u0026\u0026 person.getNextOfKinPhone().value.isEmpty()","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"luffingluffy"},"content":"                \u0026\u0026 person.getNextOfKinAddress().value.isEmpty()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"frederickpek"},"content":"            hideNode(nextOfKinBlock);","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"frederickpek"},"content":"        if (person.getCallStatus().isCalledInCurrentSession()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"frederickpek"},"content":"            hideNode(callStatusCross);","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"frederickpek"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"frederickpek"},"content":"            hideNode(callStatusTick);","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"frederickpek"},"content":"        numFailedCalls.setText(String.format(\"Failed: %s time(s)\", person.getCallStatus().getNumFailedCalls()));","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"frederickpek"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"frederickpek"},"content":"     * Removes the specified {@code Node} from display.","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"frederickpek"},"content":"     * @param node The {@code Node} to be hidden from display.","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"frederickpek"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"frederickpek"},"content":"    private void hideNode(Node node) {","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"frederickpek"},"content":"        node.setManaged(false);","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"frederickpek"},"content":"        node.setVisible(false);","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"luffingluffy":15,"lrnshk":2,"wei2912":7,"-":63,"frederickpek":63,"jennibearduit":6}},{"path":"src/main/java/seedu/track2gather/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.LogsCenter;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wei2912":3,"-":46}},{"path":"src/main/java/seedu/track2gather/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wei2912":1,"-":27}},{"path":"src/main/java/seedu/track2gather/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    @FXML","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"    private Label numPersonsStatus;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"    public void updateNumPersons(int numPersonsDisplayed, int numPersonsTotal) {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"        numPersonsStatus.setText(String.format(\"%d/%d persons displayed.\", numPersonsDisplayed, numPersonsTotal));","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":6,"-":27}},{"path":"src/main/java/seedu/track2gather/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wei2912":1,"-":12}},{"path":"src/main/java/seedu/track2gather/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.MainApp;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.LogsCenter;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.util.StringUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.Logic;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"frederickpek"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/track2gather_icon.png\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wei2912":5,"-":83,"frederickpek":1}},{"path":"src/main/java/seedu/track2gather/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.MainApp;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wei2912":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: derive(#1A202F, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"frederickpek"},"content":"    background-color: #1A202F; /* Used in the default.html file */","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"frederickpek"},"content":"    -fx-base: #1A202F;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"frederickpek"},"content":"    -fx-control-inner-background: #1A202F;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: #1A202F;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: derive(#1A202F, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: derive(#1A202F, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: derive(#1A202F, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: rgb(141, 141, 141, 0.2);","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"frederickpek"},"content":"    /* -fx-background-color: #3c3e3f; */","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: rgb(141, 141, 141, 0.2);","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"frederickpek"},"content":"    -fx-border-color: transparent transparent white transparent;","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"frederickpek"},"content":"    /* -fx-background-color: #515658; */","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: rgb(141, 141, 141, 0.2);","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"frederickpek"},"content":"    -fx-border-color: transparent transparent white transparent;","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":141,"author":{"gitId":"frederickpek"},"content":"     -fx-background-color: derive(#1A202F, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":145,"author":{"gitId":"frederickpek"},"content":"     -fx-background-color: derive(#1A202F, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"frederickpek"},"content":"     -fx-border-color: derive(#1A202F, 10%);","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: derive(#1A202F, 30%);","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: derive(#1A202F, 30%);","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"frederickpek"},"content":"    -fx-border-color: derive(#1A202F, 25%);","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: derive(#1A202F, 30%);","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"frederickpek"},"content":"    -fx-border-color: derive(#1A202F, 30%);","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":189,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: derive(#1A202F, 30%);","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: derive(#1A202F, 50%);","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: #1A202F;","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: #1A202F;","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"frederickpek"},"content":"  -fx-text-fill: #1A202F;","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: #1A202F;","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: #1A202F;","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: #1A202F;","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: derive(#1A202F, 25%);","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":290,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: derive(#1A202F, 20%);","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: derive(#1A202F, 50%);","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: transparent #1A202F transparent #1A202F;","lastModifiedDate":"2021-10-12"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"frederickpek"},"content":"    -fx-border-color: #1A202F #1A202F #ffffff #1A202F;","lastModifiedDate":"2021-10-12"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: transparent, #1A202F, transparent, #1A202F;","lastModifiedDate":"2021-10-12"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"frederickpek"},"content":"#caseNumber {","lastModifiedDate":"2021-10-12"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"frederickpek"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-12"},{"lineNumber":349,"author":{"gitId":"frederickpek"},"content":"    -fx-text-fill: #9FE2DE;","lastModifiedDate":"2021-10-12"},{"lineNumber":350,"author":{"gitId":"frederickpek"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-10-12"},{"lineNumber":351,"author":{"gitId":"frederickpek"},"content":"    -fx-padding: 0 5 0 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"frederickpek"},"content":"#inAppTitle {","lastModifiedDate":"2021-10-12"},{"lineNumber":355,"author":{"gitId":"frederickpek"},"content":"    -fx-background-color: #1A202F;","lastModifiedDate":"2021-10-12"},{"lineNumber":356,"author":{"gitId":"frederickpek"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":357,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":358,"author":{"gitId":"frederickpek"},"content":"#inAppTitle .label {","lastModifiedDate":"2021-10-12"},{"lineNumber":359,"author":{"gitId":"frederickpek"},"content":"    -fx-font-family: \"Open Sans SemiBold\";","lastModifiedDate":"2021-10-12"},{"lineNumber":360,"author":{"gitId":"frederickpek"},"content":"    -fx-text-fill: #F08080;","lastModifiedDate":"2021-10-12"},{"lineNumber":361,"author":{"gitId":"frederickpek"},"content":"    -fx-font-size: 48px;","lastModifiedDate":"2021-10-12"},{"lineNumber":362,"author":{"gitId":"frederickpek"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":363,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":364,"author":{"gitId":"frederickpek"},"content":"#personalParticulars {","lastModifiedDate":"2021-10-12"},{"lineNumber":365,"author":{"gitId":"frederickpek"},"content":"    -fx-font-family: \"Open Sans SemiBold\";","lastModifiedDate":"2021-10-12"},{"lineNumber":366,"author":{"gitId":"frederickpek"},"content":"    -fx-text-fill: #FFE175;","lastModifiedDate":"2021-10-12"},{"lineNumber":367,"author":{"gitId":"frederickpek"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-10-12"},{"lineNumber":368,"author":{"gitId":"frederickpek"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":369,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":370,"author":{"gitId":"frederickpek"},"content":"#nokParticulars {","lastModifiedDate":"2021-10-12"},{"lineNumber":371,"author":{"gitId":"frederickpek"},"content":"    -fx-font-family: \"Open Sans SemiBold\";","lastModifiedDate":"2021-10-12"},{"lineNumber":372,"author":{"gitId":"frederickpek"},"content":"    -fx-text-fill: #FFE175;","lastModifiedDate":"2021-10-12"},{"lineNumber":373,"author":{"gitId":"frederickpek"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-10-12"},{"lineNumber":374,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":312,"frederickpek":62}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"frederickpek"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"frederickpek"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"frederickpek"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"frederickpek"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"frederickpek"},"content":"         title\u003d\"Track2Gather App\" minWidth\u003d\"810\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"frederickpek"},"content":"    \u003cImage url\u003d\"@/images/track2gather_icon.png\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"frederickpek"},"content":"        \u003cHBox fx:id\u003d\"inAppTitle\" HBox.hgrow\u003d\"ALWAYS\" \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"frederickpek"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"frederickpek"},"content":"            \u003cInsets top\u003d\"0\" right\u003d\"10\" bottom\u003d\"0\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"frederickpek"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"frederickpek"},"content":"          \u003cLabel fx:id\u003d\"title\" text\u003d\"Track2Gather\" minWidth\u003d\"400\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"frederickpek"},"content":"          \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"frederickpek"},"content":"          \u003cImageView","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"frederickpek"},"content":"                  fx:id\u003d\"displayPicture\"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"frederickpek"},"content":"                  fitHeight\u003d\"60.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"frederickpek"},"content":"                  fitWidth\u003d\"100.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"frederickpek"},"content":"                  smooth\u003d\"false\"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"frederickpek"},"content":"                  preserveRatio\u003d\"true\"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"frederickpek"},"content":"                  pickOnBounds\u003d\"true\"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"frederickpek"},"content":"                  HBox.hgrow\u003d\"NEVER\" \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"frederickpek"},"content":"            \u003cimage\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"frederickpek"},"content":"              \u003cImage url\u003d\"@/images/track2gather_icon.png\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"frederickpek"},"content":"            \u003c/image\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"frederickpek"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"frederickpek"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"frederickpek"},"content":"            \u003cInsets bottom\u003d\"0\" left\u003d\"24.0\" right\u003d\"30.0\" top\u003d\"0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"frederickpek"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"frederickpek"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"frederickpek"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"frederickpek"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"frederickpek"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"frederickpek"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"frederickpek"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"frederickpek"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":52,"frederickpek":37}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"frederickpek"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"frederickpek"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"frederickpek"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" maxWidth\u003d\"500\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"frederickpek"},"content":"        \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"frederickpek"},"content":"        \u003cLabel text\u003d\"Case No: \" id\u003d\"nokParticulars\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"frederickpek"},"content":"        \u003cLabel fx:id\u003d\"caseNumber\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"frederickpek"},"content":"      \u003cHBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"frederickpek"},"content":"        \u003cVBox id\u003d\"personalParticularsBlock\" minWidth\u003d\"290\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"frederickpek"},"content":"          \u003cLabel fx:id\u003d\"personalParticulars\" text\u003d\"Personal Particulars\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"frederickpek"},"content":"          \u003cHBox fx:id\u003d\"phoneHBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"frederickpek"},"content":"            \u003cImageView","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"frederickpek"},"content":"                    fitHeight\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"frederickpek"},"content":"                    fitWidth\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"frederickpek"},"content":"                    smooth\u003d\"false\"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"frederickpek"},"content":"                    HBox.hgrow\u003d\"NEVER\" \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"frederickpek"},"content":"              \u003cimage\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"frederickpek"},"content":"                \u003cImage url\u003d\"@/images/phone_icon.png\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"frederickpek"},"content":"              \u003c/image\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"frederickpek"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"frederickpek"},"content":"            \u003cRegion minWidth\u003d\"5\" HBox.hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"frederickpek"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"frederickpek"},"content":"          \u003cHBox fx:id\u003d\"homeHBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"frederickpek"},"content":"            \u003cImageView","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"frederickpek"},"content":"                    fitHeight\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"frederickpek"},"content":"                    fitWidth\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"frederickpek"},"content":"                    smooth\u003d\"false\"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"frederickpek"},"content":"                    HBox.hgrow\u003d\"NEVER\" \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"frederickpek"},"content":"              \u003cimage\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"frederickpek"},"content":"                \u003cImage url\u003d\"@/images/home_icon.png\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"frederickpek"},"content":"              \u003c/image\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"frederickpek"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"frederickpek"},"content":"            \u003cRegion minWidth\u003d\"5\" HBox.hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"frederickpek"},"content":"            \u003cLabel fx:id\u003d\"homeAddress\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"frederickpek"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"frederickpek"},"content":"          \u003cHBox fx:id\u003d\"emailHBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"frederickpek"},"content":"            \u003cImageView","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"frederickpek"},"content":"                    fitHeight\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"frederickpek"},"content":"                    fitWidth\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"frederickpek"},"content":"                    smooth\u003d\"false\"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"frederickpek"},"content":"                    HBox.hgrow\u003d\"NEVER\" \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"frederickpek"},"content":"              \u003cimage\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"frederickpek"},"content":"                \u003cImage url\u003d\"@/images/email_icon.png\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"frederickpek"},"content":"              \u003c/image\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"frederickpek"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"frederickpek"},"content":"            \u003cRegion minWidth\u003d\"5\" HBox.hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"frederickpek"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"frederickpek"},"content":"          \u003cHBox fx:id\u003d\"workAddressHBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"frederickpek"},"content":"            \u003cImageView","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"frederickpek"},"content":"                    fitHeight\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"frederickpek"},"content":"                    fitWidth\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"frederickpek"},"content":"                    smooth\u003d\"false\"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"frederickpek"},"content":"                    HBox.hgrow\u003d\"NEVER\" \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"frederickpek"},"content":"              \u003cimage\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"frederickpek"},"content":"                \u003cImage url\u003d\"@/images/work_icon.png\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"frederickpek"},"content":"              \u003c/image\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"frederickpek"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"frederickpek"},"content":"            \u003cRegion minWidth\u003d\"5\" HBox.hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"frederickpek"},"content":"            \u003cLabel fx:id\u003d\"workAddress\" styleClass\u003d\"cell_small_label\" text\u003d\"\\@placeholder\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"frederickpek"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"frederickpek"},"content":"          \u003cHBox fx:id\u003d\"quarantineAddressHBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"frederickpek"},"content":"            \u003cImageView","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"frederickpek"},"content":"                    fitHeight\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"frederickpek"},"content":"                    fitWidth\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"frederickpek"},"content":"                    smooth\u003d\"false\"","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"frederickpek"},"content":"                    HBox.hgrow\u003d\"NEVER\" \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"frederickpek"},"content":"              \u003cimage\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"frederickpek"},"content":"                \u003cImage url\u003d\"@/images/shn_address_icon.png\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"frederickpek"},"content":"              \u003c/image\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"frederickpek"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"frederickpek"},"content":"            \u003cRegion minWidth\u003d\"5\" HBox.hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"frederickpek"},"content":"            \u003cLabel fx:id\u003d\"quarantineAddress\" styleClass\u003d\"cell_small_label\" text\u003d\"\\@placeholder\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"frederickpek"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"frederickpek"},"content":"          \u003cHBox fx:id\u003d\"shnPeriodHBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"frederickpek"},"content":"            \u003cImageView","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"frederickpek"},"content":"                    fitHeight\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"frederickpek"},"content":"                    fitWidth\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"frederickpek"},"content":"                    smooth\u003d\"false\"","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"frederickpek"},"content":"                    HBox.hgrow\u003d\"NEVER\" \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"frederickpek"},"content":"              \u003cimage\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"frederickpek"},"content":"                \u003cImage url\u003d\"@/images/shn_period_icon.png\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"frederickpek"},"content":"              \u003c/image\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"frederickpek"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"frederickpek"},"content":"            \u003cRegion minWidth\u003d\"5\" HBox.hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"frederickpek"},"content":"            \u003cLabel fx:id\u003d\"shnPeriod\" styleClass\u003d\"cell_small_label\" text\u003d\"\\@placeholder\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"frederickpek"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"frederickpek"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"frederickpek"},"content":"        \u003cRegion minWidth\u003d\"10\" HBox.hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"frederickpek"},"content":"        \u003cVBox fx:id\u003d\"nextOfKinBlock\" minWidth\u003d\"290\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"frederickpek"},"content":"          \u003cLabel id\u003d\"nokParticulars\" text\u003d\"Next-Of-Kin Particulars\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"frederickpek"},"content":"          \u003cHBox fx:id\u003d\"nextOfKinNameHBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"frederickpek"},"content":"            \u003cImageView","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"frederickpek"},"content":"                    fitHeight\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"frederickpek"},"content":"                    fitWidth\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"frederickpek"},"content":"                    smooth\u003d\"false\"","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"frederickpek"},"content":"                    HBox.hgrow\u003d\"NEVER\" \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"frederickpek"},"content":"              \u003cimage\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"frederickpek"},"content":"                \u003cImage url\u003d\"@/images/track2gather_icon.png\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"frederickpek"},"content":"              \u003c/image\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"frederickpek"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"frederickpek"},"content":"            \u003cRegion minWidth\u003d\"5\" HBox.hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"frederickpek"},"content":"            \u003cLabel fx:id\u003d\"nextOfKinName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\@placeholder\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"frederickpek"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"frederickpek"},"content":"          \u003cHBox fx:id\u003d\"nextOfKinPhoneHBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"frederickpek"},"content":"            \u003cImageView","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"frederickpek"},"content":"                    fitHeight\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"frederickpek"},"content":"                    fitWidth\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"frederickpek"},"content":"                    smooth\u003d\"false\"","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"frederickpek"},"content":"                    HBox.hgrow\u003d\"NEVER\" \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"frederickpek"},"content":"              \u003cimage\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"frederickpek"},"content":"                \u003cImage url\u003d\"@/images/phone_icon.png\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"frederickpek"},"content":"              \u003c/image\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"frederickpek"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"frederickpek"},"content":"            \u003cRegion minWidth\u003d\"5\" HBox.hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"frederickpek"},"content":"            \u003cLabel fx:id\u003d\"nextOfKinPhone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\@placeholder\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"frederickpek"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"frederickpek"},"content":"          \u003cHBox fx:id\u003d\"nextOfKinAddressHBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"frederickpek"},"content":"            \u003cImageView","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"frederickpek"},"content":"                    fitHeight\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"frederickpek"},"content":"                    fitWidth\u003d\"10.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"frederickpek"},"content":"                    smooth\u003d\"false\"","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"frederickpek"},"content":"                    HBox.hgrow\u003d\"NEVER\" \u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"frederickpek"},"content":"              \u003cimage\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"frederickpek"},"content":"                \u003cImage url\u003d\"@/images/home_icon.png\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"frederickpek"},"content":"              \u003c/image\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"frederickpek"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"frederickpek"},"content":"            \u003cRegion minWidth\u003d\"5\" HBox.hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"frederickpek"},"content":"            \u003cLabel fx:id\u003d\"nextOfKinAddress\" styleClass\u003d\"cell_small_label\" text\u003d\"\\@placeholder\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"frederickpek"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"frederickpek"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"frederickpek"},"content":"        \u003cRegion minWidth\u003d\"10\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"frederickpek"},"content":"        \u003cHBox minWidth\u003d\"120\" maxWidth\u003d\"120\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"frederickpek"},"content":"          \u003cVBox fx:id\u003d\"callStatusBlock\" minWidth\u003d\"120\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"frederickpek"},"content":"            \u003cLabel id\u003d\"nokParticulars\" text\u003d\"Call Status\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"frederickpek"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"frederickpek"},"content":"              \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"Called: \" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"frederickpek"},"content":"              \u003cImageView","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"frederickpek"},"content":"                      fx:id\u003d\"callStatusTick\"","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"frederickpek"},"content":"                      fitHeight\u003d\"20.0\"","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"frederickpek"},"content":"                      fitWidth\u003d\"20.0\"","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"frederickpek"},"content":"                      smooth\u003d\"false\"","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"frederickpek"},"content":"                      HBox.hgrow\u003d\"NEVER\" \u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"frederickpek"},"content":"                \u003cimage\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"frederickpek"},"content":"                  \u003cImage url\u003d\"@/images/tick.png\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"frederickpek"},"content":"                \u003c/image\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"frederickpek"},"content":"              \u003c/ImageView\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"frederickpek"},"content":"              \u003cImageView","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"frederickpek"},"content":"                      fx:id\u003d\"callStatusCross\"","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"frederickpek"},"content":"                      fitHeight\u003d\"13.0\"","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"frederickpek"},"content":"                      fitWidth\u003d\"13.0\"","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"frederickpek"},"content":"                      smooth\u003d\"false\"","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"frederickpek"},"content":"                      HBox.hgrow\u003d\"NEVER\" \u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"frederickpek"},"content":"                \u003cimage\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"frederickpek"},"content":"                  \u003cImage url\u003d\"@/images/cross.png\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"frederickpek"},"content":"                \u003c/image\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"frederickpek"},"content":"              \u003c/ImageView\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"frederickpek"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"frederickpek"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"frederickpek"},"content":"              \u003cLabel fx:id\u003d\"numFailedCalls\" styleClass\u003d\"cell_small_label\" text\u003d\"0\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"frederickpek"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"frederickpek"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"frederickpek"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":33,"wei2912":1,"frederickpek":178}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" alignment\u003d\"CENTER_LEFT\" textAlignment\u003d\"LEFT\" GridPane.columnIndex\u003d\"0\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"  \u003cLabel fx:id\u003d\"numPersonsStatus\" alignment\u003d\"CENTER_RIGHT\" textAlignment\u003d\"RIGHT\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"-":11,"wei2912":2}},{"path":"src/test/java/seedu/track2gather/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"wei2912":1,"-":57}},{"path":"src/test/java/seedu/track2gather/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.core;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"wei2912":1,"-":26}},{"path":"src/test/java/seedu/track2gather/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.core;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":2,"-":133}},{"path":"src/test/java/seedu/track2gather/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.core.index;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"wei2912":2,"-":58}},{"path":"src/test/java/seedu/track2gather/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.util;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"        assertNotNull(AppUtil.getImage(\"/images/track2gather_32.png\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"wei2912":3,"-":33}},{"path":"src/test/java/seedu/track2gather/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.util;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"wei2912":3,"-":105}},{"path":"src/test/java/seedu/track2gather/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.util;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.Config;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wei2912":4,"-":112}},{"path":"src/test/java/seedu/track2gather/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.util;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":2,"-":21}},{"path":"src/test/java/seedu/track2gather/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.util;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.SerializableTestClass;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.TestUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":3,"-":42}},{"path":"src/test/java/seedu/track2gather/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.commons.util;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"wei2912":2,"-":141}},{"path":"src/test/java/seedu/track2gather/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.CASE_NUMBER_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.HOME_ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.AddCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.CommandResult;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.ListCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ModelManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.storage.JsonTrack2GatherStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.storage.StorageManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.PersonBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"        JsonTrack2GatherStorage track2GatherStorage \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"                new JsonTrack2GatherStorage(temporaryFolder.resolve(\"track2Gather.json\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"        StorageManager storage \u003d new StorageManager(track2GatherStorage, userPrefsStorage);","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"        // Setup LogicManager with JsonTrack2GatherIoExceptionThrowingStub","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"        JsonTrack2GatherStorage track2GatherStorage \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"                new JsonTrack2GatherIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionTrack2Gather.json\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"        StorageManager storage \u003d new StorageManager(track2GatherStorage, userPrefsStorage);","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"over-fitted"},"content":"                + CASE_NUMBER_DESC_AMY + HOME_ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"wei2912"},"content":"        Model expectedModel \u003d new ModelManager(model.getTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"wei2912"},"content":"    private static class JsonTrack2GatherIoExceptionThrowingStub extends JsonTrack2GatherStorage {","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"wei2912"},"content":"        private JsonTrack2GatherIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"wei2912"},"content":"        public void saveTrack2Gather(ReadOnlyTrack2Gather track2Gather, Path filePath) throws IOException {","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"over-fitted":1,"wei2912":36,"-":126}},{"path":"src/test/java/seedu/track2gather/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.getTypicalTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ModelManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.PersonBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"        model \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"        Model expectedModel \u003d new ModelManager(model.getTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"        Person personInList \u003d model.getTrack2Gather().getPersonList().get(0);","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"wei2912":12,"-":33}},{"path":"src/test/java/seedu/track2gather/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.GuiSettings;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.PersonBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"        public Path getTrack2GatherFilePath() {","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"wei2912"},"content":"        public void setTrack2GatherFilePath(Path track2GatherFilePath) {","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"wei2912"},"content":"        public void setTrack2Gather(ReadOnlyTrack2Gather track2Gather) {","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"wei2912"},"content":"        public ReadOnlyTrack2Gather getTrack2Gather() {","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"over-fitted"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"over-fitted"},"content":"        public void resetAllCallStatuses() {","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"over-fitted"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"wei2912"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"wei2912"},"content":"        public void updateSortedPersonList(Comparator\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"wei2912"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"wei2912"},"content":"        public ReadOnlyTrack2Gather getTrack2Gather() {","lastModifiedDate":"2021-10-31"},{"lineNumber":201,"author":{"gitId":"wei2912"},"content":"            return new Track2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"over-fitted":5,"wei2912":22,"-":178}},{"path":"src/test/java/seedu/track2gather/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.getTypicalTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import java.time.Clock;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import java.time.Instant;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ModelManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"public class ClearCommandTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"    private Clock clock \u003d Clock.fixed(Instant.parse(\"2021-01-01T00:00:00.00Z\"), ZoneId.of(\"UTC\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"    public void execute_emptyTrack2Gather_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"        assertCommandSuccess(new ClearCommand(clock), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"    public void execute_nonEmptyTrack2Gather_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"        Model model \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"        expectedModel.deletePerson(ALICE);","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"        expectedModel.deletePerson(BENSON);","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"        assertCommandSuccess(new ClearCommand(clock), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"wei2912":40}},{"path":"src/test/java/seedu/track2gather/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"wei2912":1,"-":53}},{"path":"src/test/java/seedu/track2gather/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_HOME_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_PHONE;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_QUARANTINE_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_WORK_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"    public static final String VALID_CASE_NUMBER_AMY \u003d \"1\";","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"    public static final String VALID_CASE_NUMBER_BOB \u003d \"2\";","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"    public static final String VALID_HOME_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"    public static final String VALID_HOME_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"    public static final String VALID_WORK_ADDRESS_AMY \u003d \"Block 312, Amy Work Street 1\";","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"    public static final String VALID_WORK_ADDRESS_BOB \u003d \"Block 123, Bob Work Street 3\";","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"    public static final String VALID_QUARANTINE_ADDRESS_AMY \u003d \"Block 312, Amy Quarantine Street 1\";","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"    public static final String VALID_QUARANTINE_ADDRESS_BOB \u003d \"Block 123, Bob Quarantine Street 3\";","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"    public static final String VALID_SHN_PERIOD_AMY \u003d \"2020-01-01 \u003d\u003e 2020-02-02\";","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"    public static final String VALID_SHN_PERIOD_BOB \u003d \"2021-01-01 \u003d\u003e 2021-02-02\";","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"    public static final String VALID_NEXT_OF_KIN_NAME_AMY \u003d \"Daniel Eng\";","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"    public static final String VALID_NEXT_OF_KIN_NAME_BOB \u003d \"Frank Goh\";","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"    public static final String VALID_NEXT_OF_KIN_PHONE_AMY \u003d \"88888888\";","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"    public static final String VALID_NEXT_OF_KIN_PHONE_BOB \u003d \"99999999\";","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"    public static final String VALID_NEXT_OF_KIN_ADDRESS_AMY \u003d \"Block 312, Amy NOK Street 1\";","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"    public static final String VALID_NEXT_OF_KIN_ADDRESS_BOB \u003d \"Block 123, Bob NOK Street 3\";","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"    public static final String VALID_CALL_STATUS_AMY \u003d \"0 false\";","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"    public static final String VALID_CALL_STATUS_BOB \u003d \"0 false\";","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"    //TODO: Amend shnPeriod so that output \u003d input","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"over-fitted"},"content":"    public static final String CASE_NUMBER_DESC_AMY \u003d \" \" + PREFIX_CASE_NUMBER + VALID_CASE_NUMBER_AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"over-fitted"},"content":"    public static final String CASE_NUMBER_DESC_BOB \u003d \" \" + PREFIX_CASE_NUMBER + VALID_CASE_NUMBER_BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"    public static final String HOME_ADDRESS_DESC_AMY \u003d \" \" + PREFIX_HOME_ADDRESS + VALID_HOME_ADDRESS_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"    public static final String HOME_ADDRESS_DESC_BOB \u003d \" \" + PREFIX_HOME_ADDRESS + VALID_HOME_ADDRESS_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"    public static final String WORK_ADDRESS_DESC_AMY \u003d \" \" + PREFIX_WORK_ADDRESS + VALID_WORK_ADDRESS_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"    public static final String WORK_ADDRESS_DESC_BOB \u003d \" \" + PREFIX_WORK_ADDRESS + VALID_WORK_ADDRESS_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"    public static final String QUARANTINE_ADDRESS_DESC_AMY \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"            \" \" + PREFIX_QUARANTINE_ADDRESS + VALID_QUARANTINE_ADDRESS_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"    public static final String QUARANTINE_ADDRESS_DESC_BOB \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"            \" \" + PREFIX_QUARANTINE_ADDRESS + VALID_QUARANTINE_ADDRESS_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"    public static final String SHN_PERIOD_DESC_AMY \u003d \" \" + PREFIX_SHN_PERIOD + \"2020-01-01 2020-02-02\";","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"    public static final String SHN_PERIOD_DESC_BOB \u003d \" \" + PREFIX_SHN_PERIOD + \"2021-01-01 2021-02-02\";","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"luffingluffy"},"content":"    public static final String NEXT_OF_KIN_NAME_DESC_AMY \u003d \" \" + PREFIX_NEXT_OF_KIN_NAME + VALID_NEXT_OF_KIN_NAME_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"luffingluffy"},"content":"    public static final String NEXT_OF_KIN_NAME_DESC_BOB \u003d \" \" + PREFIX_NEXT_OF_KIN_NAME + VALID_NEXT_OF_KIN_NAME_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"    public static final String NEXT_OF_KIN_PHONE_DESC_AMY \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"            \" \" + PREFIX_NEXT_OF_KIN_PHONE + VALID_NEXT_OF_KIN_PHONE_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"    public static final String NEXT_OF_KIN_PHONE_DESC_BOB \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"            \" \" + PREFIX_NEXT_OF_KIN_PHONE + VALID_NEXT_OF_KIN_PHONE_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"    public static final String NEXT_OF_KIN_ADDRESS_DESC_AMY \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"            \" \" + PREFIX_NEXT_OF_KIN_ADDRESS + VALID_NEXT_OF_KIN_ADDRESS_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"luffingluffy"},"content":"    public static final String NEXT_OF_KIN_ADDRESS_DESC_BOB \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"luffingluffy"},"content":"            \" \" + PREFIX_NEXT_OF_KIN_ADDRESS + VALID_NEXT_OF_KIN_ADDRESS_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"over-fitted"},"content":"    public static final String INVALID_CASE_NUMBER_DESC \u003d \" \" + PREFIX_CASE_NUMBER + \"-1\"; // negative not allowed","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"    // empty string not allowed for addresses","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"wei2912"},"content":"    public static final String INVALID_HOME_ADDRESS_DESC \u003d \" \" + PREFIX_HOME_ADDRESS;","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"luffingluffy"},"content":"    public static final String INVALID_WORK_ADDRESS_DESC \u003d \" \" + PREFIX_WORK_ADDRESS;","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"luffingluffy"},"content":"    public static final String INVALID_QUARANTINE_ADDRESS_DESC \u003d \" \" + PREFIX_QUARANTINE_ADDRESS;","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"luffingluffy"},"content":"    // end date earlier than start date not allowed for shn periods","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"luffingluffy"},"content":"    public static final String INVALID_SHN_PERIOD_DESC \u003d \" \" + PREFIX_SHN_PERIOD + \"2020-02-02 2020-01-01\";","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"luffingluffy"},"content":"    // \u0027!\u0027 not allowed","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"luffingluffy"},"content":"    public static final String INVALID_NEXT_OF_KIN_NAME_DESC \u003d \" \" + PREFIX_NEXT_OF_KIN_NAME + \"Frank!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"luffingluffy"},"content":"    // inputs less than 3 digits not allowed for phones","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"luffingluffy"},"content":"    public static final String INVALID_NEXT_OF_KIN_PHONE_DESC \u003d \" \" + PREFIX_NEXT_OF_KIN_PHONE + \"23\";","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"luffingluffy"},"content":"    // first character whitespace not allowed for addresses","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"luffingluffy"},"content":"    public static final String INVALID_NEXT_OF_KIN_ADDRESS_DESC \u003d \" \" + PREFIX_NEXT_OF_KIN_ADDRESS + \" \";","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"wei2912"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withCaseNumber(VALID_CASE_NUMBER_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"wei2912"},"content":"                .withHomeAddress(VALID_HOME_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":118,"author":{"gitId":"wei2912"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withCaseNumber(VALID_CASE_NUMBER_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"wei2912"},"content":"                .withHomeAddress(VALID_HOME_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"wei2912"},"content":"     * - the contacts list, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"wei2912"},"content":"        Track2Gather expectedTrack2Gather \u003d new Track2Gather(actualModel.getTrack2Gather());","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":161,"author":{"gitId":"wei2912"},"content":"        assertEquals(expectedTrack2Gather, actualModel.getTrack2Gather());","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":166,"author":{"gitId":"wei2912"},"content":"     * {@code model}\u0027s contacts list.","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":172,"author":{"gitId":"luffingluffy"},"content":"        final String[] splitName \u003d person.getName().value.split(\"\\\\s+\");","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"luffingluffy":42,"over-fitted":7,"wei2912":34,"-":95}},{"path":"src/test/java/seedu/track2gather/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.getTypicalTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.Messages;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ModelManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"    private Model model \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"        ArrayList\u003cIndex\u003e indicesFirstPerson \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"lrnshk"},"content":"        indicesFirstPerson.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"lrnshk"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indicesFirstPerson);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"        String expectedMessage \u003d DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS + personToDelete;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"lrnshk"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"    public void execute_validIndicesUnfilteredListInAscendingOrder_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"lrnshk"},"content":"        Person firstPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"lrnshk"},"content":"        Person secondPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"lrnshk"},"content":"        ArrayList\u003cIndex\u003e indicesMultiplePersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"lrnshk"},"content":"        indicesMultiplePersons.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"lrnshk"},"content":"        indicesMultiplePersons.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"lrnshk"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indicesMultiplePersons);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"lrnshk"},"content":"        String expectedMessage \u003d DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS + firstPersonToDelete + \"\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"lrnshk"},"content":"                + secondPersonToDelete;","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"lrnshk"},"content":"        expectedModel.deletePerson(firstPersonToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"lrnshk"},"content":"        expectedModel.deletePerson(secondPersonToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"lrnshk"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"lrnshk"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"lrnshk"},"content":"    public void execute_validIndicesUnfilteredListInDescendingOrder_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"lrnshk"},"content":"        Person firstPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"lrnshk"},"content":"        Person secondPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"lrnshk"},"content":"        ArrayList\u003cIndex\u003e indicesMultiplePersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"lrnshk"},"content":"        indicesMultiplePersons.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"lrnshk"},"content":"        indicesMultiplePersons.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"lrnshk"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indicesMultiplePersons);","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"lrnshk"},"content":"        String expectedMessage \u003d DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS + firstPersonToDelete + \"\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"lrnshk"},"content":"                + secondPersonToDelete;","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"lrnshk"},"content":"        expectedModel.deletePerson(firstPersonToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"lrnshk"},"content":"        expectedModel.deletePerson(secondPersonToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"lrnshk"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"lrnshk"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"lrnshk"},"content":"    public void execute_validIndicesUnfilteredListInMixedOrder_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"lrnshk"},"content":"        Person firstPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"lrnshk"},"content":"        Person secondPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"lrnshk"},"content":"        Person thirdPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"lrnshk"},"content":"        ArrayList\u003cIndex\u003e indicesMultiplePersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"lrnshk"},"content":"        indicesMultiplePersons.add(INDEX_THIRD_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"lrnshk"},"content":"        indicesMultiplePersons.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"lrnshk"},"content":"        indicesMultiplePersons.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"lrnshk"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indicesMultiplePersons);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"lrnshk"},"content":"        String expectedMessage \u003d DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS + firstPersonToDelete + \"\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"lrnshk"},"content":"                + secondPersonToDelete + \"\\n\" + thirdPersonToDelete;","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"lrnshk"},"content":"        expectedModel.deletePerson(firstPersonToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"lrnshk"},"content":"        expectedModel.deletePerson(secondPersonToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"lrnshk"},"content":"        expectedModel.deletePerson(thirdPersonToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"lrnshk"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"lrnshk"},"content":"        ArrayList\u003cIndex\u003e indicesOutOfBound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"lrnshk"},"content":"        indicesOutOfBound.add(outOfBoundIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"lrnshk"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indicesOutOfBound);","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"lrnshk"},"content":"        ArrayList\u003cIndex\u003e indicesFirstPerson \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"lrnshk"},"content":"        indicesFirstPerson.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"lrnshk"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indicesFirstPerson);","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"lrnshk"},"content":"        String expectedMessage \u003d DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS + personToDelete;","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"wei2912"},"content":"        Model expectedModel \u003d new ModelManager(model.getTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"wei2912"},"content":"        // ensures that outOfBoundIndex is still in bounds of persons list","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"wei2912"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTrack2Gather().getPersonList().size());","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"lrnshk"},"content":"        ArrayList\u003cIndex\u003e indicesOutOfBound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"lrnshk"},"content":"        indicesOutOfBound.add(outOfBoundIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"lrnshk"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indicesOutOfBound);","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"lrnshk"},"content":"        ArrayList\u003cIndex\u003e indicesFirstPerson \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"lrnshk"},"content":"        indicesFirstPerson.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"lrnshk"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(indicesFirstPerson);","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"lrnshk"},"content":"        ArrayList\u003cIndex\u003e indicesSecondPerson \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"lrnshk"},"content":"        indicesSecondPerson.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"lrnshk"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(indicesSecondPerson);","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":163,"author":{"gitId":"lrnshk"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(indicesFirstPerson);","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"lrnshk":81,"wei2912":22,"-":81}},{"path":"src/test/java/seedu/track2gather/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_CASE_NUMBER_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.getTypicalTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.Messages;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ModelManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.PersonBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"    private Model model \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"        Person editedPerson \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"                new PersonBuilder().withWorkAddress(\"10 Lor Lada Hitam\")","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"                        .withQuarantineAddress(\"160 Ang Mo Kio Ave 4#01-105\").withShnPeriod(\"2020-01-01 \u003d\u003e 2020-02-02\")","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"                        .withNextOfKinName(\"Henry Lau\").withNextOfKinPhone(\"95125234\")","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"                        .withNextOfKinAddress(\"50 Bt Batok St 23 #06-21\").build();","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"        Model expectedModel \u003d new ModelManager(new Track2Gather(model.getTrack2Gather()), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"                .withCaseNumber(VALID_CASE_NUMBER_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"                .withCaseNumber(VALID_CASE_NUMBER_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"        Model expectedModel \u003d new ModelManager(new Track2Gather(model.getTrack2Gather()), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"        Model expectedModel \u003d new ModelManager(new Track2Gather(model.getTrack2Gather()), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"        Model expectedModel \u003d new ModelManager(new Track2Gather(model.getTrack2Gather()), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"wei2912"},"content":"        // edit person in filtered list into a duplicate in persons list","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"wei2912"},"content":"        Person personInList \u003d model.getTrack2Gather().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"wei2912"},"content":"     * but smaller than size of persons list","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"wei2912"},"content":"        // ensures that outOfBoundIndex is still in bounds of persons list","lastModifiedDate":"2021-10-31"},{"lineNumber":144,"author":{"gitId":"wei2912"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTrack2Gather().getPersonList().size());","lastModifiedDate":"2021-10-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"luffingluffy":5,"wei2912":34,"-":137}},{"path":"src/test/java/seedu/track2gather/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_HOME_ADDRESS_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withHomeAddress(VALID_HOME_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"wei2912":10,"-":43}},{"path":"src/test/java/seedu/track2gather/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ModelManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"wei2912":5,"-":15}},{"path":"src/test/java/seedu/track2gather/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_PERSONS_FOUND_OVERVIEW;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.getTypicalTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ModelManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    private Model model \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"lrnshk"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 0);","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"jennibearduit"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"lrnshk"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_FOUND_OVERVIEW, 3);","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"jennibearduit"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"jennibearduit"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"lrnshk":3,"wei2912":12,"-":65,"jennibearduit":3}},{"path":"src/test/java/seedu/track2gather/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ModelManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"wei2912":5,"-":15}},{"path":"src/test/java/seedu/track2gather/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.getTypicalTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ModelManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"        model \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"        expectedModel \u003d new ModelManager(model.getTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wei2912":10,"-":29}},{"path":"src/test/java/seedu/track2gather/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.SortCommand.COMPARATOR_PERSON_CASE_NUMBER;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.SortCommand.COMPARATOR_PERSON_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.SortCommand.COMPARATOR_PERSON_SHN_PERIOD_END;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.SortCommand.COMPARATOR_PERSON_SHN_PERIOD_START;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"import static seedu.track2gather.logic.commands.SortCommand.SORTING_DIRECTION_STRINGS;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"import static seedu.track2gather.logic.commands.SortCommand.SORTING_FIELD_STRINGS;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD_END;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD_START;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.getTypicalTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.SortCommand.Direction;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.Prefix;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ModelManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code SortCommand}.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"public class SortCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"    private Model model \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"    public void execute_emptyTrack2Gather_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"        List\u003cPrefix\u003e prefixes \u003d List.of(PREFIX_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"        List\u003cDirection\u003e directions \u003d List.of(Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"        SortCommand sortCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"lrnshk"},"content":"                SORTING_FIELD_STRINGS.get(PREFIX_NAME) + SORTING_DIRECTION_STRINGS.get(Direction.ASCENDING));","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"    public void execute_singlePrefix_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"        // name, ascending","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"        List\u003cPrefix\u003e prefixes \u003d List.of(PREFIX_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"        List\u003cDirection\u003e directions \u003d List.of(Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"        Comparator\u003cPerson\u003e comparator \u003d COMPARATOR_PERSON_NAME;","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"        SortCommand sortCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"lrnshk"},"content":"                SORTING_FIELD_STRINGS.get(PREFIX_NAME) + SORTING_DIRECTION_STRINGS.get(Direction.ASCENDING));","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"        // case number, ascending","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_CASE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"        comparator \u003d COMPARATOR_PERSON_CASE_NUMBER;","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"        sortCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"        expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"lrnshk"},"content":"                SORTING_FIELD_STRINGS.get(PREFIX_CASE_NUMBER) + SORTING_DIRECTION_STRINGS.get(Direction.ASCENDING));","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"        expectedModel \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"        // shn period start date, ascending","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_SHN_PERIOD_START);","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.ASCENDING);","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"        comparator \u003d COMPARATOR_PERSON_SHN_PERIOD_START;","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"        sortCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"lrnshk"},"content":"        expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS, SORTING_FIELD_STRINGS.get(PREFIX_SHN_PERIOD_START)","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"lrnshk"},"content":"                + SORTING_DIRECTION_STRINGS.get(Direction.ASCENDING));","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"        expectedModel \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"wei2912"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"wei2912"},"content":"        // shn period end date, ascending","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_SHN_PERIOD_END);","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.ASCENDING);","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"wei2912"},"content":"        comparator \u003d COMPARATOR_PERSON_SHN_PERIOD_END;","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"        sortCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"        expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"lrnshk"},"content":"                SORTING_FIELD_STRINGS.get(PREFIX_SHN_PERIOD_END) + SORTING_DIRECTION_STRINGS.get(Direction.ASCENDING));","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"wei2912"},"content":"        expectedModel \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"wei2912"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"wei2912"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"wei2912"},"content":"        // name, descending","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.DESCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"wei2912"},"content":"        comparator \u003d COMPARATOR_PERSON_NAME.reversed();","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"wei2912"},"content":"        sortCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"lrnshk"},"content":"        expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS, SORTING_FIELD_STRINGS.get(PREFIX_NAME)","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"lrnshk"},"content":"                + SORTING_DIRECTION_STRINGS.get(Direction.DESCENDING));","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"wei2912"},"content":"        expectedModel \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"wei2912"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"wei2912"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"wei2912"},"content":"        // case number, descending","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_CASE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.DESCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"wei2912"},"content":"        comparator \u003d COMPARATOR_PERSON_CASE_NUMBER.reversed();","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"wei2912"},"content":"        sortCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"wei2912"},"content":"        expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"lrnshk"},"content":"                SORTING_FIELD_STRINGS.get(PREFIX_CASE_NUMBER) + SORTING_DIRECTION_STRINGS.get(Direction.DESCENDING));","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"wei2912"},"content":"        expectedModel \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"wei2912"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"wei2912"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"wei2912"},"content":"        // shn period start date, descending","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_SHN_PERIOD_START);","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.DESCENDING);","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"wei2912"},"content":"        comparator \u003d COMPARATOR_PERSON_SHN_PERIOD_START.reversed();","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"wei2912"},"content":"        sortCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"lrnshk"},"content":"        expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS, SORTING_FIELD_STRINGS.get(PREFIX_SHN_PERIOD_START)","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"lrnshk"},"content":"                        + SORTING_DIRECTION_STRINGS.get(Direction.DESCENDING));","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"wei2912"},"content":"        expectedModel \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"wei2912"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"wei2912"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"wei2912"},"content":"        // shn period end date, descending","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_SHN_PERIOD_END);","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.DESCENDING);","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"wei2912"},"content":"        comparator \u003d COMPARATOR_PERSON_SHN_PERIOD_END.reversed();","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"wei2912"},"content":"        sortCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"wei2912"},"content":"        expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"lrnshk"},"content":"                SORTING_FIELD_STRINGS.get(PREFIX_SHN_PERIOD_END) + SORTING_DIRECTION_STRINGS.get(Direction.DESCENDING));","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"wei2912"},"content":"        expectedModel \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"wei2912"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"wei2912"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"wei2912"},"content":"    public void execute_multiplePrefix_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"wei2912"},"content":"        // name ascending then case number ascending","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"wei2912"},"content":"        List\u003cPrefix\u003e prefixes \u003d List.of(PREFIX_NAME, PREFIX_CASE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"wei2912"},"content":"        List\u003cDirection\u003e directions \u003d List.of(Direction.ASCENDING, Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"wei2912"},"content":"        Comparator\u003cPerson\u003e comparator \u003d COMPARATOR_PERSON_CASE_NUMBER.thenComparing(COMPARATOR_PERSON_NAME);","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"wei2912"},"content":"        SortCommand sortCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"wei2912"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"lrnshk"},"content":"                SORTING_FIELD_STRINGS.get(PREFIX_NAME) + SORTING_DIRECTION_STRINGS.get(Direction.ASCENDING)","lastModifiedDate":"2021-11-02"},{"lineNumber":169,"author":{"gitId":"lrnshk"},"content":"                        + \", then by \"","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"lrnshk"},"content":"                        + SORTING_FIELD_STRINGS.get(PREFIX_CASE_NUMBER)","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"lrnshk"},"content":"                        + SORTING_DIRECTION_STRINGS.get(Direction.ASCENDING));","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"wei2912"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":173,"author":{"gitId":"wei2912"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"wei2912"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"wei2912"},"content":"        // case number ascending then name descending","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_CASE_NUMBER, PREFIX_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.ASCENDING, Direction.DESCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"wei2912"},"content":"        comparator \u003d COMPARATOR_PERSON_NAME.reversed().thenComparing(COMPARATOR_PERSON_CASE_NUMBER);","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"wei2912"},"content":"        sortCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"wei2912"},"content":"        expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"lrnshk"},"content":"                SORTING_FIELD_STRINGS.get(PREFIX_CASE_NUMBER) + SORTING_DIRECTION_STRINGS.get(Direction.ASCENDING)","lastModifiedDate":"2021-11-02"},{"lineNumber":185,"author":{"gitId":"lrnshk"},"content":"                        + \", then by \"","lastModifiedDate":"2021-11-02"},{"lineNumber":186,"author":{"gitId":"lrnshk"},"content":"                        + SORTING_FIELD_STRINGS.get(PREFIX_NAME)","lastModifiedDate":"2021-11-02"},{"lineNumber":187,"author":{"gitId":"lrnshk"},"content":"                        + SORTING_DIRECTION_STRINGS.get(Direction.DESCENDING));","lastModifiedDate":"2021-11-02"},{"lineNumber":188,"author":{"gitId":"wei2912"},"content":"        expectedModel \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"wei2912"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"wei2912"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"wei2912"},"content":"        // case number descending then name descending","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_CASE_NUMBER, PREFIX_NAME);","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.DESCENDING, Direction.DESCENDING);","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"wei2912"},"content":"        comparator \u003d COMPARATOR_PERSON_NAME.reversed().thenComparing(COMPARATOR_PERSON_CASE_NUMBER.reversed());","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"wei2912"},"content":"        sortCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"wei2912"},"content":"        expectedMessage \u003d String.format(SortCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"lrnshk"},"content":"                SORTING_FIELD_STRINGS.get(PREFIX_CASE_NUMBER) + SORTING_DIRECTION_STRINGS.get(Direction.DESCENDING)","lastModifiedDate":"2021-11-02"},{"lineNumber":201,"author":{"gitId":"lrnshk"},"content":"                        + \", then by \"","lastModifiedDate":"2021-11-02"},{"lineNumber":202,"author":{"gitId":"lrnshk"},"content":"                        + SORTING_FIELD_STRINGS.get(PREFIX_NAME)","lastModifiedDate":"2021-11-02"},{"lineNumber":203,"author":{"gitId":"lrnshk"},"content":"                        + SORTING_DIRECTION_STRINGS.get(Direction.DESCENDING));","lastModifiedDate":"2021-11-02"},{"lineNumber":204,"author":{"gitId":"wei2912"},"content":"        expectedModel \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":205,"author":{"gitId":"wei2912"},"content":"        expectedModel.updateSortedPersonList(comparator);","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"wei2912"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"wei2912"},"content":"    public void equals() {","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"wei2912"},"content":"        List\u003cPrefix\u003e firstPrefixes \u003d List.of(PREFIX_NAME, PREFIX_CASE_NUMBER);","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"wei2912"},"content":"        List\u003cPrefix\u003e secondPrefixes \u003d List.of(PREFIX_CASE_NUMBER, PREFIX_NAME);","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"wei2912"},"content":"        List\u003cDirection\u003e firstDirections \u003d List.of(Direction.ASCENDING, Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"wei2912"},"content":"        List\u003cDirection\u003e secondDirections \u003d List.of(Direction.ASCENDING, Direction.DESCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"wei2912"},"content":"        SortCommand sortFirstCommand \u003d new SortCommand(firstPrefixes, firstDirections);","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"wei2912"},"content":"        SortCommand sortSecondCommand \u003d new SortCommand(secondPrefixes, firstDirections);","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"wei2912"},"content":"        SortCommand sortThirdCommand \u003d new SortCommand(firstPrefixes, secondDirections);","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"wei2912"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"wei2912"},"content":"        assertTrue(sortFirstCommand.equals(sortFirstCommand));","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"wei2912"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"wei2912"},"content":"        SortCommand sortFirstCommandCopy \u003d new SortCommand(firstPrefixes, firstDirections);","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"wei2912"},"content":"        assertTrue(sortFirstCommand.equals(sortFirstCommandCopy));","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"wei2912"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"wei2912"},"content":"        assertFalse(sortFirstCommand.equals(1));","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"wei2912"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"wei2912"},"content":"        assertFalse(sortFirstCommand.equals(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"wei2912"},"content":"        // different prefixes -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"wei2912"},"content":"        assertFalse(sortFirstCommand.equals(sortSecondCommand));","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"wei2912"},"content":"        // different directions -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"wei2912"},"content":"        assertFalse(sortFirstCommand.equals(sortThirdCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"lrnshk":26,"wei2912":215}},{"path":"src/test/java/seedu/track2gather/logic/commands/TShiftCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"frederickpek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"frederickpek"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"frederickpek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.getTypicalTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"frederickpek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"frederickpek"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"frederickpek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ModelManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Period;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.ShnPeriod;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"frederickpek"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"frederickpek"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"frederickpek"},"content":" * {@code TShiftCommand}.","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"frederickpek"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"frederickpek"},"content":"public class TShiftCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    private Model model \u003d new ModelManager(getTypicalTrack2Gather(), new UserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"frederickpek"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"frederickpek"},"content":"    public void execute_validDaysShiftPositive() throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"frederickpek"},"content":"        int days \u003d TShiftCommand.MAX_ABS_DAYS_VALUE;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"frederickpek"},"content":"        TShiftCommand tShiftCommand \u003d new TShiftCommand(days);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"frederickpek"},"content":"        CommandResult commandResult \u003d tShiftCommand.execute(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"        String expectedMessage \u003d String.format(TShiftCommand.MESSAGE_SUCCESS, days);","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"frederickpek"},"content":"        assertEquals(commandResult.getFeedbackToUser(), expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"frederickpek"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"frederickpek"},"content":"    public void execute_validDaysShiftNegative() throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"frederickpek"},"content":"        int days \u003d -TShiftCommand.MAX_ABS_DAYS_VALUE;","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"frederickpek"},"content":"        TShiftCommand tShiftCommand \u003d new TShiftCommand(days);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"frederickpek"},"content":"        CommandResult commandResult \u003d tShiftCommand.execute(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"lrnshk"},"content":"        String expectedMessage \u003d String.format(TShiftCommand.MESSAGE_SUCCESS, days);","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"frederickpek"},"content":"        assertEquals(commandResult.getFeedbackToUser(), expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"frederickpek"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"frederickpek"},"content":"    public void execute_zeroDaysShift_throwsCommandException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"frederickpek"},"content":"        TShiftCommand tShiftCommand \u003d new TShiftCommand(0);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"frederickpek"},"content":"        assertCommandFailure(tShiftCommand, model, TShiftCommand.MESSAGE_TSHIFT_BY_ZERO);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"frederickpek"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"frederickpek"},"content":"    public void execute_shiftBeyondLimit_throwsCommandException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"frederickpek"},"content":"        String expectedMessage \u003d String.format(TShiftCommand.MESSAGE_BEYOND_LIMIT, TShiftCommand.MAX_ABS_DAYS_VALUE);","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"frederickpek"},"content":"        TShiftCommand tShiftCommandPlus \u003d new TShiftCommand(TShiftCommand.MAX_ABS_DAYS_VALUE + 1);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"frederickpek"},"content":"        assertCommandFailure(tShiftCommandPlus, model, expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"frederickpek"},"content":"        tShiftCommandPlus \u003d new TShiftCommand(TShiftCommand.MAX_ABS_DAYS_VALUE + 100);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"frederickpek"},"content":"        assertCommandFailure(tShiftCommandPlus, model, expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"frederickpek"},"content":"        TShiftCommand tShiftCommandMinus \u003d new TShiftCommand(-TShiftCommand.MAX_ABS_DAYS_VALUE - 1);","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"frederickpek"},"content":"        assertCommandFailure(tShiftCommandMinus, model, expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"frederickpek"},"content":"        tShiftCommandMinus \u003d new TShiftCommand(-TShiftCommand.MAX_ABS_DAYS_VALUE - 100);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"frederickpek"},"content":"        assertCommandFailure(tShiftCommandMinus, model, expectedMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"frederickpek"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"frederickpek"},"content":"    public void shiftingDates_validDays() {","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"frederickpek"},"content":"        int days \u003d TShiftCommand.MAX_ABS_DAYS_VALUE;","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"frederickpek"},"content":"        TShiftCommand tShiftCommand \u003d new TShiftCommand(days);","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"        ShnPeriod shnPeriod \u003d new ShnPeriod(new Period(\"2020-01-01 \u003d\u003e 2020-01-02\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"frederickpek"},"content":"        ShnPeriod shiftedShnPeriod \u003d tShiftCommand.shiftShnPeriodEndDate(shnPeriod);","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"        assertTrue(shnPeriod.value.isPresent());","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"luffingluffy"},"content":"        assertTrue(shiftedShnPeriod.value.isPresent());","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"luffingluffy"},"content":"        LocalDate endDate \u003d shnPeriod.value.get().getEndDate();","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"        LocalDate shiftedEndDate \u003d shiftedShnPeriod.value.get().getEndDate();","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"        assertEquals(days, endDate.until(shiftedEndDate, ChronoUnit.DAYS));","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"frederickpek"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"frederickpek"},"content":"    public void shiftingDates_validDays_validNegativeShift() {","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"frederickpek"},"content":"        int days \u003d -TShiftCommand.MAX_ABS_DAYS_VALUE;","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"frederickpek"},"content":"        int daysApart \u003d 10;","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"frederickpek"},"content":"        assertTrue(Math.abs(days) \u003e daysApart);","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"frederickpek"},"content":"        LocalDate startDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"frederickpek"},"content":"        LocalDate endDate \u003d startDate.plusDays(daysApart);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"frederickpek"},"content":"        TShiftCommand tShiftCommand \u003d new TShiftCommand(days);","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"luffingluffy"},"content":"        ShnPeriod shnPeriod \u003d new ShnPeriod(new Period(startDate, endDate));","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"frederickpek"},"content":"        ShnPeriod shiftedShnPeriod \u003d tShiftCommand.shiftShnPeriodEndDate(shnPeriod);","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"luffingluffy"},"content":"        assertTrue(shiftedShnPeriod.value.isPresent());","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"luffingluffy"},"content":"        LocalDate shiftedEndDate \u003d shiftedShnPeriod.value.get().getEndDate();","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"luffingluffy"},"content":"        assertEquals(startDate.plusDays(1), shiftedEndDate);","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"frederickpek"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"frederickpek"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"frederickpek"},"content":"        TShiftCommand tShiftCommand1 \u003d new TShiftCommand(-1);","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"frederickpek"},"content":"        TShiftCommand tShiftCommand2 \u003d new TShiftCommand(0);","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"frederickpek"},"content":"        TShiftCommand tShiftCommand3 \u003d new TShiftCommand(1);","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"frederickpek"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"frederickpek"},"content":"        assertTrue(tShiftCommand1.equals(tShiftCommand1));","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"frederickpek"},"content":"        assertTrue(tShiftCommand2.equals(tShiftCommand2));","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"frederickpek"},"content":"        assertTrue(tShiftCommand3.equals(tShiftCommand3));","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"frederickpek"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"frederickpek"},"content":"        assertFalse(tShiftCommand1.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"frederickpek"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"frederickpek"},"content":"        assertFalse(tShiftCommand1.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"frederickpek"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"frederickpek"},"content":"        assertFalse(tShiftCommand1.equals(tShiftCommand2));","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"frederickpek"},"content":"        assertFalse(tShiftCommand2.equals(tShiftCommand3));","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"frederickpek"},"content":"        assertFalse(tShiftCommand3.equals(tShiftCommand1));","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"frederickpek"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"luffingluffy":12,"lrnshk":2,"wei2912":8,"frederickpek":101}},{"path":"src/test/java/seedu/track2gather/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.CASE_NUMBER_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.CASE_NUMBER_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.HOME_ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.HOME_ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_CASE_NUMBER_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_HOME_ADDRESS_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_NEXT_OF_KIN_ADDRESS_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_NEXT_OF_KIN_NAME_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_NEXT_OF_KIN_PHONE_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_QUARANTINE_ADDRESS_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_SHN_PERIOD_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_WORK_ADDRESS_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.NEXT_OF_KIN_ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.NEXT_OF_KIN_ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.NEXT_OF_KIN_NAME_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.NEXT_OF_KIN_NAME_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.NEXT_OF_KIN_PHONE_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.NEXT_OF_KIN_PHONE_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.QUARANTINE_ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.QUARANTINE_ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.SHN_PERIOD_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.SHN_PERIOD_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_CASE_NUMBER_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_HOME_ADDRESS_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.WORK_ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.WORK_ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.AddCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Address;","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CaseNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Name;","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Period;","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.PersonBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"luffingluffy"},"content":"                + CASE_NUMBER_DESC_BOB + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"                + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"                + CASE_NUMBER_DESC_BOB + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"                + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"                + CASE_NUMBER_DESC_BOB + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"                + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"luffingluffy"},"content":"                + CASE_NUMBER_DESC_BOB + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"luffingluffy"},"content":"                + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"wei2912"},"content":"        // multiple case numbers - last case number accepted","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"luffingluffy"},"content":"                + CASE_NUMBER_DESC_AMY + CASE_NUMBER_DESC_BOB + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"luffingluffy"},"content":"                + QUARANTINE_ADDRESS_DESC_BOB + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_PHONE_DESC_BOB + NEXT_OF_KIN_ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"luffingluffy"},"content":"        // multiple home addresses - last home address accepted","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_AMY + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"luffingluffy"},"content":"                + QUARANTINE_ADDRESS_DESC_BOB + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_PHONE_DESC_BOB + NEXT_OF_KIN_ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"luffingluffy"},"content":"        // multiple work addresses - last work address accepted","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"luffingluffy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_AMY + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_AMY + WORK_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"luffingluffy"},"content":"                + QUARANTINE_ADDRESS_DESC_BOB + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_PHONE_DESC_BOB + NEXT_OF_KIN_ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"luffingluffy"},"content":"        // multiple quarantine addresses - last quarantine address accepted","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"luffingluffy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_AMY + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"luffingluffy"},"content":"                + QUARANTINE_ADDRESS_DESC_BOB + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_PHONE_DESC_BOB + NEXT_OF_KIN_ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"luffingluffy"},"content":"        // multiple shn periods - last shn period accepted","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"luffingluffy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_AMY + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"luffingluffy"},"content":"                + SHN_PERIOD_DESC_AMY + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_PHONE_DESC_BOB + NEXT_OF_KIN_ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"luffingluffy"},"content":"        // multiple next-of-kin names - last next-of-kin name accepted","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"luffingluffy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_AMY + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"luffingluffy"},"content":"                + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_AMY + NEXT_OF_KIN_NAME_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_PHONE_DESC_BOB + NEXT_OF_KIN_ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"luffingluffy"},"content":"        // multiple next-of-kin phones - last next-of-kin phone accepted","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"luffingluffy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_AMY + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"luffingluffy"},"content":"                + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_AMY","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_PHONE_DESC_BOB + NEXT_OF_KIN_ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"luffingluffy"},"content":"        // multiple next-of-kin addresses - last next-of-kin address accepted","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"luffingluffy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_AMY + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"luffingluffy"},"content":"                + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_AMY + NEXT_OF_KIN_ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"wei2912"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"luffingluffy"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + CASE_NUMBER_DESC_AMY","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"luffingluffy"},"content":"                + VALID_HOME_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"over-fitted"},"content":"        // missing case number prefix","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_CASE_NUMBER_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_CASE_NUMBER_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"luffingluffy"},"content":"                + VALID_HOME_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB + SHN_PERIOD_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":182,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":183,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB + SHN_PERIOD_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":189,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB + SHN_PERIOD_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":194,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":196,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"over-fitted"},"content":"        // invalid case number","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_CASE_NUMBER_DESC","lastModifiedDate":"2021-10-11"},{"lineNumber":199,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB + SHN_PERIOD_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":200,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":201,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_BOB, CaseNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":202,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":203,"author":{"gitId":"luffingluffy"},"content":"        // invalid home address","lastModifiedDate":"2021-10-17"},{"lineNumber":204,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":205,"author":{"gitId":"luffingluffy"},"content":"                + INVALID_HOME_ADDRESS_DESC + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB + SHN_PERIOD_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":206,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":207,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_BOB, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":208,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":209,"author":{"gitId":"luffingluffy"},"content":"        // invalid work address","lastModifiedDate":"2021-10-17"},{"lineNumber":210,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":211,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_BOB + INVALID_WORK_ADDRESS_DESC + QUARANTINE_ADDRESS_DESC_BOB + SHN_PERIOD_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":212,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":213,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_BOB, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":214,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":215,"author":{"gitId":"luffingluffy"},"content":"        // invalid quarantine address","lastModifiedDate":"2021-10-17"},{"lineNumber":216,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":217,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + INVALID_QUARANTINE_ADDRESS_DESC","lastModifiedDate":"2021-10-17"},{"lineNumber":218,"author":{"gitId":"luffingluffy"},"content":"                + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":219,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_BOB, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":220,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":221,"author":{"gitId":"luffingluffy"},"content":"        // invalid shn period","lastModifiedDate":"2021-10-17"},{"lineNumber":222,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":223,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":224,"author":{"gitId":"luffingluffy"},"content":"                + INVALID_SHN_PERIOD_DESC + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_BOB, Period.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":226,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":227,"author":{"gitId":"luffingluffy"},"content":"        // invalid next-of-kin name","lastModifiedDate":"2021-10-17"},{"lineNumber":228,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":229,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":230,"author":{"gitId":"luffingluffy"},"content":"                + SHN_PERIOD_DESC_BOB + INVALID_NEXT_OF_KIN_NAME_DESC + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":232,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":233,"author":{"gitId":"luffingluffy"},"content":"        // invalid next-of-kin phone","lastModifiedDate":"2021-10-17"},{"lineNumber":234,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":235,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":236,"author":{"gitId":"luffingluffy"},"content":"                + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB + INVALID_NEXT_OF_KIN_PHONE_DESC","lastModifiedDate":"2021-10-23"},{"lineNumber":237,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":238,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":239,"author":{"gitId":"luffingluffy"},"content":"        // invalid next-of-kin address","lastModifiedDate":"2021-10-17"},{"lineNumber":240,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":241,"author":{"gitId":"luffingluffy"},"content":"                + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":242,"author":{"gitId":"luffingluffy"},"content":"                + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":243,"author":{"gitId":"luffingluffy"},"content":"                + INVALID_NEXT_OF_KIN_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":246,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":247,"author":{"gitId":"luffingluffy"},"content":"                + INVALID_HOME_ADDRESS_DESC + WORK_ADDRESS_DESC_BOB + QUARANTINE_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":248,"author":{"gitId":"luffingluffy"},"content":"                + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":249,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":253,"author":{"gitId":"luffingluffy"},"content":"                        + CASE_NUMBER_DESC_BOB + HOME_ADDRESS_DESC_BOB + WORK_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":254,"author":{"gitId":"luffingluffy"},"content":"                        + QUARANTINE_ADDRESS_DESC_BOB + SHN_PERIOD_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":255,"author":{"gitId":"luffingluffy"},"content":"                        + NEXT_OF_KIN_PHONE_DESC_BOB + NEXT_OF_KIN_ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-17"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"luffingluffy":135,"over-fitted":4,"wei2912":60,"-":59}},{"path":"src/test/java/seedu/track2gather/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"wei2912":1,"-":149}},{"path":"src/test/java/seedu/track2gather/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.Command;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"wei2912":3,"-":35}},{"path":"src/test/java/seedu/track2gather/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"lrnshk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"        ArrayList\u003cIndex\u003e indicesFirstPerson \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"        indicesFirstPerson.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(indicesFirstPerson));","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"lrnshk":4,"wei2912":7,"-":26}},{"path":"src/test/java/seedu/track2gather/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.CASE_NUMBER_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.CASE_NUMBER_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.HOME_ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.HOME_ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_CASE_NUMBER_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_HOME_ADDRESS_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_NEXT_OF_KIN_ADDRESS_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_NEXT_OF_KIN_NAME_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_NEXT_OF_KIN_PHONE_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_QUARANTINE_ADDRESS_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_SHN_PERIOD_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.INVALID_WORK_ADDRESS_DESC;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.NEXT_OF_KIN_ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.NEXT_OF_KIN_NAME_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.NEXT_OF_KIN_PHONE_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.QUARANTINE_ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.SHN_PERIOD_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_CASE_NUMBER_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_CASE_NUMBER_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_HOME_ADDRESS_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_HOME_ADDRESS_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_ADDRESS_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_NAME_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_PHONE_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_QUARANTINE_ADDRESS_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_SHN_PERIOD_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_WORK_ADDRESS_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.WORK_ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.EditCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Address;","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CaseNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Name;","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Period;","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"        // invalid case number","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, \"1\" + INVALID_CASE_NUMBER_DESC, CaseNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"luffingluffy"},"content":"        // invalid homeAddress","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, \"1\" + INVALID_HOME_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"luffingluffy"},"content":"        // invalid workAddress","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_WORK_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"luffingluffy"},"content":"        // invalid quarantineAddress","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_QUARANTINE_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"luffingluffy"},"content":"        // invalid shnPeriod","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_SHN_PERIOD_DESC, Period.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"luffingluffy"},"content":"        // invalid nextOfKinName","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NEXT_OF_KIN_NAME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"luffingluffy"},"content":"        // invalid nextOfKinPhone","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NEXT_OF_KIN_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"luffingluffy"},"content":"        // invalid nextOfKinAddress","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NEXT_OF_KIN_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_HOME_ADDRESS_AMY","lastModifiedDate":"2021-10-03"},{"lineNumber":129,"author":{"gitId":"wei2912"},"content":"                + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"wei2912"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"luffingluffy"},"content":"                + CASE_NUMBER_DESC_AMY + HOME_ADDRESS_DESC_AMY + WORK_ADDRESS_DESC_AMY + QUARANTINE_ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"luffingluffy"},"content":"                + SHN_PERIOD_DESC_AMY + NEXT_OF_KIN_NAME_DESC_AMY + NEXT_OF_KIN_PHONE_DESC_AMY","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"luffingluffy"},"content":"                + NEXT_OF_KIN_ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"wei2912"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withCaseNumber(VALID_CASE_NUMBER_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"luffingluffy"},"content":"                .withHomeAddress(VALID_HOME_ADDRESS_AMY).withWorkAddress(VALID_WORK_ADDRESS_AMY)","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"luffingluffy"},"content":"                .withQuarantineAddress(VALID_QUARANTINE_ADDRESS_AMY).withShnPeriod(VALID_SHN_PERIOD_AMY)","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"luffingluffy"},"content":"                .withNextOfKinName(VALID_NEXT_OF_KIN_NAME_AMY).withNextOfKinPhone(VALID_NEXT_OF_KIN_PHONE_AMY)","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"luffingluffy"},"content":"                .withNextOfKinAddress(VALID_NEXT_OF_KIN_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"wei2912"},"content":"        // case number","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"wei2912"},"content":"        userInput \u003d targetIndex.getOneBased() + CASE_NUMBER_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"wei2912"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withCaseNumber(VALID_CASE_NUMBER_AMY).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"luffingluffy"},"content":"        // homeAddress","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"wei2912"},"content":"        userInput \u003d targetIndex.getOneBased() + HOME_ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-03"},{"lineNumber":192,"author":{"gitId":"wei2912"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withHomeAddress(VALID_HOME_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-03"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"luffingluffy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"luffingluffy"},"content":"        // workAddress","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"luffingluffy"},"content":"        userInput \u003d targetIndex.getOneBased() + WORK_ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":198,"author":{"gitId":"luffingluffy"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withWorkAddress(VALID_WORK_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"luffingluffy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"luffingluffy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"luffingluffy"},"content":"        // quarantineAddress","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"luffingluffy"},"content":"        userInput \u003d targetIndex.getOneBased() + QUARANTINE_ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"luffingluffy"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withQuarantineAddress(VALID_QUARANTINE_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"luffingluffy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":206,"author":{"gitId":"luffingluffy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":208,"author":{"gitId":"luffingluffy"},"content":"        // shnPeriod","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"luffingluffy"},"content":"        userInput \u003d targetIndex.getOneBased() + SHN_PERIOD_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"luffingluffy"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withShnPeriod(VALID_SHN_PERIOD_AMY).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"luffingluffy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"luffingluffy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"luffingluffy"},"content":"        // nextOfKinName","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"luffingluffy"},"content":"        userInput \u003d targetIndex.getOneBased() + NEXT_OF_KIN_NAME_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":216,"author":{"gitId":"luffingluffy"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withNextOfKinName(VALID_NEXT_OF_KIN_NAME_AMY).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":217,"author":{"gitId":"luffingluffy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"luffingluffy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":219,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"luffingluffy"},"content":"        // nextOfKinPhone","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"luffingluffy"},"content":"        userInput \u003d targetIndex.getOneBased() + NEXT_OF_KIN_PHONE_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"luffingluffy"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withNextOfKinPhone(VALID_NEXT_OF_KIN_PHONE_AMY).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":223,"author":{"gitId":"luffingluffy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":224,"author":{"gitId":"luffingluffy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":226,"author":{"gitId":"luffingluffy"},"content":"        // nextOfKinAddress","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"luffingluffy"},"content":"        userInput \u003d targetIndex.getOneBased() + NEXT_OF_KIN_ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"luffingluffy"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withNextOfKinAddress(VALID_NEXT_OF_KIN_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"luffingluffy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":236,"author":{"gitId":"wei2912"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY + CASE_NUMBER_DESC_AMY","lastModifiedDate":"2021-10-11"},{"lineNumber":237,"author":{"gitId":"wei2912"},"content":"                + HOME_ADDRESS_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + CASE_NUMBER_DESC_AMY + HOME_ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-11"},{"lineNumber":238,"author":{"gitId":"wei2912"},"content":"                + EMAIL_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB + CASE_NUMBER_DESC_BOB + HOME_ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"wei2912"},"content":"                .withEmail(VALID_EMAIL_BOB).withCaseNumber(VALID_CASE_NUMBER_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":242,"author":{"gitId":"wei2912"},"content":"                .withHomeAddress(VALID_HOME_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"wei2912"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + HOME_ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-03"},{"lineNumber":259,"author":{"gitId":"wei2912"},"content":"                + CASE_NUMBER_DESC_BOB + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"wei2912"},"content":"                .withCaseNumber(VALID_CASE_NUMBER_BOB).withHomeAddress(VALID_HOME_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"luffingluffy":63,"wei2912":75,"-":127}},{"path":"src/test/java/seedu/track2gather/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD_END;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD_START;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.FindCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CaseNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Period;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.predicates.CaseNumberEqualsKeywordsPredicate;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.predicates.PhoneStartsWithKeywordsPredicate;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.predicates.ShnPeriodEndEqualsKeywordsPredicate;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.predicates.ShnPeriodStartEqualsKeywordsPredicate;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"        // No prefix","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"        // Name prefix with blank argument","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \"     \",","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"        // Phone prefix with blank argument","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"        assertParseFailure(parser, \" \" + PREFIX_PHONE + \"     \",","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"        // Case number prefix with blank argument","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"        assertParseFailure(parser, \" \" + PREFIX_CASE_NUMBER + \"     \",","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"        // Shn period (start) prefix with blank argument","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"        assertParseFailure(parser, \" \" + PREFIX_SHN_PERIOD_START + \"     \",","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"        // Shn period (end) prefix with blank argument","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"jennibearduit"},"content":"        assertParseFailure(parser, \" \" + PREFIX_SHN_PERIOD_END + \"     \",","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"jennibearduit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"jennibearduit"},"content":"    public void parse_validNameArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"jennibearduit"},"content":"        // no leading and trailing whitespaces after prefix","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"jennibearduit"},"content":"        String testInput \u003d \" \" + PREFIX_NAME + \"Alice Bob\";","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"jennibearduit"},"content":"        assertParseSuccess(parser, testInput, expectedFindCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"jennibearduit"},"content":"        // multiple whitespaces between keywords after prefix","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"jennibearduit"},"content":"        String testInputWithWhiteSpaces \u003d \" \" + PREFIX_NAME + \" \\n Alice \\n \\t Bob  \\t\";","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"jennibearduit"},"content":"        assertParseSuccess(parser, testInputWithWhiteSpaces, expectedFindCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"jennibearduit"},"content":"    public void parse_validPhoneArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"jennibearduit"},"content":"        // no leading and trailing whitespaces after prefix","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"jennibearduit"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"jennibearduit"},"content":"                new FindCommand(new PhoneStartsWithKeywordsPredicate(Arrays.asList(\"111\", \"222\")));","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"jennibearduit"},"content":"        String testInput \u003d \" \" + PREFIX_PHONE + \"111 222\";","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"jennibearduit"},"content":"        assertParseSuccess(parser, testInput, expectedFindCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"jennibearduit"},"content":"        // multiple whitespaces between keywords after prefix","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"jennibearduit"},"content":"        String testInputWithWhiteSpaces \u003d \" \" + PREFIX_PHONE + \" \\n 111 \\n \\t 222  \\t\";","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"jennibearduit"},"content":"        assertParseSuccess(parser, testInputWithWhiteSpaces, expectedFindCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"jennibearduit"},"content":"    public void parse_validCaseNumberArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"jennibearduit"},"content":"        // no leading and trailing whitespaces after prefix","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"jennibearduit"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"jennibearduit"},"content":"                new FindCommand(new CaseNumberEqualsKeywordsPredicate(Arrays.asList(\"111\", \"222\")));","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"jennibearduit"},"content":"        String testInput \u003d \" \" + PREFIX_CASE_NUMBER + \"111 222\";","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"jennibearduit"},"content":"        assertParseSuccess(parser, testInput, expectedFindCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"jennibearduit"},"content":"        // multiple whitespaces between keywords after prefix","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"jennibearduit"},"content":"        String testInputWithWhiteSpaces \u003d \" \" + PREFIX_CASE_NUMBER + \" \\n 111 \\n \\t 222  \\t\";","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"jennibearduit"},"content":"        assertParseSuccess(parser, testInputWithWhiteSpaces, expectedFindCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"jennibearduit"},"content":"    public void parse_invalidCaseNumberArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"jennibearduit"},"content":"        // One invalid keyword","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"jennibearduit"},"content":"        String invalidKeyword \u003d \" \" + PREFIX_CASE_NUMBER + \"-1\";","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"jennibearduit"},"content":"        assertParseFailure(parser, invalidKeyword, CaseNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"jennibearduit"},"content":"        // One valid and one invalid keyword","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"jennibearduit"},"content":"        String invalidTestInput \u003d \" \" + PREFIX_CASE_NUMBER + \"1 -1\";","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"jennibearduit"},"content":"        assertParseFailure(parser, invalidTestInput, CaseNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"jennibearduit"},"content":"    public void parse_validShnPeriodStartArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"jennibearduit"},"content":"        // no leading and trailing whitespaces after prefix","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"jennibearduit"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"jennibearduit"},"content":"                new FindCommand(new ShnPeriodStartEqualsKeywordsPredicate(Arrays.asList(\"2000-01-01\",","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"jennibearduit"},"content":"                        \"2000-01-10\")));","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"jennibearduit"},"content":"        String testInput \u003d \" \" + PREFIX_SHN_PERIOD_START + \"2000-01-01 2000-01-10\";","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"jennibearduit"},"content":"        assertParseSuccess(parser, testInput, expectedFindCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"jennibearduit"},"content":"        // multiple whitespaces between keywords after prefix","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"jennibearduit"},"content":"        String testInputWithWhiteSpaces \u003d \" \" + PREFIX_SHN_PERIOD_START","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"jennibearduit"},"content":"                + \" \\n 2000-01-01 \\n \\t 2000-01-10  \\t\";","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"jennibearduit"},"content":"        assertParseSuccess(parser, testInputWithWhiteSpaces, expectedFindCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"jennibearduit"},"content":"    public void parse_invalidShnPeriodStartArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"jennibearduit"},"content":"        // One invalid keyword","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"jennibearduit"},"content":"        String invalidKeyword \u003d \" \" + PREFIX_SHN_PERIOD_START + \"2000/01/01\";","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, invalidKeyword, Period.MESSAGE_CONSTRAINTS_DATE);","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"jennibearduit"},"content":"        // One valid and one invalid keyword","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"jennibearduit"},"content":"        String invalidTestInput \u003d \" \" + PREFIX_SHN_PERIOD_START + \"2000-01-01 2000/01/01\";","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, invalidTestInput, Period.MESSAGE_CONSTRAINTS_DATE);","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"jennibearduit"},"content":"    public void parse_validShnPeriodEndArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"jennibearduit"},"content":"        // no leading and trailing whitespaces after prefix","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"jennibearduit"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"jennibearduit"},"content":"                new FindCommand(new ShnPeriodEndEqualsKeywordsPredicate(Arrays.asList(\"2000-01-01\",","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"jennibearduit"},"content":"                        \"2000-01-10\")));","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"jennibearduit"},"content":"        String testInput \u003d \" \" + PREFIX_SHN_PERIOD_END + \"2000-01-01 2000-01-10\";","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"jennibearduit"},"content":"        assertParseSuccess(parser, testInput, expectedFindCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"jennibearduit"},"content":"        // multiple whitespaces between keywords after prefix","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"jennibearduit"},"content":"        String testInputWithWhiteSpaces \u003d \" \" + PREFIX_SHN_PERIOD_END","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"jennibearduit"},"content":"                + \" \\n 2000-01-01 \\n \\t 2000-01-10  \\t\";","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"jennibearduit"},"content":"        assertParseSuccess(parser, testInputWithWhiteSpaces, expectedFindCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"jennibearduit"},"content":"    public void parse_invalidShnPeriodEndArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"jennibearduit"},"content":"        // One invalid keyword","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"jennibearduit"},"content":"        String invalidKeyword \u003d \" \" + PREFIX_SHN_PERIOD_END + \"2000/01/02\";","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, invalidKeyword, Period.MESSAGE_CONSTRAINTS_DATE);","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"jennibearduit"},"content":"        // One valid and one invalid keyword","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"jennibearduit"},"content":"        String invalidTestInput \u003d \" \" + PREFIX_SHN_PERIOD_END + \"2000-01-02 2000/01/02\";","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"luffingluffy"},"content":"        assertParseFailure(parser, invalidTestInput, Period.MESSAGE_CONSTRAINTS_DATE);","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"luffingluffy":6,"wei2912":15,"-":22,"jennibearduit":118}},{"path":"src/test/java/seedu/track2gather/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Address;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Name;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"luffingluffy":4,"wei2912":5,"-":132}},{"path":"src/test/java/seedu/track2gather/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.SortCommand.SUPPORTED_PREFIXES;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD_END;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD_START;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.SortCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.SortCommand.Direction;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"        // invalid preamble","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, \"abc \" + PREFIX_NAME, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, \"abc \" + PREFIX_CASE_NUMBER + \" \" + PREFIX_NAME, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"    public void parse_missingPrefixes_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"        // no prefix specified","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"    public void parse_nonBlankValues_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"        // some value was specified","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, PREFIX_NAME + \"abc\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, PREFIX_NAME + \" \" + PREFIX_CASE_NUMBER + \"2\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"    public void parse_invalidPrefix_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"        // invalid prefix","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"        Prefix invalidPrefix \u003d new Prefix(\"abc123/\");","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"        assertFalse(SUPPORTED_PREFIXES.contains(invalidPrefix));","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, invalidPrefix.toString(), MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"        // invalid prefix with other valid prefixes specified","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, invalidPrefix + \" \" + PREFIX_NAME, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, PREFIX_NAME + \" \" + invalidPrefix, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"        assertParseFailure(parser, PREFIX_NAME + \" \" + invalidPrefix + \" \" + PREFIX_CASE_NUMBER,","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"    public void parse_onePrefixWithoutDirection_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"        // name","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"        String userInput \u003d \" \" + PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"        SortCommand expectedCommand \u003d new SortCommand(List.of(PREFIX_NAME), List.of(Direction.ASCENDING));","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"        // case number","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(List.of(PREFIX_CASE_NUMBER), List.of(Direction.ASCENDING));","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"        // shn period start","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_SHN_PERIOD_START;","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(List.of(PREFIX_SHN_PERIOD_START), List.of(Direction.ASCENDING));","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"        // shn period end","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_SHN_PERIOD_END;","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(List.of(PREFIX_SHN_PERIOD_END), List.of(Direction.ASCENDING));","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"    public void parse_onePrefixWithDirection_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"        // name ascending","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"        String userInput \u003d \" \" + PREFIX_NAME + Direction.ASCENDING;","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"        SortCommand expectedCommand \u003d new SortCommand(List.of(PREFIX_NAME), List.of(Direction.ASCENDING));","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"wei2912"},"content":"        // name descending","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_NAME + Direction.DESCENDING;","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(List.of(PREFIX_NAME), List.of(Direction.DESCENDING));","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"wei2912"},"content":"        // case number ascending","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_CASE_NUMBER + Direction.ASCENDING;","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(List.of(PREFIX_CASE_NUMBER), List.of(Direction.ASCENDING));","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"wei2912"},"content":"        // case number descending","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_CASE_NUMBER + Direction.DESCENDING;","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(List.of(PREFIX_CASE_NUMBER), List.of(Direction.DESCENDING));","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"wei2912"},"content":"        // shn period start ascending","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_SHN_PERIOD_START + Direction.ASCENDING;","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(List.of(PREFIX_SHN_PERIOD_START), List.of(Direction.ASCENDING));","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"wei2912"},"content":"        // shn period start descending","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_SHN_PERIOD_START + Direction.DESCENDING;","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(List.of(PREFIX_SHN_PERIOD_START), List.of(Direction.DESCENDING));","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"wei2912"},"content":"        // shn period end ascending","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_SHN_PERIOD_END + Direction.ASCENDING;","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(List.of(PREFIX_SHN_PERIOD_END), List.of(Direction.ASCENDING));","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"wei2912"},"content":"        // shn period end descending","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_SHN_PERIOD_END + Direction.DESCENDING;","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(List.of(PREFIX_SHN_PERIOD_END), List.of(Direction.DESCENDING));","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"wei2912"},"content":"    public void parse_multiplePrefixesWithoutDirection_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"wei2912"},"content":"        List\u003cDirection\u003e directions \u003d List.of(Direction.ASCENDING, Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"wei2912"},"content":"        // name then case number","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"wei2912"},"content":"        List\u003cPrefix\u003e prefixes \u003d List.of(PREFIX_NAME, PREFIX_CASE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"wei2912"},"content":"        String userInput \u003d \" \" + PREFIX_NAME + \" \" + PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"wei2912"},"content":"        SortCommand expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"wei2912"},"content":"        // case number then name","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_CASE_NUMBER, PREFIX_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_CASE_NUMBER + \" \" + PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"wei2912"},"content":"    public void parse_multiplePrefixesWithDirection_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"wei2912"},"content":"        // name ascending then case number ascending","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"wei2912"},"content":"        List\u003cPrefix\u003e prefixes \u003d List.of(PREFIX_NAME, PREFIX_CASE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"wei2912"},"content":"        List\u003cDirection\u003e directions \u003d List.of(Direction.ASCENDING, Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"wei2912"},"content":"        String userInput \u003d \" \" + PREFIX_NAME + Direction.ASCENDING + \" \" + PREFIX_CASE_NUMBER + Direction.ASCENDING;","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"wei2912"},"content":"        SortCommand expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"wei2912"},"content":"        // name ascending then case number descending","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_NAME, PREFIX_CASE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.ASCENDING, Direction.DESCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_NAME + Direction.ASCENDING + \" \" + PREFIX_CASE_NUMBER + Direction.DESCENDING;","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"wei2912"},"content":"        // name descending then case number descending","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_NAME, PREFIX_CASE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.DESCENDING, Direction.DESCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_NAME + Direction.DESCENDING + \" \" + PREFIX_CASE_NUMBER + Direction.DESCENDING;","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"wei2912"},"content":"    public void parse_multiplePrefixesMixedWithDirection_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"wei2912"},"content":"        // name then case number ascending","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"wei2912"},"content":"        List\u003cPrefix\u003e prefixes \u003d List.of(PREFIX_NAME, PREFIX_CASE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"wei2912"},"content":"        List\u003cDirection\u003e directions \u003d List.of(Direction.ASCENDING, Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"wei2912"},"content":"        String userInput \u003d \" \" + PREFIX_NAME + \" \" + PREFIX_CASE_NUMBER + Direction.ASCENDING;","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"wei2912"},"content":"        SortCommand expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"wei2912"},"content":"        // name ascending then case number","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_NAME, PREFIX_CASE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.ASCENDING, Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_NAME + Direction.ASCENDING + \" \" + PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"wei2912"},"content":"        // name then case number descending","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_NAME, PREFIX_CASE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.ASCENDING, Direction.DESCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_NAME + \" \" + PREFIX_CASE_NUMBER + Direction.DESCENDING;","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"wei2912"},"content":"        // name descending then case number","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_NAME, PREFIX_CASE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.DESCENDING, Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_NAME + Direction.DESCENDING + \" \" + PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"wei2912"},"content":"    public void parse_multipleRepeatedPrefixes_acceptsLast() {","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"wei2912"},"content":"        // single prefix repeated","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"wei2912"},"content":"        List\u003cPrefix\u003e prefixes \u003d List.of(PREFIX_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"wei2912"},"content":"        List\u003cDirection\u003e directions \u003d List.of(Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"wei2912"},"content":"        String userInput \u003d \" \" + PREFIX_NAME + \" \" + PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"wei2912"},"content":"        SortCommand expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"wei2912"},"content":"        // same prefix repeated, accepting last occurrence","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.DESCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_NAME + \" \" + PREFIX_NAME + Direction.DESCENDING;","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_NAME + Direction.DESCENDING + \" \" + PREFIX_NAME + Direction.ASCENDING;","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_NAME + Direction.DESCENDING + \" \" + PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"wei2912"},"content":"        // single prefix repeated with rest of prefixes unique","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_NAME, PREFIX_CASE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.ASCENDING, Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_CASE_NUMBER + Direction.DESCENDING + \" \" + PREFIX_NAME + \" \" + PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_CASE_NUMBER, PREFIX_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.ASCENDING, Direction.ASCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_NAME + Direction.DESCENDING + \" \" + PREFIX_CASE_NUMBER + \" \" + PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"wei2912"},"content":"        // multiple prefixes repeated","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"wei2912"},"content":"        prefixes \u003d List.of(PREFIX_SHN_PERIOD_END, PREFIX_CASE_NUMBER, PREFIX_NAME);","lastModifiedDate":"2021-10-25"},{"lineNumber":242,"author":{"gitId":"wei2912"},"content":"        directions \u003d List.of(Direction.ASCENDING, Direction.ASCENDING, Direction.DESCENDING);","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"wei2912"},"content":"        userInput \u003d \" \" + PREFIX_SHN_PERIOD_END","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"wei2912"},"content":"                + \" \" + PREFIX_CASE_NUMBER + Direction.DESCENDING","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"wei2912"},"content":"                + \" \" + PREFIX_NAME + Direction.ASCENDING","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"wei2912"},"content":"                + \" \" + PREFIX_NAME","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"wei2912"},"content":"                + \" \" + PREFIX_CASE_NUMBER","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"wei2912"},"content":"                + \" \" + PREFIX_CASE_NUMBER + Direction.ASCENDING","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"wei2912"},"content":"                + \" \" + PREFIX_NAME + Direction.DESCENDING;","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"wei2912"},"content":"        expectedCommand \u003d new SortCommand(prefixes, directions);","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"wei2912"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"wei2912":254}},{"path":"src/test/java/seedu/track2gather/logic/parser/TShiftCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"frederickpek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.TShiftCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"frederickpek"},"content":"public class TShiftCommandParserTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"frederickpek"},"content":"    private final TShiftCommandParser parser \u003d new TShiftCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"frederickpek"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"frederickpek"},"content":"    public void parse_negativeValues() {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"frederickpek"},"content":"        assertParseSuccess(parser, \"-2\", new TShiftCommand(-2));","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"frederickpek"},"content":"        assertParseSuccess(parser, \" -2\", new TShiftCommand(-2));","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"frederickpek"},"content":"        assertParseSuccess(parser, \"-2 \", new TShiftCommand(-2));","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"frederickpek"},"content":"        assertParseSuccess(parser, \" -2 \", new TShiftCommand(-2));","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"frederickpek"},"content":"        assertParseSuccess(parser, \"-12345678\", new TShiftCommand(-12345678));","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"frederickpek"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"frederickpek"},"content":"    public void parse_positiveValues() {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"frederickpek"},"content":"        assertParseSuccess(parser, \"2\", new TShiftCommand(2));","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"frederickpek"},"content":"        assertParseSuccess(parser, \" 2\", new TShiftCommand(2));","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"frederickpek"},"content":"        assertParseSuccess(parser, \"2 \", new TShiftCommand(2));","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"frederickpek"},"content":"        assertParseSuccess(parser, \" 2 \", new TShiftCommand(2));","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"frederickpek"},"content":"        assertParseSuccess(parser, \"12345678\", new TShiftCommand(12345678));","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"frederickpek"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"frederickpek"},"content":"    public void parse_invalidInputs() {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"frederickpek"},"content":"        assertParseFailure(parser, \" \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, TShiftCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"frederickpek"},"content":"        assertParseFailure(parser, \"two\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, TShiftCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"frederickpek"},"content":"        assertParseFailure(parser, \"-i \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, TShiftCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"frederickpek"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"wei2912":5,"frederickpek":35}},{"path":"src/test/java/seedu/track2gather/logic/parser/Track2GatherParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.logic.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import static seedu.track2gather.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.AddCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.EditCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.FindCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.ListCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.SortCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.SortCommand.Direction;","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.TShiftCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.PersonBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.PersonUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"public class Track2GatherParserTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"    private final Track2GatherParser parser \u003d new Track2GatherParser();","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"lrnshk"},"content":"        ArrayList\u003cIndex\u003e indicesFirstPerson \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"lrnshk"},"content":"        indicesFirstPerson.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"lrnshk"},"content":"        assertEquals(new DeleteCommand(indicesFirstPerson), command);","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"luffingluffy"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(ALICE).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"jennibearduit"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(FindCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"jennibearduit"},"content":"               + PREFIX_NAME + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"wei2912"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"        List\u003cPrefix\u003e prefixes \u003d List.of(PREFIX_NAME, PREFIX_CASE_NUMBER);","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"wei2912"},"content":"        List\u003cDirection\u003e directions \u003d List.of(Direction.ASCENDING, Direction.DESCENDING);","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"wei2912"},"content":"        assertTrue(prefixes.size() \u003e 0);","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"wei2912"},"content":"        assertTrue(prefixes.size() \u003d\u003d directions.size());","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"wei2912"},"content":"        String sortsString \u003d IntStream.range(0, prefixes.size())","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"wei2912"},"content":"                .mapToObj(i -\u003e prefixes.get(i).toString() + directions.get(i))","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"wei2912"},"content":"                .collect(Collectors.joining(\" \"));","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"wei2912"},"content":"        SortCommand command \u003d (SortCommand) parser.parseCommand(SortCommand.COMMAND_WORD + \" \" + sortsString);","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"wei2912"},"content":"        assertEquals(new SortCommand(prefixes, directions), command);","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"frederickpek"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"frederickpek"},"content":"    public void parseCommand_tshift() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"frederickpek"},"content":"        assertTrue(parser.parseCommand(TShiftCommand.COMMAND_WORD + \" 3\") instanceof TShiftCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"frederickpek"},"content":"        assertTrue(parser.parseCommand(TShiftCommand.COMMAND_WORD + \" -3\") instanceof TShiftCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"luffingluffy":2,"lrnshk":4,"wei2912":43,"-":74,"jennibearduit":2,"frederickpek":6}},{"path":"src/test/java/seedu/track2gather/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.GuiSettings;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.Track2GatherBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"        assertEquals(new Track2Gather(), new Track2Gather(modelManager.getTrack2Gather()));","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"        userPrefs.setTrack2GatherFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"        userPrefs.setTrack2GatherFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"    public void setTrack2GatherFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTrack2GatherFilePath(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"    public void setTrack2GatherFilePath_validPath_setsTrack2GatherFilePath() {","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"        modelManager.setTrack2GatherFilePath(path);","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"        assertEquals(path, modelManager.getTrack2GatherFilePath());","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"    public void hasPerson_personNotInTrack2Gather_returnsFalse() {","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"    public void hasPerson_personInTrack2Gather_returnsTrue() {","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"        Track2Gather track2Gather \u003d new Track2GatherBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"        Track2Gather differentTrack2Gather \u003d new Track2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"        modelManager \u003d new ModelManager(track2Gather, userPrefs);","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"wei2912"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(track2Gather, userPrefs);","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"wei2912"},"content":"        // different track2Gather -\u003e returns false","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"wei2912"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentTrack2Gather, userPrefs)));","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"luffingluffy"},"content":"        String[] keywords \u003d ALICE.getName().value.split(\"\\\\s+\");","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"wei2912"},"content":"        assertFalse(modelManager.equals(new ModelManager(track2Gather, userPrefs)));","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"wei2912"},"content":"        differentUserPrefs.setTrack2GatherFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"wei2912"},"content":"        assertFalse(modelManager.equals(new ModelManager(track2Gather, differentUserPrefs)));","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"luffingluffy":1,"wei2912":27,"-":104}},{"path":"src/test/java/seedu/track2gather/model/Track2GatherTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_HOME_ADDRESS_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.getTypicalTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import java.util.List;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.PersonBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"public class Track2GatherTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"    private final Track2Gather track2Gather \u003d new Track2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    public void constructor() {","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"        assertEquals(Collections.emptyList(), track2Gather.getPersonList());","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"        assertThrows(NullPointerException.class, () -\u003e track2Gather.resetData(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    public void resetData_withValidReadOnlyTrack2Gather_replacesData() {","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"        Track2Gather newData \u003d getTypicalTrack2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"        track2Gather.resetData(newData);","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"        assertEquals(newData, track2Gather);","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withHomeAddress(VALID_HOME_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"        Track2GatherStub newData \u003d new Track2GatherStub(newPersons);","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e track2Gather.resetData(newData));","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"        assertThrows(NullPointerException.class, () -\u003e track2Gather.hasPerson(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"    public void hasPerson_personNotInTrack2Gather_returnsFalse() {","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"        assertFalse(track2Gather.hasPerson(ALICE));","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"    public void hasPerson_personInTrack2Gather_returnsTrue() {","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"        track2Gather.addPerson(ALICE);","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"        assertTrue(track2Gather.hasPerson(ALICE));","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"    public void hasPerson_personWithSameIdentityFieldsInTrack2Gather_returnsTrue() {","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"        track2Gather.addPerson(ALICE);","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withHomeAddress(VALID_HOME_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"        assertTrue(track2Gather.hasPerson(editedAlice));","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e track2Gather.getPersonList().remove(0));","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"     * A stub ReadOnlyTrack2Gather whose persons list can violate interface constraints.","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"    private static class Track2GatherStub implements ReadOnlyTrack2Gather {","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":"        Track2GatherStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"wei2912"},"content":"        @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"wei2912"},"content":"            return persons;","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"wei2912":99}},{"path":"src/test/java/seedu/track2gather/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    public void setTrack2GatherFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setTrack2GatherFilePath(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"wei2912":4,"-":17}},{"path":"src/test/java/seedu/track2gather/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Address;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"luffingluffy":2,"wei2912":2,"-":34}},{"path":"src/test/java/seedu/track2gather/model/person/CallStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CallStatus;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"public class CallStatusTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CallStatus(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"    public void constructor_invalidCallStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"        String invalidCallStatus \u003d \"\";","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CallStatus(invalidCallStatus));","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"    public void isValidCallStatus() {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"        // null","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"        assertThrows(NullPointerException.class, () -\u003e CallStatus.isValidCallStatus(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"        // blank call status","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CallStatus.isValidCallStatus(\"\")); // empty string","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CallStatus.isValidCallStatus(\" \")); // spaces only","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"        // invalid numbers","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CallStatus.isValidCallStatus(\"-1 false\")); // negative integer","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CallStatus.isValidCallStatus(\"1.4 false\")); // decimal","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CallStatus.isValidCallStatus(\"1a false\")); // number with letters","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CallStatus.isValidCallStatus(\"1. true\")); // decimal point","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CallStatus.isValidCallStatus(\"1 true \")); // white space back","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CallStatus.isValidCallStatus(\" 1 true\")); // white space front","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"        // invalid boolean value","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CallStatus.isValidCallStatus(\"2 fale\")); // misspelled false","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CallStatus.isValidCallStatus(\"2 tre\")); // misspelled true","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"        // valid call status","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"        assertTrue(CallStatus.isValidCallStatus(\"123456 false\")); // 6 digit number","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"        assertTrue(CallStatus.isValidCallStatus(\"1 true\")); // \u003c6 digit number","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"        assertTrue(CallStatus.isValidCallStatus(\"0 false\")); // default call status","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"luffingluffy":2,"over-fitted":46,"wei2912":2}},{"path":"src/test/java/seedu/track2gather/model/person/CaseNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CaseNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"public class CaseNumberTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CaseNumber(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"    public void constructor_invalidCaseNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"        String invalidCaseNumber \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CaseNumber(invalidCaseNumber));","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"    public void isValidCaseNumber() {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"        // null","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"        assertThrows(NullPointerException.class, () -\u003e CaseNumber.isValidCaseNumber(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"        // blank caseNumber","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CaseNumber.isValidCaseNumber(\"\")); // empty string","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CaseNumber.isValidCaseNumber(\" \")); // spaces only","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"        // invalid numbers","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CaseNumber.isValidCaseNumber(\"-1\")); // negative integer","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CaseNumber.isValidCaseNumber(\"1.4\")); // decimal","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CaseNumber.isValidCaseNumber(\"1a\")); // number with letters","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CaseNumber.isValidCaseNumber(\"1.\")); // decimal point","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CaseNumber.isValidCaseNumber(\"1 \")); // white space back","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CaseNumber.isValidCaseNumber(\" 1\")); // white space front","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CaseNumber.isValidCaseNumber(\"01\")); // padded with 0 in front","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"        assertFalse(CaseNumber.isValidCaseNumber(\"1234567\")); // 7 digit number","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"        // valid caseNumber","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"        assertTrue(CaseNumber.isValidCaseNumber(\"123456\")); // 6 digit number","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"        assertTrue(CaseNumber.isValidCaseNumber(\"1\")); // \u003c6 digit number","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"luffingluffy":2,"over-fitted":42,"wei2912":3}},{"path":"src/test/java/seedu/track2gather/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"luffingluffy":2,"wei2912":2,"-":66}},{"path":"src/test/java/seedu/track2gather/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Name;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"luffingluffy":2,"wei2912":2,"-":38}},{"path":"src/test/java/seedu/track2gather/model/person/PeriodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package seedu.track2gather.model.person;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Period;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"public class PeriodTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Period(null, null));","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"    public void constructor_invalidPeriod_throwsIllegalArgumentException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"        LocalDate invalidStartDate \u003d LocalDate.of(2021, 01, 02);","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"        LocalDate invalidEndDate \u003d LocalDate.of(2021, 01, 01);","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Period(invalidStartDate, invalidEndDate));","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"    public void isValidPeriod() {","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"        // null period","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"        assertThrows(NullPointerException.class, () -\u003e Period.isValidPeriod(null, null));","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"        // invalid periods","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"        assertFalse(Period.isValidPeriod(","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"                LocalDate.of(2021, 01, 02),","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"                LocalDate.of(2021, 01, 01))); // startDate is after endDate","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"        assertFalse(Period.isValidPeriod(","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"                LocalDate.of(2021, 01, 01),","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"                LocalDate.of(2021, 01, 01))); // startDate is same as endDate","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"        // valid periods","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"        assertTrue(Period.isValidPeriod(","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"                LocalDate.of(2021, 01, 01),","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"                LocalDate.of(2021, 01, 02)));","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"        assertTrue(Period.isValidPeriod(","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"                LocalDate.of(2021, 01, 01),","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"                LocalDate.of(2021, 01, 02)));","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"luffingluffy":48}},{"path":"src/test/java/seedu/track2gather/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_CALL_STATUS_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_CASE_NUMBER_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_HOME_ADDRESS_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_ADDRESS_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_NAME_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_PHONE_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_QUARANTINE_ADDRESS_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_SHN_PERIOD_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_WORK_ADDRESS_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.PersonBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"lrnshk"},"content":"        // same case number, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"lrnshk"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"                .withHomeAddress(VALID_HOME_ADDRESS_BOB).withCallStatus(VALID_CALL_STATUS_BOB).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"lrnshk"},"content":"        // different case number, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"lrnshk"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withCaseNumber(VALID_CASE_NUMBER_BOB).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"        // different case number -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withCaseNumber(VALID_CASE_NUMBER_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"luffingluffy"},"content":"        // different homeAddress -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withHomeAddress(VALID_HOME_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"        // different workAddress -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withWorkAddress(VALID_WORK_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"luffingluffy"},"content":"        // different quarantineAddress -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"luffingluffy"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withQuarantineAddress(VALID_QUARANTINE_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"luffingluffy"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"luffingluffy"},"content":"        // different shnPeriod -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"luffingluffy"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withShnPeriod(VALID_SHN_PERIOD_BOB).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"luffingluffy"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"luffingluffy"},"content":"        // different nextOfKinName -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"luffingluffy"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNextOfKinName(VALID_NEXT_OF_KIN_NAME_BOB).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"luffingluffy"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"luffingluffy"},"content":"        // different nextOfKinPhone -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"luffingluffy"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNextOfKinPhone(VALID_NEXT_OF_KIN_PHONE_BOB).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"luffingluffy"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"luffingluffy"},"content":"        // different nextOfKinAddress -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"luffingluffy"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNextOfKinAddress(VALID_NEXT_OF_KIN_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"luffingluffy"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"over-fitted"},"content":"        // different call status -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"over-fitted"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withCallStatus(\"1 true\").build();","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"over-fitted"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"luffingluffy":25,"over-fitted":5,"lrnshk":5,"wei2912":21,"-":55}},{"path":"src/test/java/seedu/track2gather/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"luffingluffy":2,"wei2912":2,"-":38}},{"path":"src/test/java/seedu/track2gather/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_HOME_ADDRESS_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.PersonBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withHomeAddress(VALID_HOME_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withHomeAddress(VALID_HOME_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"wei2912":10,"-":157}},{"path":"src/test/java/seedu/track2gather/model/person/predicates/CaseNumberEqualsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person.predicates;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.PersonBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"public class CaseNumberEqualsKeywordsPredicateTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"    public void equals() {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"1\");","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"1\", \"2\");","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"        CaseNumberEqualsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"                new CaseNumberEqualsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"        CaseNumberEqualsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"                new CaseNumberEqualsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"        CaseNumberEqualsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"                new CaseNumberEqualsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"    public void test_caseNumberEqualsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"        // One keyword","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"        CaseNumberEqualsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"                new CaseNumberEqualsKeywordsPredicate(Collections.singletonList(\"111111\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCaseNumber(\"111111\").build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new CaseNumberEqualsKeywordsPredicate(Arrays.asList(\"111111\", \"222222\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(predicate.test(new PersonBuilder().withCaseNumber(\"111111\").build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"jennibearduit"},"content":"    public void test_caseNumberDoesNotEqualsKeywords_returnsFalse() {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"jennibearduit"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"jennibearduit"},"content":"        CaseNumberEqualsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"jennibearduit"},"content":"                new CaseNumberEqualsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withCaseNumber(\"111111\").build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"jennibearduit"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new CaseNumberEqualsKeywordsPredicate(Arrays.asList(\"666666\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withCaseNumber(\"111111\").build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"jennibearduit"},"content":"        // Case number contains keyword but not equals to keyword","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new CaseNumberEqualsKeywordsPredicate(Arrays.asList(\"111\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withCaseNumber(\"111111\").build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"jennibearduit"},"content":"        // Keywords match name, phone, email, address, shn period (start) and shn period (end), but does not match","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"jennibearduit"},"content":"        // case number","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new CaseNumberEqualsKeywordsPredicate(Arrays.asList(\"Alice\", \"12345\", \"alice@email.com\", \"Main\",","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"jennibearduit"},"content":"                \"Street\", \"2000-01-01\", \"01-02\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\").withEmail(\"alice@email.com\")","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"jennibearduit"},"content":"                .withCaseNumber(\"111111\").withHomeAddress(\"Main Street\").withShnPeriod(\"2000-01-01 \u003d\u003e 2000-01-02\")","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"jennibearduit"},"content":"                .build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"wei2912":2,"jennibearduit":77}},{"path":"src/test/java/seedu/track2gather/model/person/predicates/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person.predicates;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.PersonBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"jennibearduit"},"content":"        // Keywords match phone, email, case number, address, shn period (start) and shn period (end), but not name","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"601110\", \"Main\",","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"jennibearduit"},"content":"                \"Street\", \"2000-01-01\", \"01-02\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\").withEmail(\"alice@email.com\")","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"jennibearduit"},"content":"                .withCaseNumber(\"601110\").withHomeAddress(\"Main Street\").withShnPeriod(\"2000-01-01 \u003d\u003e 2000-01-02\")","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"jennibearduit"},"content":"                .build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wei2912":2,"-":69,"jennibearduit":6}},{"path":"src/test/java/seedu/track2gather/model/person/predicates/PhoneStartsWithKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person.predicates;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.PersonBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"public class PhoneStartsWithKeywordsPredicateTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"    public void equals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"11111111\");","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"11111111\", \"22222222\");","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"        PhoneStartsWithKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"                new PhoneStartsWithKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"        PhoneStartsWithKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"                new PhoneStartsWithKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"        PhoneStartsWithKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"                new PhoneStartsWithKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(firstPredicate.equals(11111111));","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"    public void test_phoneStartsWithKeywords_returnsTrue() {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"        // One keyword","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"        PhoneStartsWithKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"                new PhoneStartsWithKeywordsPredicate(Collections.singletonList(\"1234\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new PhoneStartsWithKeywordsPredicate(Arrays.asList(\"123\", \"1234\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"jennibearduit"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new PhoneStartsWithKeywordsPredicate(Arrays.asList(\"123\", \"666\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"jennibearduit"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"jennibearduit"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"jennibearduit"},"content":"        PhoneStartsWithKeywordsPredicate predicate \u003d new PhoneStartsWithKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"jennibearduit"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new PhoneStartsWithKeywordsPredicate(Arrays.asList(\"111\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"jennibearduit"},"content":"        // Phone number contains keyword but does not start with keyword","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new PhoneStartsWithKeywordsPredicate(Arrays.asList(\"234\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"jennibearduit"},"content":"        // Keywords match name, email, case number, address, shn period\u0027s start date and shn period\u0027s end date, but","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"jennibearduit"},"content":"        // does not match phone","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new PhoneStartsWithKeywordsPredicate(Arrays.asList(\"Alice\", \"alice@email.com\", \"11111\", \"Main\",","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"jennibearduit"},"content":"                \"Street\", \"2000-01-01\", \"2000-01-02\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"jennibearduit"},"content":"                .withEmail(\"alice@email.com\").withCaseNumber(\"601110\").withHomeAddress(\"Main Street\")","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"jennibearduit"},"content":"                .withShnPeriod(\"2000-01-01 \u003d\u003e 2000-01-02\").build()));","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"wei2912":2,"jennibearduit":80}},{"path":"src/test/java/seedu/track2gather/model/person/predicates/ShnPeriodEndEqualsKeywordsPredicatesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person.predicates;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.PersonBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"public class ShnPeriodEndEqualsKeywordsPredicatesTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    public void equals() {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"2000-01-01\");","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"2000-01-01\", \"2000-01-02\");","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"        ShnPeriodEndEqualsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"                new ShnPeriodEndEqualsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"        ShnPeriodEndEqualsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"                new ShnPeriodEndEqualsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"        ShnPeriodEndEqualsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"                new ShnPeriodEndEqualsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"    public void test_shnPeriodEndEqualsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"        // One keyword","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"        ShnPeriodEndEqualsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"                new ShnPeriodEndEqualsKeywordsPredicate(Collections.singletonList(\"2000-01-02\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(predicate.test(new PersonBuilder().withShnPeriod(\"2000-01-01 \u003d\u003e 2000-01-02\").build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new ShnPeriodEndEqualsKeywordsPredicate(Arrays.asList(\"2000-01-02\", \"2000-01-03\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(predicate.test(new PersonBuilder().withShnPeriod(\"2000-01-01 \u003d\u003e 2000-01-02\").build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"jennibearduit"},"content":"    public void test_shnPeriodEndDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"jennibearduit"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"jennibearduit"},"content":"        ShnPeriodEndEqualsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"jennibearduit"},"content":"                new ShnPeriodEndEqualsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withShnPeriod(\"2000-01-01 \u003d\u003e 2000-01-02\").build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"jennibearduit"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new ShnPeriodEndEqualsKeywordsPredicate(Arrays.asList(\"1999-01-01\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withShnPeriod(\"2000-01-01 \u003d\u003e 2000-01-02\").build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"jennibearduit"},"content":"        // Keyword matches with shn period start","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new ShnPeriodEndEqualsKeywordsPredicate(Arrays.asList(\"2000-01-01\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withShnPeriod(\"2000-01-01 \u003d\u003e 2000-01-02\").build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"jennibearduit"},"content":"        // Keywords match name, phone, email, case number,  address, shn period (start), but does not match","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"jennibearduit"},"content":"        // shn period (end)","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new ShnPeriodEndEqualsKeywordsPredicate(Arrays.asList(\"Alice\", \"12345\", \"alice@email.com\",","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"jennibearduit"},"content":"                \"601110\", \"Main\", \"Street\", \"2000-01-01\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\").withEmail(\"alice@email.com\")","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"jennibearduit"},"content":"                .withCaseNumber(\"601110\").withHomeAddress(\"Main Street\").withShnPeriod(\"2000-01-01 \u003d\u003e 2000-01-02\")","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"jennibearduit"},"content":"                .build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"wei2912":2,"jennibearduit":76}},{"path":"src/test/java/seedu/track2gather/model/person/predicates/ShnPeriodStartEqualsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.person.predicates;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jennibearduit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jennibearduit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jennibearduit"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jennibearduit"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jennibearduit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jennibearduit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.PersonBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jennibearduit"},"content":"public class ShnPeriodStartEqualsKeywordsPredicateTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jennibearduit"},"content":"    public void equals() {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jennibearduit"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"2000-01-01\");","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jennibearduit"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"2000-01-01\", \"2000-01-02\");","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jennibearduit"},"content":"        ShnPeriodStartEqualsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"jennibearduit"},"content":"                new ShnPeriodStartEqualsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"jennibearduit"},"content":"        ShnPeriodStartEqualsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"jennibearduit"},"content":"                new ShnPeriodStartEqualsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"jennibearduit"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jennibearduit"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"jennibearduit"},"content":"        ShnPeriodStartEqualsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"jennibearduit"},"content":"                new ShnPeriodStartEqualsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"jennibearduit"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"jennibearduit"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"jennibearduit"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"jennibearduit"},"content":"    public void test_shnPeriodStartEqualsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"jennibearduit"},"content":"        // One keyword","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"jennibearduit"},"content":"        ShnPeriodStartEqualsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"jennibearduit"},"content":"                new ShnPeriodStartEqualsKeywordsPredicate(Collections.singletonList(\"2000-01-01\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(predicate.test(new PersonBuilder().withShnPeriod(\"2000-01-01 \u003d\u003e 2000-01-02\").build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"jennibearduit"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new ShnPeriodStartEqualsKeywordsPredicate(Arrays.asList(\"2000-01-01\", \"2000-01-03\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"jennibearduit"},"content":"        assertTrue(predicate.test(new PersonBuilder().withShnPeriod(\"2000-01-01 \u003d\u003e 2000-01-02\").build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"jennibearduit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"jennibearduit"},"content":"    public void test_shnPeriodStartDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"jennibearduit"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"jennibearduit"},"content":"        ShnPeriodStartEqualsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"jennibearduit"},"content":"                new ShnPeriodStartEqualsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withShnPeriod(\"2000-01-01 \u003d\u003e 2000-01-02\").build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"jennibearduit"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new ShnPeriodStartEqualsKeywordsPredicate(Arrays.asList(\"1999\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withShnPeriod(\"2000-01-01 \u003d\u003e 2000-01-02\").build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"jennibearduit"},"content":"        // Keyword matches with shn period end","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new ShnPeriodStartEqualsKeywordsPredicate(Arrays.asList(\"2000-01-02\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withShnPeriod(\"2000-01-01 \u003d\u003e 2000-01-02\").build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"jennibearduit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"jennibearduit"},"content":"        // Keywords match name, phone, email, case number,  address, shn period (end), but does not match","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"jennibearduit"},"content":"        // shn period (start)","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"jennibearduit"},"content":"        predicate \u003d new ShnPeriodStartEqualsKeywordsPredicate(Arrays.asList(\"Alice\", \"12345\", \"alice@email.com\",","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"jennibearduit"},"content":"                \"601110\", \"Main\", \"Street\", \"2000-01-02\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"jennibearduit"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\").withEmail(\"alice@email.com\")","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"jennibearduit"},"content":"                .withCaseNumber(\"601110\").withHomeAddress(\"Main Street\").withShnPeriod(\"2000-01-01 \u003d\u003e 2000-01-02\")","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"jennibearduit"},"content":"                .build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"jennibearduit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"jennibearduit"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"wei2912":2,"jennibearduit":77}},{"path":"src/test/java/seedu/track2gather/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.model.util;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"frederickpek"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"frederickpek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"frederickpek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"frederickpek"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"frederickpek"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"frederickpek"},"content":"    public void nonZeroElementArrayCreated() {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"frederickpek"},"content":"        // The sample data should not be created with 0 Persons","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"frederickpek"},"content":"        assertTrue(SampleDataUtil.getSamplePersons().length \u003e 0);","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"frederickpek"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"frederickpek"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"frederickpek"},"content":"    public void nonNullPersonArray() {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"frederickpek"},"content":"        // The sample data should only contain Person Objects","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"frederickpek"},"content":"        Person[] persons \u003d SampleDataUtil.getSamplePersons();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"frederickpek"},"content":"        for (Person person : persons) {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"frederickpek"},"content":"            assertNotNull(person);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"frederickpek"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"frederickpek"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"frederickpek"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"wei2912":2,"frederickpek":23}},{"path":"src/test/java/seedu/track2gather/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Address;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CallStatus;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CaseNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Name;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Period;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"    private static final String INVALID_CASE_NUMBER \u003d \"-2\";","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    private static final String INVALID_HOME_ADDRESS \u003d \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"    private static final String INVALID_WORK_ADDRESS \u003d \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"    private static final String INVALID_QUARANTINE_ADDRESS \u003d \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"    private static final String INVALID_SHN_PERIOD \u003d \"12 May - 15 May 2020\";","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"    private static final String INVALID_NEXT_OF_KIN_NAME \u003d \"J-hn\";","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    private static final String INVALID_NEXT_OF_KIN_PHONE \u003d \"+526243\";","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"    private static final String INVALID_NEXT_OF_KIN_ADDRESS \u003d \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"    private static final String INVALID_CALL_STATUS \u003d \"-1 false\";","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"    private static final String VALID_CASE_NUMBER \u003d BENSON.getCaseNumber().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"    private static final String VALID_HOME_ADDRESS \u003d BENSON.getHomeAddress().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"    private static final String VALID_WORK_ADDRESS \u003d BENSON.getWorkAddress().value.map(Object::toString).orElse(null);","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"    private static final String VALID_QUARANTINE_ADDRESS \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"            BENSON.getQuarantineAddress().value.map(Object::toString).orElse(null);","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"    private static final String VALID_SHN_PERIOD \u003d BENSON.getShnPeriod().value.map(Object::toString).orElse(null);","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"    private static final String VALID_NEXT_OF_KIN_NAME \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"            BENSON.getNextOfKinName().value.map(Object::toString).orElse(null);","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"    private static final String VALID_NEXT_OF_KIN_PHONE \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"            BENSON.getNextOfKinPhone().value.map(Object::toString).orElse(null);","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"    private static final String VALID_NEXT_OF_KIN_ADDRESS \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"            BENSON.getNextOfKinAddress().value.map(Object::toString).orElse(null);","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"    private static final String VALID_CALL_STATUS \u003d BENSON.getCallStatus().toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_CASE_NUMBER,","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"                VALID_HOME_ADDRESS, VALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_CASE_NUMBER,","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"                VALID_HOME_ADDRESS, VALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_CASE_NUMBER,","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"                VALID_HOME_ADDRESS, VALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_CASE_NUMBER,","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"                VALID_HOME_ADDRESS, VALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_CASE_NUMBER,","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"luffingluffy"},"content":"                VALID_HOME_ADDRESS, VALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_CASE_NUMBER,","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"luffingluffy"},"content":"                VALID_HOME_ADDRESS, VALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"wei2912"},"content":"    public void toModelType_invalidCaseNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"wei2912"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_CASE_NUMBER,","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"luffingluffy"},"content":"                VALID_HOME_ADDRESS, VALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"wei2912"},"content":"        String expectedMessage \u003d CaseNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"wei2912"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"wei2912"},"content":"    public void toModelType_nullCaseNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"wei2912"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"luffingluffy"},"content":"                VALID_HOME_ADDRESS, VALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"wei2912"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, CaseNumber.class.getSimpleName());","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"wei2912"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"luffingluffy"},"content":"    public void toModelType_invalidHomeAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"wei2912"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_CASE_NUMBER,","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"luffingluffy"},"content":"                INVALID_HOME_ADDRESS, VALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"luffingluffy"},"content":"    public void toModelType_nullHomeAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"wei2912"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_CASE_NUMBER,","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"luffingluffy"},"content":"                null, VALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"luffingluffy"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"luffingluffy"},"content":"    public void toModelType_invalidWorkAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"luffingluffy"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_CASE_NUMBER,","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"luffingluffy"},"content":"                VALID_HOME_ADDRESS, INVALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"luffingluffy"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"luffingluffy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"luffingluffy"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"luffingluffy"},"content":"    public void toModelType_invalidQuarantineAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"luffingluffy"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_CASE_NUMBER,","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"luffingluffy"},"content":"                VALID_HOME_ADDRESS, VALID_WORK_ADDRESS, INVALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"luffingluffy"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"luffingluffy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"luffingluffy"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"luffingluffy"},"content":"    public void toModelType_invalidShnPeriod_throwsIllegalValueException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"luffingluffy"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_CASE_NUMBER,","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"luffingluffy"},"content":"                VALID_HOME_ADDRESS, VALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, INVALID_SHN_PERIOD,","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"luffingluffy"},"content":"        String expectedMessage \u003d Period.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"luffingluffy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"luffingluffy"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"luffingluffy"},"content":"    public void toModelType_invalidNextOfKinName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":175,"author":{"gitId":"luffingluffy"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_CASE_NUMBER,","lastModifiedDate":"2021-10-17"},{"lineNumber":176,"author":{"gitId":"luffingluffy"},"content":"                VALID_HOME_ADDRESS, VALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"over-fitted"},"content":"                INVALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"luffingluffy"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-17"},{"lineNumber":179,"author":{"gitId":"luffingluffy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":180,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":182,"author":{"gitId":"luffingluffy"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":183,"author":{"gitId":"luffingluffy"},"content":"    public void toModelType_invalidNextOfKinPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":184,"author":{"gitId":"luffingluffy"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_CASE_NUMBER,","lastModifiedDate":"2021-10-17"},{"lineNumber":185,"author":{"gitId":"luffingluffy"},"content":"                VALID_HOME_ADDRESS, VALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-17"},{"lineNumber":186,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, INVALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"luffingluffy"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"luffingluffy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":189,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":190,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"luffingluffy"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"luffingluffy"},"content":"    public void toModelType_invalidNextOfKinAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":193,"author":{"gitId":"luffingluffy"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_CASE_NUMBER,","lastModifiedDate":"2021-10-17"},{"lineNumber":194,"author":{"gitId":"luffingluffy"},"content":"                VALID_HOME_ADDRESS, VALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, INVALID_NEXT_OF_KIN_ADDRESS, VALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"luffingluffy"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-17"},{"lineNumber":197,"author":{"gitId":"luffingluffy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":198,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":199,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"over-fitted"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"over-fitted"},"content":"    public void toModelType_invalidCallStatus_throwsIllegalValueException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"over-fitted"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_CASE_NUMBER,","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"over-fitted"},"content":"                VALID_HOME_ADDRESS, VALID_WORK_ADDRESS, VALID_QUARANTINE_ADDRESS, VALID_SHN_PERIOD,","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"over-fitted"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_NEXT_OF_KIN_ADDRESS, INVALID_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"over-fitted"},"content":"        String expectedMessage \u003d CallStatus.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"over-fitted"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"luffingluffy":85,"over-fitted":27,"wei2912":29,"-":67}},{"path":"src/test/java/seedu/track2gather/storage/JsonSerializableTrack2GatherTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.util.JsonUtil;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.testutil.TypicalPersons;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"public class JsonSerializableTrack2GatherTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTrack2GatherTest\");","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsTrack2Gather.json\");","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonTrack2Gather.json\");","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonTrack2Gather.json\");","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"        JsonSerializableTrack2Gather dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"                JsonSerializableTrack2Gather.class).get();","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"        Track2Gather track2GatherFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"        Track2Gather typicalPersonsTrack2Gather \u003d TypicalPersons.getTypicalTrack2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"        assertEquals(track2GatherFromFile, typicalPersonsTrack2Gather);","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"        JsonSerializableTrack2Gather dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"                JsonSerializableTrack2Gather.class).get();","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"        JsonSerializableTrack2Gather dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"                JsonSerializableTrack2Gather.class).get();","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTrack2Gather.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"wei2912":47}},{"path":"src/test/java/seedu/track2gather/storage/JsonTrack2GatherStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.getTypicalTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"public class JsonTrack2GatherStorageTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTrack2GatherStorageTest\");","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"    @TempDir","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"    public Path testFolder;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    public void readTrack2Gather_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTrack2Gather(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"    private java.util.Optional\u003cReadOnlyTrack2Gather\u003e readTrack2Gather(String filePath) throws Exception {","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"        return new JsonTrack2GatherStorage(Paths.get(filePath)).readTrack2Gather(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"                : null;","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"        assertFalse(readTrack2Gather(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTrack2Gather(\"notJsonFormatTrack2Gather.json\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"    public void readTrack2Gather_invalidPersonTrack2Gather_throwDataConversionException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTrack2Gather(\"invalidPersonTrack2Gather.json\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"    public void readTrack2Gather_invalidAndValidPersonTrack2Gather_throwDataConversionException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTrack2Gather(\"invalidAndValidPersonTrack2Gather.json\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"    public void readAndSaveTrack2Gather_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTrack2Gather.json\");","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"        Track2Gather original \u003d getTypicalTrack2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"        JsonTrack2GatherStorage jsonTrack2GatherStorage \u003d new JsonTrack2GatherStorage(filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"        jsonTrack2GatherStorage.saveTrack2Gather(original, filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"        ReadOnlyTrack2Gather readBack \u003d jsonTrack2GatherStorage.readTrack2Gather(filePath).get();","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"        assertEquals(original, new Track2Gather(readBack));","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"        jsonTrack2GatherStorage.saveTrack2Gather(original, filePath);","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"        readBack \u003d jsonTrack2GatherStorage.readTrack2Gather(filePath).get();","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"        assertEquals(original, new Track2Gather(readBack));","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"        jsonTrack2GatherStorage.saveTrack2Gather(original); // file path not specified","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"        readBack \u003d jsonTrack2GatherStorage.readTrack2Gather().get(); // file path not specified","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"        assertEquals(original, new Track2Gather(readBack));","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"    public void saveTrack2Gather_nullTrack2Gather_throwsNullPointerException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"wei2912"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTrack2Gather(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"wei2912"},"content":"     * Saves {@code track2Gather} at the specified {@code filePath}.","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"wei2912"},"content":"    private void saveTrack2Gather(ReadOnlyTrack2Gather track2Gather, String filePath) {","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"            new JsonTrack2GatherStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"wei2912"},"content":"                    .saveTrack2Gather(track2Gather, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"wei2912"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"wei2912"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"wei2912"},"content":"    public void saveTrack2Gather_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"wei2912"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTrack2Gather(new Track2Gather(), null));","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"wei2912":110}},{"path":"src/test/java/seedu/track2gather/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.GuiSettings;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"        userPrefs.setTrack2GatherFilePath(Paths.get(\"track2gather.json\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wei2912":6,"-":117}},{"path":"src/test/java/seedu/track2gather/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.TypicalPersons.getTypicalTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.GuiSettings;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.ReadOnlyTrack2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.UserPrefs;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"        JsonTrack2GatherStorage track2GatherStorage \u003d new JsonTrack2GatherStorage(getTempFilePath(\"t2g\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"        storageManager \u003d new StorageManager(track2GatherStorage, userPrefsStorage);","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"    public void track2GatherReadSave() throws Exception {","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"         * {@link JsonTrack2GatherStorage} class.","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonTrack2GatherStorageTest} class.","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"        Track2Gather original \u003d getTypicalTrack2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"        storageManager.saveTrack2Gather(original);","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"        ReadOnlyTrack2Gather retrieved \u003d storageManager.readTrack2Gather().get();","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"        assertEquals(original, new Track2Gather(retrieved));","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"    public void getTrack2GatherFilePath() {","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"        assertNotNull(storageManager.getTrack2GatherFilePath());","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":17,"-":51}},{"path":"src/test/java/seedu/track2gather/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.testutil;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"wei2912":1,"-":33}},{"path":"src/test/java/seedu/track2gather/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.testutil;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Address;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CaseNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Name;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinName;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinPhone;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Period;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.QuarantineAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.ShnPeriod;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.WorkAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"        descriptor.setCaseNumber(person.getCaseNumber());","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"        descriptor.setHomeAddress(person.getHomeAddress());","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"        descriptor.setWorkAddress(person.getWorkAddress());","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"        descriptor.setQuarantineAddress(person.getQuarantineAddress());","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"        descriptor.setShnPeriod(person.getShnPeriod());","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"        descriptor.setNextOfKinName(person.getNextOfKinName());","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"        descriptor.setNextOfKinPhone(person.getNextOfKinPhone());","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"        descriptor.setNextOfKinAddress(person.getNextOfKinAddress());","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"     * Sets the {@code CaseNumber} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"    public EditPersonDescriptorBuilder withCaseNumber(String caseNumber) {","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"        descriptor.setCaseNumber(new CaseNumber(caseNumber));","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"     * Sets the {@code HomeAddress} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"    public EditPersonDescriptorBuilder withHomeAddress(String homeAddress) {","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"        descriptor.setHomeAddress(new Address(homeAddress));","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"over-fitted"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"luffingluffy"},"content":"     * Sets the {@code WorkAddress} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"luffingluffy"},"content":"    public EditPersonDescriptorBuilder withWorkAddress(String workAddress) {","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"luffingluffy"},"content":"        descriptor.setWorkAddress(new WorkAddress(new Address(workAddress)));","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"luffingluffy"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"luffingluffy"},"content":"     * Sets the {@code QuarantineAddress} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"luffingluffy"},"content":"    public EditPersonDescriptorBuilder withQuarantineAddress(String quarantineAddress) {","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"luffingluffy"},"content":"        descriptor.setQuarantineAddress(new QuarantineAddress(new Address(quarantineAddress)));","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"luffingluffy"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"luffingluffy"},"content":"     * Sets the {@code ShnPeriod} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"luffingluffy"},"content":"    public EditPersonDescriptorBuilder withShnPeriod(String shnPeriod) {","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"luffingluffy"},"content":"        descriptor.setShnPeriod(new ShnPeriod(new Period(shnPeriod)));","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"luffingluffy"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"luffingluffy"},"content":"     * Sets the {@code NextOfKinName} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"luffingluffy"},"content":"    public EditPersonDescriptorBuilder withNextOfKinName(String nextOfKinName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"luffingluffy"},"content":"        descriptor.setNextOfKinName(new NextOfKinName(new Name(nextOfKinName)));","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"luffingluffy"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"luffingluffy"},"content":"     * Sets the {@code NextOfKinPhone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"luffingluffy"},"content":"    public EditPersonDescriptorBuilder withNextOfKinPhone(String nextOfKinPhone) {","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"luffingluffy"},"content":"        descriptor.setNextOfKinPhone(new NextOfKinPhone(new Phone(nextOfKinPhone)));","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"luffingluffy"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"luffingluffy"},"content":"     * Sets the {@code NextOfKinAddress} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"luffingluffy"},"content":"    public EditPersonDescriptorBuilder withNextOfKinAddress(String nextOfKinAddress) {","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"luffingluffy"},"content":"        descriptor.setNextOfKinAddress(new NextOfKinAddress(new Address(nextOfKinAddress)));","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"luffingluffy"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"luffingluffy":67,"over-fitted":6,"wei2912":9,"-":60}},{"path":"src/test/java/seedu/track2gather/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.testutil;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Address;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CallStatus;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.CaseNumber;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Name;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinName;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.NextOfKinPhone;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Period;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.QuarantineAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.ShnPeriod;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"import seedu.track2gather.model.person.attributes.WorkAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"    public static final String DEFAULT_CASE_NUMBER \u003d \"456\";","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    public static final String DEFAULT_HOME_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"    public static final String DEFAULT_CALL_STATUS \u003d \"0 false\";","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"    private CaseNumber caseNumber;","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"    private Address homeAddress;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"    private WorkAddress workAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"    private QuarantineAddress quarantineAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"    private ShnPeriod shnPeriod;","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"    private NextOfKinName nextOfKinName;","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"    private NextOfKinPhone nextOfKinPhone;","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"    private NextOfKinAddress nextOfKinAddress;","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"    private CallStatus callStatus;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"        caseNumber \u003d new CaseNumber(DEFAULT_CASE_NUMBER);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"        homeAddress \u003d new Address(DEFAULT_HOME_ADDRESS);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"        workAddress \u003d new WorkAddress();","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"        quarantineAddress \u003d new QuarantineAddress();","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"        shnPeriod \u003d new ShnPeriod();","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"        nextOfKinName \u003d new NextOfKinName();","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"        nextOfKinPhone \u003d new NextOfKinPhone();","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"        nextOfKinAddress \u003d new NextOfKinAddress();","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"        callStatus \u003d new CallStatus(DEFAULT_CALL_STATUS);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"over-fitted"},"content":"        caseNumber \u003d personToCopy.getCaseNumber();","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"        homeAddress \u003d personToCopy.getHomeAddress();","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"        workAddress \u003d personToCopy.getWorkAddress();","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"        quarantineAddress \u003d personToCopy.getQuarantineAddress();","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"        shnPeriod \u003d personToCopy.getShnPeriod();","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"        nextOfKinName \u003d personToCopy.getNextOfKinName();","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"        nextOfKinPhone \u003d personToCopy.getNextOfKinPhone();","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"        nextOfKinAddress \u003d personToCopy.getNextOfKinAddress();","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"over-fitted"},"content":"        callStatus \u003d personToCopy.getCallStatus();","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"wei2912"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"wei2912"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"wei2912"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"wei2912"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"wei2912"},"content":"     * Sets the {@code CaseNumber} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"wei2912"},"content":"    public PersonBuilder withCaseNumber(String caseNumber) {","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"wei2912"},"content":"        this.caseNumber \u003d new CaseNumber(caseNumber);","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"luffingluffy"},"content":"     * Sets the {@code homeAddress} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"wei2912"},"content":"    public PersonBuilder withHomeAddress(String homeAddress) {","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"wei2912"},"content":"        this.homeAddress \u003d new Address(homeAddress);","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"luffingluffy"},"content":"     * Sets the {@code workAddress} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"luffingluffy"},"content":"    public PersonBuilder withWorkAddress(String workAddress) {","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"luffingluffy"},"content":"        this.workAddress \u003d new WorkAddress(Optional.ofNullable(workAddress).map(Address::new));","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"luffingluffy"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"luffingluffy"},"content":"     * Sets the {@code quarantineAddress} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"luffingluffy"},"content":"    public PersonBuilder withQuarantineAddress(String quarantineAddress) {","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"luffingluffy"},"content":"        this.quarantineAddress \u003d new QuarantineAddress(Optional.ofNullable(quarantineAddress).map(Address::new));","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"luffingluffy"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"luffingluffy"},"content":"     * Sets the {@code shnPeriod} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"luffingluffy"},"content":"    public PersonBuilder withShnPeriod(String shnPeriod) {","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"luffingluffy"},"content":"        this.shnPeriod \u003d new ShnPeriod(Optional.ofNullable(shnPeriod).map(Period::new));","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"luffingluffy"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"luffingluffy"},"content":"     * Sets the {@code nextOfKinName} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"luffingluffy"},"content":"    public PersonBuilder withNextOfKinName(String nextOfKinName) {","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"luffingluffy"},"content":"        this.nextOfKinName \u003d new NextOfKinName(Optional.ofNullable(nextOfKinName).map(Name::new));","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"luffingluffy"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"luffingluffy"},"content":"     * Sets the {@code nextOfKinPhone} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"luffingluffy"},"content":"    public PersonBuilder withNextOfKinPhone(String nextOfKinPhone) {","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"luffingluffy"},"content":"        this.nextOfKinPhone \u003d new NextOfKinPhone(Optional.ofNullable(nextOfKinPhone).map(Phone::new));","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"luffingluffy"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"luffingluffy"},"content":"     * Sets the {@code nextOfKinAddress} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"luffingluffy"},"content":"    public PersonBuilder withNextOfKinAddress(String nextOfKinAddress) {","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"luffingluffy"},"content":"        this.nextOfKinAddress \u003d new NextOfKinAddress(Optional.ofNullable(nextOfKinAddress).map(Address::new));","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"luffingluffy"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"over-fitted"},"content":"     * Sets the {@code callStatus} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"over-fitted"},"content":"    public PersonBuilder withCallStatus(String callStatus) {","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"over-fitted"},"content":"        this.callStatus \u003d new CallStatus(callStatus);","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"over-fitted"},"content":"        return this;","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"over-fitted"},"content":"     * Creates {@code Person} with attributes corresponding to those set by the builder.","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"over-fitted"},"content":"     * @return built custom {@code Person}","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":183,"author":{"gitId":"luffingluffy"},"content":"        return new Person(name, phone, email, caseNumber, homeAddress, workAddress, quarantineAddress,","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"over-fitted"},"content":"                shnPeriod, nextOfKinName, nextOfKinPhone, nextOfKinAddress, callStatus);","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"luffingluffy":83,"over-fitted":22,"wei2912":17,"-":65}},{"path":"src/test/java/seedu/track2gather/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.testutil;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_CASE_NUMBER;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_HOME_ADDRESS;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_ADDRESS;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_NAME;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_PHONE;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_QUARANTINE_ADDRESS;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_SHN_PERIOD;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"import static seedu.track2gather.logic.parser.CliSyntax.PREFIX_WORK_ADDRESS;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.AddCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"        sb.append(PREFIX_NAME + person.getName().value + \" \");","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"        sb.append(PREFIX_CASE_NUMBER + person.getCaseNumber().value + \" \");","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"        sb.append(PREFIX_HOME_ADDRESS + person.getHomeAddress().value + \" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"        person.getWorkAddress().value.ifPresent(address -\u003e sb.append(PREFIX_WORK_ADDRESS + address.value + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"        person.getQuarantineAddress().value.ifPresent(address -\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"                sb.append(PREFIX_QUARANTINE_ADDRESS + address.value + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"        person.getShnPeriod().value.ifPresent(period -\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"                sb.append(PREFIX_SHN_PERIOD + period.getStartDate().toString() + \" \"","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"                        + period.getEndDate().toString() + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"        person.getNextOfKinName().value.ifPresent(name -\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"                sb.append(PREFIX_NEXT_OF_KIN_NAME + name.value + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"        person.getNextOfKinPhone().value.ifPresent(phone -\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"                sb.append(PREFIX_NEXT_OF_KIN_PHONE + phone.value + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"        person.getNextOfKinAddress().value.ifPresent(address -\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"                sb.append(PREFIX_NEXT_OF_KIN_ADDRESS + address.value + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME + name.value + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE + phone.value + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL + email.value + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"luffingluffy"},"content":"        descriptor.getCaseNumber().ifPresent(caseNumber -\u003e sb.append(PREFIX_CASE_NUMBER + caseNumber.value + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"        descriptor.getHomeAddress().ifPresent(homeAddress -\u003e sb.append(PREFIX_HOME_ADDRESS + homeAddress.value + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"        descriptor.getWorkAddress().flatMap(workAddress -\u003e workAddress.value)","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"                .ifPresent(address -\u003e sb.append(PREFIX_WORK_ADDRESS + address.value + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"        descriptor.getQuarantineAddress().flatMap(quarantineAddress -\u003e quarantineAddress.value)","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"luffingluffy"},"content":"                .ifPresent(address -\u003e sb.append(PREFIX_QUARANTINE_ADDRESS + address.value + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"luffingluffy"},"content":"        descriptor.getShnPeriod().flatMap(shnPeriod -\u003e shnPeriod.value)","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"                .ifPresent(period -\u003e sb.append(PREFIX_SHN_PERIOD + period.getStartDate().toString() + \" \"","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"                        + period.getEndDate().toString() + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"        descriptor.getNextOfKinName().flatMap(nextOfKinName -\u003e nextOfKinName.value)","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"                .ifPresent(name -\u003e sb.append(PREFIX_NEXT_OF_KIN_NAME + name.value + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"        descriptor.getNextOfKinPhone().flatMap(nextOfKinPhone -\u003e nextOfKinPhone.value)","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"                .ifPresent(phone -\u003e sb.append(PREFIX_NEXT_OF_KIN_PHONE + phone.value + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"        descriptor.getNextOfKinAddress().flatMap(nextOfKinAddress -\u003e nextOfKinAddress.value)","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"                .ifPresent(address -\u003e sb.append(PREFIX_NEXT_OF_KIN_ADDRESS + address.value + \" \"));","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"luffingluffy":37,"over-fitted":1,"wei2912":10,"-":33}},{"path":"src/test/java/seedu/track2gather/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.testutil;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":1,"-":71}},{"path":"src/test/java/seedu/track2gather/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.testutil;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Model;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wei2912":4,"-":51}},{"path":"src/test/java/seedu/track2gather/testutil/Track2GatherBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.testutil;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":" * A utility class to help with building Track2Gather objects.","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":" *     {@code Track2Gather ab \u003d new Track2GatherBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"public class Track2GatherBuilder {","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"    private Track2Gather track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"    public Track2GatherBuilder() {","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"        track2Gather \u003d new Track2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    public Track2GatherBuilder(Track2Gather track2Gather) {","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"        this.track2Gather \u003d track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"     * Adds a new {@code Person} to the {@code Track2Gather} that we are building.","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"    public Track2GatherBuilder withPerson(Person person) {","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"        track2Gather.addPerson(person);","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"        return this;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"    public Track2Gather build() {","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"        return track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"wei2912":34}},{"path":"src/test/java/seedu/track2gather/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.testutil;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.commons.core.index.Index;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"wei2912":2,"-":10}},{"path":"src/test/java/seedu/track2gather/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.testutil;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_CALL_STATUS_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_CASE_NUMBER_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_CASE_NUMBER_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_HOME_ADDRESS_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_HOME_ADDRESS_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_ADDRESS_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_NAME_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_PHONE_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_QUARANTINE_ADDRESS_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_SHN_PERIOD_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.logic.commands.CommandTestUtil.VALID_WORK_ADDRESS_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.Track2Gather;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withPhone(\"94351253\")","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"            .withEmail(\"alice@example.com\").withCaseNumber(\"4\").withHomeAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"            .withWorkAddress(\"1 Brooke Rd #B1-11 Katong Plaza\").withQuarantineAddress(\"448 Hougang Ave 10 #B1-529\")","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"            .withShnPeriod(\"2020-09-23 \u003d\u003e 2020-10-07\").withNextOfKinName(\"Anthony Reed\").withNextOfKinPhone(\"92456234\")","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"            .withNextOfKinAddress(\"4 Jalan Besut\").build();","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withPhone(\"98765432\")","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"            .withEmail(\"johnd@example.com\").withCaseNumber(\"5\").withHomeAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"            .withWorkAddress(\"29 Flora Rd #01-08\").withQuarantineAddress(\"3 Temasek Boulevard #03-028C\")","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"            .withShnPeriod(\"2020-04-13 \u003d\u003e 2020-04-27\").withNextOfKinName(\"John Green\").withNextOfKinPhone(\"84515153\")","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"            .withNextOfKinAddress(\"120 Hillview Avenue #06-02\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"            .withEmail(\"heinz@example.com\").withCaseNumber(\"6\").withHomeAddress(\"wall street\")","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"lrnshk"},"content":"            .withShnPeriod(\"2020-04-13 \u003d\u003e 2021-04-27\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"            .withEmail(\"cornelia@example.com\").withCaseNumber(\"200\").withHomeAddress(\"10th street\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"            .withEmail(\"werner@example.com\").withCaseNumber(\"9\").withHomeAddress(\"michegan ave\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"            .withEmail(\"lydia@example.com\").withCaseNumber(\"444442\").withHomeAddress(\"little tokyo\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"            .withEmail(\"anna@example.com\").withCaseNumber(\"11\").withHomeAddress(\"4th street\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"            .withEmail(\"stefan@example.com\").withCaseNumber(\"12\").withHomeAddress(\"little india\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"            .withEmail(\"hans@example.com\").withCaseNumber(\"13\").withHomeAddress(\"chicago ave\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"            .withEmail(VALID_EMAIL_AMY).withCaseNumber(VALID_CASE_NUMBER_AMY).withHomeAddress(VALID_HOME_ADDRESS_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"            .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"            .withEmail(VALID_EMAIL_BOB).withCaseNumber(VALID_CASE_NUMBER_BOB).withHomeAddress(VALID_HOME_ADDRESS_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"            .withWorkAddress(VALID_WORK_ADDRESS_BOB).withQuarantineAddress(VALID_QUARANTINE_ADDRESS_BOB)","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"            .withShnPeriod(VALID_SHN_PERIOD_BOB).withNextOfKinName(VALID_NEXT_OF_KIN_NAME_BOB)","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"luffingluffy"},"content":"            .withNextOfKinPhone(VALID_NEXT_OF_KIN_PHONE_BOB).withNextOfKinAddress(VALID_NEXT_OF_KIN_ADDRESS_BOB)","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"over-fitted"},"content":"            .withCallStatus(VALID_CALL_STATUS_BOB).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"     * Returns a {@code Track2Gather} with all the typical persons.","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"    public static Track2Gather getTypicalTrack2Gather() {","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"        Track2Gather ab \u003d new Track2Gather();","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"luffingluffy":9,"over-fitted":1,"lrnshk":1,"wei2912":37,"-":42}},{"path":"src/test/java/seedu/track2gather/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"wei2912":1,"-":34}},{"path":"src/test/java/seedu/track2gather/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package seedu.track2gather.ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import static seedu.track2gather.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import seedu.track2gather.MainApp;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"wei2912":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"\u003c?import seedu.track2gather.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"wei2912":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"\u003cfx:root type\u003d\"seedu.track2gather.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"wei2912":1}}]
